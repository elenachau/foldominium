[{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0831"
  },
  "pdf_name": "bridges2009-11",
  "page_number": 4,
  "content": "./origami_dataset_dev/bridges2009-11/page004_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0832"
  },
  "pdf_name": "bridges2009-11",
  "page_number": 3,
  "content": "./origami_dataset_dev/bridges2009-11/page003_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0833"
  },
  "pdf_name": "bridges2009-11",
  "page_number": 4,
  "content": "./origami_dataset_dev/bridges2009-11/page004_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0834"
  },
  "pdf_name": "bridges2009-11",
  "page_number": 9,
  "content": "./origami_dataset_dev/bridges2009-11/page009_image004.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0835"
  },
  "pdf_name": "bridges2009-11",
  "page_number": 6,
  "content": "Lang\n\n\n    Figure 3 : Left: The computed crease pattern with structural coloring. Right: Final crease pattern\n    with mountain-valley assignment.\n\nby TreeMaker, is shown in Figure 3. Now, it’s time to fold.\n\n                                      4  Folding\n\nThe design is only half the battle of creating an origami ﬁgure. Actually, it’s even less than half. First, we\nhave to fold the crease pattern into the base; then we have to turn the base into the ﬁnished form. All we\nare guaranteed from the algorithm is that the ﬂaps will be of the right number, have the right length, and be\nconnected to each other in the way we originally speciﬁed. But there are no guarantees on the ﬂap width,\ncross section, arrangement of layers, or much of anything else. And at this point in the process, we don’t\neven have a base: we just have the crease pattern for it.\n    And so, that’s what we start with: folding the crease pattern into the base. To accomplish this, we must\nﬁrst transfer the crease pattern from the design to the actual square1. This is done by measuring the positions\nof a few key points, and then forming all of the other creases based on those initial measurements, as shown\nin Figure 4.\n    Most complex origami bases have the property that you can’t fold them one crease at a time; instead,\nyou must bring all of the creases together at once. That is the case here, so we bring all of the edges of\nthe square together in a single motion. This process is called “the collapse” in origami, because we are\n“collapsing” the square down to the folded base, as shown in Figures 4–5.\n    “Collapse”-type folds had appeared in origami occasionally throughout the years, but its ubiquity in\ncomplex algorithmic designs came as something of a surprise in the origami world. Published origami\ndesigns almost always consisted of a sequence of relatively simple steps, leading smoothly from the initial\nsquare to the ﬁnished form with no individual step requiring more than three or four creases to happen at\nonce. But complex modern designs are not like that; in fact, it is relatively rare that such a simple folding\npattern exists for a complex crease-pattern-based design. Instead, they almost always require all creases to\nbe brought together at once—a process my colleague Brian Chan has dubbed (somewhat mischeviously)\n\n  1The paper here is a 40 cm square of abaca/hemp paper made by Michael LaFosse, a master papermaker (http://www.\norigamido.com) and origami artist whose handmade papers are prized by origami insect folders around the world.\n\n                                          16",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0836"
  },
  "pdf_name": "bridges2009-11",
  "page_number": 8,
  "content": "./origami_dataset_dev/bridges2009-11/page008_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0837"
  },
  "pdf_name": "bridges2009-11",
  "page_number": 7,
  "content": "                                                      Mathematical Methods in Origami Design\n\n\n     Figure 4 : Left: Square with creases transferred to the paper. Right: First stage of the collapse.\n\n“three easy steps: precrease, collapse, shape.” But in each case, the precreasing, the collapsing, and most\nespecially, the shaping, may require several hours for each step.\n    In this ﬁgure, the collapse is relatively simple – only a few tens of creases are involved. (Truly advanced\ndesigns may have hundreds of creases participating in the single collapse step.) The result at the end of the\ncollapse step is a ﬂat form: the origami base, shown in Figure 5. It doesn’t look like much—certainly, not\nlike a scorpion—but it contains a ﬂap of exactly the right length, connected in exactly the right way, for every\nleg, arm, pincer, and body segment of the desired subject.\n\n\n              Figure 5 : Left: The collapse under way. Right: The fully collapsed base.\n\n    The ﬂaps have the right length and connectivity, but not the right width; in fact, most of them are much\nwider than their corresponding body part. As problems go, that’s a pretty good one to have; it’s a lot easier\nto make a fat ﬂap narrower than to make a narrow ﬂap wider, and with arthropods as subject matter, making\nﬂaps narrower is the usual requirement. We will need to narrow all parts of this base so that they can better\nrepresent the skinny legs, arms, and tail of the scorpion. This is done with a series of what are called “sink\n\n                                          17",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0838"
  },
  "pdf_name": "bridges2009-11",
  "page_number": 5,
  "content": "                                                      Mathematical Methods in Origami Design\n\n    A nice feature of this framework is that it is relatively easy to incorporate additional requirements\ninto the basic optimization; for example, one can impose mirror symmetry on the crease pattern by adding\nadditional equality constraints on the coordinates of the affected vertex pairs.\n    This type of constrained optimization is one that has been studied for decades within computer science.\nIn my ﬁrst few implementations of TreeMaker, I wrote my own constrained optimizer using the Augmented\nLagrangian method [11]. On a 68K-based Macintosh (with no ﬂoating-point coprocessor), this took several\nminutes to converge to a solution, and so to make the wait more tolerable, I wrote code that updated the screen\nafter each iteration, so I could watch the circles jostle around and expand, which offered entertainment value,\nif nothing else. For TreeMaker 4, I replaced it with a Feasible Sequential Quadratic Programming (FSQP)\nalgorithm developed by Andre Tits at the University of Maryland [12], which turned out to be about a\nhundred times faster than my relatively crude code, but it also occasionally sent the evolving solution off\ninto distant corners of feasible solution space—a behavior I was willing to tolerate, given the incredibly\nimproved speed.\n    But there was another factor at work at the same time; throughout the 1990s, the most effective way to\nspeed up code is often “wait for a faster processor.” From the ﬂoating-point-in-software 68K Mac to current\nIntel processors, ﬂoating-point processing sped up by a factor of about a thousand, and so for TreeMaker 5,\nI went back to my hand-rolled ALM code, which was slow, but numerically efﬁcient (and could be made\nopen-source). On a modern PC, even this far-from-optimum code still converges almost instantaneously\nto a high-quality local optimum. Which is not necessarily the global optimum. Artistically, this is a good\nbehavior: it lets the artist ﬁnd several candidate arrangements by starting from different initial positions, and\nthen choosing the local optimum that best ﬁts other aesthetic criteria.\n\n    Whatever algorithm is used, at the end of the optimization, one has the positions of the vertices Vi and\nthe scale factor m. That is sufﬁcient to construct the circle centered on each vertex, as shown in Figure 2\n(right). When two circles and all intervening rivers touch, it is an indication that the associated inequality\nconstraint is, in fact, an equality. In the language of constrained optimization, that constraint is said to be\nactive, and so we say that the path between the two nodes is active as well. It turns out that active paths\nalways correspond to crease lines in the crease pattern associated with a circle packing. These creases turn\nout to lie along the axis of the folded shape, and so we also call them axial paths. They form the framework\nupon which the rest of the crease pattern is constructed.\n\n                                    3  The Creases\n\nOnce we have found the axial paths, it is possible to mathematically construct all of the other folds in the\ndesired shape (which we call a “base”)—again, a process that takes a fraction of a second in TreeMaker, this\ntime because no optimization is needed; the construction is a straightforward polynomial-time geometric\nalgorithm. TreeMaker color-codes the creases according to their structural role: there are axial creases\n(green), which all wind up along the centerline of the folded model, hinge creases (blue), that run along\nthe junctions between ﬂaps, and ridge creases (red), that deﬁne how wide each ﬂap is. These are shown\nin Figure 3. The creases outline regions of the paper, called facets; the collection of all facets and their\nintervening creases gives the crease pattern needed to fold the square into the origami base.\n    The structural information indicated by color tells the designer where in the folded form a given crease\nlies and provides some hint for how the folded shape goes together, but ultimately, we need to determine\nwhether each crease is a mountain or valley fold. To do this, TreeMaker computes the “stacking order” of all\nof the layers of paper, which is encoded by a graph on the facets that deﬁnes how the layers stack. Once we\nknow the stacking order of the layers of paper, we can determine whether each fold is a mountain fold (solid\nblack), valley fold (dashed colored), or is unfolded, or ﬂat (solid gray). The full crease pattern, as computed\n\n                                          15",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0839"
  },
  "pdf_name": "bridges2009-11",
  "page_number": 8,
  "content": "./origami_dataset_dev/bridges2009-11/page008_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d083a"
  },
  "pdf_name": "bridges2009-11",
  "page_number": 10,
  "content": "Lang\n\n    To some degree, the Bug Wars are still going on, but with far more than bugs as their subject matter—\ncomplex origami subjects include other animals, plants, human ﬁgures, and indeed, purely geometric forms—\nand the goals of origami artists have moved well beyond “mere realism,” to now address the question,“how\ncan I create a visually interesting shape that challenges the mind and perceptions of the viewer?” Design\ntechniques have grown as well; circle-river packing has been expanded to include techniques based on pack-\nings of polygons and other shapes, and the ranks of other algorithms for computational origami continues to\ngrow, with contributions now coming from the academic world of computational geometry and other parts\nof mathematics and computer science. It is a heady time.\n    And yet, all of these techniques are still no more than tools in the hands of the artist. I am sometimes\nasked if the development of mathematical design techniques (or, heaven forbid, computer programs!) some-\nhow diminishes origami as an artistic activity. To which I answer: these techniques, for all their power, are\nstill just tools, no more than a painter’s pigments, or a sculptor’s chisels. The quality of the tool does not\nset the quality of the artwork; what matters most is what you do with those tools. But seeing what origami\nartists from all over the world have done in recent decades with the tools that computational origamists have\ngiven them, and an entirely new generation of conceptual and computational tools coming down the pike, I\nhave no doubt that the future of origami as an art form will be exciting and invigorating for many years to\ncome.\n    TreeMaker is open-source (GPL), runs on Macintosh OS X, Linux, and Windows computers, and may\nbe downloaded at [8].\n\n                                      References\n\n [1] Robert J. Lang. Mathematical algorithms for origami design. Symmetry: Culture and Science,\n    5(2):115–152, 1994.\n [2] Robert J. Lang. Origami Insects and their Kin. Dover Publications, 1995.\n [3] Robert J. Lang. A computational algorithm for origami design. In 12th ACM Symposium on Computa-\n    tional Geometry, pages 98–105, 1996.\n [4] Robert J. Lang. The tree method of origami design. In Koryo Miura, editor, Origami Science and Art:\n    Proceedings of the Second International Meeting of Origami Science and Scientiﬁc Origami, pages\n    73–82, Ohtsu, Japan, 1997.\n [5] Robert J. Lang. Scorpion, opus 379, 2002. http://www.langorigami.com/art/gallery/\n    gallery.php4?name=scorpion_varileg.\n [6] Robert J. Lang. Origami Design Secrets: Mathematical Methods for an Ancient Art. A K Peters, 2003.\n [7] Robert J. Lang. Origami Insects II. Gallery Origami House, 2003.\n [8] Robert J. Lang. TreeMaker, 2003. http://www.langorigami.com/treemaker.htm.\n [9] Toshiyuki Meguro. Jitsuyou origami sekkeihou [practical methods of origami designs]. Origami Tan-\n    teidan Shinbun, 2(7–14), 1991–1992.\n[10] Toshiyuki Meguro. ‘Tobu Kuwagatamushi’-to Ryoikienbunshiho [‘Flying Stag Beetle’ and the circular\n    area molecule method]. In Oru, pages 92–95. 1994.\n[11] R. T. Rockafellar. Augmented Lagrangian multiplier functions and duality in nonconvex programming.\n    SIAM Journal on Control, 12(2):268–285, 1974.\n[12] Andre Tits. CFSQP. http://www.aemdesign.com.\n\n\n                                          20",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d083b"
  },
  "pdf_name": "bridges2009-11",
  "page_number": 4,
  "content": "Lang\n\n\n                                                  10            27            11\n\n        10                      11\n                                                9                                12\n\n\n      9               21            12\n           8\n                               9\n           0.5002\n          7                    0.5002\n                                 10\n          0.5000\n                      19         0.5000\n             7\n                      0.7483   8\n                  5       6\n                  1.7811\n                      6   1.7811\n\n                      4\n             13                14\n                  11  50.2500 12\n                  1.0000  1.0000\n                                                        25              26\n                      3\n           15                    16\n                 13   0.2500                    13                               14\n                      4    14\n                 1.2500    1.2500\n\n                       2\n         17                       18\n                15     0.2500 16\n                       3\n                1.5000      1.5000\n                                                                1\n      1                1\n                                   20\n               20      0.2500 18\n                       2\n               3.5638       1.7500\n\n\n                                                15                               16\n\n\n                      17\n                      1.7500\n                                                      22                  23\n\n\n                                                17                               18\n                     19\n\n                                                          19          20\n\n    Figure 2 : Left: the stick ﬁgure as drawn within TreeMaker. Right: Result of the optimization\n    (only circles are shown).\n\nbetween the circles.) Whenever two circles and the intervening rivers all touch one another, TreeMaker draws\na line between the circle centers, shown here in green. These lines are actually some of the creases of the\ndesired folded shape; they form a “skeleton” of the full crease pattern.\n    Conceptually, one ﬁnds the optimum packing by inﬂating all of the circles and rivers at the same rate\nwith the circle centers trapped within the boundaries of the square and allowing the circles and rivers to move\naround during the inﬂation process until they are all wedged into position. This is, effectively, a nonlinear\nconstrained optimization problem, and, stripped of the visual imagery of circles, rivers, and packing, it\nall boils down to a fairly straightforward algebraic description, which is what is needed for a computer\nimplementation.\n\n    We assume that the tree graph can be described by a set of nodes fNig, edges fE jg, and edge weights\nw j, where the weight w j gives the desired relative length of the jth ﬂap of the desired base. For every path\nbetween two nodes fNi;Njg we deﬁne the path length li j ≡ ∑k wk as the (unique) sum of the weights of the\nedges between nodes Ni and Nj.\n\n    With every leaf node Ni of the tree graph, we associate a vertex Vi = (xi;yi), which will be the center\nof the associated circle (and will also turn out to be the point in the square that maps to the tip of the\ncorresponding ﬂap). We further introduce the scale factor m, which sets the size of the folded shape relative\nto the original tree graph, so that if an edge of the tree graph had desired length w j, its corresponding ﬂap in\nthe folded form will have actual length mw j. The non-overlap condition can be expressed as an inequality:\n\n                                     jVi −Vjj ≥ mli j;                              (1)\n\nfor every path li j. The requirement that circle centers lie within the square is similarly expressible as inequal-\nities:\n                                  0 ≤ xi ≤ 1; 0 ≤ yi ≤ 1;                           (2)\n\nfor every vertex Vi. For ease of foldability, one would like the folded form as large as possible relative\nto the size of the square; in other words, we should like m to be as large as possible. The solution of\nthe origami optimization problem then becomes a case of maximizing the scale m subject to both sets of\ninequality constraints. And so, the solution of the arrangement of vertices requires the solution of a nonlinear\nconstrained optimization, with linear and quadratic inequality constraints and a nonconvex feasible region.\n\n                                          14",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d083c"
  },
  "pdf_name": "bridges2009-11",
  "page_number": 9,
  "content": "./origami_dataset_dev/bridges2009-11/page009_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d083d"
  },
  "pdf_name": "bridges2009-11",
  "page_number": 1,
  "content": "                                  Bridges 2009: Mathematics, Music, Art, Architecture, Culture\n\n                 Mathematical Methods in Origami Design\n\n                                     Robert J. Lang\n                                   Langorigami.com\n                                Alamo, California, USA\n                               robert@langorigami.com\n                            http://www.langorigami.com\n\n                                       Abstract\n     The marriage of art and mathematics has been widespread and productive, but almost nowhere more productive than\n     in the world of origami. In this paper I will discuss how mathematical ideas led to the development of powerful\n     tools for origami design and will present a step-by-step illustration of the design and realization of a representational\n     origami ﬁgure using mathematical design algorithms. Along the way, I will discuss how these mathematical concepts\n     have led to new levels of creative expression within this art.\n\n                                   1   Introduction\n\nThe marriage of art and mathematics has been fruitful and productive. Mathematical concepts inspire, en-\nable, and enrich artistic forms, and in many cases, mathematical concepts lead to entirely new expressions,\nvisual, auditory, and conceptual, outside of the traditional milieu of art. It is relatively rare, though, that\nmathematical ideas have led to a revolution within an existing art—that is, enabling artists to do what they\nwanted to do within their art, but were previously unable to accomplish. That exact thing is what has hap-\npened within the art of origami, the Japanese art of paper-folding (usually from an uncut square), over the\nlast twenty years or so. Beginning in the late 1970s and early 1980s, and accelerating more-or-less continu-\nously since then, mathematical design techniques have become essential elements of the origami designers’\ntoolkit, allowing the creation of works only dreamed of in the past, enabling newer, richer, more diverse\nforms of artistic expression.\n    Now, while it is tempting to present the world of mathematical origami design as a simple, linear thread\nof development, in fact there were roots stretching back into the 1950s and 1960s and several different ap-\nproaches to mathematical design in the 1970s and 1980s investigated by origami artists such as Peter Engel,\nJun Maekawa, and Fumiaki Kawahata, among others. But I will talk about the approach I am personally most\nfamiliar with, and with which I was closely involved in the development of: circle-river packing. This was,\nI believe, the ﬁrst systematic design method that could be used to create and design arbitrarily complicated\norigami structures.\n    As often happens in mathematics, when the time is ripe, the same ideas can occur to multiple people,\nand this was the case with circle-river packing: I (in the US) [1, 3, 4, 6] and Toshiyuki Meguro (in Japan)\n[10, 9] both developed the concept of circle packing in the late 1980s and then met and compared notes\nand ideas beginning in 1992, ﬁnding surprising overlap between our approaches and sharing ideas in the\nyears that followed. (Shades of Newton and Leibniz, with two differences: Meguro and I got on quite\nwell, and we’re only talking about paper-folding, not calculus!) In the years following our meeting, we\nboth traded and reﬁned our concepts and were joined by others who built on and expanded the basic ideas\ninto a regular suite of design algorithms. (I should mention speciﬁcally that in recent years I have greatly\nenjoyed collaborating with Professor Erik Demaine of MIT on the development of improved algorithms and\nexpanding their underlying rigor.)\n\n                                          11",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d083e"
  },
  "pdf_name": "bridges2009-11",
  "page_number": 9,
  "content": "./origami_dataset_dev/bridges2009-11/page009_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d083f"
  },
  "pdf_name": "bridges2009-11",
  "page_number": 9,
  "content": "./origami_dataset_dev/bridges2009-11/page009_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0840"
  },
  "pdf_name": "bridges2009-11",
  "page_number": 3,
  "content": "                                                      Mathematical Methods in Origami Design\n\n\n                                               pincer         pincer\n                                           pincer                 pincer\n\n\n                                               claw          claw\n\n\n                                       leg 1                          leg 1\n\n\n                                       leg 2                          leg 2\n\n\n                                      leg 3            tail            leg 3\n\n\n                                            leg 4                leg 4\n\n    Figure 1 : Left: the stick ﬁgure superimposed over a photograph of the subject. Right: represen-\n    tation of the stick ﬁgure by circles and rivers.\n\n    We then transform the stick ﬁgure into geometric shapes that represent regions of the paper required by\neach ﬂap. These shapes are the light and dark regions in the ﬁgure. Flaps that are loose at one end, like the\nlegs or pincers, are represented by circles (light), whose radius is equal to the length of the ﬂap. Flaps that\nare connected to other ﬂaps at both ends, like the body segments or the “arms,” are represented by constant-\nwidth curves called “rivers” (dark); the width of the river is equal to the length of the corresponding ﬂap.\nEach geometric shape—circle or river—represents the minimum amount of paper required for each of the\nﬂaps. It is a remarkable fact that for any valid arrangement of circles and rivers that specify the minimum\npaper needed, there exists a crease pattern that works for that exact arrangement of circles and rivers.\n    And so, we must ﬁnd the most tightly packed arrangement of the circles and rivers within a square. The\nmajor rules that apply to this packing are:\n\n  • the circles and rivers must be as large as possible but maintain their same relative size to one another;\n  • they may not overlap;\n  • the circles do not have to be wholly inside the square, but their centers must be within the square;\n  • the incidences between the various circles and rivers must match the incidences of their corresponding\n    edges in the tree graph.\n\n    The larger the origami base is for a given size square, the more efﬁcient it is; the fewer the layers in\neach ﬂap; and, generally, the easier it is to fold. And so the ﬁrst stage of origami design consists of an\noptimization: ﬁnding the most efﬁcient packing of the circles and rivers. This can be done by hand (and it\noften is), but for this particular design, it is much faster to use TreeMaker, which has a nonlinear constrained\noptimization solver built in. (In the late 1990s, this process took seconds to minutes; with the 1000-fold\nincrease in computing speed, it is now virtually instanteous.) To use TreeMaker, we start by drawing the\nstick ﬁgure, as shown in Figure 2 and then typing in the desired lengths of each ﬂap, shown as decimal\nnumbers next to the lines of the stick ﬁgure.\n    The next step is to ﬁnd the optimum packing of circles and rivers so that all of the circle centers wind\nup inside the square. TreeMaker does this in a fraction of a second, giving the circle arrangement shown\nin Figure 2. (The rivers are not displayed by TreeMaker, but the reader can perhaps imagine them winding\n\n                                          13",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0841"
  },
  "pdf_name": "bridges2009-11",
  "page_number": 2,
  "content": "Lang\n\n    Fundamental to my own motivation was the goal of developing truly useful techniques for design, and\nfor several years I designed ever more complex origami ﬁgures using circles and spacers (the latter were\nmy precursors to “rivers,” see below) and nothing more technological than pencil and paper. (My colleague\nMeguro added compass and straightedge to his crease pattern design arsenal.) However, a paradigm that\nframed my ideas early on was the idea that it might eventually be possible to use computer programming to\nsolve for complex origami ﬁgures, and I began sketching out algorithms for this in the late 1980s. (Early\ndiscovery: FORTRAN 77 is a lousy language for computational origami.) Beginning in the 1990s, I began\nwriting what became my program TreeMaker (in Object Pascal, then C++), a design program that served\nboth as a repository of algorithms as I developed them and a way to probe their validity and limits [8]. By\n1998, TreeMaker was up to version 4.0, and had become a useful tool rather than just a toy program; in fact,\nI realized that it was now capable of solving for origami design patterns that were beyond the ability of an\nindividual armed with only pencil, paper, and compass.\n    Which is not to say that pencil-and-paper origami designers have not been creating designs as complex\nas those that TreeMaker could create; on the contrary, by recognizing fortuitious geometric alignments and\npatterns, origami artists could, and still do, design with pencil and paper extremely complex and beautiful\nworks. The most complex origami designs today are usually human-designed, not computer-designed. While\nits crease pattern may be drawn on computer, advanced origami is designed using a mixture of mathematical\nideas and artistic inspiration, with the designer’s own imagination the most important tool.\n    Still, a computerized design serves a useful pedagogical purpose: it provides a vivid illustration of the\npower of mathematical ideas in achieving a distinctly non-mathematical result. And so, in the bulk of this\npaper, I would like to walk the reader through the process of concept, design, and folding, for an origami\nﬁgure: an arthropod. The greatest successes of the circle-river method of design came in the design of\ninsects, spiders, and their ilk, and so I will present here one of my ﬁrst TreeMaker designs: my “Scorpion,\nopus 379” [5]. Although I have designed more complex ﬁgures since then, this remains one of my favorites,\nboth for the geometric structure of its design and its overall appearance.\n\n                                      2   Design\n\nThe journey begins with the subject and its abstract description: a tree graph (the “tree” in TreeMaker). Or,\nmore prosaically, a “stick ﬁgure.” The stick ﬁgure captures the information that will be produced by the\ndesign algorithm, and so its properties—the number, lengths, and connectivities of its edges—are the choice\nof the designer. The circle-river method of origami design is a step in the creation of a folded ﬁgure, but it\ndoes not seek to create a speciﬁc 3-D form; rather, it produces a shape that has “enough material in the right\nplaces.” Speciﬁcally, it produces a folded shape that has a ﬂap of paper for every appendage of the subject.\nThe algorithm gives relatively little control over the width of those ﬂaps, but it lets one specify the number\nof ﬂaps, length of each ﬂap, and how they are connected to one another, and for some subjects, that is very\nuseful indeed. That information can be described concisely by a stick ﬁgure—which, using the terminology\nof graph theory, is an “edge-weighted tree graph.” Hence, the tree is the starting point for a TreeMaker\ndesign.\n    The simplest way to construct the tree is to literally overlay the stick ﬁgure on a photograph of the\nsubject, as illustrated in Figure 1. Each stick represents an appendage or body segment of the subject, and\nwill be represented in the origami ﬁgure by a ﬂap of paper. The folded shape will be a collection of ﬂaps; we\ncall this collection a “base.” Each edge of the tree graph must be assigned a length, which will be the length\nof the associated ﬂap of paper. By measuring lengths of the various body parts in the photograph, one can\nchoose the desired lengths of the ﬂaps, although it must be noted that one might commonly adjust desired\nﬂap lengths from their literal dimensions for artistic reasons.\n\n                                          12",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0842"
  },
  "pdf_name": "bridges2009-11",
  "page_number": 9,
  "content": "                                                  Mathematical Methods in Origami Design\n\n\n    Figure 7 : Left: Narrowing the legs. Right: The curved tail has been folded and shaped.\n\n\nFigure 8 : Left: Final stages of shaping. Right: The ﬁnished scorpion, approximately 15 cm long.\n\n\n                                      19",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0843"
  },
  "pdf_name": "bridges2009-11",
  "page_number": 8,
  "content": "Lang\n\nfolds,” which are, essentially nested sets of inversions of the layers of each ﬂap. Sink folds are tedious to\nperform (any origami teaching session is guaranteed to elicit a series of groans when a set of sink folds is\nannounced), but they are conceptually straightforward to perform. Figure 6 show the base with some (left)\nand all (right) of its layers sunken. In the end, the folded paper shape looks not unlike the original tree graph:\na collection of long, skinny, connected sticks, each of which will become an appendage of the subject.\n\n\n            Figure 6 : Left: The partially narrowed base. Right: The fully narrowed base.\n\n    Last comes the shaping. There is no algorithm for this—and, in fact, this is one part of the process\nwhere both craftsmanship and artistry are preeminent in the process. A representional origami ﬁgure, no\nmatter how realistic, is, in any absolute sense, still a rather crude approximation of the subject. The artist\nselects what features to emphasize and what features to minimize in order to convey the essential character\nof the subject. Craftsmanship is called for, too, to insure that every visible edge, every visible fold falls in\nthe right place to convey the desired impression. A misplaced edge, an unintended wrinkle—these can spoil\nthe visual effect, for the human eye is drawn to lines, ignores smooth surfaces. It is often the case that the\nshaping takes by far the greatest amount of time when creating a complex origami ﬁgure, and this process can\nlast, literally, for days. (For this scorpion, shaping took only a few hours in total.) Figures 7–8 show the ﬁnal\nprocess of shaping, beginning with narrowing of the legs, then proceeding through shaping of the tail and\nclaws, and ending up with the ﬁnal scorpion form. The narrowing and shaping of the legs is accomplished by\nselectively dampening ﬂaps as they are folded, a technique called “wet-folding” that was introduced by the\ngreat 20th-century origami master Yoshizawa; strips of drafting tape hold the ﬁgure in position as it dries.\n\n                                  5   Final Thoughts\n\nThe early successes of circle-river packing and its relatives were most vividly seen in the subject matter of\norigami insects and their kin. In the 1970s, origami insects were considered the ultimate challenge, and at\nleast one origami book ﬂatly declared that an origami grasshopper was “impossible” from a single square. In\nthe 1980s, grasshoppers were not only possible, but folded and then surpassed; and the 1990s saw a golden\nage of origami insects informally known as the “Bug Wars,” in which origami creators vied with one another\nfor the most realistic, leggiest, pointiest, wingiest, horniest creature they could ﬁnd! (Entomology journals\nsaw a noticeable uptick in their origami subscribers, as origami artists sought out the most challenging\npossible subjects to take on.) (See [2, 7] for some of my own contributions to this battle.)\n\n                                          18",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0844"
  },
  "pdf_name": "bridges2009-11",
  "page_number": 7,
  "content": "./origami_dataset_dev/bridges2009-11/page007_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0845"
  },
  "pdf_name": "bridges2009-11",
  "page_number": 7,
  "content": "./origami_dataset_dev/bridges2009-11/page007_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0846"
  },
  "pdf_name": "bridges2009-11",
  "page_number": 7,
  "content": "./origami_dataset_dev/bridges2009-11/page007_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0847"
  },
  "pdf_name": "bridges2009-11",
  "page_number": 6,
  "content": "./origami_dataset_dev/bridges2009-11/page006_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0848"
  },
  "pdf_name": "bridges2009-11",
  "page_number": 7,
  "content": "./origami_dataset_dev/bridges2009-11/page007_image004.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0849"
  },
  "pdf_name": "bridges2009-11",
  "page_number": 6,
  "content": "./origami_dataset_dev/bridges2009-11/page006_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d084a"
  },
  "pdf_name": "L05_images",
  "page_number": 43,
  "content": "./origami_dataset_dev/L05_images/page043_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d084b"
  },
  "pdf_name": "L05_images",
  "page_number": 35,
  "content": "./origami_dataset_dev/L05_images/page035_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d084c"
  },
  "pdf_name": "L05_images",
  "page_number": 60,
  "content": "./origami_dataset_dev/L05_images/page060_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d084d"
  },
  "pdf_name": "L05_images",
  "page_number": 11,
  "content": "./origami_dataset_dev/L05_images/page011_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d084e"
  },
  "pdf_name": "L05_images",
  "page_number": 44,
  "content": "./origami_dataset_dev/L05_images/page044_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d084f"
  },
  "pdf_name": "L05_images",
  "page_number": 26,
  "content": "./origami_dataset_dev/L05_images/page026_image004.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0850"
  },
  "pdf_name": "L05_images",
  "page_number": 59,
  "content": " Satoshi Kamiya                                      http://www.folders.jp/\n\n\n                                                                                  42\nAnalyze structure\nSquare paper?",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0851"
  },
  "pdf_name": "L05_images",
  "page_number": 67,
  "content": "./origami_dataset_dev/L05_images/page067_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0852"
  },
  "pdf_name": "L05_images",
  "page_number": 71,
  "content": "                             Origami Forum\n\n\n                 http://www.thekhans.me.uk/forum/\n                                                                                  51\nFor more information on all things origami...",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0853"
  },
  "pdf_name": "L05_images",
  "page_number": 65,
  "content": "     Possible Problems in Optimization \n\nProblem:  A polygon bounded by active paths is concave \nSolution:  add extra leaf node in interior & expand \n        (split polygon into multiple convex polygons)\n\nProblem:  A polygon bounded by active paths contains an \nunconstrained node\nSolution:  add local strain to interior node to create \nadditional active paths\n\nProblem:  Optimizer can not ﬁnd a solution due to trying \nto optimize under too many constraints\nSolution:  decrease the number of additional constraints\n\n                                          47",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0854"
  },
  "pdf_name": "L05_images",
  "page_number": 45,
  "content": "./origami_dataset_dev/L05_images/page045_image006.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0855"
  },
  "pdf_name": "L05_images",
  "page_number": 66,
  "content": "./origami_dataset_dev/L05_images/page066_image004.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0856"
  },
  "pdf_name": "L05_images",
  "page_number": 45,
  "content": "./origami_dataset_dev/L05_images/page045_image007.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0857"
  },
  "pdf_name": "L05_images",
  "page_number": 4,
  "content": "./origami_dataset_dev/L05_images/page004_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0858"
  },
  "pdf_name": "L05_images",
  "page_number": 51,
  "content": "./origami_dataset_dev/L05_images/page051_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0859"
  },
  "pdf_name": "L05_images",
  "page_number": 56,
  "content": "./origami_dataset_dev/L05_images/page056_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d085a"
  },
  "pdf_name": "L05_images",
  "page_number": 64,
  "content": "        Useful Features in TreeMaker\n Conditions \n  • axis of symmetry conditions\n  • force paths to be active or at speciﬁc angles\n  • force nodes to edge/corner/speciﬁc locations\n Tree manipulation\n  • adding local strain (Menu/Action/Scale Selection/)\n  • triangulation (Menu/Edit/Stub/Triangulate Tree/)\n Views\n  • Menu/View/Show View Settings/ very useful\n  • Can view just locus of hinge creases by turning off \n  all but (Creases/Minor Creases) and (Creases/Lines)\n\n                                         46\nSymmetry (book/diagonal)\nIdentifying/ﬁxing unconstrained nodes with local strain\nTriangulation of creasepattern (need three degrees of freedom)\nView Settings",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d085b"
  },
  "pdf_name": "L05_images",
  "page_number": 70,
  "content": "         Non-TreeMaker Example\n\n\n                                         50\nProof of concept",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d085c"
  },
  "pdf_name": "L05_images",
  "page_number": 58,
  "content": "                                                                                  41\nJason Ku - 2008",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d085d"
  },
  "pdf_name": "L05_images",
  "page_number": 57,
  "content": "./origami_dataset_dev/L05_images/page057_image004.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d085e"
  },
  "pdf_name": "L05_images",
  "page_number": 43,
  "content": "./origami_dataset_dev/L05_images/page043_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d085f"
  },
  "pdf_name": "L05_images",
  "page_number": 35,
  "content": "./origami_dataset_dev/L05_images/page035_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0860"
  },
  "pdf_name": "L05_images",
  "page_number": 60,
  "content": "./origami_dataset_dev/L05_images/page060_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0861"
  },
  "pdf_name": "L05_images",
  "page_number": 11,
  "content": "./origami_dataset_dev/L05_images/page011_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0862"
  },
  "pdf_name": "L05_images",
  "page_number": 44,
  "content": "./origami_dataset_dev/L05_images/page044_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0863"
  },
  "pdf_name": "L05_images",
  "page_number": 32,
  "content": "./origami_dataset_dev/L05_images/page032_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0864"
  },
  "pdf_name": "L05_images",
  "page_number": 67,
  "content": "./origami_dataset_dev/L05_images/page067_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0865"
  },
  "pdf_name": "L05_images",
  "page_number": 66,
  "content": "              Example Files\n\nhttp://jasonku.scripts.mit.edu/misc/treemaker_examples.zip\n• crab_book.tmd5 = crab with book symmetry\n• crab_diag.tmd5 = crab with diagonal symmetry\n• crab_book_tri.tmd5 = triangulated version of book\n• crab_diag_tri.tmd5 = triangulated version of diagonal\n\n\n                                        48",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0866"
  },
  "pdf_name": "L05_images",
  "page_number": 72,
  "content": "           MIT’s Origami Club\n\n            Weekly Meetings\n             Sundays 2-4pm\n             Student Center\n\n        http://origamit.scripts.mit.edu\n\n\n                                   52\nShameless promotion",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0867"
  },
  "pdf_name": "L05_images",
  "page_number": 42,
  "content": "./origami_dataset_dev/L05_images/page042_image005.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0868"
  },
  "pdf_name": "L05_images",
  "page_number": 56,
  "content": "./origami_dataset_dev/L05_images/page056_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0869"
  },
  "pdf_name": "L05_images",
  "page_number": 4,
  "content": "./origami_dataset_dev/L05_images/page004_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d086a"
  },
  "pdf_name": "L05_images",
  "page_number": 10,
  "content": "./origami_dataset_dev/L05_images/page010_image005.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d086b"
  },
  "pdf_name": "L05_images",
  "page_number": 45,
  "content": "./origami_dataset_dev/L05_images/page045_image005.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d086c"
  },
  "pdf_name": "L05_images",
  "page_number": 27,
  "content": "./origami_dataset_dev/L05_images/page027_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d086d"
  },
  "pdf_name": "L05_images",
  "page_number": 72,
  "content": "./origami_dataset_dev/L05_images/page072_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d086e"
  },
  "pdf_name": "L05_images",
  "page_number": 4,
  "content": "./origami_dataset_dev/L05_images/page004_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d086f"
  },
  "pdf_name": "L05_images",
  "page_number": 45,
  "content": "./origami_dataset_dev/L05_images/page045_image004.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0870"
  },
  "pdf_name": "L05_images",
  "page_number": 10,
  "content": "./origami_dataset_dev/L05_images/page010_image004.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0871"
  },
  "pdf_name": "L05_images",
  "page_number": 20,
  "content": "./origami_dataset_dev/L05_images/page020_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0872"
  },
  "pdf_name": "L05_images",
  "page_number": 42,
  "content": "./origami_dataset_dev/L05_images/page042_image004.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0873"
  },
  "pdf_name": "L05_images",
  "page_number": 17,
  "content": "./origami_dataset_dev/L05_images/page017_image004.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0874"
  },
  "pdf_name": "L05_images",
  "page_number": 56,
  "content": "./origami_dataset_dev/L05_images/page056_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0875"
  },
  "pdf_name": "L05_images",
  "page_number": 67,
  "content": "                   Non-TreeMaker Example\n\n\n                                                                                  49\n22.5 degree folding\nConstrained under back geometry\nTaking thickness into account\nNon-uniaxial in ultimate folded form\nTexture",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0876"
  },
  "pdf_name": "L05_images",
  "page_number": 44,
  "content": "./origami_dataset_dev/L05_images/page044_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0877"
  },
  "pdf_name": "L05_images",
  "page_number": 11,
  "content": "./origami_dataset_dev/L05_images/page011_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0878"
  },
  "pdf_name": "L05_images",
  "page_number": 57,
  "content": "./origami_dataset_dev/L05_images/page057_image005.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0879"
  },
  "pdf_name": "L05_images",
  "page_number": 43,
  "content": "./origami_dataset_dev/L05_images/page043_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d087a"
  },
  "pdf_name": "L05_images",
  "page_number": 57,
  "content": "./origami_dataset_dev/L05_images/page057_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d087b"
  },
  "pdf_name": "L05_images",
  "page_number": 21,
  "content": "./origami_dataset_dev/L05_images/page021_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d087c"
  },
  "pdf_name": "L05_images",
  "page_number": 50,
  "content": "./origami_dataset_dev/L05_images/page050_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d087d"
  },
  "pdf_name": "L05_images",
  "page_number": 44,
  "content": "./origami_dataset_dev/L05_images/page044_image007.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d087e"
  },
  "pdf_name": "L05_images",
  "page_number": 63,
  "content": "                        TreeMaker Example\n\n\n                                                                                  45\nSymmetry (book/diagonal)\nIdentifying/ﬁxing unconstrained nodes with local strain\nTriangulation of creasepattern (need three degrees of freedom)\nView Settings",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d087f"
  },
  "pdf_name": "L05_images",
  "page_number": 26,
  "content": "./origami_dataset_dev/L05_images/page026_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0880"
  },
  "pdf_name": "L05_images",
  "page_number": 46,
  "content": "./origami_dataset_dev/L05_images/page046_image008.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0881"
  },
  "pdf_name": "L05_images",
  "page_number": 66,
  "content": "./origami_dataset_dev/L05_images/page066_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0882"
  },
  "pdf_name": "L05_images",
  "page_number": 66,
  "content": "./origami_dataset_dev/L05_images/page066_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0883"
  },
  "pdf_name": "L05_images",
  "page_number": 45,
  "content": "./origami_dataset_dev/L05_images/page045_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0884"
  },
  "pdf_name": "L05_images",
  "page_number": 10,
  "content": "./origami_dataset_dev/L05_images/page010_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0885"
  },
  "pdf_name": "L05_images",
  "page_number": 61,
  "content": "./origami_dataset_dev/L05_images/page061_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0886"
  },
  "pdf_name": "L05_images",
  "page_number": 46,
  "content": "./origami_dataset_dev/L05_images/page046_image009.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0887"
  },
  "pdf_name": "L05_images",
  "page_number": 42,
  "content": "./origami_dataset_dev/L05_images/page042_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0888"
  },
  "pdf_name": "L05_images",
  "page_number": 17,
  "content": "./origami_dataset_dev/L05_images/page017_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0889"
  },
  "pdf_name": "L05_images",
  "page_number": 26,
  "content": "./origami_dataset_dev/L05_images/page026_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d088a"
  },
  "pdf_name": "L05_images",
  "page_number": 62,
  "content": "                            Design Example\n\n\n                                                                                  44\nModeling a crab\nFirst draw tree (blackboard)",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d088b"
  },
  "pdf_name": "L05_images",
  "page_number": 44,
  "content": "./origami_dataset_dev/L05_images/page044_image006.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d088c"
  },
  "pdf_name": "L05_images",
  "page_number": 43,
  "content": "./origami_dataset_dev/L05_images/page043_image006.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d088d"
  },
  "pdf_name": "L05_images",
  "page_number": 57,
  "content": "./origami_dataset_dev/L05_images/page057_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d088e"
  },
  "pdf_name": "L05_images",
  "page_number": 43,
  "content": "./origami_dataset_dev/L05_images/page043_image004.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d088f"
  },
  "pdf_name": "L05_images",
  "page_number": 21,
  "content": "./origami_dataset_dev/L05_images/page021_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0890"
  },
  "pdf_name": "L05_images",
  "page_number": 44,
  "content": "./origami_dataset_dev/L05_images/page044_image004.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0891"
  },
  "pdf_name": "L05_images",
  "page_number": 60,
  "content": " Satoshi Kamiya                                      http://www.folders.jp/\n\n\n                                                                                  43\nActually fairly simple yet ingenious concept behind space allocation\nBox-pleating\nTextures\nUsing thickness at end of ﬂap to make ﬁngers/toes",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0892"
  },
  "pdf_name": "L05_images",
  "page_number": 48,
  "content": "                                  Practice!\n\n\n                                                                                  37\nWhich trees represent the given CRP?",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0893"
  },
  "pdf_name": "L05_images",
  "page_number": 26,
  "content": "./origami_dataset_dev/L05_images/page026_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0894"
  },
  "pdf_name": "L05_images",
  "page_number": 17,
  "content": "./origami_dataset_dev/L05_images/page017_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0895"
  },
  "pdf_name": "L05_images",
  "page_number": 42,
  "content": "./origami_dataset_dev/L05_images/page042_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0896"
  },
  "pdf_name": "L05_images",
  "page_number": 4,
  "content": "./origami_dataset_dev/L05_images/page004_image005.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0897"
  },
  "pdf_name": "L05_images",
  "page_number": 10,
  "content": "./origami_dataset_dev/L05_images/page010_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0898"
  },
  "pdf_name": "L05_images",
  "page_number": 45,
  "content": "./origami_dataset_dev/L05_images/page045_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0899"
  },
  "pdf_name": "L05_images",
  "page_number": 66,
  "content": "./origami_dataset_dev/L05_images/page066_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d089a"
  },
  "pdf_name": "L05_images",
  "page_number": 33,
  "content": "./origami_dataset_dev/L05_images/page033_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d089b"
  },
  "pdf_name": "L05_images",
  "page_number": 4,
  "content": "./origami_dataset_dev/L05_images/page004_image004.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d089c"
  },
  "pdf_name": "L05_images",
  "page_number": 45,
  "content": "./origami_dataset_dev/L05_images/page045_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d089d"
  },
  "pdf_name": "L05_images",
  "page_number": 10,
  "content": "./origami_dataset_dev/L05_images/page010_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d089e"
  },
  "pdf_name": "L05_images",
  "page_number": 61,
  "content": "./origami_dataset_dev/L05_images/page061_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d089f"
  },
  "pdf_name": "L05_images",
  "page_number": 34,
  "content": "./origami_dataset_dev/L05_images/page034_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d08a0"
  },
  "pdf_name": "L05_images",
  "page_number": 42,
  "content": "./origami_dataset_dev/L05_images/page042_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d08a1"
  },
  "pdf_name": "L05_images",
  "page_number": 17,
  "content": "./origami_dataset_dev/L05_images/page017_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d08a2"
  },
  "pdf_name": "L05_images",
  "page_number": 56,
  "content": "./origami_dataset_dev/L05_images/page056_image004.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d08a3"
  },
  "pdf_name": "L05_images",
  "page_number": 49,
  "content": "                                  Practice!\n\n\n                                                                                  38\nWhich trees represent the given CRP?",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d08a4"
  },
  "pdf_name": "L05_images",
  "page_number": 61,
  "content": " Satoshi Kamiya                                      http://www.folders.jp/\n\n\n                                                                                  43\nActually fairly simple yet ingenious concept behind space allocation\nBox-pleating\nTextures\nUsing thickness at end of ﬂap to make ﬁngers/toes",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d08a5"
  },
  "pdf_name": "L05_images",
  "page_number": 44,
  "content": "./origami_dataset_dev/L05_images/page044_image005.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d08a6"
  },
  "pdf_name": "L05_images",
  "page_number": 57,
  "content": "./origami_dataset_dev/L05_images/page057_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d08a7"
  },
  "pdf_name": "L05_images",
  "page_number": 43,
  "content": "./origami_dataset_dev/L05_images/page043_image005.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d08a8"
  },
  "pdf_name": "L05_images",
  "page_number": 9,
  "content": "./origami_dataset_dev/L05_images/page009_image004.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d08a9"
  },
  "pdf_name": "L05_images",
  "page_number": 39,
  "content": "./origami_dataset_dev/L05_images/page039_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d08aa"
  },
  "pdf_name": "L05_images",
  "page_number": 12,
  "content": " Eric Joisel                                  http://www.ericjoisel.com/\n\n\n                                                                                  12\nCurved lines become 3D and structural\nJoisel an expert in human form origami",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d08ab"
  },
  "pdf_name": "L05_images",
  "page_number": 6,
  "content": " Hideo Komatsu                    http://www.origami.gr.jp/~komatsu/\n\n\n                                                                                   6\nHideo Komatsu - Japanese\nDesign process through trial and error process trying to form speciﬁc polygonal shapes in \nﬁnal form\nNon-unaxial bases\nSmall but distinguished repertoire",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d08ac"
  },
  "pdf_name": "L05_images",
  "page_number": 7,
  "content": " Takashi Hojyo                        http://www.origami.gr.jp/~hojyo/\n\n\n                                                                                   7\nTakashi Hojyo - Japanese\nBox-pleating - characterized by only multiple of 45 deg creases\n22.5 deg folding - characterized by 22.5 deg creases\nNon-uniaxial but space constraint still must be valid",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d08ad"
  },
  "pdf_name": "L05_images",
  "page_number": 13,
  "content": " Eric Joisel                                  http://www.ericjoisel.com/\n\n\n                                                                                  13\nM.C. Esher-like ‘Self Made Man”",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d08ae"
  },
  "pdf_name": "L05_images",
  "page_number": 48,
  "content": "./origami_dataset_dev/L05_images/page048_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d08af"
  },
  "pdf_name": "L05_images",
  "page_number": 39,
  "content": "                                      Flaps\n\n\n                                                                                  36\nCircle/River Packing (CRP) as a space allocation\nUniquely deﬁnes a tree\nTree edges can be oriented anyway we like because if uniaxial base is inﬁnitely thinned, base \nis actually stick ﬁgure\nSpace between circles is wasted paper and maps to a single tree node",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d08b0"
  },
  "pdf_name": "L05_images",
  "page_number": 5,
  "content": "                   Traditional Style\n\n\n                                                                                   5\nCharacterized by straight, well deﬁned polygons\nLittle shaping need from base",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d08b1"
  },
  "pdf_name": "L05_images",
  "page_number": 11,
  "content": " Eric Joisel                                  http://www.ericjoisel.com/\n\n\n                                                                                  11\nEric Joisel\nInﬂuenced by Yoshizawa\nFormer clay sculptor turned paper folder\nUse of texture (non-uniaxial)",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d08b2"
  },
  "pdf_name": "L05_images",
  "page_number": 39,
  "content": "./origami_dataset_dev/L05_images/page039_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d08b3"
  },
  "pdf_name": "L05_images",
  "page_number": 38,
  "content": "./origami_dataset_dev/L05_images/page038_image004.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d08b4"
  },
  "pdf_name": "L05_images",
  "page_number": 10,
  "content": " Michael LaFosse                             http://www.origamido.com/\n\n\n                                                                                  10\nMichael LaFosse - Haverhill, MA\nAlso makes his own paper\nMore control over the medium",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d08b5"
  },
  "pdf_name": "L05_images",
  "page_number": 4,
  "content": "                                                                                   4\nOrigami a process of breathing life into paper\nPioneer of wet-folding\nWet-folding = weakening the paper ﬁbers and letting them dry",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d08b6"
  },
  "pdf_name": "L05_images",
  "page_number": 38,
  "content": "                                      Flaps\n\n\n                                                                                  35\nIdea of ‘elevation’ on a ﬂap/tree edge\nRivers separate two parts of a tree with strip of constant width\nCircle limiting case of river separating single point from rest\nSplitting a leaf edge into a leaf and brach creates a redundant node",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d08b7"
  },
  "pdf_name": "L05_images",
  "page_number": 9,
  "content": "./origami_dataset_dev/L05_images/page009_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d08b8"
  },
  "pdf_name": "L05_images",
  "page_number": 14,
  "content": " Eric Joisel                                  http://www.ericjoisel.com/\n\n\n                                                                                  14\nUse of texture\nLots of planning (Tree Theory included)\nBox-pleating",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d08b9"
  },
  "pdf_name": "L05_images",
  "page_number": 28,
  "content": " Satoshi Kamiya                                      http://www.folders.jp/\n\n\n                                                                                  28\nWidely regarded as most complex single work in origami\nTook Kamiya over the course of a year to fold\nWe will analyze structure later ",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d08ba"
  },
  "pdf_name": "L05_images",
  "page_number": 38,
  "content": "./origami_dataset_dev/L05_images/page038_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d08bb"
  },
  "pdf_name": "L05_images",
  "page_number": 29,
  "content": "                               Origami Art\n\n\n                    http://www.greenfuseﬁlms.com/\n                                                                                  29\nMore info on origami art, see this movie!\nFeatured = Erik & Marty Demaine, Robert Lang, and many more!",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d08bc"
  },
  "pdf_name": "L05_images",
  "page_number": 15,
  "content": " Eric Joisel                                  http://www.ericjoisel.com/\n\n\n                                                                                  15\nAgain, breathing life into paper",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d08bd"
  },
  "pdf_name": "L05_images",
  "page_number": 1,
  "content": "              MIT 6.849\n        Geometric Folding Algorithms\n               Prof. Erik Demaine\n\n                  Lecture 6:\n             Origami ArtText and Design\n\n                Guest Lecturer:  \n                  Jason Ku\n             origami-info@mit.edu\n\n              September 27, 2010\n\n                                         1\nJason Ku\nPresident of OrigaMIT\nMechanical Engineering Bachelor's, MIT ’09\nPhD student in Mechanical Engineering working in folding on the micro and nano scales",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d08be"
  },
  "pdf_name": "L05_images",
  "page_number": 9,
  "content": "./origami_dataset_dev/L05_images/page009_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d08bf"
  },
  "pdf_name": "L05_images",
  "page_number": 9,
  "content": "./origami_dataset_dev/L05_images/page009_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d08c0"
  },
  "pdf_name": "L05_images",
  "page_number": 17,
  "content": " Robert Lang                               http://www.langorigami.com/\n\n\n                                                                                  17\nRobert Lang - CA\nA pioneer of algorithmic origami design\nCaltech laser physicist turned origami artist\nAuthor of TreeMaker, Reference Finder",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d08c1"
  },
  "pdf_name": "L05_images",
  "page_number": 3,
  "content": "                    Akira Yoshizawa\n\n\n                                                                                   3\nAkira Yoshizawa (1911-2005) - father of modern origami\nOne of ﬁrst to start creating many new models",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d08c2"
  },
  "pdf_name": "L05_images",
  "page_number": 38,
  "content": "./origami_dataset_dev/L05_images/page038_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d08c3"
  },
  "pdf_name": "L05_images",
  "page_number": 38,
  "content": "./origami_dataset_dev/L05_images/page038_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d08c4"
  },
  "pdf_name": "L05_images",
  "page_number": 49,
  "content": "./origami_dataset_dev/L05_images/page049_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d08c5"
  },
  "pdf_name": "L05_images",
  "page_number": 2,
  "content": "               Origami Art\n • Akira Yoshizawa http://www.origami.vancouver.bc.ca/\n • Hideo Komatsu http://www.origami.gr.jp/~komatsu/\n • Takashi Hojyo      http://origami.gr.jp/~hojyo\n • David Brill    http://www.brilliantorigami.com/\n • Michael LaFosse    http://www.origamido.com\n • Eric Joisel        http://www.ericjoisel.com\n • Robert Lang      http://www.langorigami.com/\n • Brian Chan  http://chosetec.darkclan.net/origami/\n • Satoshi Kamiya        http://www.folders.jp/\n • Jason Ku        http://scripts.mit.edu/~jasonku/\n\n                                         2\nWebsites where photos in presentation come from\nOrigami Art comparison with Music\nRepresentational origami = traditionally represent living things",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d08c6"
  },
  "pdf_name": "L05_images",
  "page_number": 16,
  "content": "                    Modern Realism\n\n\n                                                                                  16\nThe spectrum between the styles with increased complexity",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d08c7"
  },
  "pdf_name": "L05_images",
  "page_number": 19,
  "content": "./origami_dataset_dev/L05_images/page019_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d08c8"
  },
  "pdf_name": "L05_images",
  "page_number": 33,
  "content": " Uniaxial Bases\n\n\nTraditional\n\n  1. ﬂaps lie along or straddle a single line (the axis)\n  2. ﬂaps hinge perpendicular to the axis\n  3. can thin to stick ﬁgure (tree)\n\n                                         33\nInformal deﬁnition are bases that can be trivially modiﬁed to become unaxial",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d08c9"
  },
  "pdf_name": "L05_images",
  "page_number": 27,
  "content": " Satoshi Kamiya                                      http://www.folders.jp/\n\n\n                                                                                  27\nUse of texture and completeness of composition",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d08ca"
  },
  "pdf_name": "L05_images",
  "page_number": 18,
  "content": "./origami_dataset_dev/L05_images/page018_image004.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d08cb"
  },
  "pdf_name": "L05_images",
  "page_number": 28,
  "content": "./origami_dataset_dev/L05_images/page028_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d08cc"
  },
  "pdf_name": "L05_images",
  "page_number": 26,
  "content": " Satoshi Kamiya                                      http://www.folders.jp/\n\n\n                                                                                  26\nCrisp, clean folding with well planned 3D shaping structure",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d08cd"
  },
  "pdf_name": "L05_images",
  "page_number": 32,
  "content": " Uniaxial Bases\n\n\n 1. in z≥0 half plane\n 2. intersection with z=0 plane = projection onto the \n plane\nTraditional\n 3. partition of faces into ﬂaps, each projecting to a line \n segment\n 4. hinge crease shared by two ﬂaps project to a point\n 5. graph of ﬂap projections as edges is a tree\n 6. only one point of paper folds to each leaf\n                                         32\nPrevious deﬁnition of uniaxial bases\n(6) not necessary but convenient\n\nWhy would it be useful to have the end of a leaf node map to more than one point on \npaper? Ans: ﬂap thickness at end\nWhat does this really mean?",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d08ce"
  },
  "pdf_name": "L05_images",
  "page_number": 68,
  "content": "./origami_dataset_dev/L05_images/page068_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d08cf"
  },
  "pdf_name": "L05_images",
  "page_number": 19,
  "content": "./origami_dataset_dev/L05_images/page019_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d08d0"
  },
  "pdf_name": "L05_images",
  "page_number": 68,
  "content": "./origami_dataset_dev/L05_images/page068_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d08d1"
  },
  "pdf_name": "L05_images",
  "page_number": 18,
  "content": " Robert Lang                               http://www.langorigami.com/\n\n\n                                                                                  18\nBug wars\nPaper needs to be thin thus often uses custom paper from Michael LaFosse",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d08d2"
  },
  "pdf_name": "L05_images",
  "page_number": 24,
  "content": "Brian Chan      http://chosetec.darkclan.net/origami/\n\n\n                                         24\nMIT Seal, ‘Mens et Manus’",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d08d3"
  },
  "pdf_name": "L05_images",
  "page_number": 30,
  "content": "                             Origami Design\n\n\n                                                                                  30\nNow onto making these works of art\nIf serious about origami design, ODS is the ﬁrst major book on methods for origami design\nGet now!",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d08d4"
  },
  "pdf_name": "L05_images",
  "page_number": 59,
  "content": "./origami_dataset_dev/L05_images/page059_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d08d5"
  },
  "pdf_name": "L05_images",
  "page_number": 69,
  "content": "./origami_dataset_dev/L05_images/page069_image004.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d08d6"
  },
  "pdf_name": "L05_images",
  "page_number": 31,
  "content": "                        Tree Theory Review\n\n\n Traditional\n\n\n                                                                                  31\nReview of Tree Theory thought process\n1) Start with object\n2) Draw tree\n3) Change tree into uniaxial base\n4) Shape uniaxial base",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d08d7"
  },
  "pdf_name": "L05_images",
  "page_number": 25,
  "content": " Satoshi Kamiya                                      http://www.folders.jp/\n\n\n                                                                                  25\nSatoshi Kamiya - Japanese\nWidely recognized as a pioneer in super-complex origami\nTexture\nUnique balence between Traditional and Non-traditional styles",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d08d8"
  },
  "pdf_name": "L05_images",
  "page_number": 19,
  "content": " Robert Lang                               http://www.langorigami.com/\n\n\n                                                                                  19\nGeometrics\nTessellations\nKlein Bottle",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d08d9"
  },
  "pdf_name": "L05_images",
  "page_number": 68,
  "content": "./origami_dataset_dev/L05_images/page068_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d08da"
  },
  "pdf_name": "L05_images",
  "page_number": 19,
  "content": "./origami_dataset_dev/L05_images/page019_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d08db"
  },
  "pdf_name": "L05_images",
  "page_number": 21,
  "content": " Brian Chan                     http://chosetec.darkclan.net/origami/\n\n\n                                                                                  21\nSingle sheet rose with color change\nAnime girl with color change",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d08dc"
  },
  "pdf_name": "L05_images",
  "page_number": 35,
  "content": "                                      Flaps\n\n\n                                                                                  35\nIdea of ‘elevation’ on a ﬂap/tree edge\nRivers separate two parts of a tree with strip of constant width\nCircle limiting case of river separating single point from rest\nSplitting a leaf edge into a leaf and brach creates a redundant node",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d08dd"
  },
  "pdf_name": "L05_images",
  "page_number": 9,
  "content": " David Brill                         http://www.brilliantorigami.com/\n\n\n                                                                                   9\nDavid Brill - British\nCurved wetfolding, heavy paper",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d08de"
  },
  "pdf_name": "L05_images",
  "page_number": 18,
  "content": "./origami_dataset_dev/L05_images/page018_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d08df"
  },
  "pdf_name": "L05_images",
  "page_number": 69,
  "content": "./origami_dataset_dev/L05_images/page069_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d08e0"
  },
  "pdf_name": "L05_images",
  "page_number": 18,
  "content": "./origami_dataset_dev/L05_images/page018_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d08e1"
  },
  "pdf_name": "L05_images",
  "page_number": 8,
  "content": "            Non-Traditional Style\n\n\n                                                                                   8\nCharacterized by curved shaping (usually wet-folding)\nMuch shaping from structural base",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d08e2"
  },
  "pdf_name": "L05_images",
  "page_number": 34,
  "content": "                                      Flaps\n\n\n                                                                                  34\nModeling a ﬂap",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d08e3"
  },
  "pdf_name": "L05_images",
  "page_number": 20,
  "content": " Brian Chan                     http://chosetec.darkclan.net/origami/\n\n\n                                                                                  20\nBrian Chan - Cambridge, MA\nMIT BS, MS, PhD ’09 in Mechanical Engineering\nPioneer in pushing the limits of complex folding",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d08e4"
  },
  "pdf_name": "L05_images",
  "page_number": 29,
  "content": "./origami_dataset_dev/L05_images/page029_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d08e5"
  },
  "pdf_name": "L05_images",
  "page_number": 19,
  "content": "./origami_dataset_dev/L05_images/page019_image004.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d08e6"
  },
  "pdf_name": "L05_images",
  "page_number": 36,
  "content": "                                      Flaps\n\n\n                                                                                  35\nIdea of ‘elevation’ on a ﬂap/tree edge\nRivers separate two parts of a tree with strip of constant width\nCircle limiting case of river separating single point from rest\nSplitting a leaf edge into a leaf and brach creates a redundant node",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d08e7"
  },
  "pdf_name": "L05_images",
  "page_number": 22,
  "content": "Brian Chan      http://chosetec.darkclan.net/origami/\n\n\n                                         22\nNekobus",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d08e8"
  },
  "pdf_name": "L05_images",
  "page_number": 18,
  "content": "./origami_dataset_dev/L05_images/page018_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d08e9"
  },
  "pdf_name": "L05_images",
  "page_number": 69,
  "content": "./origami_dataset_dev/L05_images/page069_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d08ea"
  },
  "pdf_name": "L05_images",
  "page_number": 69,
  "content": "./origami_dataset_dev/L05_images/page069_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d08eb"
  },
  "pdf_name": "L05_images",
  "page_number": 23,
  "content": " Brian Chan                     http://chosetec.darkclan.net/origami/\n\n\n                                                                                  23\nAttack of the Kraken\nOrigami Design Challenges = Sailing Ship",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d08ec"
  },
  "pdf_name": "L05_images",
  "page_number": 37,
  "content": "                                      Flaps\n\n\n                                                                                  35\nIdea of ‘elevation’ on a ﬂap/tree edge\nRivers separate two parts of a tree with strip of constant width\nCircle limiting case of river separating single point from rest\nSplitting a leaf edge into a leaf and brach creates a redundant node",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d08ed"
  },
  "pdf_name": "L05_images",
  "page_number": 29,
  "content": "./origami_dataset_dev/L05_images/page029_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d08ee"
  },
  "pdf_name": "L05_images",
  "page_number": 58,
  "content": "./origami_dataset_dev/L05_images/page058_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d08ef"
  },
  "pdf_name": "L05_images",
  "page_number": 31,
  "content": "./origami_dataset_dev/L05_images/page031_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d08f0"
  },
  "pdf_name": "L05_images",
  "page_number": 36,
  "content": "./origami_dataset_dev/L05_images/page036_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d08f1"
  },
  "pdf_name": "L05_images",
  "page_number": 50,
  "content": "                                  Practice!\n\n\n                                                                                  38\nWhich trees represent the given CRP?",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d08f2"
  },
  "pdf_name": "L05_images",
  "page_number": 44,
  "content": "                                      Flaps\n\n\n                                                                                  36\nCircle/River Packing (CRP) as a space allocation\nUniquely deﬁnes a tree\nTree edges can be oriented anyway we like because if uniaxial base is inﬁnitely thinned, base \nis actually stick ﬁgure\nSpace between circles is wasted paper and maps to a single tree node",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d08f3"
  },
  "pdf_name": "L05_images",
  "page_number": 46,
  "content": "./origami_dataset_dev/L05_images/page046_image007.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d08f4"
  },
  "pdf_name": "L05_images",
  "page_number": 7,
  "content": "./origami_dataset_dev/L05_images/page007_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d08f5"
  },
  "pdf_name": "L05_images",
  "page_number": 52,
  "content": "./origami_dataset_dev/L05_images/page052_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d08f6"
  },
  "pdf_name": "L05_images",
  "page_number": 37,
  "content": "./origami_dataset_dev/L05_images/page037_image004.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d08f7"
  },
  "pdf_name": "L05_images",
  "page_number": 55,
  "content": "./origami_dataset_dev/L05_images/page055_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d08f8"
  },
  "pdf_name": "L05_images",
  "page_number": 46,
  "content": "./origami_dataset_dev/L05_images/page046_image006.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d08f9"
  },
  "pdf_name": "L05_images",
  "page_number": 15,
  "content": "./origami_dataset_dev/L05_images/page015_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d08fa"
  },
  "pdf_name": "L05_images",
  "page_number": 40,
  "content": "./origami_dataset_dev/L05_images/page040_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d08fb"
  },
  "pdf_name": "L05_images",
  "page_number": 45,
  "content": "                                      Flaps\n\n\n                                                                                  36\nCircle/River Packing (CRP) as a space allocation\nUniquely deﬁnes a tree\nTree edges can be oriented anyway we like because if uniaxial base is inﬁnitely thinned, base \nis actually stick ﬁgure\nSpace between circles is wasted paper and maps to a single tree node",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d08fc"
  },
  "pdf_name": "L05_images",
  "page_number": 51,
  "content": "                                  Practice!\n\n\n                                                                                  39\nWhich CRP correspond to the given tree?\nCRP 1, 2, and 5 have similar trees, but diferent space allocation\n(CRP => Tree) = unique\n(Tree => CRP) = non-unique",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d08fd"
  },
  "pdf_name": "L05_images",
  "page_number": 36,
  "content": "./origami_dataset_dev/L05_images/page036_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d08fe"
  },
  "pdf_name": "L05_images",
  "page_number": 12,
  "content": "./origami_dataset_dev/L05_images/page012_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d08ff"
  },
  "pdf_name": "L05_images",
  "page_number": 47,
  "content": "./origami_dataset_dev/L05_images/page047_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0900"
  },
  "pdf_name": "L05_images",
  "page_number": 25,
  "content": "./origami_dataset_dev/L05_images/page025_image004.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0901"
  },
  "pdf_name": "L05_images",
  "page_number": 31,
  "content": "./origami_dataset_dev/L05_images/page031_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0902"
  },
  "pdf_name": "L05_images",
  "page_number": 6,
  "content": "./origami_dataset_dev/L05_images/page006_image005.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0903"
  },
  "pdf_name": "L05_images",
  "page_number": 47,
  "content": "                                  Practice!\n\n\n                                                                                  37\nWhich trees represent the given CRP?",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0904"
  },
  "pdf_name": "L05_images",
  "page_number": 40,
  "content": "./origami_dataset_dev/L05_images/page040_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0905"
  },
  "pdf_name": "L05_images",
  "page_number": 53,
  "content": "                           Model vs. Reality\n\n\n                                                                                  40\nIn reality, CRP is an idealization\nBy deﬁnition, locus of all possible hinge creases represents something topologically similar to \na CRP\nCan read of tree as before",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0906"
  },
  "pdf_name": "L05_images",
  "page_number": 24,
  "content": "./origami_dataset_dev/L05_images/page024_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0907"
  },
  "pdf_name": "L05_images",
  "page_number": 71,
  "content": "./origami_dataset_dev/L05_images/page071_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0908"
  },
  "pdf_name": "L05_images",
  "page_number": 7,
  "content": "./origami_dataset_dev/L05_images/page007_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0909"
  },
  "pdf_name": "L05_images",
  "page_number": 46,
  "content": "./origami_dataset_dev/L05_images/page046_image004.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d090a"
  },
  "pdf_name": "L05_images",
  "page_number": 23,
  "content": "./origami_dataset_dev/L05_images/page023_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d090b"
  },
  "pdf_name": "L05_images",
  "page_number": 41,
  "content": "./origami_dataset_dev/L05_images/page041_image004.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d090c"
  },
  "pdf_name": "L05_images",
  "page_number": 55,
  "content": "./origami_dataset_dev/L05_images/page055_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d090d"
  },
  "pdf_name": "L05_images",
  "page_number": 55,
  "content": "./origami_dataset_dev/L05_images/page055_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d090e"
  },
  "pdf_name": "L05_images",
  "page_number": 46,
  "content": "./origami_dataset_dev/L05_images/page046_image005.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d090f"
  },
  "pdf_name": "L05_images",
  "page_number": 52,
  "content": "                                  Practice!\n\n\n                                                                                  39\nWhich CRP correspond to the given tree?\nCRP 1, 2, and 5 have similar trees, but diferent space allocation\n(CRP => Tree) = unique\n(Tree => CRP) = non-unique",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0910"
  },
  "pdf_name": "L05_images",
  "page_number": 46,
  "content": "                                      Flaps\n\n\n                                                                                  36\nCircle/River Packing (CRP) as a space allocation\nUniquely deﬁnes a tree\nTree edges can be oriented anyway we like because if uniaxial base is inﬁnitely thinned, base \nis actually stick ﬁgure\nSpace between circles is wasted paper and maps to a single tree node",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0911"
  },
  "pdf_name": "L05_images",
  "page_number": 15,
  "content": "./origami_dataset_dev/L05_images/page015_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0912"
  },
  "pdf_name": "L05_images",
  "page_number": 40,
  "content": "./origami_dataset_dev/L05_images/page040_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0913"
  },
  "pdf_name": "L05_images",
  "page_number": 36,
  "content": "./origami_dataset_dev/L05_images/page036_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0914"
  },
  "pdf_name": "L05_images",
  "page_number": 12,
  "content": "./origami_dataset_dev/L05_images/page012_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0915"
  },
  "pdf_name": "L05_images",
  "page_number": 6,
  "content": "./origami_dataset_dev/L05_images/page006_image004.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0916"
  },
  "pdf_name": "L05_images",
  "page_number": 31,
  "content": "./origami_dataset_dev/L05_images/page031_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0917"
  },
  "pdf_name": "L05_images",
  "page_number": 25,
  "content": "./origami_dataset_dev/L05_images/page025_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0918"
  },
  "pdf_name": "L05_images",
  "page_number": 42,
  "content": "                                      Flaps\n\n\n                                                                                  36\nCircle/River Packing (CRP) as a space allocation\nUniquely deﬁnes a tree\nTree edges can be oriented anyway we like because if uniaxial base is inﬁnitely thinned, base \nis actually stick ﬁgure\nSpace between circles is wasted paper and maps to a single tree node",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0919"
  },
  "pdf_name": "L05_images",
  "page_number": 56,
  "content": "                           Model vs. Reality\n\n\n                                                                                  40\nIn reality, CRP is an idealization\nBy deﬁnition, locus of all possible hinge creases represents something topologically similar to \na CRP\nCan read of tree as before",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d091a"
  },
  "pdf_name": "L05_images",
  "page_number": 30,
  "content": "./origami_dataset_dev/L05_images/page030_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d091b"
  },
  "pdf_name": "L05_images",
  "page_number": 46,
  "content": "./origami_dataset_dev/L05_images/page046_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d091c"
  },
  "pdf_name": "L05_images",
  "page_number": 13,
  "content": "./origami_dataset_dev/L05_images/page013_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d091d"
  },
  "pdf_name": "L05_images",
  "page_number": 37,
  "content": "./origami_dataset_dev/L05_images/page037_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d091e"
  },
  "pdf_name": "L05_images",
  "page_number": 41,
  "content": "./origami_dataset_dev/L05_images/page041_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d091f"
  },
  "pdf_name": "L05_images",
  "page_number": 14,
  "content": "./origami_dataset_dev/L05_images/page014_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0920"
  },
  "pdf_name": "L05_images",
  "page_number": 37,
  "content": "./origami_dataset_dev/L05_images/page037_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0921"
  },
  "pdf_name": "L05_images",
  "page_number": 45,
  "content": "./origami_dataset_dev/L05_images/page045_image008.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0922"
  },
  "pdf_name": "L05_images",
  "page_number": 57,
  "content": "                           Model vs. Reality\n\n\n                                                                                  40\nIn reality, CRP is an idealization\nBy deﬁnition, locus of all possible hinge creases represents something topologically similar to \na CRP\nCan read of tree as before",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0923"
  },
  "pdf_name": "L05_images",
  "page_number": 54,
  "content": "./origami_dataset_dev/L05_images/page054_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0924"
  },
  "pdf_name": "L05_images",
  "page_number": 43,
  "content": "                                      Flaps\n\n\n                                                                                  36\nCircle/River Packing (CRP) as a space allocation\nUniquely deﬁnes a tree\nTree edges can be oriented anyway we like because if uniaxial base is inﬁnitely thinned, base \nis actually stick ﬁgure\nSpace between circles is wasted paper and maps to a single tree node",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0925"
  },
  "pdf_name": "L05_images",
  "page_number": 53,
  "content": "./origami_dataset_dev/L05_images/page053_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0926"
  },
  "pdf_name": "L05_images",
  "page_number": 6,
  "content": "./origami_dataset_dev/L05_images/page006_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0927"
  },
  "pdf_name": "L05_images",
  "page_number": 25,
  "content": "./origami_dataset_dev/L05_images/page025_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0928"
  },
  "pdf_name": "L05_images",
  "page_number": 31,
  "content": "./origami_dataset_dev/L05_images/page031_image004.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0929"
  },
  "pdf_name": "L05_images",
  "page_number": 6,
  "content": "./origami_dataset_dev/L05_images/page006_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d092a"
  },
  "pdf_name": "L05_images",
  "page_number": 55,
  "content": "                           Model vs. Reality\n\n\n                                                                                  40\nIn reality, CRP is an idealization\nBy deﬁnition, locus of all possible hinge creases represents something topologically similar to \na CRP\nCan read of tree as before",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d092b"
  },
  "pdf_name": "L05_images",
  "page_number": 41,
  "content": "                                      Flaps\n\n\n                                                                                  36\nCircle/River Packing (CRP) as a space allocation\nUniquely deﬁnes a tree\nTree edges can be oriented anyway we like because if uniaxial base is inﬁnitely thinned, base \nis actually stick ﬁgure\nSpace between circles is wasted paper and maps to a single tree node",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d092c"
  },
  "pdf_name": "L05_images",
  "page_number": 69,
  "content": "                   Non-TreeMaker Example\n\n\n                                                                                  49\n22.5 degree folding\nConstrained under back geometry\nTaking thickness into account\nNon-uniaxial in ultimate folded form\nTexture",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d092d"
  },
  "pdf_name": "L05_images",
  "page_number": 30,
  "content": "./origami_dataset_dev/L05_images/page030_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d092e"
  },
  "pdf_name": "L05_images",
  "page_number": 46,
  "content": "./origami_dataset_dev/L05_images/page046_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d092f"
  },
  "pdf_name": "L05_images",
  "page_number": 13,
  "content": "./origami_dataset_dev/L05_images/page013_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0930"
  },
  "pdf_name": "L05_images",
  "page_number": 62,
  "content": "./origami_dataset_dev/L05_images/page062_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0931"
  },
  "pdf_name": "L05_images",
  "page_number": 37,
  "content": "./origami_dataset_dev/L05_images/page037_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0932"
  },
  "pdf_name": "L05_images",
  "page_number": 41,
  "content": "./origami_dataset_dev/L05_images/page041_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0933"
  },
  "pdf_name": "L05_images",
  "page_number": 41,
  "content": "./origami_dataset_dev/L05_images/page041_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0934"
  },
  "pdf_name": "L05_images",
  "page_number": 46,
  "content": "./origami_dataset_dev/L05_images/page046_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0935"
  },
  "pdf_name": "L05_images",
  "page_number": 68,
  "content": "                   Non-TreeMaker Example\n\n\n                                                                                  49\n22.5 degree folding\nConstrained under back geometry\nTaking thickness into account\nNon-uniaxial in ultimate folded form\nTexture",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0936"
  },
  "pdf_name": "L05_images",
  "page_number": 54,
  "content": "./origami_dataset_dev/L05_images/page054_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0937"
  },
  "pdf_name": "L05_images",
  "page_number": 40,
  "content": "                                      Flaps\n\n\n                                                                                  36\nCircle/River Packing (CRP) as a space allocation\nUniquely deﬁnes a tree\nTree edges can be oriented anyway we like because if uniaxial base is inﬁnitely thinned, base \nis actually stick ﬁgure\nSpace between circles is wasted paper and maps to a single tree node",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0938"
  },
  "pdf_name": "L05_images",
  "page_number": 54,
  "content": "                           Model vs. Reality\n\n\n                                                                                  40\nIn reality, CRP is an idealization\nBy deﬁnition, locus of all possible hinge creases represents something topologically similar to \na CRP\nCan read of tree as before",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0939"
  },
  "pdf_name": "L05_images",
  "page_number": 22,
  "content": "./origami_dataset_dev/L05_images/page022_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d093a"
  },
  "pdf_name": "L05_images",
  "page_number": 6,
  "content": "./origami_dataset_dev/L05_images/page006_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d093b"
  },
  "pdf_name": "L05_images",
  "page_number": 70,
  "content": "./origami_dataset_dev/L05_images/page070_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d093c"
  },
  "pdf_name": "L05_images",
  "page_number": 25,
  "content": "./origami_dataset_dev/L05_images/page025_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d093d"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 11,
  "content": "./origami_dataset_dev/TreeMkr40/page011_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d093e"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 110,
  "content": "./origami_dataset_dev/TreeMkr40/page110_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d093f"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 104,
  "content": "./origami_dataset_dev/TreeMkr40/page104_image004.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0940"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 59,
  "content": "Let’s work through an example. Create a\nnew document and construct the six-                      4\nlegged tree as shown in figure 3.5.1.\n                                                        3\nNow, select Optimize Scale from the                     1.000\n Actions menu to create the first iteration\n                                                                7        8\n                                                6       3\n of the design.                          7                      1.000\n                                                 1.000\n                                                       2\n                                                        1.000\n\n                                                        2\n\n                                                        1\n                                                         1.000\n                                                 4       1     5\n                                                  1.000         1.000\n\n                                           5                           6\n\n\n                                                       3.5.1\n\n\n                                                          4\n\n                                                 3                 3\n                                                        3\n                                        7                1.000              8\n                                               6                 7\n                                                1.000   3         1.000\n\n                                              3                       3\n                                                       2\n                                                        1.000\n\n                                                        2\n                                                    2           2\n                                                        1\n                                                         1.000\n                                               4                 5\n                                                1.000     1       1.000\n                                                 2                 2\n\n                                        5                                   6\n\n                                                       3.5.2\n\n\n                                  59",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0941"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 71,
  "content": "Once a third node has been created, the\nconvex hull of the nodes (border paths)\nwill be outlined as is shown in figure\n4.3.6.\n\nEach edge of the tree corresponds to a\nflap of the base. By repeatedly selecting\nnodes and clicking, you can build up\narbitrarily complex trees with any\nnumber and arrangement of flaps.\n\nTo remove a node or edge, simply select\nit  by clicking on it and do one of the\nfollowing:\n\nSelect the Cut command, Edit menu\n\nSelect the Clear command, Edit menu\n\nHit the <delete> or <forward delete> key\n\nNodes, edges, and paths are some                       4.3.5\nexamples of “parts.” Attributes of parts\n— the location of a node, the length of an\nedge, and so forth — can be altered by\nediting the part. How this is done is the\nsubject of the next section.\n\n   4.4   Editing Parts\n\nAll parts (nodes, edges, paths, polys,\nvertices, and creases) have attributes\nassociated with them. Some are\nnumerical settings; some describe\nrelationships to other parts. You can edit\nmany of these attributes in several ways.\nThe most direct is to double-click on the\npart. Double-clicking brings up a dialog\nthat displays all of the attributes of the\npart whether they are editable or not.\nThis section describes all of the editor\ndialogs for each of the parts.\n\n      Nodes\n                                                       4.3.6\nIf a node is double-clicked, the Node\nEditor is put up as shown in figure 4.4.1.\n\n\n                                  71",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0942"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 65,
  "content": "                              4.0 Reference\n\n    4.1  Introduction\n\n This section describes the user interface of TreeMaker; it gives a comprehensive description of\nthe main window, how you construct a tree, and lists all of the menu commands and describes all\nof the dialogs. The reference complements the tutorials in the previous section. While you should\nstart with the tutorials, they only cover the most important parts of TreeMaker; it would be a\ngood idea at some point to read through all of the reference to make sure you are aware of all the\ncapabilities of the program.\n\n   4.2   Main window\n\nEach origami design is its own document and is displayed within a single window. An origami\ndesign is composed of a number of interrelated “parts”; the 7 types of parts are called: node,\nedge, path, poly, vertex, and crease — each of which has a graphical representation — and\nconditions, which modify nodes, edges, or paths, and don’t have a direct visual representation.\n\nFigures 4.2.1 and 4.2.2 show two views of a typical window that displays all of the different\nparts.\n\n\n                                       4.2.1\n\n                                  65",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0943"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 139,
  "content": "Figure 5.32. Crease pattern from Oru using arrowhead quad and rabbbit-ear molecules.\nWe can simplify the crease pattern obtained for the same terminal node positions by adding a\nsmaller number of interior circles and inflating each new circle to its maximum size before\nadding the next, as described above. It turns out that we need add only three nodes to insure that\nall active polygons have three or four sides. The resulting modified tree and crease pattern,\nshown in figure 5.33, is reasonably simple to fold, and utilizes only rabbit-ear and gusset quad\nmolecules.\n\n\n                                                      3.224 2\n                                                                5\n\n                                                     2      2\n                                                       1  1\n                                                   2        2\n                                                        2    2\n\n                                                          2 2\n                                                            1\n\n\nFigure 5.33. Tree and crease pattern for the Oru tree with three additional interior circles and\nfilled with triangle and gusset quads.\nBy applying the universal molecule to the original polygon, we can get a still simpler crease\npattern, which is shown in figure 5.34. This pattern has the additional perk that it is yet easier to\n\n                                 139",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0944"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 105,
  "content": " — the index of the second node\n Nodes collinear\n\n                                       4.5.34\n\nThis condition is used to force three nodes to be collinear. It’s used to make crease patterns more\nsymmetric. The fields are:\n\n— the index of the first node\n\n— the index of the second node\n\n— the index of the third node\n\nNote: a more effective way of making a crease pattern symmetric is to use the “Path Angle\nFixed/Quantized” conditions.\nEdge length fixed\n\n                                       4.5.35\n\nThis condition is used to force an edge to have zero strain in a strain optimization. The fields are:\n\n— the index of the edge\nEdges same strain\n\n                                       4.5.36\n\nThis condition is used to force two edges to have the same strain in a strain optimization. The\nfields are:\n\n— the index of the first edge\n\n— the index of the second edge\n\nNote: you can force a group of edges to all have the same strain by binding each edge in the\ngroup to a common edge with this condition.\nPath active\n\n                                       4.5.37\n\n\n                                 105",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0945"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 111,
  "content": "Diamond mark: some of the selected paths have this condition. Selecting the command applies a\ncondition to all of the selected paths. It also puts up the dialog for the path angle quantization.\n\nCheck mark: all of the selected paths have this condition. Selecting the command removes this\ntype of Condtion from each of the selected paths.\n   Remove selected Path conditions\nThis command removes all conditions that apply specifically to this path. It does not affect node\nconditions or edge conditions.\n   Remove all Path conditions\nThis command removes all conditions that apply to all paths. It does not affect node conditions\nor edge conditions.\n   Remove all conditions               1`\nThis command removes all conditions in the design.\n\n\n                                111",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0946"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 105,
  "content": "./origami_dataset_dev/TreeMkr40/page105_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0947"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 105,
  "content": "./origami_dataset_dev/TreeMkr40/page105_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0948"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 110,
  "content": "    Path active                         1,\n This command applies/removes a “Path active” condition to the selected path(s). It is enabled if\n at least one path is selected. The command has the following marks and effects:\n\n No mark: none of the selected paths have this condition. Selecting the command applies a\n condition to each of the selected paths .\n\n Diamond mark: some of the selected paths have this condition. Selecting the command applies a\n condition to all of the selected paths .\n\n Check mark: all of the selected paths have this condition. Selecting the command removes this\n type of Condtion from each of the selected paths.\n    Path angle fixedÉ\n This command applies/removes a “Path angle fixed” condition to the selected path(s). It is\n enabled if at least one path is selected. The command has the following marks and effects:\n\n No mark: none of the selected paths have this condition. Selecting the command applies a\n condition to each of the selected paths. It puts up a dialog for the path angle shown in figure\n 4.5.41.\n\n\n                                       4.5.41\n\nDiamond mark: some of the selected paths have this condition. Selecting the command applies a\ncondition to all of the selected paths. It also puts up the dialog for the path angle.\n\nCheck mark: all of the selected paths have this condition. Selecting the command removes this\ntype of Condtion from each of the selected paths.\n   Path angle quantizedÉ               1\\\n This command applies/removes a “Path angle quantized” condition to the selected path(s). It is\n enabled if at least one path is selected. The command has the following marks and effects:\n\n No mark: none of the selected paths have this condition. Selecting the command applies a\n condition to each of the selected paths. It puts up a dialog for the path angle quantization shown\n in figure 4.5.42.\n\n\n                                       4.5.42\n\n\n                                 110",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0949"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 104,
  "content": " — a checkbox if the x coordinate is to be fixed\n\n — the desired value of the x coordinate\n\n — a checkbox if the y coordinate is to be fixed\n\n — the desired value of the y coordinate\n Node fixed to corner\n\n                                       4.5.30\n\nThis condition insures that a node lies on one of the four corners of the paper. It’s used to make a\nflap a corner flap. The fields are:\n\n— the index of the node\nNode fixed to edge\n\n                                       4.5.31\n\nThis condition insures that a node lies on one of the edges of the paper. It’s used to make  flap an\nedge flap. The fields are:\n\n— the index of the node\nNode fixed to symmetry line\n\n                                       4.5.32\n\nThis condition insures that a node lies on the symmetry line of the model. It’s used to make flaps\nthat lie on the center line of a bilaterally symmetric subject. The fields are:\n\n— the index of the node\nNodes paired\n\n                                       4.5.33\n\nThis condition insures that two nodes are mirror images of each other about the symmetry line of\nthe base. It’s used to make two identical flaps on the left and right sides of the model. The fields\nare:\n\n— the index of the first node\n\n\n                                 104",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d094a"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 138,
  "content": " course, be subsequently narrowed arbitrarily as desired). In fact, I conjecture the following: for\n any active polygon, the universal molecule is the crease pattern with the shortest total length of\n creases that collapses that polygon to the uniaxial base. Few creases translates into relatively few\n layers in the base (at least, until you start sinking edges to narrow them). And because you don’t\n have to arbitrarily add circles (and hence points) to a crease pattern to knock polygons down to\n quads and triangles (as you do using the classical tree method algorithm), bases made with the\n universal molecule tend to have less bunching of paper and fewer layers near joints of the base,\n resulting in cleaner and (sometimes) easier-to-fold models.\n\n As another example of the utility of the universal molecule, an article by Maekawa in Oru\n magazine illustrated the design of a tree structure using the string-of-beads/contour algorithm. In\n this algorithm, all terminal nodes are arranged around the outside of the square to form one large\n active polygon. Then fixed-size circles are added to the interior to break up the active polygon\n into quads and triangles. Figure 5.31 shows the tree and the circle pattern derived thereby.\n\n\n          3.224 2\n                    5\n\n         2     2\n           1 1\n       2       2\n           2    2\n\n             2  2\n                1          \n\nFigure 5.31. (Left) tree and (right) crease pattern from Oru\nMaekawa’s construction used rabbit ear molecules to fill in the triangles and a different, but\nsimilarly versatile construction to fill in quads, called the arrowhead quad. The resulting crease\npattern is shown in figure 5.32. Because of the large number of interior circles, the crease pattern\nis quite complex and is quite difficult to fold flat.\n\n\n                                 138",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d094b"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 56,
  "content": "./origami_dataset_dev/TreeMkr40/page056_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d094c"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 64,
  "content": "If you’re happy with the results of the\nstrain optimization, you can make it\npermanent by selecting the Relieve                        4\nstrain command, Action menu. This\nabsorbs the strain into the length of each       3      3          3\nedge and resets the strain to zero, as                   1.014\nshown in figure 3.5.10.                 7      6        3        7          8\n                                                1.014     3       1.014\nYou can again Build Polygons and                       2\nCreases from the Action menu to get the       3         0.622        3\n                                                          2\nnew crease pattern shown in figure      3               2                   3\n3.5.11.                                            2            2\n                                                        1\nYou’ll see that the new crease pattern is 2              1.014              2\nsomewhat simpler and cleaner than the          4          1      5\nprevious pattern. Perhaps more useful is        1.014             1.014\nthat with the standardization of the             2                 2\nangles, you can find all of the reference\n                                        5                                   6\npoints by folding alone.\n\n                                                      3.5.10\n\n\n                                                      3.5.11\n\n\n                                  64",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d094d"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 70,
  "content": "When an edge is first created, it will be\nhighlighted and will have a default length\nof 1 unit.\n\nOnce there are two or more terminal\nnodes, all terminal nodes will have a\ncircle shown around them whose radius\nis equal to the scaled length of the\nattached edge.\n\nIn this example, node 2 is selected, so\nclicking in a new location will create\nanother new node and edge as shown in\nfigure 4.3.4.\n\nInternal nodes (those with two or more\nedges emanating from them) do not\ndisplay circles around them. However,\nyou can add branches to the tree that\nemanate from an internal node by\nselecting the internal node and then\n                                                       4.3.3\nclicking elsewhere in the square, as\nshown in figure 4.3.5 and 4.3.6.\n\n\n                                                       4.3.4\n\n\n                                  70",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d094e"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 58,
  "content": "Of course, you can always simply create\ncreases directly, which results in the\nuniversal molecule, as shown in figure\n3.4.11.\n\nThis shows, once again, that there are\nmany ways to get the same number of\nflaps.\n\n   3.5 Forcing symmetric angles\n\nOne of the major enhancements in\nTreeMaker 4.0 is that you can force\nactive paths to lie at specific angles. Why\nwould you want to do this?\n\nOnce you have computed and folded a\nnumber of  TreeMaker designs, you’ll\ndiscover that only rarely will the edges of\neach flap line up with each other. That’s\nbecause a flap is composed of a bunch of              3.4.11\ntriangles coming together and when\nTreeMaker optimizes a base, there’s no\nparticular reason for it to make the angles of one triangle equal to those of the adjacent layers.\n\nIf you could force all angles to be the same, or one of a small set of similar angles, then you’d get\na base in which more layers tend to line up.\n\nAn additional benefit of this is that if all the major creases run along fairly standard angles, you\nrun a better chance of being able to construct reference points by folding and/or a sequential\nfolding sequence, rather than measuring for reference points and a folding sequence that consists\nof a single “bring all these creases together at once.”\n\nIf we are to force major creases to lie at “standard” angles, which angles should we choose? A\nnatural set of angles are those that are obtained by dividing a circle into an integral number of\nequal divisions: for example, the common 22.5° degree angle found in the Bird Base is obtained\nby dividing a circle into 16 parts. While this is the most common division, several others provide\nuseful and interesting bases: division into 12 parts gives multiples of 30° and crease patterns with\nmany equilateral triangles in them.\n\n\n                                  58",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d094f"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 60,
  "content": "./origami_dataset_dev/TreeMkr40/page060_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0950"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 99,
  "content": "                                       4.5.24\n\nThere are five polygons: four triangles and a quadrilateral. Although we could build a crease\npattern from this, we can also break the entire crease pattern into triangles. Select the\nTriangulate Tree command, Action menu, which adds a stub to the tree and breaks the lower\n polygon into four triangles, as shown in figure 4.5.25.\n\n\n                                  99",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0951"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 110,
  "content": "./origami_dataset_dev/TreeMkr40/page110_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0952"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 98,
  "content": "./origami_dataset_dev/TreeMkr40/page098_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0953"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 66,
  "content": "                                       4.2.2\n\nThese are two different ways of viewing the same design. As is shown in the next section (Menu\nCommands), you can use the Custom View… command in the View menu to select which parts\nare shown and how they are shown.\n\nSome parts are color-coded to display their attributes. Color coding is summarized in the\nfollowing tables.\n\n                      terminal cond’d     Node circle\n                       node      node       color\n\n                       false               no circle\n\n                        true    false       black\n\n                        true     true       green\n\n\n                                  66",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0954"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 72,
  "content": "                                       4.4.1\n\nA node is always identified by an index (node 1 in this example). The fields of the Node Editor\nare:\n\nx= ___, y= ___ — the coordinates of the node\n\nlabel — an optional label for the node, which you may use any way you wish\n\nThe large list (empty in the example), the popup menu labeled “Add…”, and the two buttons\ntitled “Remove” and “Remove All” are used to place conditions on the node. See Edit\nConditions… command, Conditions menu, for a description of these tools (which work the\nsame in every dialog in which they appear).\n\nIf you click on the disclosure triangle at the lower left corner of the dialog, it toggles between a\nstandard dialog and an Expert Mode dialog shown in figure 4.4.2.\n\n\n                                  72",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0955"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 112,
  "content": "            5.0 The Tree Method of Origami Design\n\n This section describes the mathematical ideas that underly the tree method of origami design —\n and technical origami, or origami sekkei — in particular. The Japanese art of origami, though\ncenturies old, has undergone a renaissance in the last few decades from new advances in origami\ndesign. The simple stylized birds, flowers, and fish of old have been replaced by incredibly\ncomplex replicas of insects, crustacea, mammals, amphibians, dinosaurs, humans, objects, and\njust about everything under the sun. The explosion of subject matter was driven in part by new\ndiscoveries in design techniques. One of the most significant of these discoveries was a series of\nmathematical algorithms for designing origami bases in terms of the number, size, and\narrangement of their points. This document section some of those algorithms.\n\nEven before mathematics came into the picture, the concept of “points” — flaps that become\nappendages of an origami model — and their number, length, and connections have figured\nheavily in the origami designer’s approach to creating new folds. Over the past few years, I and\nseveral folders have been formulating mathematical techniques for designing origami models on\nthe basis of their points. We have discovered several general algorithms for design, algorithms\nthat enable one to compute the crease pattern for a base containing any number of points of\narbitrary complexity. A complete description of such algorithms and all of their nuances would\nfill a book — in fact, I am working on that very task — but the basic technique can be quickly\noutlined and may be of interest to folders interested in exploring new bases and symmetries.\n\nI am going to describe an algorithm using terminology and concepts that I developed in my own\nresearch. However, I should acknowledge major contributions from other mathematical folders.\nIn any scientific endeavor, the rate of progress is vastly accelerated through the interaction and\ncross-fertilization of ideas among several investigators and those who have contributed to this\ntheory are many: they include Jun Maekawa, Fumiaki Kawahata, Toshiyuki Meguro, Alex\nBateman and Tom Hull, with additional insights from John Montroll, Peter Engel, Issei Yoshino,\nBrian Ewins, Jeremy Shafer, and Martin and Erik Demaine. My thanks and acknowledgment to\nthese, as well as the many more folders whose works formed both inspiration and guide for my\nwork over the years.\n\nAnd now, on with design.\n\nThe name “technical folding” has come to be applied to origami designs that, whether\nintentionally or not, display a strong geometrical elegance and sophistication. The target concept\nfor much of technical folding is the base. A base is simply a geometric shape that resembles the\nsubject to be folded — usually, a shape having the same number and length of flaps as the\nsubject has appendages. For example, a base for a bird might have four flaps, corresponding to a\nhead, tail, and two wings. A slightly more complicated subject such as a lizard would require a\nbase with six flaps, corresponding to the head, four legs, and a tail. And an extremely\ncomplicated subject such as a flying horned beetle might have six legs, four wings, three horns,\ntwo antennae and an abdomen, requiring a base with sixteen flaps. You needn’t stop there, either.\nThrow in mouthparts and a separate flap for the thorax, if you like, for a total of nineteen flaps.\nThe number of flaps required in a model depends on the level of anatomical accuracy desired by\nthe designer. Historically, much origami design was performed by trial and error — manipulating\na piece of paper until it began to resemble something recognizable. However, for a complex\nsubject, trial and error is a highly inefficient approach, since one is unlikely to stumble upon a\n\n                                 112",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0956"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 106,
  "content": " This condition is used to force a particular path to be active, i.e., to have its actual length equal to\n its minimum length. This will insure that there is a crease between the two nodes that runs along\n the axis of the model. The fields of this condition are:\n\n — the index of the first node\n\n — the index of the second node\n Path angle fixed\n\n                                       4.5.38\n\nThis condition is used to force a particular path to be both active and to lie at a given angle. It’s\nused to make a crease pattern more symmetric. Its fields are:\n\n— the index of the first node\n\n— the index of the second node\n\n— the angle that the path is forced to lie at\n\nNote: if you have very many path angle fixed or path angle quantized constraints, it is very easy\nto create incompatible constraints. Sometimes incompatible constraints can be relieved by\nperforming a strain optimization; other times you will simply have to remove some conditions.\nPath angle quantized\n\n\n                                       4.5.39\n\nThis condition is used to force a particular path to be active and to lie at one of a group of angles,\nwhich are integer divisions of 180°. It’s used to make a crease pattern more symmetric by\nrequiring that major creases lie at “nice” angles. The fields are:\n\n— the index of the first node\n\n— the index of the second node\n\n— the integer divisor for the angle quantization\n\n— the first angle in the group\n\nBy applying this condition to most or all of the active paths in a model and performing a strain\noptimization (which is usually necessary to satisfy all conditions), you can create a very\nsymmetric crease pattern, which is usually necessary if you want a sequentially foldable design.\n\nThe subsequent commands in the conditions menu apply and give the status of each of the types\nof conditions. These commands may have a mark next to them giving the status of the current\n\n                                 106",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0957"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 27,
  "content": "./origami_dataset_dev/TreeMkr40/page027_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0958"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 72,
  "content": "./origami_dataset_dev/TreeMkr40/page072_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0959"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 105,
  "content": "./origami_dataset_dev/TreeMkr40/page105_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d095a"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 107,
  "content": " selection. Selecting one of the commands toggles on/off the given condition as applied to the\n current selection.\n    Node fixed to positionÉ\n This command applies/removes a “Node fixed to position” condition to the selected node. It is\n only enabled if exactly one node is selected. If the command is checked, there is already a\n condition and selecting this command will remove it. If the command is unchecked, selecting\n this command will put up a dialog shown in figure 4.5.40.\n\n\n                                       4.5.40\n\nThe fields of the dialog are:\n\nFix x position to — on = this node’s x coordinate will be set to a fixed value\n\nFix y position to — on = this node’s y coordinate will be set to a fixed value.\n\nThe command has the following marks and effects:\n\nNo mark: the selected node does not have this condition. Selecting the command applies a\ncondition to the selected node.\n\nCheck mark: the selected node has this condition. Selecting the command removes this type of\nCondtion from the selected node.\n   Node fixed to corner\n This command applies/removes a “Node fixed to corner” condition to the selected node(s). It is\n enabled if at least one node is selected. The command has the following marks and effects:\n\n No mark: none of the selected nodes have this condition. Selecting the command applies a\n condition to each of the selected nodes.\n\n Diamond mark: some of the selected nodes have this condition. Selecting the command applies a\n condition to all of the selected nodes.\n\n Check mark: all of the selected nodes have this condition. Selecting the command removes this\n type of Condtion from each of the selected nodes.\n    Node fixed to edge\n This command applies/removes a “Node fixed to edge” condition to the selected node(s). It is\n enabled if at least one node is selected. The command has the following marks and effects:\n\n\n                                 107",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d095b"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 113,
  "content": " nineteen-pointed base with flaps of the right size in the right places purely by luck. For such\n models, a more directed approach is called for.\n\n For a given number and distribution of flaps, there are always many possible bases that can be\n folded that differ in various ways: the overall size of the base, which flaps have how many\n layers, how the flaps are positioned in the plane of the paper, the stacking order of the layers, and\n so forth. I doubt that there is a universal algorithm that could come up with every possible base\n for a given subject; at any rate, most folders would be satisfied with an algorithm that could at\n least come up with one. It turns out that such an algorithm exists for a particular class of base.\n We will consider bases that have a special property: their flaps and layers can be arranged such\n that (1) one edge of every flap lies in a common plane and (2) when the edges all lie in a plane,\n all of the layers of the base are perpendicular to the plane. I call this type of base a uniaxial base\n (because when the base is flattened, all of the flaps lie along a single common axis). An example\n of a hypothetical uniaxial base for a hypothetical four-legged (and hence six-flapped) creature is\n shown in figure 5.1.\n\n                            Head       Foreleg\n\n                       Foreleg\n\n                                                   Hind leg\n\n                                                     Tail\n                                Hind leg\n\n\nFigure 5.1. Schematic of a uniaxial base for an animal with four legs, a head, body, and tail. It’s\na uniaxial base if it can be manipulated so that all of the flaps lie in a plane and all of the layers\nare perpendicular to the plane. The shadow of the base consists entirely of lines.\nWhile a great many origami bases can be represented as uniaxial bases including the four classic\nbases — the kite, fish, bird, and frog bases — many others cannot. For example, John Montroll’s\nDog Base and its derivatives do not fall into this category. But there are many bases that do, and\nmost importantly from the standpoint of design, for a great many subjects, a uniaxial base is a\nsufficiently good approximation of the subject that you can easily transform it into a very\naccurate and detailed replica of the subject.\n\nWe can represent any uniaxial base by the stick figure formed by the projection of the base into\nthe plane, i.e., the shadow cast by the base if illuminated from above. This stick figure has the\nsame number and length sticks as the base has flaps, and therefore it is a convenient abstraction\nof the base, even as the base is an abstraction of the subject which we are trying to fold. The\nproblem to be solved is: for a given stick figure, can one find a way of folding a square into a\nbase whose projection is that stick figure?\n\nLet’s first define some terms describing this stick figure. The mathematical term for a stick figure\nis a graph. I’ll call the particular stick figure for a uniaxial base the graph of the uniaxial base.\n\n                                 113",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d095c"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 75,
  "content": "./origami_dataset_dev/TreeMkr40/page075_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d095d"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 102,
  "content": "./origami_dataset_dev/TreeMkr40/page102_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d095e"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 73,
  "content": "                                       4.4.2\n\nExpert Mode displays additional noneditable information about the node at the bottom of the\ndialog. You don’t really need to know this information to design an origami base, but you might\nfind it interesting; it tells you a little about how the data structure is put together.\n\n      Edges\n\nIf an edge is double-clicked the Edge Editor is put up as shown in figure 4.4.3.\n\n\n                                       4.4.3\n\n\n                                  73",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d095f"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 67,
  "content": "                 pinned   cond’d    Edge color\n                  edge      edge\n\n                  true     false     light blue\n\n                  true     true     light cyan\n\n                  false    false   medium blue\n\n                  false    true    medium cyan\n\n\n sub   terminal   valid   cond’d   polygon   active     Path color\npath     path     path      path    path     path\n\ntrue                                false                pale red\n\ntrue                                true                 light red\n\nfalse    false                                       medium light red\n\nfalse    true     false                                 bright red\n\nfalse    true     true     false    true                  black\n\nfalse    true     true     false    false    true        dark red\n\nfalse    true     true     false    false    false     medium red\n\nfalse    true     true     true     true                dark green\n\nfalse    true     true     true     false    true      dark orange\n\nfalse    true     true     true     false    false    medium orange\n\n\n                     crease    Crease color\n                      type\n\n                     valley       black\n\n                    mountain   medium gray\n\n                     tristate   light gray\n\n\n                            67",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0960"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 98,
  "content": "                                       4.5.23\n\nEdge 7 has been strained (lengthened) by 44.9%, which now puts edge 7 in the corner of the\npaper. Now select the Build Polys command, Action menu, to construct polygons from the\nactive paths, as shown in figure 4.5.24.\n\n\n                                  98",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0961"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 103,
  "content": "./origami_dataset_dev/TreeMkr40/page103_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0962"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 21,
  "content": "./origami_dataset_dev/TreeMkr40/page021_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0963"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 104,
  "content": "./origami_dataset_dev/TreeMkr40/page104_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0964"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 88,
  "content": "   p — pinned node: node can’t be moved without violating a path constraint\n\n   g — polygon node: node is a vertex of a valid polygon\n\n   c — conditioned node: node has one or more conditions applied to it\n\nShow edges — display the edges of the tree. Edges are shown as thick light blue lines. Pinned\nedges are shown in a lighter blue.\n\nShow edge indices — display the index of each edge at its midpoint\n\nShow edge labels — display any labels defined for edges\n\nShow edge length — display the length of each edge\n\nAlways show edge strain — display the edge strain even if it’s equal to zero\n\nShow edge flags — display single-letter codes for the flags attached to each edge, which are:\n\n   p — pinned edge: edge can’t be lengthed without violating a path constraint\n\n   c — conditioned edge: edge has one or more conditions applied to it\n\nShow terminal paths — display all paths between terminal nodes (nodes with only 1 edge). Paths\nare shown as single-pixel-thick lines between nodes. Terminal paths are shown in red.\n\nShow internal paths — display all paths that connect to at least one internal node. Internal paths\nare shown in pale red.\n\nShow sub paths — display paths between sub nodes. Sub paths are shown in very pale red.\n\nShow invalid paths — display all paths whose actual lengths exceeds their computed minimum\nlength. Invalid paths are shown in dark red.\n\nShow polygon paths — display all paths that are part of the network of active paths and\npolygons. Polygon paths are shown in black.\n\nShow conditioned paths — display paths that have conditions applied. Conditioned paths are\nshown in orange.\n\nShow path indices — display the index of each visible path at its midpoint\n\nShow path length — display the minimum length of each visible path\n\nShow path flags — display single-letter codes for the flags attached to each path, which are:\n\n   t — terminal path: the path runs between two terminal nodes.\n\n   v — valid path: this path’s actual length is greater than or equal to its minimum length\n\n   a — active path: this path’s actual length is exactly equal to its minimum length\n\n                                 88",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0965"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 63,
  "content": " allows all of the edge strains to become variables as well as the node positions, but it seeks the\n minimum amount of distortion (specifically, it minimizes the RMS strain of the tree).\n\n This type of optimization is one of the most difficult from a numerical analysis perspective, as\n there are a great many equality constraints and they are frequently not independent (i.e., you’ll\n find that internally, there are two different constraints that are saying essentially the same thing).\n In this case, the optimizer becomes very sensitive to round-off errors (even in double-precision\n math) and TreeMaker will frequently think it is unable to find a solution.\n\n Such is the case here. Although you will see the nodes move around, you’ll probably be\n presented with the following dialog:\n\n\n                                      3.5.8\n\n In this case, TreeMaker actually did find a solution. So click on the “Continue” button.\n\nYou’ll see that the pattern of nodes\nshown in figure 3.5.9 is very similar to\nwhat it was before, but now the edges are                 4\nslightly strained. All of the paths we put\nconditions on are now running at                 3      3          3\nmultiples of 22.5°.                                      1.000+1.4%\n                                        7      6        3        7          8\n                                                1.000+1.4% 3      1.000+1.4%\n                                                       2\n                                              3          1.000-37.8% 3\n                                                          2\n                                        3               2                   3\n                                                   2            2\n                                                        1\n                                        2                1.000+1.4%         2\n                                               4          1      5\n                                                1.000+1.4%        1.000+1.4%\n                                                 2                 2\n\n                                        5                                   6\n\n                                                       3.5.9\n\n\n                                  63",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0966"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 77,
  "content": "                                       4.4.8\n\n      Vertices\n\nIf you double-click on a vertex, the Vertex Editor is put up, as shown in figure 4.4.9.\n\n\n                                       4.4.9\n\nThere are no editable fields of a vertex and you can’t apply conditions to one, so the only thing\nthe Vertex Editor tells you ins the index of the vertex.\n\nHowever, the disclosure triangle toggles to Expert Mode, which shows some of the structural\ninformation of the vertex, as shown in figure 4.4.10.\n\n\n                                       4.4.10\n\n      Creases\n\nIf you double-click on a crease, the Crease Editor is put up as shown in figure 4.4.11.\n\n\n                                  77",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0967"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 73,
  "content": "./origami_dataset_dev/TreeMkr40/page073_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0968"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 117,
  "content": " Although the proof of the tree theorem is beyond the scope of this article1, we won’t let that stop\n us from using it. The tree theorem tells us that if we can find a distribution of nodes on a square\n for which the distance between any two nodes is greater than or equal to the distance between the\n nodes on the tree, then a crease pattern exists that can transform that node pattern into a base. For\n a given tree, there are often several possible node patterns that satisfy the tree theorem, each of\n which yields a different base. For our six-pointed base, a little doodling with pen and paper will\n reveal that the pattern of nodes shown in figure 5.6 fits inside of a square of side\n 2√((121+8√179)/65) ≈ 3.7460.\n\n                         Foreleg                 Foreleg\n\n                                 2    Head    2\n\n\n                                 3            3\n\n\n                     Hind leg                       Hind leg\n                                 2            2\n\n                                      Tail\n\nFigure 5.6. Node pattern that satisfies the tree theorem for the six-legged tree.\nThe tree theorem is an existence theorem; it says that a crease pattern exists but it doesn’t tell us\nwhat this supposed crease pattern actually is. However, it does provide a strong clue. The tree\n theorem says that the points on the square that correspond to terminal nodes of the tree become\n the tips of the flaps on the folded base. Are there any other parts of the square that we can\n identify on the base?\n\n Consider the inequality in the tree theorem. Two points corresponding to terminal nodes must be\n separated on the square by a distance greater than or equal to the distance between them on the\n tree. In the special case where equality holds, we can uniquely identify the line between the two\n points. We will call a line on the square that runs between any two terminal nodes a path. Every\n path has a minimum length, which is the sum of the edges of the tree between the terminal\n nodes that define the path. (In the symbolism of the tree theorem, lij  is the minimum length of\n path ij.) The actual length of a path is given by the distance between the terminal nodes as\n measured upon the square (|ui–uj| in the tree theorem). Any path for which its actual length is\nequal to its minimum length is called an active path.\n\nOn the base, the only route between two flap tips that is equal to the distance between the\nterminal nodes lies in the plane of the projection. Thus, any active path between two terminal\n\n\n1For a proof of the tree theorem, see “A Computational Algorithms for Origami Design,” 12th Annual Symposium\non Computational Geometry, May 22–26, 1996, Philadelphia, PA.\n\n                                 117",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0969"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 103,
  "content": "                                       4.5.28\n\nMost of the Condition Editor is filled with a scrolling list of all conditions. The “Add…” popup\nmenu lets you add conditions to the origami design. When you first create a condition, it has\nblank fields, which you must fill in with the indices of affected parts and any settings that apply\nto those parts.\n\nIf you click on or in a condition, it will be highlighted (the third from the bottom is currently\nhighlighted). If you then click on the “Remove” button, the highlighted condition will be deleted.\n\nIf you click on the “Remove All” button, all conditions will be deleted.\n\nConditions can be applied to nodes, edges, and paths. The Node Editor, Edge Editor, and Path\nEditor each contain a reduced version of the Condition Editor that will display only the\nconditions that apply to the particular node, edge, or path being edited.\n\nThe types of conditions that can be applied and their fields are the following:\nNode fixed to position\n\n\n                                       4.5.29\n\nThis condition fixes one or both coordinates of a node to a set location. The fields are:\n\n — the index of the node\n\n\n                                 103",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d096a"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 45,
  "content": "./origami_dataset_dev/TreeMkr40/page045_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d096b"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 10,
  "content": "./origami_dataset_dev/TreeMkr40/page010_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d096c"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 105,
  "content": "./origami_dataset_dev/TreeMkr40/page105_image004.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d096d"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 102,
  "content": "                                       4.5.27\n\nThe origami design is complete!\n   Remove Creases                      1R\n Removes all creases from the image.\n    Build Polys & Creases              16\n Builds both polygons and creases in a single step.\n\n    Conditions\n The Conditions menu contains commands for applying or removing conditions from the origami\n design. A condition is a way of imposing additional requirements on the crease pattern beyond\n the bare minimum required for foldability. For example, you might want to require that the\n crease pattern be bilaterally symmetric (to match the subject), that certain flaps be corner or edge\n flaps (to minimize the total thickness of the flap); that certain flaps be the same length no matter\n how the tree is distorted due to strain; or that certain paths fall at particularly symmetric angles.\n The requirements are met by creating objects called “conditions” and linking them to the tree.\n    Edit ConditionsÉ                   1=\n The Edit Conditions… command puts up a dialog that displays all conditions and their settings,\nas shown in figure 4.5.28.\n\n                                 102",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d096e"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 116,
  "content": "                            Foreleg\n\n\n                                          Tail\n\n\nFigure 5.5. The trail of the ant. The path of the ant might wander around on the square once\nyou’ve unfolded it, but there is no way that the path can be shorter on the square than the path\nwas on the base. Thus, the distance between two nodes on the square must be at least as large as\nthe distance between the two nodes measured along the edges of the tree.\nThis illustrates an extremely important property of any mapping from a square to a base: the\ndistance between any two points on the square must be greater than or equal to the distance\nbetween the two corresponding points on the base. And in particular, this relationship must hold\nfor any two points on the base that correspond to nodes on the tree. Now while this condition\nmust hold for any pair of points on the base, it turns out that if it holds for any pair of terminal\nnodes, it will hold for every pair of points on the base. That is, if you identify a set of points on\n the square corresponding to terminal nodes of a tree and the points satisfy the condition that the\n distance between any pair of points on the square is greater than or equal to the distance between\n the points as measured on the graph, then it is guaranteed that a crease pattern exists to\n transform the square into a base whose projection is the tree.\n\n This is a remarkable property. It tells us that no matter how complex a base is sought, no matter\n how many points it may have and how they are connected to one another, we can always find a\n crease pattern that transforms the square (or any other shape paper, for that matter) into the base.\n Putting this into mathematical language, we arrive at the fundamental theorem of the tree method\n of design (which I call the “tree theorem” for short):\n\n    Define a simply connected tree P with terminal nodes Pi, i=1, 2,…N. Define by lij  the\n   distance between nodes Pi and Pj as measured along the edges of the tree; that is, lij  is the\n   sum of the lengths of all the edges between nodes Pi and Pj. Define a set of points ui in\n                   ∈        ∈\n   the unit square ui,x [0,1], ui,y [0,1]. Then a crease pattern exists that transforms the unit\n    square into a uniaxial base whose projection is P if and only if |u i–uj|≥ lij  for every i,j.\n   Furthermore, in such a base, Pi is the projection of ui for all i.\n\n\n                                 116",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d096f"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 17,
  "content": "./origami_dataset_dev/TreeMkr40/page017_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0970"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 76,
  "content": "                                       4.4.6\n\n      Polys\n\nIf you double-click on a poly, the Poly Editor is put up, as shown in figure 4.4.7.\n\n\n                                       4.4.7\n\nThere are no editable fields of a poly and you can’t apply conditions to one, so the only thing the\nPoly Editor really tells you is the index of the poly.\n\nHowever, the disclosure triangle toggles to Expert Mode, which gives some of the structural\ninformation of the poly, as shown in figure 4.4.8. A poly is, internally, a fairly complex beastie.\n\n\n                                  76",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0971"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 62,
  "content": "                                     3.5.6\n\nNotice that the node already has three conditions on it — conditions on the paths that emanate\nfrom it. From the popup menu, select a “Node fixed to position” condition, and turn on the\nconditions for both the x and y coordinates, fixing both to the value 0.0000.\n\n\n                                     3.5.7\n\nThen click on OK.\n\nRepeat on node 6, this time fixing it to x=1.0000, y=0.0000.\n\nNow Select All (from the Edit menu) and choose the command Optimize Strain from the\nAction menu.\n\nThis is a different optimizer than we chose before. The reason is that once we start putting a lot\nof conditions on the crease pattern (and particularly path conditions), it becomes impossible to\nsatisfy all the conditions without distorting the original tree. The Optimize Strain command\n\n\n                                 62",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0972"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 89,
  "content": "    b — border path: this path lies on the border (the convex hull) of the set of nodes\n\n    g — polygon path: this path should be part of a poly\n\n    c — conditioned path: this path has one or more conditions applied to it\n\n Show polygons — display major polygons. Polygons are displayed by thick gray borders inlining\n each polygon.\n\n Show sub polygons — display sub polygons (reduced polygons)\n\n Show vertices — display all vertices as black dots.\n\n Show vertex indices — display the index of each vertex next to it\n\n Show major creases — display mountain and valley fold creases. Valley folds are shown in\n black; mountain folds are shown in dark gray.\n\n Show minor creases — display tri-state creases. Tristate creases are shown in light gray.\n\n Show crease indices — display the index of each crease\n    Fit to Screen                       1F\n This menu command changes the size of the paper and the window to fill up the main screen. On\n a 17” monitor, you will get about a 7.25” square (which, incidentally, fits neatly on an 8.5×11”\n sheet of paper when it is printed).\n    Set Paper SizeÉ                    1Y\n puts up the dialog shown in figure 4.5.11 to change the paper size, which is given in inches. The\n screen image is exactly the same size as the printed image.\n\n\n                                       4.5.11\n\n    Action Menu\n The commands in the Action menu perform the calculations that determine the node positions\nand the locations of creases. Normally you will define a stick figure, set up conditions on the\nnodes, edges, or paths, and then alternate between refining the condition set and selecting\ncommands from the Action menu.\n   Scale Everything                    11\n Adjust the positions of all nodes and the overall scale of the model to find the position of the\n nodes that satisfies all conditions and that gives the largest possible base. The image is updated\n periodically as the calculations are performed so you can see progress. Type Command-Period to\n\n                                  89",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0973"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 104,
  "content": "./origami_dataset_dev/TreeMkr40/page104_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0974"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 103,
  "content": "./origami_dataset_dev/TreeMkr40/page103_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0975"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 74,
  "content": "./origami_dataset_dev/TreeMkr40/page074_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0976"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 21,
  "content": "./origami_dataset_dev/TreeMkr40/page021_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0977"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 104,
  "content": "./origami_dataset_dev/TreeMkr40/page104_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0978"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 74,
  "content": " Like the Node Editor, the Edge Editor displays the index of the edge as well as the indices of the\n nodes at each end of the edge. The fields of the Edge Editor are:\n\n label — an optional label for the edge, which you can use any way you want\n\n length — the desired length of the edge, relative to all the other edges\n\n strain — the current strain of the edge, i.e., deviation from its desired length\n\n stiffness — the stiffness of the edge, i.e., how resistant it is to being strained\n\n There is also a set of controls for adding conditions to the edge. Again, look at the description of\n the Edit Conditions… command, Conditions menu, for a description of these controls.\n\nAt the lower left corner, clicking on the disclosure triangle toggles between normal and Expert\nMode as shown in figure 4.4.4.\n\n\n                                       4.4.4\n\nAs with nodes, the information shown in Expert Mode isn’t really necessary, but you might find\nit interesting.\n\n      Paths\n\nIf you double-click on a path, the Path Editor is put up as shown in figure 4.4.5.\n\n   •Note: most paths are not visible, but you can call up the editor for any path (or any other\n   part) using the Select Part… command, Edit menu.\n\n\n                                  74",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0979"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 60,
  "content": "If you Build Polygons and Creases you\nwill get the crease pattern shown in\nfigure 3.5.3.\n\nThe creases in this design don’t precisely\nfall on standard angles. We’ll modify it\nso that they do. We do this by putting a\n“Path angle quantized” condition on all\nof the paths that correspond to major\ncreases.\n\nPut the model back into Default View\nand select the Kill Polygons command,\nActions menu, to put in back into the\nconfiguration shown in figure N. In this\ncase, only the polygon paths are shown.\nSelect the Select all polygon paths\ncommand,  Edit menu. Then select Path\nangle quantized… from the Conditions\nmenu. This puts up the dialog shown in\nfigure 3.5.4.                                          3.5.3\n\n\n                                      3.5.4\n\n This will place a condition that forces each of the selected paths to be active (so it will be a major\n crease) and to lie at an angle that is a multiple of 180°/N, where N is an integer. Common values\n of N and the corresponding angle are:\n\n\n                                  60",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d097a"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 48,
  "content": "With only 3 or 4 flaps in the tree, they\nwill almost inevitably be edge flaps.\nHowever, even with as few as 5 flaps,           3\n                                                                       2\nyou will find that one or more flap will\ntend to move into the middle. For\nexample, suppose we want a base with                2           1\nfive equal-length flaps. Construct a tree            1.000      1.000\nas shown in figure 3.3.1.\n                                                         1\nDepending on the initial configuration of        3\n                                          4       1.000\nnodes, there are two optimum                                    5\narrangments of node circles, shown in                            1.000\nfigure 3.3.1. If you start with the initial             4               6\nconfiguration above, then you will                       1.000\nprobably wind up with the solution\nshown in figure 3.3.2, which has a scale\nof 0.323.                                               5\n\n\n                                                       3.3.1\n\n\n                                                    3           1           2\n\n\n                                                      2           1\n                                              1        1.000      1.000\n                                                                            1\n\n                                                         1\n                                                3\n                                        4       1.000             5\n                                                                  1.000\n                                                                            6\n                                                        4\n                                                1        1.000\n                                                                  1\n\n\n                                                        5\n\n                                                       3.3.2\n\n\n                                  48",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d097b"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 73,
  "content": "./origami_dataset_dev/TreeMkr40/page073_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d097c"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 100,
  "content": "                                       4.5.25\n\nNow select Build Creases, Action menu, to construct the crease pattern, as shown in figure\n4.5.26.\n\n\n                                 100",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d097d"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 114,
  "content": " Each line segment in the graph is called an edge of the graph; each endpoint of a line segment (or\npoint where two segments come together) is called a node. Each flap of the base corresponds to a\ndistinct edge of the graph, and since each flap has a specified length, each edge of the graph has a\nlength as well, which is the length of its associated flap. Thus, the planar graph for the six-legged\nanimal base shown in figure 5.2 has eight nodes and seven edges. In figure 2, I have assigned a\nlength of 1 to each edge of the graph, which implies that each segment in the base has the same\nlength. One can, of course, assign any desired combination of lengths — if you wanted an extra-\nlong tail, you could give it a length of 2 or 3 — but for simplicity, we’ll make all of the edges the\nsame in this example.\n\n                              Foreleg        Hind leg\n\n                                  1          1\n\n                               111\n                       Head                           Tail\n\n                                  1          1\n\n                              Foreleg        Hind leg\n\nFigure 5.2. Planar graph for the six-legged base. Each edge of the graph has a length of 1 unit in\nthis example.\nWe will also restrict ourselves to bases that don’t contain any loops of paper, which correspond\nto planar graphs that don’t have any cycles in them. If a base has a closed loop, that implies it has\na hole in it somewhere, which would imply cutting — a no-no, in origami design. (Of course, we\ncan always simulate a loop by joining two flaps together and hiding the joint.) A graph with no\ncycles is called a tree graph or just tree. It’s easy to see that for any tree , the number of nodes is\nalways exactly one more than the number of edges. Thus, we will be searching for bases whose\nprojections are trees; for this reason, I call this design approach the tree method of design.\n\nWe will also divide the nodes into two types: terminal nodes are nodes that come at the end of a\nsingle edge. Terminal nodes correspond to the tips of legs, wings, and other appendages. Nodes\nformed where two or more edges come together are called internal nodes.\n\n                   Terminal nodes\n\n\n                             Internal nodes             Edges\n\n\n                                 114",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d097e"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 128,
  "content": "                                       ABF\n\n                       B\n\n         A\n                                                                  F\n               1       1               F\n\n                   F\n                           1\n             1                   C                                      C\n      E\n                                       E\n                     1\n                                                                 F\n                                               F\n                   D\n\n                                                        D\n\n Figure 5.19. (Left) Tree for a base with 5 equal flaps. (Right) Pattern of terminal nodes and\n active paths corresponding to this tree.\n Now suppose we wanted to add one more point to the star. That would entail adding one more\n terminal node — node G — to the active polygon network. On the tree graph, the new node\n would be connected to node F as shown in figure 5.20. (If we connected it to one of the other\n nodes that wouldn’t add another point; it would just lengthen an existing point.) Suppose the\n point has a length l. Then since all the other edges are 1 unit long, the tree theorem tells us that\nthe new terminal node must be separated from each of the other terminal nodes by a distance\n(1+l).\n\nWe can visualize these constraints by imagining that each terminal node is surrounded by a circle\nwhose radius is equal to the length of the edge attached to that node in the tree. That is, nodes A–\nE are surrounded by circles of unit radius, while node G is surrounded by a circle of radius l. The\nrequirement that G be separated from the other nodes by at least a distance (1+l) is equivalent to\nthe requirement that circle G not overlap with any other circle.\n\n\n                                 128",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d097f"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 99,
  "content": "./origami_dataset_dev/TreeMkr40/page099_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0980"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 66,
  "content": "./origami_dataset_dev/TreeMkr40/page066_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0981"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 10,
  "content": "./origami_dataset_dev/TreeMkr40/page010_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0982"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 129,
  "content": "                                       ABF\n\n                       B\n\n         A\n                                                                  F\n               1       1               F\n\n                   F                                   G\n                           1\n             1                   C                                      C\n      E                l\n                                       E\n                          G\n                     1\n                                                                 F\n                                               F\n                   D\n\n                                                        D\n\n Figure 5.20. (Left) Tree with a new terminal node. (Right) One possible position for node G that\n satisfies the tree theorem.\n Figure 5.20 shows the circles around each node. As long as the circles do not overlap, the tree\n theorem is satisfied. As l, the length of the new edge, is increased, the size of the circle around\n node G must be increased as well. Eventually, circle G will swell until it is touching at least three\n other circles, and at that point, shown in figure 5.21, the new point is as large as it can possibly\n be.\n\n                      ABF\n\n\n                                                  F\n                                          F\n                      F\n\n                                      GF\n                                  F\n                                                        C\n                      EF\n\n                                                 F\n                               F\n\n                                        D\n\nFigure 5.21. Terminal node pattern with the largest possible circle around node G.\nWherever circle G touches another circle, the two terminal nodes are spaced at their minimum\n separation. Consequently, the paths between the nodes of touching circles are active paths.\n\n\n                                 129",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0983"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 115,
  "content": "Figure 5.3. Parts of a tree graph. Line segments are called edges of the graph; points where lines\nend or come together are nodes. Terminal nodes are nodes with only one edge; internal nodes\nhave two or more edges.\nSuppose we have a base that has been folded from a square and we construct its tree. If we\nunfold the base, we get a square with a crease pattern that uniquely defines the base. The folding\nsequence that transforms the square into the base can be thought of as a mapping between points\non the square and points on the tree.\n\nIf you think of the tree as the shadow of the base, you can see from figure 1 that wherever you\nhave vertical layers of paper, there are many points on the base that map to the same point on the\ntree. However, at the terminal nodes of the tree, there is exactly one point on the square that\nmaps to the node. Thus, we can uniquely identify the points on the square that become the tips of\nthe flaps of the base.\n\nNow consider the following thought experiment: suppose an ant were sitting at the tip of one of\nthe legs of the base and wished to travel to another part of the base — say, the tail — without\nleaving the paper. It would have to walk down the leg to the body, down the body, and back out\nthe tail. The distance it traveled would be (length of the leg) + (length of the body) + (length of\nthe tail).\n\n\nFigure 5.4. An ant wishes to go from a foreleg to the tail along the base. It can take several\ndifferent paths, but the most direct path is the path that lies in the plane of projection.\nNow, let’s think about what the path of the ant would look like on the unfolded square (you can\nimagine dipping the ant into ink so that it left a trail soaking through the paper as it walked). On\nthe square, the path might meander around a bit or it might go directly from one point to the\nother, depending on the course of the ant. One thing is certain, however: the distance traveled on\nthe unfolded square must be at least as long as the minimum distance traveled along the base.\n\n\n                                115",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0984"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 101,
  "content": "                                       4.5.26\n\nThe origami design is complete. This view is very busy because it shows all of the sub-structure\nof the design. Select Creases Only command, View menu, to display only the crease pattern,\nshown in figure 4.5.27.\n\n\n                                 101",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0985"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 49,
  "content": "If you allow one of the nodes to start in\nthe middle of the square, you will      4                                   2\nprobably arrive at the solution in figure\n3.3.3, which is significantly larger with a\nscale of 0.353.\n                                                 1                 1\nIn general, for 5 or more flaps, the most\n                                                 3                 1\nefficient crease pattern will have at least       1.000             1.000\none middle flap. In this example, we\nwere able to force all of the flaps to be                 3\nedge flaps simply by starting from an\n                                                          2\ninitial configuration in which all of the                  1.000\nterminal nodes were on the edges. This is                   1\nnot always possible, however. For                1                 1\nexample, if you try the same problem for\nseven equal-length flaps, there is no            4                 5\ninitial configuration that will avoid             1.000             1.000\nputting a circle into the middle of the\n                                        5                                   6\npaper, creating a middle flap. A typical\ncircle pattern (with a scale of 0.268) is\nshown in figure 3.3.4.                                 3.3.3\n\n\n                                                                  3\n\n                                        4\n\n                                                             1         1\n\n                                                              2\n                                                 3             1.000\n                                                  1.000\n                                                        2         1         8\n\n                                                          1        7\n                                                1\n                                                          1.000     1.000\n                                                            1\n                                                 4\n                                        5               1                   1\n                                                  1.000\n                                                          5        6\n                                                1         1.000     1.000\n\n                                                        6         1         7\n\n                                                       3.3.4\n\n\n                                  49",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0986"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 61,
  "content": "                                 N     angle\n\n                                 445°\n\n                                 630°\n\n                                 8     22.5°\n\n                                 12    15°\n\n                                 16    11.25°\n\n The most common choice is N=8, which corresponds to the angles you find in a Bird Base, but\n there are many other useful possibilities to be found in the other angles, and I have found\n interesting structures for N=10 as well.\n\n We’ll work with N=8 for now. Type in 8 and click OK.\n\nNote that the node circles have turned\ngreen, indicating that there’s a condition                4\nimposed on the nodes (actually, on the           3                 3\npaths connected to the nodes). However,                 3\nboth ordinary polygon paths and polygon 7                1.000              8\npaths with conditions on them are              6                 7\n                                                1.000             1.000\ndisplayed in black.                                     3\n                                              3                       3\nIn principle, you should be able to re-                2\noptimize; however, due to a quirk in                    1.000\nTreeMaker’s nolinear optimizer,                         2\nTreeMaker has a tendency to settle onto a           2           2\nspurious solution in which the entire                   1\ncrease pattern has shrunk into oblivion.                 1.000\nTo prevent this tendency, we’ll need to        4                 5\n                                                1.000     1       1.000\nstitch some of the nodes to the edges of\nthe square.                                      2                 2\n                                        5                                   6\nThe two easiest to do this to are to stick\nnodes 5 and 6 to their present locations.\nDouble-click on node 5 to bring up the                 3.5.5\nNode Editor.\n\n\n                                  61",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0987"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 75,
  "content": "                                       4.4.5\n\nThere are no editable fields of a path, other than the controls for adding conditions. The\nuneditable fields of the Path Editor do tell you some useful information; they are:\n\nmin length — the minimum length (in unscaled tree units) this path is allowed\n\ncurrent length — the current length of the path (in unscaled tree units)\n\ncurrent angle — the current angle of the path with respect to the x-axis.\n\nThere is also a set of controls for adding conditions to the path.\n\nAt the lower left corner, clicking on the disclosure triangle toggles between normal and expert\nmode as shown in figure 4.4.6.\n\n\n                                  75",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0988"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 94,
  "content": "./origami_dataset_dev/TreeMkr40/page094_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0989"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 93,
  "content": "./origami_dataset_dev/TreeMkr40/page093_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d098a"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 12,
  "content": "Let this calculation run until the cursor\nturns back into an arrow and things stop\nmoving around. You should see a pattern\nsomething like figure 2.1.7. (Your\nexample might look like figure 2.1.7\nturned upside-down; if it does, don’t\nworry about it.)\n\nThere is a lot of information in this\nfigure, so let me spend a few minutes\ndescribing what we’re seeing. Note that\nthe circles surrounding each terminal\nnode have expanded and moved so that\nseveral are touching. Several black lines\nhave appeared that connect terminal\nnodes and they have dots and numbers\nalong them. And the stick figure has been\ndistorted (because the terminal nodes\nhave moved) and has changed to a\nslightly lighter blue. Also, the number\nlabeled “Scale” at the top of the window\nhas changed from 0.10000 to 0.26695.                   2.1.7\nHere’s what this all means. The circles\nrepresent the paper used by flaps that correspond to terminal nodes. The black lines between\nthem are valley folds (most of the time) in the base. They are called active paths (for reasons that\nwill come later). The dots and numbers along the active paths are the locations of the internal\nnodes (non-terminal nodes) along the active paths.\n\nThe stick figure has been distorted, which is because each of the terminal nodes of the stick\nfigure is now located in its actual location on the square. That is, when you fold the base, the tip\nof the head flap will come from the point on the paper where the terminal node that corresponds\nto the head is located.\n\nWhat Optimize Scale actually does is to move around the terminal nodes to try to find an\narrangement that gives the largest possible base, subject to the proviso that all of the edges\nmaintain the same lengths relative to each other. Although all of the edges are enlarged by the\nsame amount, at the optimum configuration, at least some of the edges cannot be enlarged any\nmore. Such edges are called “pinned” edges are are indicated by turning a lighter blue. In this\noptimization, all of the edges have turned light blue, which is an indication that no edge can be\nmade any longer. In general, after you have run the Optimize Scale command, all or nearly all of\nthe edges will be in this state.\n\nMost of these lines, numbers, and circles are here for illustrative purposes and you will learn later\nhow to turn on and off their display. The black lines, however, are actual creases in the base; they\nare (usually) valley folds. Bases are built in two stages. First, you Optimize Scale, which\n identifies the valley folds of the crease pattern that form a network of polygons. This defines the\n overall structure of the base. Then, you fill in the polygons with the remaining creases and you\n have several options at this point.\n\n\n                                  12",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d098b"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 6,
  "content": "    1.2  Installing TreeMaker\n\n To install TreeMaker, drag the “TreeMaker ƒ” folder onto your hard disk. TreeMaker is a fat\n binary Macintosh application and will run native on both 68K and Power Macintosh. (I have no\n plans to port TreeMaker to other platforms. I am told there is a Mac emulator for Linux,\nDOS/Win95, and OS/2 called Executor. There is a sample version of it on http://www.ardi.com.)\n\nMuch of the information in TreeMaker is color-coded; although you can run it on a gray-scale\nsystem, it will be easier if you have a color monitor with at least 256 colors.\n\nAlthough you can jump right into TreeMaker if you like to experiment (or you’re the type who\nnever reads manuals), I recommend that you work your way through the following tutorials to\nfamiliarize yourself with the capabilities of TreeMaker. A basic familiarity with Macintosh\napplications is assumed throughout.\n\n   1.3   Conventions\n\nThroughout this manual, menu titles and menu commands will be emboldened.\n\n\n                                   6",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d098c"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 166,
  "content": "                          Part               Path\n                          VertexOwner\n                                     7.14\n\nThe references contained by a Path are summarized below. Names in bold refer to inherited\nmember variables.\nObject   References          What\n\nPath     mOwnedVertices      All vertices that occur along this path\n\n         mNodes              Ordered list of nodes from one end of path to the other\n\n         mEdges              Ordered list of edges from one end of path to the other\n\n         mFwdPoly            The polygon that this path belongs to, enumerated in\n                             the forward direction\n\n         mBkdPoly            The polygon that this path belongs to, enumerated in\n                             the backward direction\n\n         mPathOwner          poly or tree that owns this path\nPoly\n\nA Poly is a polygon of the crease pattern. The paper is divided into one or more polygons; each\npolygon may be further subdivided into one or more reduced polygons. Each polygon owns\nreduced nodes, reduced paths, and creases.\n\n                          Part                Poly\n                          PolyOwner\n                          CreaseOwner\n                                     7.15\n\nThe references contained by a Poly are summarized below. Names in bold refer to inherited\nmember variables.\nObject   References          What\n\nPoly     mOwnedNodes         All nodes owned by this poly; this is the distinct\n                             subset of mInsetNodes; i.e., every node in\n                             mInsetNodes appears exactly once in this list.\n\n\n                                166",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d098d"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 172,
  "content": " • Rewrote TreeFile class to buffer file I/O, gaining over an order of magnitude in speed during\n Save/Open.\n\n • Converted mathematical classes (Minimax, ConstrainedMinimax, etc.) to templates\n\n • About… box is faster.\n(3.7) 12-3-96\n\n• Fixed a bug that affected the display of polygons in the main window and screwed up printing\non certain types of printers; also added a background to the main window.\n\n• Added a background to valid polygons.\n\n• Added crop marks in multipage printouts so you can print out large patterns on multiple sheets\nand can accurately cut and paste them together\n\n• Removed the unnecessary border around the square in the printout, which increases the size of\nthe largest square you can fit onto a single page to 7.5 in.\n\n• UI is now updated to PP Constructor 2.3 format, including use of new LPrintout.\n\n• Added a modest speed improvement to the “Fracture Poly” algorithm by eliminating some\nunnecessary calculations\n\n• Added new Path::mIsValidPath member variable, which is used in the improved polygon-\nfinding algorithm. Also added the corresponding display in the Path Editor.\n\n• Big improvements in the polygon-finding algorithm; border paths don’t have to be active to\nform polygons. Non-optimized but valid node arrangements will now form crease patterns.\n\n• Improved the algorithm that identifies pinned nodes. Nodes are now pinned only by active\npaths and the edges of the paper.\n\n• Added offscreen drawing, which improves the look and feel.\n\n• Tweaked the color scheme slightly for better visibility and contrast.\n\n• Added a polygon editor. There’s nothing to change, but it does let you examine some of the\ninternal characteristics of polygons.\n(4.0) 4-1-98 released\n\n• Complete overhaul of software model. Standard objects — Node, Edge, Path, Poly, Tree —\nhave many new fields. Phased out the Fold object; introduced the Vertex, Crease, and Condition\nobjects.\n\n• All objects are now descended from Part and have an index.\n\n• Polys are now hierarchical. Objects can own one another.\n\n\n                                 172",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d098e"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 86,
  "content": "./origami_dataset_dev/TreeMkr40/page086_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d098f"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 81,
  "content": "./origami_dataset_dev/TreeMkr40/page081_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0990"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 173,
  "content": "• Initial suite of Conditions includes 10 different types.\n\n• Introduced strain into edges\n\n• Replaced ConstrainedMinimax<> optimizers with optimizers based on CFSQP 2.5. Created\nsupporting classes for same.\n\n• Introduced ToggleSizeDialog so that part flags are normally concealed.\n\n• Replaced all View objects with Grayscale classes.\n\n• Introduced strain minimization. Rewrote EdgeOptimizer to utilize strain as well.\n\n• Polys are no longer automatically built, but must be explicitly called.\n\n• Introduced TreeCleaner class to insure automatic cleanup after editing.\n\n• Added Condition menu to hold related commands.\n\n• Rearranged command-key equivalents in menus.\n\n• Introduced new file structure for future compatibility.\n\n   8.3 Sources\n\nFor comments, suggestions, attaboys and whaps, please write to me at:\n\nRobert J. Lang\n7580 Olive Drive\nPleasanton, CA 94588\nrjlang@aol.com\n\nFor more information on CFSQP, check out the CFSQP web site at:\n\nhttp://www.isr.umd.edu/Labs/CACSE/FSQP/fsqp.html\n\n\n                                173",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0991"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 167,
  "content": "         mOwnedPaths         All paths owned by this poly, which are one of the\n                             following:\n\n                             (1) paths that connect two owned nodes, i.e., ring or\n                             cross paths or the ridge path\n\n                             (2) paths from the outer poly to owned nodes, i.e.,\n                             spoke paths\n\n         mOwnedPolys         All subpolys of this poly\n\n         mOwnedCreases       All creases that connect the edges of this poly to the\n                             edges of its subpolys\n\n         mRingNodes          The nodes that form the vertices of this polygon\n\n         mRingPaths          The paths that form the edges of this polygon, i.e., an\n                             ordered list of paths that connect consecutive vertex\n                             nodes.\n\n         mCrossPaths         All other paths that connect the mRingNodes, i.e.,\n                             those paths connecting non-consecutive\n                             mRingNodes.\n\n         mInsetNodes         Mapping from ring nodes to inset nodes. Note that\n                             several ring nodes may map to the same inset node,\n                             i.e., this list may have duplicate entries.\n\n         mSpokePaths         Paths that connect ring nodes to inset nodes for this\n                             poly.\n\n         mRidgePath          If the poly has exactly two distinct inset nodes, this is\n                             the path that connects them. We need this path\n                             because some creases may terminate on it.\n\n         mPolyOwner          Poly or tree that owns this poly\nVertex\n\nA Vertex is a point where two or more creases come together. The Vertex inherits only from\nPart.\n\n                            Part         Vertex\n                                     7.16\n\nThe references contained by a Vertex are summarized below. Names in bold refer to inherited\nmember variables.\nObject   References          What\n\n\n                                167",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0992"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 7,
  "content": "                               2.0 Tutorials\n\n    2.1  Tutorial 1: Designing a Base\n\n In this tutorial, you will work through the design of a 4-legged animal with a head and tail and\n will learn the fundamentals of designing a model with TreeMaker. Before starting it, you should\n understand the fundamentals of origami design, such as the difference between corner, edge, and\n middle flaps and be familiar with the basic origami procedures and terms such as valley fold,\n mountain fold, reverse fold, rabbit ear, et cetera.\n\n Begin by double-clicking on the TreeMaker icon to launch it. On startup, TreeMaker creates a\n new, untitled window that displays a square — the default shape of paper. Later, you will see\n how to change the size and shape of the paper (you can even design for a rectangle if you like)\n but for now we’ll use a square.\n\n TreeMaker designs an origami base that can be represented by a stick figure. You specify the\n desired proportions of your base by drawing a stick figure in the square and specifying its\n dimensions. If you have ever used a drawing program on a Macintosh computer, you should have\n no trouble in figuring out how to draw a figure, but if you haven’t, we’ll walk you through it.\n\nClick once in the middle of the square.\nYou will see a dot appear with a number\nabove it. This dot is a node; the number\nis the index of the node, which is used to\nidentify the node later on. Each node is\nassigned a unique index. You can ignore\nthe index for now. If you clicked just\nonce, the node has a highlight around it,\nwhich means that it is selected. If the\nnode has no highlight, it is deselected.\nThe color of the highlight is the color set\non your computer, so it may be different\nfrom the orange color shown in figure\n2.1.1.\n\n\n                                                       2.1.1\n\n\n                                   7",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0993"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 13,
  "content": "We’ll do this second stage now via the\nsimplest route. Go to the Action menu\nand select Build Polygons. You will see\nthe polygons become inlined with a thick\ngray border, as shown in figure 2.1.8.\n\nThen select the command Build Creases.\nYou will see a bunch of new lines\nappear, as shown in figure 2.1.9.\n\nThis is the full crease pattern. The black\nlines are valley folds; the medium gray\nlines are mountain folds. You might\nwonder why I don’t use dashed and chain\nlines for mountain and valley folds, since\nthey are standard origami usage. I’ve\nfound that with the low resolution of\ncomputer screens, in very complex\ncrease patterns, it’s hard to distinguish\nthe two.\n                                                       2.1.8\n\n\n                                                    Figure 2.1.9\n\n\n                                  13",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0994"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 94,
  "content": "./origami_dataset_dev/TreeMkr40/page094_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0995"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 39,
  "content": "If you set up the tree and symmetry line\nand run an optimization, you will arrive                  1\nat the arrangement of nodes shown in\n                                                 2                 2\nfigure 3.2.1.\n                                                          1\n                                        4                                   5\nSelect Build Polygons and Creases                         1.000\n         Action                                  3                 4\nfrom the        menu, followed by                1.000             1.000\nCreases Only from the View menu to                         2\nget the crease pattern shown in figure\n3.2.2.                                    2                              2\n\nNow the problem with this crease pattern                  2\nis that if you fold it up into a side view                 1.000\nbase, there is only one layer on the top,    3                        3\nand if you try to squash-fold the layer to\nspread the arms and legs to either side                    3\nand make a plan view base, you’ll find               5         6\nthat the base of the squash fold reduces             1.000     1.000\n                                                6         3        7\nthe effective length of the legs\nconsiderably.\n                                                       3.2.1\nThat’s because we have overlooked an\nimportant requirement for making a plan\nview base. The way you make a side\nview base into a plan view base is to\nopen the model along the line of\nsymmetry, which means that all of the\npaper along the line of symmetry must lie\nin the same plane to form the “hinge” of\nthe base. Put differently, the line of\nsymmetry of the paper must lie in the\nplane of projection of the base. This\nmeans that to make a plan view base, the\nline of symmetry of the square must\nconsist entirely of active paths (since\nactive paths are the only parts of the base\nthat lie in the plane of projection of the\nbase).\n\nSo we need to get active paths running\nalong the line of symmetry. But since\nactive paths only run between nodes of\nthe tree and there is currently only one\nnode on the line of symmetry (the head),               3.2.2\nwe need to add more nodes to the tree\nsolely for the purpose of creating active paths. These nodes don’t correspond to features of the\nmodel; they’re only there to make the base a plan view base. In particular, we need to add a node\nto the bottom of the square so that there is a terminus on the bottom edge of the square for the\nactive paths that are to run along the line of symmetry.\n\n\n                                  39",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0996"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 5,
  "content": "due in large part to the development of a body of techniques for the design of origami models.\nNotable among these developments is the concept of a generalized base. Growing out of the four\nclassic bases of origami — the bird, fish, frog, and kite bases — the concept of a base forms the\nfoundation for nearly all sophisticated origami designs.\n\nWhat, exactly, do we mean by “a base?” A base is a geometric shape that contains flaps\ncorresponding to all of the appendages of the origami model. For example, the base for a dog\nwould have six flaps, corresponding to four legs, a head, and a tail. The base for a beetle would\nhave nine flaps, corresponding to six legs, two antenna, and an abdomen. As origami subject\nmatter has moved from relatively simple birds to complex insects with legs, wings, horns, and\nantennae, the advances that enabled this transition were the development of geometric and other\nmathematical techniques for the design of the underlying origami base.\n\nFundamentally, TreeMaker is a program for designing origami bases. It calculates the crease\npattern for a base that has any arbitrary number of points of arbitrary size and distribution.\nTreeMaker specializes in bases that can be represented by a tree graph, i.e., an acyclic (no loops)\nline graph (or stick figure) in which each segment is labeled with a specified length. Each\nsegment of the tree corresponds to a flap of the base. TreeMaker will compute a crease pattern\nshowing how to fold a square (or rectangle, for non-purists) into a multi-pointed base whose\ndistribution of flaps match the lengths and connections of the tree.\n\nI have been working on TreeMaker for several years and have posted some earlier versions at\npublic sites on the Internet, updating it as I discover or prove new algorithms and design rules.\nEarlier versions solved the fundamental design problem but only found a few of the creases. The\ncurrent version, version 4.0 finds and fills in all of the creases for the full crease pattern.\n\nTo use TreeMaker, you represent the subject as a tree, or stick figure, that defines all of its\nappendages and their relative lengths. You construct the tree using a simple graphical point-and-\nclick interface to define the segments of the tree and to set the lengths of the flaps. You can also\ninclude constraints that enforce symmetry requirements among the appendages — for example,\nforcing the model to be bilaterally symmetric, or forcing particular points to come from a corner\nor edge of the square (to control thickness or to allow color-changes). After you have defined the\nstick figure, TreeMaker will find an optimally efficient arrangement of points on a square that\ncorrespond to the nodes of the tree and will identify the major creases of the base. The crease\npattern so computed is guaranteed to be foldable into a flat base with the proper proportions and\nis in fact a locally optimum solution for the base. (“Locally optimum” means that for a given\nstarting configuration, you get the largest possible base for a given square, but an entirely\ndifferent starting configuration might give a different base.) You can subsequently add points to\nthe tree to simplify the crease pattern (I’ll explain more about this later); when you have\nsufficiently simplified the pattern, a single command computes the rest of the creases. The full\npattern can be printed (and cut out and folded) at arbitrary size or copied to the Clipboard and\npasted into your favorite drawing program for further editing.\n\nWhile anyone can use TreeMaker to construct a crease pattern for a base, effectively using it\ntakes some practice and understanding of the process of origami design. You should start by\nworking your way through the tutorials, which will give you a feeling for the capabilities (and\nlimitations) of TreeMaker.\n\n\n                                  5",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0997"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 93,
  "content": "./origami_dataset_dev/TreeMkr40/page093_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0998"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 11,
  "content": "At this stage of the game, you can click\non nodes and edges and move them about\nrather easily because none of them are\npinned. Click on nodes 7 and 8 and drag\nthem upward so that they lie above node\n4, as shown in figure 2.1.6.\n\nWhen you have defined the stick figure,\nit’s time to start computing the crease\npattern. Go to the Action menu and\nselect the command, Optimize Scale.\nThis starts the computation of the crease\npattern. You can tell that the calculation\nis running from two things: first, the\npositions of the nodes will change and\nmove around, and second, the cursor\nturns into a piece of paper that is folding\nand unfolding itself. The calculation will\ntake anywhere from several minutes (on\na Mac IIcx) to a few seconds (on a Power\nMac).                                                  2.1.6\n   • Note: if you get tired of waiting\n   during a calculation, you can always interrupt it by pressing Command-Period.\n\n   • Note: most of the actions in TreeMaker are not easily undoable (the Undo command in\n   the Edit menu usually isn’t enabled). It’s a good idea to save figures before you run an\n   optimization, in case you don’t like the results.\n\n\n                                  11",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0999"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 159,
  "content": "                                               TreeEditor\n                                               NodeEditor\n                  PartEditorMixin              EdgeEditor\n                                               PathEditor\n                                               PolyEditor\n LModalDialog     ToggleSizeDialog\n                                               CreaseEditor\n                                               VertexEditor\n                                               ConditionEditor\n                                               TreeViewEditor\n                                               SelectPartEditor\n                                               SizeEditor\n                                               SplitEdgeEditor\n                                               StubEditor\n                                               NodeFixedEditor\n                                               EdgeLengthEditor\n                                               QuantizationEditor\n\n                                               ConditionNodeFixedView\n                                               ConditionNodeOnCornerView\n                     TreeView                  ConditionNodeOnEdgeView\n LView                                         ConditionNodesCollinearView\n                     ConditionEditorView       ConditionNodesPairedView\n                                               ConditionNodeSymmetricView\n                                               ConditionEdgeLengthFixedView\n                     ConditionView             ConditionPathActiveView\n                                               ConditionPathAngleFixedView\n ConditionRegistry                             ConditionPathAngleQuantView\n ConditionTool<P,C>\n\n                                      7.6\n\n             File I/O\n\n File I/O is provided by the TreeFile class, which implements storage in a platform-\nindependent text-based format.\n\n                            LFile       TreeFile\n                                      7.7\n\n             Printouts\n\n The crease pattern can be printed out using the standard Apple print protocols. Printing is\n handled by a slightly modified subclass of the PowerPlant LPrintout object.\n\n                        LPrintout        TreePrintout\n                                      7.8\n\n\n                                 159",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d099a"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 171,
  "content": "• Dialogs no longer alter parts directly; instead, they issue commands to the TreeDoc together\nwith a list of the new settings. (This is in preparation for implementing Undo/Redo by\nbottlenecking all editing actions through the TreeDoc.)\n\n• In dialogs, eliminated unnecessary ctor/dtor method declarations and inlined from-LStream\nctors.\n\n• Private data shown in part editors was made less obtrusive (smaller type)\n\n• All part indices are now fully validated in dialogs\n\n• Validation alerts are provided by a new superclass for all dialogs, class TreeDialog. Text in\nvalidation alerts is now stored in an ‘STR#’ resource (per Mac UI guidelines).\n\n• Fixed bug in which menus were not updated properly after a Tab or Delete keystroke.\n\n• Optimize Selected Nodes… command and StretchyEdgeOptimizer have been modified so that\nthe only nodes and edges considered for scaling are those in the current selection.\n\n• Many new commands and optimizers added to Action Menu:\n\n• Added Split Edge… command which lets you add a node to the middle of an edge\n\n• Added Absorb Node command which lets you remove a redundant node from the middle of an\nedge\n\n• Added Absorb Redundant Nodes command, which removes all redundant nodes\n\n• Added Arrange Internal Nodes command, which cleans up the position of internal nodes.\n\n• Added Fracture Poly… command, which lets you add a node inside a polygon that forms four\nactive paths with the polygon nodes, effectively fracturing the polygon into smaller polys.\n\n• Added Triangulate Tree command, which fractures all polys in the crease pattern down to\norder-3 polys.\n\n• Fixed memory leak in ConstrainedMinimax (constraints were not being destroyed)\n\n• Restored computation of tristate creases for rabbit-ear molecules in Build Creases.\n\n• Updated documentation and added tutorials to describe the new commands.\n\n• “Wait” cursor is now in color.\n\n• Improved About… box.\n(3.6) 03-18-96 released\n\n• Added “Show Creases and Circles” command, which is a useful view for printing.\n\n\n                                171",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d099b"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 165,
  "content": "                            Part              Node\n                            VertexOwner\n                                      7.12\n\n The references contained by a Node are summarized below. Names in bold refer to inherited\n member variables.\n Object   References          What\n\n Node     mOwnedVertices      The vertex associated with this node\n\n          mEdges              Edges connected to this node\n\n          mPaths              Paths that terminate on this node (not paths that\n                              contain this node)\n\n          mNodeOwner          Poly or tree that owns this node\n Edge\n\n A Edge is the data structure that represents an edge of the top-level planar graph. An Edge\n connects two Nodes. Each Edge corresponds to a flap (or segment) of a base.\n\n                               Part         Edge\n                                      7.13\n\n The references contained by an Edge are summarized below. Names in bold refer to inherited\n member variables.\n Object   References          What\n\n Edge     mNodes              2 nodes at each end of this edge\n\n          mEdgeOwner          Tree that owns this edge\n Path\n\n A Path is an object that describes a particular relationship between two Nodes. Terminal paths\n connect terminal nodes. A Path has associated with it a length, which is the minimum length\n between two nodes of the graph.\n\n A “tree path” is a path owned by the Tree. Tree paths have a list of edges and internal nodes\nthat represents the path along the tree from which its length is derived.\n\nA “poly path” is a path owned by a Poly. Poly paths have their lengths computed by reducing\nthe length of the original path from which it is derived.\n\n\n                                 165",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d099c"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 164,
  "content": " The Tree class has two friend classes, TreeCleaner and TreeFile, which are utilized for\nhousecleaning and persistence, respectively.\n\nThe references contained by a Tree are summarized below. Names in bold refer to inherited\nmember variables.\nObject    References          What\n\nTree      mOwnedNodes         All nodes in the primary tree (i.e., not including nodes\n                              in the interior of a poly, which are owned by the poly\n                              itself)\n\n          mOwnedEdges         All edges in the primary tree\n\n          mOwnedPaths         All paths in the primary tree (i.e., not including\n                              reduced paths inside a poly, which are owned by the\n                              poly)\n\n          mOwnedPolys         All top-level polygons (i.e., not including polys that\n                              are subpolys)\n\n          mNodes              All nodes\n\n          mEdges              All edges\n\n          mPaths              All paths\n\n          mPolys              All polygons\n\n          mConditions         All conditions\n\n          mVertices           All vertices\n\n          mCreases            All creases\n Node\n\n A Node is the data structure that represents a node of a planar graph. There are several types of\n planar graph utilized in TreeMaker; there is the top-level graph, which is the target of the\n modeling; but there are also sub-graphs that are used in the process of insetting polygons.\n\n There are two types of Node. A “tree node” is a node that is part of the tree and is owned by the\n tree. Tree nodes come in two flavors: terminal nodes, which have exactly one edge, and internal\n nodes, which represent nodes where two or more edges come together.\n\n A “poly node” is a node that is owned by a poly. Poly nodes are the reduced images of tree\n nodes; so all poly nodes are also reduced nodes.\n\n\n                                 164",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d099d"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 170,
  "content": " If you have any suggestions or comments, please send them to me at the address given at the end\n of this document.\n\n    8.2 Version History\n\n (1.0) 05-01-93. Original TreeMaker program. Edits nodes and edges and finds optimum\ndistribution of nodes but no creases. Written in Symantec's THINK Pascal 5.0 using the THINK\nClass Library, v. 1.1.\n\n(2.0) 08-06-93. Added CPath object and an editor for same. You can now individually change\nthe length of a path, as well as control its angle and/or its collinearity with another node.\nNumerous small changes in user interface. Version 2.0 documents are incompatible with version\n1.0 application and vice versa.\n\n(2.0.1) 03-11-94. Changed the scale box to display 5 digits of accuracy.\n\n(2.0.2) 03-31-94. Added “Show All Paths” to the Action menu so you can toggle paths on and\noff with a keystroke.\n\n(3.0a1) 03-01-95. Complete from-the-ground-up rewrite in C++, using Metrowerks CodeWarrior\nand the Metrowerks PowerPlant class library. Completely restructured mathematical model,\nimproved scale optimization routines, added secondary optimization, many new constraints, text-\nbased file format, computation of molecule creases, and other stuff too numerous to mention.\n(3.0b1) 06-25-95. First beta version.\n\n• Added universal molecules and removed computation of tristate creases for compatibility with\nuniversal molecules.\n\n• Added “diag” and “book” preset buttons to Tree Editor.\n(3.0) 08-18-95 released.\n\n• Fixed bug in computation of inset creases for nearly-parallel lines.\n\n• Increased weight on “Stick to Edge” and “Collinear Node” constraints, which improves\noptimizations when many nodes are present.\n\n• Finished documentation and uploaded for distribution to origami-L archives.\n(3.5) 12-22-95 released.\n\n• Generally improved consistency of dialogs and validation:\n\n• In all dialogs, controls and edit fields are disabled and blanked if they’re not appropriate (e.g.,\nsymmetry-related controls are disabled if the tree doesn’t have a symmetry line defined).\n\n• All editors now use a common syntax (“FillDialog”) for initializing the dialog.\n\n\n                                 170",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d099e"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 158,
  "content": "             Document\n\n TreeDoc is the document object that is “command central” — menu selections, keystrokes, and\n mouse actions are routed to the TreeDoc, which places the appropriate calls to the Tree object\n (which is a member variable of the TreeDoc).\n\n                          LSingleDoc         TreeDoc\n                                      7.5\n\n             Views\n\n The bulk of TreeMaker consists of various LView subclasses that let the user see and manipulate\n the tree object. The main view is the TreeView object, which displays the tree, the various\n parts, and the crease pattern. By selectively choosing which parts to display, the user can choose\n to view the tree, the crease pattern, or a combination of the two.\n\n There is also a group of editors which allow you to examine or manipulate the fields of\n individual objects. These are all inherited from the PowerPlant class LModalDialog and a\nutility class, PartEditorMixin, which supplies useful routines for displaying object\naddresses as indices.\n\nA second group of editors perform small manipulations on the tree, e.g., changing the paper size,\nsetting the lengths of a group of edges, and so forth.\n\nThe ConditionRegistry class provides a binding between Condition objects and the\nviews used to reference them.\n\nThe ConditionTool<P, C> class provides tools for creating and filtering Conditions for\nParts and lists of Parts.\n\n\n                                 158",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d099f"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 8,
  "content": "./origami_dataset_dev/TreeMkr40/page008_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d09a0"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 10,
  "content": "Now we will add side branches to the\ntree. Click once on node 2 to select it,\nthen click once to the left of node 2; this\nadds a leg. Click again on node 2 to\nselect it and click once to the right of\nnode 2; this adds another leg, as shown in\nfigure 2.1.4.\n\nGot the hang of it? Now try to add two\nmore legs to node 3, so that you wind up\nwith something that looks like figure\n2.1.5.\n\nThis stick figure represents an animal\nwith a head, two front legs, a body, two\nrear legs, and a tail. It will be used to\ndefine a base with flaps for the head,\nlegs, body, and tail. Since all of the edges\nof the stick figure have the same relative\nlength, each of the flaps of the base (and\nthe body) will be the same length in this              2.1.4\nexample.\n\nNote that the nodes are outlined by lines.\nThese lines are called border paths;\nthey’ll define the usable region of the\nsquare when we’re done.\n\n\n                                                    Figure 2.1.5\n\n\n                                  10",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d09a1"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 4,
  "content": "                  TreeMaker 4.0\n\n                      Copyright ©1994–1998 by Robert J. Lang. All rights reserved.\n     Portions (CFSQP) copyright @1993–1998 by Craig T. Lawrence, Jian L. Zhou, and Andre L. Tits. All\n                                         Rights Reserved.\n                                         Terms of License\n   TreeMaker contains copyrighted code (CFSQP) that may only be used for non-profit purposes. TreeMaker\n   may not be freely distributed.\n   CFSQP's Conditions for External Use include the following\n   1. The CFSQP routines may not be distributed to third parties. Interested parties should contact the authors\n   directly.\n   2. Due acknowledgment must be made of the use of the CFSQP routines in research reports or publications.\n   Whenever such reports are released for public access, a copy should be forwarded to the authors of CFSQP.\n   3. The CFSQP routines may only be used for research and development, unless it has been agreed\n   otherwise with the authors in writing.\n   For more information on CFSQP, see http://www.isr.umd.edu/Labs/CACSE/FSQP/fsqp.html\n         To obtain a copy of the TreeMaker executable, please provide the following information:\n                                           Your name\n                           Your affiliation (must be a non-profit organization)\n                                        Your e-mail address\n                An affirmation that you will abide by CFSQP’s Conditions for External Use.\n    An affirmation that you will only be using TreeMaker for non-profit purposes and will not redistribute the\n                                            executable\n            Confirmation that you are using a Macintosh™ computer (it won't run on anything else)\n                                      sent to: rjlang@aol.com\n   A copy of the executable will be emailed to you within a few weeks.\n   If you like the program, drop me a line with your comments and attaboys. If you find bugs, drop me a line\n   with a description and I’ll try to fix it in the next version. This software is provided as-is with no implied\n   warranties of fitness or usability (but I hope you will find it to be be both fit and usable).\n                                  1.0 Introduction\n\nTreeMaker is a tool for origami design. Starting from a description of a desired origami model,\nTreeMaker computes a crease pattern for folding a base for the model from an uncut square of\npaper. This document describes TreeMaker, how you use it to design origami, and how it works.\n\n   1.1     Background\n\nOrigami is the Japanese name for the art of paper-folding. The purest form of origami stipulates\nthat you fold one sheet of paper, which must be square, and no cutting is allowed. These rules\nmight seem restrictive, but over the hundreds of years that origami has been practiced, tens of\nthousands of origami designs have been developed for birds, flowers, animals, fish, cars, planes,\nand almost everything else under creation. Despite the age of the art, the vast majority of origami\nmodels have been designed within the last thirty years. This relatively late bloom of the art is due\nin part to a spread of the art worldwide and an increase in the number of its practitioners, but it is\n\n                                          4",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d09a2"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 38,
  "content": "This yields the crease pattern shown in\nfigure 3.1.8.\n\nSuppose after seeing the result, we didn’t\nwant to do this after all. You can remove\nthe node by deleting node 10. But you\nwill still be left with an extra node in the\nmiddle of the model. A node with only\ntwo edges connected is called a\n“redundant node.” You can remove a\nsingle redundant node by selecting it and\nchoosing the command Absorb Selected\nNode from the    Action menu.\nAlternatively, you can select the\ncommand Absorb Redundant Nodes to\nremove all redundant nodes from a tree.\n\n   3.2  Making a plan view model\n\nFlat origami models come in two distinct\ntypes, which correspond to two different               3.1.8\nviews of the subject. The most common\nis a “side view” model, which resembles\nthe silhouette of the subject viewed from the side. (You can often make a side view model three-\ndimensional by opening out the body from the underside, but the base is still fundamentally side\nview.) Using TreeMaker, it is very easy to make side view models.\n\n However, many models — especially insects — look better in “plan view,” that is, viewed as if\n you were looking down on them from above. Some of the time, you can make a plan view model\n out of a side view base by spreading the layers of the model to the left and right and flattening\n the result. But oftentimes, the base has an odd number of layers, or the layers don’t spread\n sufficiently far apart, or it is necessary to spread-sink one or more corners in a way that ends up\n reducing the length of the attached points. For example, let’s take the regular human tree (equal-\n length head, arms, legs, and body) oriented along the book direction.\n\n\n                                  38",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d09a3"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 94,
  "content": "./origami_dataset_dev/TreeMkr40/page094_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d09a4"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 87,
  "content": "./origami_dataset_dev/TreeMkr40/page087_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d09a5"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 14,
  "content": "At this point, you are seeing several\ndifferent sets of information overlaid on\none another. The tree (shades of blue)\ndisplays the abstract structure of the tree.\nThe gray polygons display the underlying\nstructure of the crease pattern. The crease\nlines display the creases themselves.\nBecause the creases are overlaid on top\nof everything else, the display gets rather\nbusy when all of the creases are present.\nYou can choose to display just the\ncreases by choosing the Show Creases\nOnly command from the  View menu,\n getting the result shown in figure 2.1.10.\n\n Finally, we have the crease pattern for\n the base — the thing we were looking for\n all along. In general, the black lines are\n valley folds, the medium gray lines are\n mountain folds, and the light gray folds\n can be either; but there are a few                   2.1.10\n exceptions. The bottom corners of the\n square aren’t used for anything, so you\n would probably mountain-fold them underneath, rather than valley-folding them upward. A\n major exception is the following. Around a middle point, the creases alternate around the point as\n mountain, valley, mountain, valley… and one of the valleys needs to be turned into a mountain\n fold to satisfy the Kawasaki theorem M=V±2. Since there are, in general, multiple valleys that\n could be turned into mountains, I don’t make that choice for you. The light gray creases can be\n either mountain, valley, or unfolded, depending upon which way you direct the flaps when you\n flatten the model. These folds are, using the terminology of tree theory, tristate creases. So you\n will still need to add a few creases when you try to collapse the crease pattern into a base, but it\n should be pretty obvious where the additional creases go.\n\n There are two ways to get the crease pattern from the screen onto a piece of paper. First, you can\n simply print it using the Print command in the File menu. Second, at any time you can copy the\n contents of the window to the Clipboard using the Copy command in the Edit menu. You can\n then paste the image of the crease pattern into your favorite drawing program for further touch-\n up and subsequent printout. In either case, if you print out the crease pattern and fold it up, you\n will arrive at the base shown in figure 2.1.11 (which also shows which creases are mountain and\n valley folds using the conventional line patterns). As promised, its flaps have the same number,\n connections, and relative size as the original stick figure.\n\n\n                                  14",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d09a6"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 78,
  "content": "./origami_dataset_dev/TreeMkr40/page078_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d09a7"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 28,
  "content": "                                     2.3.6\n\nYou will have created three blank conditions. Fill in the fields with the indices of the nodes (1, 4,\n5, 6, and 7, respectively):\n\n\n                                     2.3.7\n\n                                 28",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d09a8"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 160,
  "content": "             Miscellaneous\n\n I also found it necessary to write a number of small utility packages or modified classes. They\n are:\n\n Alerts - a wrapper to handle simple alerts\n\n AnimatedCursor - displays a cursor animation during calculations\n\n LCropMark - a pane that displays crop marks in a printout\n\n LFloatEditField - an edit field that displays a floating-point value\n\n LGACaptEditField - an edit field that turns into a LCaption when it is disabled\n\n LGADeadCheckbox (obsolete) - a checkbox that doesn’t respond to clicks. It’s a convenient\n tool for displaying binary information\n\n LGAModalDialogBox - a dialog box (derived from LGADialogBox) that displays true\n modal dialog behavior (disabling all commands when it’s in the foreground).\n\n LGATargetAnnouncingEditField - an edit field that broadcasts a message when it\n becomes the target.\n\n QDUtils - routines for doing arithmetic with QuickDraw Point records\n\n ToggleSizeDialog - a dialog box that has two sizes you can toggle between. I use it to hide\n object data fields that aren’t used directly but keeps them accessible.\n\n UParamText - a utility that does for PowerPlant views what the system routine\n ::ParamText() does for resource-based dialogs and alerts.\n\n UPlaceDialog - a utility that places dialogs in the right place on the main screen\n\n Sort - a template class for sorting an array of numbers.\n\n    7.2  Tree Classes: Details\n\n In this section the fundamental data structures are discussed along with their inheritance\n hierarchy. Many objects inherit from a “Owner” class; as discussed below, an “ObjectOwner”\n maintains a list of references to “Object” and when the “Owner” is deleted, it kills all of its\n owned objects.\n\n The relationships between objects are maintained by references and lists of references. These are\n summarized in the table below. Bolded names are references that are inherited from subclasses.\n\n       Part-ness\n\n Most objects inherit from a base class called Part which has two member variables: an index,\nwhich is set by the owner of the part, and a pointer to the top-level Tree structure.\n class Part\n\n                                 160",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d09a9"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 148,
  "content": " This function has the property that  it goes to zero when the path is quantized, goes to ±1 in\n between quantized paths, and has no gradient component in the direction of shortening the path\n (which can cause problems when there are many such constraints). However, the code for the\n gradient of this function is rather complicated.\n\n    6.7  Meguro Stubs\n\n A Meguro stub is a terminal node and edge added to the tree — usually emanating from the\n middle of an existing edge — such that the new terminal node creates exactly 4 active paths to\n other nodes in the tree.\n\n When a Meguro stub is added inside of an existing N-sided polygon it breaks the polygon into 4\n new polygons that all have fewer than N sides. Thus, by addition of Meguro stubs, high-order\n polygons are converted to lower-order polygons, until eventually all polygons in the crease\n patterns are triangles and can be filled with rabbit-ear molecules. This process is called\n “triangulation” of a crease pattern. By repeatedly adding Meguro stubs any crease pattern can be\n fully triangulated.\n\n I introduce a few more definitions:\n\n A polygon Q is defined by a set of terminal nodes U tQ  that form the vertices of the polygon and a\n set of terminal paths PQ , which are all paths that span U Q .\n\n Define the set of nodes U Q  and edges EQ as all nodes and edges that are contained within one or\n more of the paths PQ ; U Q  and EQ constitute the subtree of polygon Q. Define U tQ  as the nodes\n in U Q  that are also terminal nodes, i.e., U tQ = U Q ∩ U tn .\n\n Let eab  be an edge of the subtree with ua  the node at one end of eab  and ub   the node at the other\n end.\n\n In general, for every edge eab  and set of four distinct nodes ui , u j , uk , ul , there is a Meguro\n\n stub that terminates on a new node um ; the stub is defined by four quantities:\n\n\nThe node coordinates um,x  and um,y ;\n\n\n The distance dm  from node ua at which the new stub emanates from edge eab ;\n\n The length lm  of the new stub.\n\n These four variables are found by solving the four simultaneous equalities\n\n                     d     e ∈ p      \n                    +m     if ab  ia  +   −  ()−      2+−2=\n          ml ∑ (ek)                 lm   ui,x um,x  ()ui,yum,y0\n             ∈      −d     e  ∉ p     \n            ekpia      m  if ab   ia    \n\n for each of the four nodes ui , u j , uk , ul . Although a solution can potentially be found for any\n\nfour nodes, not all are valid; the only valid combinations of nodes ui , u j , uk , ul  and edges  eab\n\n\n                                 148",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d09aa"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 92,
  "content": "./origami_dataset_dev/TreeMkr40/page092_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d09ab"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 149,
  "content": "are those for which (1) the four nodes are distinct, and (2) both signs of dm  are represented\n\namong the four equations. In addition, solutions for dm that are negative or greater than the\n       e\nlength of ab  are non-physical and must be discarded.\n\nNote that for these equations to be used as written above, there can be no unrelieved strain in the\nsystem. They can clearly be modified to include strain.\n\n   6.8  Universal Molecule\n\nThe universal molecule is a crease pattern that is constructed by a series of repeated reductions of\npolygons. The construction is carried out by insetting the polygons and constructing reduced\npaths and fracturing the resulting network into still smaller polygons of lower order. As with\ntriangulation, the process is guaranteed to terminate.\n\nWe use the same polygon definitions as were used in the description of Meguro stubs. In\naddition:\n\n                  ∈  Q\nAssume the nodes ui U  are ordered by their index, i.e., the N-sided polygon contains the\n\nindices u1 , u2 ,… uN , order as you travel clockwise around the polygon. Construct the following:\nα                                                    ς ≡   α\n i  is half of the interior angle at node ui . We define the quantity i cot i .\n                                                  °        o      =    −\nDefine R90  as the operator that rotates a vector clockwise by 90 , i.e.,  R 90 (ux ,uy ) (uy , ux )\n\n                                                  u\nDefine N as the operator that normalizes a vector, i.e., N o u =\n                                                  u\n\nri  is the scaled bisector of the angle formed at ui , pointing toward the interior of the polygon\n                α                      ς\nwith magnitude csc i . The vector ri  as well as i  can be constructed according to the following\nprescription:\n\n                              ′ ≡  o    −\n                             r   N  (ri−1 ri )\n                              ′′ ≡ o    −\n                             r    N (r i +1 r i )\n                              ′′′ ≡ o   o  ′′ − ′\n                             r    N  R90 (r  r )\n                                     r′′′\n                             r =\n                              i   ′′′ ⋅[]o ′′′\n                                 r   R90 r\n                             ς=⋅′\n                               irir\nThe inset distance h is the largest value such that\n\n(1) for every path pij  of length lij  between non-adjacent nodes ui  and u j ,\n\n                      ()+     2++2≤−              ς + ς\n                      ux  hrx   ()uyhry    ml[]ij h()i j\n\n\n                                149",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d09ac"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 161,
  "content": " {\n    public:\n       short mIndex;\n       Tree* mTree;\n }\n References to objects are made visible to the user by the mIndex, the value of which is set by\n the owner of the part (see below). Given a reference to any Part, the mTree reference gives\n access to the overall Tree. All TreeMaker objects inherit from Part as shown below:\n\n                                       Node\n                                       Edge\n                             Part\n                                       Path\n                                       Poly\n                                       Condition\n                                       Vertex\n                                       Crease\n                                      7.9\n\n Conversely, the Tree has a set of lists of references to all Parts with names like mNodes,\nmEdges, mPaths, etc. This provides flat access to the hierarchical data structure; it simplifies\nsearching over the Parts and lets us assign the Part index according to its position within the\nmaster list.\n\n      Ownership\n\nThe data structures in TreeMaker are tied together by various relations. One important set of\nrelations is the concept of “ownership.” Every object is owned by another object. The chain of\nownership is a simple rooted tree, that is, every object has a unique owner, which in turn has a\nunique owner, all the way up to the Tree at the top of the hierarchy. (It’s similar to a “chain of\ncommand.”)\n\nOwnership confers two important properties:\n\n      When an owner object is deleted, it deletes all of the objects that it owns\n\n      An owner object can be interrogated about objects that it owns, for example, to return an\nobject that satisfies certain criteria.\n\nOwnership ability is conferred through inheritance. The chain of ownership is shown in the\nfigure below. Objects to the right inherit from objects to the left.\n\n\n                                 161",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d09ad"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 95,
  "content": "./origami_dataset_dev/TreeMkr40/page095_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d09ae"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 29,
  "content": "Then click OK. The node circles will\nhave turned green, indicating that the\nnodes have conditions on them, as shown                   1              5\nin figure 2.3.8.\n                                         4                1       4\n                                                  3       1.000   1.000\n   •Note: if you make a mistake, or for           1.000    2\n   example, accidentally create the\n   wrong type of condition, select the\n   condition by clicking on it, and\n   then click the “Remove” button. If\n   you want to start over, click the                      2\n   “Remove All” button.                                    1.000\n\nNow we’ll optimize to find a base. Select\nOptimize Scale from the Action menu.\nWhen the run is complete, you should              5        3\n                                           6                     6\nhave something that looks like figure              1.000          1.000  7\n2.3.9.\n\nThe scale of this is 0.3388 and you can\ngenerate the crease pattern if you like by             2.3.8\nselecting Build Polys and Creases.\nHowever, it’s often possible to find a\ndifferent crease pattern with possibly a                  1\nlarger scale (which gives a larger base)           2            2\nfor exactly the same tree and conditions.\n                                        4                 1                 5\nYou can find other patterns by starting                   0.600\n                                                 3                 4\nfrom a different initial configuration of        1.000             1.000\nnodes.                                                     2\n\nIn particular, whenever you have a large,\nmany-sided polygon as we do here, it’s    2                              2\noften possible to get a larger crease\n                                                          2\npattern if you drag one of the nodes                       0.750\ninside the polygon. In this case, node 1 is\nthe obvious candidate. If you try to click  3                           3\nand drag directly, node 1 won’t move\nbecause it’s pinned, but you can always\noption-click and drag even a pinned                        3\nnode. So, option-click on node 1 and                5          6\n                                                    1.000       1.000\ndrag it down into the middle of the crease    6           3          7\npattern, as shown in figure 2.3.10.\n                                                       2.3.9\n\n\n                                  29",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d09af"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 15,
  "content": "  EF\n\n         BB\n\n                 A\n                                          A\n                                                               F\n            BB\n\n                                       E\n                                                  B\n       CC\n                                                                      H\n\n                                                         C\n GH\n                                                G\n          CC\n                                                                D\n\n                  D\n                                  2.1.11\n\nThat’s all for this example. You have learned the basics of TreeMaker: how to define a stick\nfigure using the point-and-click interface and how to construct a basic crease pattern. In the next\nexample, you’ll learn how to modify the stick figure to alter proportions, how to incorporate\nsymmetry, and how to customize the screen and printed image.\n\n   2.2   Tutorial 2: Imposing symmetry\n\nIn this tutorial, you will learn how to use some more of the settings in TreeMaker and how to\nincorporate bilateral symmetry into your design.\n\n\n                               15",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d09b0"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 1,
  "content": "  Copyright ©1994–1998 by\n  Robert J. Lang. All rights\n  reserved. Portions (CFSQP)\n  Copyright ©1993-1998 by Craig\n  T. Lawrence, Jian L. Zhou, and\n  Andre L. Tits. Use and\n  distribution of this program is\n  subject to restrictions described\n  in the TreeMaker documentation.\n                                                      A Program for Origami Design\n  Thanks for suggestions and\n  algorithmic insight to:\n  Alex Bateman, Toshiyuki\n  Meguro, Tom Hull, Jun\n  Maekawa, Fumiaki Kawahata,\n  Erik Demaine, Barry Hayes, and\n  Marshall Bern.\n  Programmed with Metrowerks\n  CodeWarrior ™ and Metrowerks\n  PowerPlant™.\n\n\n                   Copyright ©1994–1998 by Robert J. Lang. All rights reserved.\n  Portions (CFSQP) copyright @1993–1998 by Craig T. Lawrence, Jian L. Zhou, and Andre L. Tits. All\n                                      Rights Reserved.\n                                      Terms of License\nTreeMaker contains copyrighted code (CFSQP) that may only be used for non-profit purposes. TreeMaker\nmay not be freely distributed.\nCFSQP's Conditions for External Use include the following\n1. The CFSQP routines may not be distributed to third parties. Interested parties should contact the authors\ndirectly.\n2. Due acknowledgment must be made of the use of the CFSQP routines in research reports or publications.\nWhenever such reports are released for public access, a copy should be forwarded to the authors of CFSQP.\n3. The CFSQP routines may only be used for research and development, unless it has been agreed\notherwise with the authors in writing.\nFor more information on CFSQP, see http://www.isr.umd.edu/Labs/CACSE/FSQP/fsqp.html\n      To obtain a copy of the TreeMaker executable, please provide the following information:\n                                        Your name\n                        Your affiliation (must be a non-profit organization)\n                                     Your e-mail address\n             An affirmation that you will abide by CFSQP’s Conditions for External Use.\n An affirmation that you will only be using TreeMaker for non-profit purposes and will not redistribute the\n                                         executable\n         Confirmation that you are using a Macintosh™ computer (it won't run on anything else)\n                                   sent to: treemaker@langorigami.com\nA copy of the executable will be emailed to you within a few weeks.\nIf you like the program, drop me a line with your comments and attaboys. If you find bugs, drop me a line\nwith a description and I’ll try to fix it in the next version. This software is provided as-is with no implied\nwarranties of fitness or usability (but I hope you will find it to be be both fit and usable).\n\n\n                                       1",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d09b1"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 9,
  "content": "./origami_dataset_dev/TreeMkr40/page009_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d09b2"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 78,
  "content": "./origami_dataset_dev/TreeMkr40/page078_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d09b3"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 17,
  "content": "This is rather surprising; the node pattern\nis less symmetric than the tree from\nwhich it is derived. The tree has bilateral\nsymmetry — that is, the left side is the\nmirror image of the right side. However,\nthe node pattern does not have bilateral\nsymmetry. We’ll see this in the crease\npattern as well. Select Build Polygons\nfrom the  Action menu; then Build\nCreases from the Action menu. Then\nconvert to Creases Only view from the\nView menu. You will see that the\nresulting crease pattern has no line of\nsymmetry at all (figure 2.2.3.)\n\nThis is an example of a phenomenon\ncalled “spontaneous symmetry-\nbreaking,” in which a system that is\nfundamentally symmetric at high energy\nsettles into an asymmetric state at lower\nenergy. (In the analogy, a larger scaling              2.2.3\nfactor corresponds to a lower energy.) In\nthis case, a slightly larger base is\nobtained for an asymmetric distribution of nodes than is obtained for a symmetric distribution of\nnodes. While symmetry-breaking is a wonderful phenomenon for generating Ph.D. theses, it can\nbe very undesirable in origami design. The crease pattern in figure 2.2.3 can indeed be folded\ninto the tree we started with and left and right flaps will have the same lengths, but they will have\ndifferent widths and different distributions of layers, so the base will not have mirror symmetry.\n\nAn asymmetric base is not necessarily a bad thing. It depends on the position of the subject. If\nyou were making a running human, for example, in which the left and right arms and legs were\nin different positions, it might not matter if paired flaps had different numbers of layers. But in a\nlot of models, it does matter, and in this case at least, we would like the folded base and therefore\nthe underlying crease pattern to have the same bilateral mirror-symmetry as the subject.\n\nFortunately, TreeMaker offers us this option. The first thing to do is to define a line of the\nsymmetry for the square. This need provides us with the opportunity to meet the Tree Editor\ndialog, which lets us change settings that affect the entire structure. Select Edit Tree… from the\nEdit menu, which brings up the dialog shown in figure 2.2.4.\n\n\n                                      2.2.4\n\n\n                                  17",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d09b4"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 3,
  "content": "   6.3   Scale Optimization  ........................................................................................ 144\n\n   6.4  Edge Optimization  ........................................................................................ 144\n\n   6.5  Strain Optimization  ....................................................................................... 145\n\n   6.6  Conditions  ..................................................................................................... 146\n\n   6.7  Meguro Stubs  ................................................................................................ 148\n\n   6.8  Universal Molecule  ....................................................................................... 149\n\n7.0 Software Model  ...................................................................................................151\n\n   7.1   Overview  ....................................................................................................... 151\n\n   7.2   Tree Classes: Details  ..................................................................................... 160\n\n8.0 Final Stuff  ...........................................................................................................169\n\n   8.1 Comments and Caveats  ....................................................................................... 169\n\n   8.2 Version History  ................................................................................................... 170\n\n   8.3 Sources  ................................................................................................................ 173\n\n\n                               3",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d09b5"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 163,
  "content": "       Persistence\n\n In memory, references to objects are made by pointers. To the user, and in storage, references are\n maintained by the Part index. The Tree contains master lists of all Parts which are used solely for\n storage and indexing. This lets us follow this model for reading in the structure:\n\n 1. Create the appropriate number of blank, uninitialized Parts\n\n 2. Read in each part, and “on the fly” convert all indices to Part references.\n\n Every Part constructor supplies the Tree* variable separately from the owner variable.\n\n Conditions, because they are polymorphic, are handled slightly differently, since we don’t\n know a priori which type of blank Condition to create. Therefore, as described further in the\n source code (TreeFile.cp), Conditions are created on the fly through the\n ConditionRegistry object.\n\n       References: Ref<T> and RefList<T>\n\n Because of the complexity of the data structure — most parts maintain several lists of related\n parts (e.g., a Node has a list of all Paths that begin or end on it) — when we create or delete\n parts, there are a lot of references to clean up, particularly when objects are deleted. Earlier\n versions of TreeMaker maintained these references by pointers and lists of pointers.\n Unfortunately, the program was frequently plagued by dangling pointers created when I failed to\n clear all pointers scattered throughout the data structure that referenced a deleted part.\n\n In TreeMaker 4.0, references and lists of references are maintained through the Ref<T> and\nRefList<T> template classes, which are essentially “smart pointer” classes. A Ref<T>\nbehaves like a T* (you can dereference it both directly and indirectly and assign it to T*) but if\nyou ever delete an object of type T, every Ref<T> that referred to it clears itself and subsequent\nattempts to dererence return NULL. This simplifies the programming, since I don’t need to clear\nsuch references explicitly, and it also eliminates a great many bugs since attempts to dererence a\npointer to a deleted object (which snuck through in earlier versions) are converted to attempts to\ndereference a void*, which is more easily caught and eliminated.\n\nA  RefList<T> is similar to a Ref<T>. It behaves like a ListOf<T*>, except when an\nobject from the list is deleted, its reference is completely removed from the list.\nTree\n\nA Tree is the top-level data structure that contains and ties together the stick figure we are\ntrying to represent and the crease pattern for the corresponding base. There is one unique Tree\nfor each document.\n\n                            EdgeOwner\n                                            Tree\n                            PolyOwner\n                                      7.11\n\n\n                                 163",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d09b6"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 92,
  "content": "./origami_dataset_dev/TreeMkr40/page092_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d09b7"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 95,
  "content": "./origami_dataset_dev/TreeMkr40/page095_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d09b8"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 162,
  "content": "                                                    Node\n                                  VertexOwner\n                                                    Path\n                                  CreaseOwner\n                   NodeOwner                         Poly\n                                  PolyOwner\n                   PathOwner\n                                                     Tree\n                                  EdgeOwner\n                                     7.10\n\nThere are a couple of interesting aspects of these relationships that could be confusing:\n\n1. A Poly can own other Polys, which are called subPolys.\n\n2. Both Poly and Tree own Polys and hence (through inheritance) also own Nodes and\nPaths. A Poly owns all Nodes that are fully enclosed by the Poly and owns all Paths that\nconnect those Nodes.\n\nBoth Poly and Path can own Creases. However, only the Tree can own Edges.\n\n3. Both Nodes and Paths can own Vertices.\n\nThe owner for an object has a member variable that points back to the owner; e.g., the Node\nobject has a member variable, mOwnedNodes, that points to the NodeOwner.\n\nBecause the behavior of different types of Owners is similar, there is some logic to embedding\nownership behavior into a template class (e.g., Owner<Vertex>, Owner<Node>, etc.).\nHowever, I found that it is easier to follow the code if I give each owner a unique name\n(“mNodeOwner”) and use unique names for owned objects (“mOwnedNodes”). Also, as you\nwill see, there are some member functions unique to particular Owner classes.\n\nHere are the types of objects that other objects own:\n\nA terminal Node or ring Node may own a single Vertex that coincides with the position of the\nNode.\n\nThe following types of Paths own Creases: active paths, spoke paths, ridge paths, and\noptionally, ring paths.\n\nActive paths, ring paths, and ridge paths can own internal vertices as well that lie along the paths.\n\nA Poly owns radial Creases that connect to its reduced polygons and/or any ridge Crease. A\nPoly also owns Creases that run between internal vertices. A Poly also owns its sub-polys.\n\nA Tree owns its Nodes, Edges, Paths, and Polys.\n\n\n                                162",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d09b9"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 2,
  "content": "                    Table of Contents\n\n1.0 Introduction  ............................................................................................................. 4\n\n   1.1  Background  ....................................................................................................... 4\n\n   1.2  Installing TreeMaker  ......................................................................................... 6\n\n   1.3   Conventions  ......................................................................................................6\n\n2.0 Tutorials  .................................................................................................................. 7\n\n   2.1  Tutorial 1: Designing a Base  ............................................................................. 7\n\n   2.2   Tutorial 2: Imposing symmetry....................................................................... 15\n\n   2.3  Tutorial 3: Changing edge lengths  .................................................................. 25\n\n3.0 Tips and Techniques  ............................................................................................. 34\n\n   3.1 Adding nodes  .................................................................................................. 34\n\n   3.2   Making a plan view model  ..............................................................................38\n\n   3.3   Forcing edge flaps  ........................................................................................... 47\n\n   3.4 Fracturing polygons  ........................................................................................ 52\n\n   3.5 Forcing symmetric angles  ...............................................................................58\n\n4.0 Reference  ..............................................................................................................65\n\n   4.1   Introduction  ..................................................................................................... 65\n\n   4.2  Main window  .................................................................................................. 65\n\n   4.3  Creating a new Tree  ........................................................................................ 69\n\n   4.4   Editing Parts  .................................................................................................... 71\n\n   4.5  Menu commands  ............................................................................................. 78\n\n5.0 The Tree Method of Origami Design  .................................................................. 112\n\n6.0 TreeMaker Algorithms  ........................................................................................ 143\n\n   6.1   Mathematical Model  ..................................................................................... 143\n\n   6.2   Definitions and Notation  ............................................................................... 144\n\n\n                               2",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d09ba"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 16,
  "content": "Open the TreeMaker application if it is\nnot already open and create a new\nsquare. Make a five-limbed stick figure                  1\nas shown in figure 2.2.1. As you did in\nthe previous tutorial, set the body                     1\nsegment to have a length of 0.8, but this                1.000\n                                           4                          5\n                                                 3             4\ntime we’ll leave the head to have a length               2\nof 1.                                             1.000         1.000\n\nNow select Optimize Scale from the\n                                                        2\nAction menu to optimize the distribution                 1.000\nof nodes. You should see the nodes move\naround as usual, and then suddenly the\ntwo bottom nodes will shift over toward                  3\none side or the other. When the                  5             6\n                                                               1.000\noptimization stops, the pattern of nodes          1.000              7\nwill be asymmetric, as shown in figure    6\n2.2.2.\n\n                                                      2.2.1.\n\n\n                                                          1\n                                                2\n                                       4                 1        2\n                                                         1.000\n                                               3\n                                                1.000            4         5\n                                                         2\n                                                                  1.000\n                                       2\n\n                                                        2            2\n                                                         1.000\n\n                                       3                 3\n                                                                3\n\n                                               5         6\n                                                1.000     1.000\n\n                                       6         3         7\n\n                                                      2.2.2\n\n\n                                 16",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d09bb"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 33,
  "content": "Now, all edges are pinned and we can\nproceed with the construction of the\ncreas pattern. Select Build Polys and\nCreases from the   Action menu to\nconstruct the crease pattern and select\nCreases Only from the View menu to\nshow just the creases, as shown in figure\n2.3.13.\n\nYou now know how to set up a crease\npattern for a base with an arbitrary\nnumber of flaps and how to change the\nlengths of the flaps. You’ve also seen in\nthis tutorial how to set up and enforce\nbilateral symmetry in the base. This gives\nyou 90% of what you need to know to\ncompute crease patterns with TreeMaker,\nand I encourage you at this point to go\noff and experiment. To keep things\nsimple (and to keep the optimization\ntimes down), I have kept to small                     2.3.13\nexamples with a small number of flaps.\nBut you can try much more complicated\nbases with much more complicated assemblies of flaps with TreeMaker; you are limited only by\nthe computer memory and speed (and of course, your own patience!). The next section will\naddress some of the subtler issues of origami design using TreeMaker. You can continue\nworking through it, or go off, experiment, and then come back when you’re ready.\n\n\n                                  33",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d09bc"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 27,
  "content": "Now we’ll also shrink the torso a bit.\nDouble-click on the torso and enter a\n                                                          1\nlength of 0.75 in the Length field. Then                 head           5\nclick OK. The result is shown in figure     4            1       4\n2.3.4.                                            3       0.600  1.000\n                                                   1.000  2\nWe’ll also make this model symmetric\nand will take this opportunity to learn a\nthird way of applying conditions. Open\n                              Edit\nup the Tree Editor by selecting the                       2\nTree… command from the   Edit menu                        0.750\nand turn on book symmetry by clicking\non the “book” button.\n\nNow we’ll apply conditions, but rather                    3\nthan selecting specific menu commands             5              6\nor editing particular nodes as we did      6       1.000         1.000   7\nbefore, we’ll create all the conditions at\nonce. Select the Edit Conditions…\ncommand from the  Conditions menu.\nYou will be presented with a dialog as                 2.3.4\nshown in figure 2.3.5.\n\n\n                                      2.3.5\n\n The Condition Editor shows every condition that applies to every part. With it, you can create all\n three conditions within the same dialog. Select Node symmetric from the “Add…” popup menu,\n followed by selecting Nodes paired about symmetry line twice from the same popup.\n\n                                  27",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d09bd"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 85,
  "content": "./origami_dataset_dev/TreeMkr40/page085_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d09be"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 147,
  "content": "                            −       α −    −      α =\n                        ()ui,x uj,x cos ()ui,y uj,y sin 0\n\n                      +    −       α −    +    −        α =\n                   ()ui,x uj,x 2ai,x sin ()ui,y uj,y 2ai,y cos 0\n      Three nodes collinear\n\nThree nodes ui , u j , and uk  that are constrained to be collinear must satisfy the equation\n\n                        −       −−−−=\n                    ()uj,y ui,y ()uk,xuj,x()uk,yuj,y()uj,xui,x0\n       Edge length fixed\n\n An edge ek  whose length is fixed must have its strain satisfy the equation\n\n                                     σ  =\n                                      k  0\n       Edges same strain\n\n Two edge ej  and ek  that have the same strain must satisfy the equation\n\n                                   σ − σ  =\n                                    j   k  0\n       Path active\n\n A path pij  between two nodes ui  and u j   that is constrained to be active must satisfy the\n equation\n\n                        []+ σ    −      −    2+−2=\n                    m ∑  (1  k )lk  ()ui,x uj,x ()ui,yuj,y0\n                      ∈\n                     ekpij\n       Path angle fixed\n                                                                α\n A path pij  between two nodes ui  and u j   that is constrained to lie at an angle  must satisfy the\n equation\n\n                        ()u − u  cosα − ()u − u sinα = 0\n                          i,x j,x       i,y  j,y       .\n       Path angle quantized\n\n A path pij  between two nodes ui  and u j   that is constrained to lie at an angle of the form\n                         180°\n α = α  + k ⋅δα. where δα ≡   must satisfy the equation\n  k   0                   N\n\n\n                                −N/2  N−1\n       −          2          2                                     \n     2 N 1 ⋅ []()u − u +()u−u       ⋅∏[]()u −u   sinα − ()u − u cosα =0\n          i,x  j,x   i,yj,y           i,x  j,x   k    i,y j,y    k\n                                     k=0                             \n\n                                 147",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d09bf"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 153,
  "content": "       CFSQP\n\nCFSQP is a general-purpose nonlinear constrained optimization code, written in C, developed by\nthe research group of Professor Andre Tits at the University of Maryland. It forms the core of the\nnumerical optimization routines (replacing a home-rolled implementation of the Augmented\nLagrangian Multiplier method used in earlier versions). A description of the routines may be\nfound on the FSQP Home Page, located at\n\n http://www.isr.umd.edu/Labs/CACSE/FSQP/fsqp.html\n\nCFSQP is used with permission according to the following conditions of use:\n\n                           Conditions for External Use\n\n          1. The CFSQP routines may not be distributed to third parties.\n             Interested  parties  should contact  the authors directly.\n          2. If modifications  are  performed  on  the  routines, these\n             modifications  shall be  communicated to the authors.  The\n             modified  routines  will  remain the sole  property of the\n             authors.\n          3. Due acknowledgment  must be  made of the  use of the CFSQP\n             routines in research  reports  or  publications.  Whenever\n             such reports are released for public access, a copy should\n             be forwarded to the authors.\n          4. The CFSQP  routines  may  only  be  used  for research and\n             development, unless it has been agreed  otherwise with the\n             authors in writing.\n\n       Copyright (c) 1993-1997 by Craig T. Lawrence, Jian L. Zhou, and\n                               Andre L. Tits\n       All rights Reserved.\n\n          Enquiries should be directed to\n                            ,\n                  Prof. Andre L. Tits\n                  Electrical Engineering Dept.\n                  and Institute for Systems Research\n                  University of Maryland\n                  College Park, Md 20742\n                  U. S. A.\n\n                  Phone:  301-405-3669\n                  Fax:    301-405-6707\n                  E-mail: andre@eng.umd.edu\n\n       My libraries\n\nTreeMaker uses a number of general-purpose class libraries that I’ve written. They are:\n\n\n                                        153",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d09c0"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 82,
  "content": "./origami_dataset_dev/TreeMkr40/page082_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d09c1"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 28,
  "content": "./origami_dataset_dev/TreeMkr40/page028_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d09c2"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 152,
  "content": "    Vector<T>         CFSQP           LArray      Metrowerks PowerPlant\n\n\n    Matrix<T>                        ListOf<T>\n\n\n                    Cpfsqp                   Ref<T>\n     Linear                                  RefList<T>\n     Algebra\n\n  My libraries                               Tree Classes\n\n\n                            Optimizer Classes\n\n                                                     TreeMaker User \n                                                     Interface Classes\n\n                                          TreeMaker Classes\n                                     7.1\n\nThere are four main groups of modules. Two — PowerPlant and CFSQP — are libraries written\nby other guys. One — “My libraries” — is written by me. The fourth group —“TreeMaker\nClasses” — is composed of the classes unique to TreeMaker. A brief discussion of these four\ngroups follows.\n\n      Metrowerks PowerPlant\n\nPowerPlant is a Macintosh class library supplied with the Metrowerks CodeWarrior family of\ncompilers. It provides a complete set of classes for building a Macintosh user interface, as well as\na number of useful utility classes. The user interface of TreeMaker is built from the PowerPlant\nclass library.\n\nPowerPlant is Mac-specific. This makes porting TreeMaker to any other platform a bit of an\nundertaking. PowerPlant is a very complex library and is the subject of a 600-page manual (The\nPowerPlant Book), so I won’t bother trying to describe any more here.\n\nPowerPlant is itself composed of several independent modules, some of which can stand alone.\nOne of them, the LArray class, as shown above, serves as the base for a number of my own\nclass libraries.\n\n\n                                152",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d09c3"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 146,
  "content": "                                          \n                                        \n             σ     +     []+     []()+ σ   − ()−      2+()−2≤\n         ∑    {k ml{k ml ∑ k   ∑   1   k lk   ui, x u j, x ui,yuj,y0\n        e ∈p          e∈p     e∈p           1244444344444\n         k ij variable fixed   k ij kij \n        e ∈E s          e ∈E s e ∉E s                fixed or\n         k            124444k  43k 44444               variable\n                                fixed\n   6.6   Conditions\n\nIn addition to the conditions specified above, which are always required to be satisfied, one can\noptionally impose additional conditions on the crease pattern that are typically strict equalities.\nThese are easily incorporated into the nonlinear constrained optimization machinery. The\nconditions and related equations currently implemented in TreeMaker are listed below.\n\n      Node position fixed\n\nA node ui  that has one or both of its coordinates fixed to a point a must satisfy one or both of the\n equations\n\n                                     −    =\n                                  ui, x ai, x 0\n                                     −    =\n                                  ui, y ai, y 0\n      Node fixed to corner of paper\n\nA node ui  that is constrained to lie on a corner of the paper must satisfy both equations\n\n                                 ()−    ⋅=\n                                 ui,x w  ui,x0\n\n                                    −⋅=\n                                 ()ui,yhui,y0\n       Node fixed to edge of paper\n\n A node ui  that is fixed to lie on the edge of the paper must satisfy the equation\n\n                           ()−    ⋅⋅−⋅=\n                            ui,x w ui,x()ui,yhui,y0\n       Node fixed to line\n                                                               α\n A node ui  that is constrained to lie on a line through point a running at angle , such as a line of\nsymmetry, must satisfy the equation\n\n                         ()u − a cosα − ()u − a sinα = 0\n                           i,x x         i,y y        .\n       Two nodes paired about a line\n\n Two nodes ui  and u j  that are constrained to be mirror-symmetric about a line through point a\n running at angle α, such as a line of symmetry, must satisfy the two equations\n\n                                 146",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d09c4"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 26,
  "content": " The dialog box tells the index of the edge and which nodes the edge runs between; the desired\n length of the edge; two quantities called strain and stiffness (more on these later); an optional\n label; and whether there are any condition on the edge. We’ll change the length of the “head”\n flap by giving it a new length. Enter “0.6” in the Length field, which will make the head flap a\n bit over half the length of the arms and legs. If you like, you can also enter a label such as “head”\n in the Label field as well. Then click the OK button.\n\nYou’ll notice that the circle around node\n1 has gotten smaller, as shown in figure\n                                                          1\n2.3.3. The radius of the circle around a                 head           5\nterminal node is equal to the length of the 4            1       4\nadjacent edge using the current scale of          3       0.600  1.000\nthe model (which is 0.1000). A terminal            1.000  2\nnode attached to a 1-unit-long edge has a\ncircle of radius 1×0.1 = 0.1 times the side\nof the square. Since we shrank the edge\nto a length of 0.6, the circle shrinks                    2\naccordingly to a radius of 0.6×0.1 = 0.06.                1.000\n\nYou can also see that the length of the\nedge (the number near the middle of the\nedge) is now 0.6. The label, if you                       3\nentered one, also appears above the index         5              6\nof the edge.                               6       1.000         1.000   7\n\nIt’s probably worth a reminder that the\nlength of the blue line segment that\nrepresents the edge hasn’t changed a                   2.3.3\nwhit; what matters is the numerical\nlength that appears next to it.\n\n\n                                  26",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d09c5"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 32,
  "content": "But how long should we make edge 1?\nTreeMaker will find that out for you.   4                                   5\nClick once on edge 1 and shift-click on          3                 4\nnode 1 to select them both. Then go to            1.000             1.000\nthe Action menu and select the command             2        2   2\nScale Selection. This command will                        1\nmove any unpinned selected nodes in                       1 0.600+1.3%\norder to maximize the length of the     2                                   2\nselected edge or edges. (If you have\nselected more than one edge, they will all           2        2\n                                                           2\nbe lengthened proportionally.) When the                    0.750\noptimization ends, you should have      3                                   3\nsomething like figure 2.3.12.                  3                    3\n   • Note: you must select both some\n   unpinned nodes to move and some                         3\n   unpinned edges to enlarge;                    5                 6\n                                                 1.000             1.000\n   otherwise, nothing happens because   6                                   7\n   TreeMaker simply ignores pinned\n   nodes and edges. If you want all\n   unpinned nodes and unpinned                        2.3.12\n   edges to be considered, just hit\n   command-A (Select All) to select\n   everything; TreeMaker will weed out the pinned nodes and edges before running the\n   optimization.\n\nLook closely at the length of edge 1: its length is “0.600+1.3%”. It is said to be strained. Strain is\na deviation of an edge from its original desired value.\n\nStrain is an important concept, particularly when we start imposing lots of symmetry conditions\non a base. A strained edge behaves as if it were actually longer or shorter. However, an edge\n“remembers” its original (“unstrained”) length, a behavior that we utilize elsewhere.\n\nThere are two strain-related commands in the Action menu: Remove strain sets all strain to\nzero; it undoes any strain changes. Relieve strain does something quite different: it absorbs\nlength changes due to strain into the edge and resets the strain to zero. Select Relieve strain now.\nYou’ll see that the length of edge 1 has now changed from 0.6 to 0.608.\n\n\n                                  32",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d09c6"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 97,
  "content": "./origami_dataset_dev/TreeMkr40/page097_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d09c7"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 68,
  "content": "./origami_dataset_dev/TreeMkr40/page068_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d09c8"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 90,
  "content": "./origami_dataset_dev/TreeMkr40/page090_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d09c9"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 90,
  "content": "./origami_dataset_dev/TreeMkr40/page090_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d09ca"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 18,
  "content": " This dialog gives information about the entire structure. It shows us the shape of the paper; the\n default paper is a square whose width and height are both 1 unit, but you can also design for\n rectangles by changing either the width or height. (But with TreeMaker’s capabilities for design,\n why would you ever want to use anything but a square?) The third number is the scale, which is\n the ratio between one unit on the tree and the size of the paper. (This is the same number that\n appears at the top of the window.) In this example, we see that the scale is 0.277, which means\n that a 1-unit edge on the tree will turn into a flap whose length is 0.277 times the side of the\n square from which it is folded.\n\n    • Note: when we select the command Optimize Scale, TreeMaker tries to make the scale as\n   large as possible.\n\nThe controls and fields on the right are the ones that interest us. The “Symmetry” check box lets\nus define a line of symmetry on the square. A line of symmetry is defined by the x and y\ncoordinates of any point on the symmetry line and by the angle of the symmetry line with respect\nto the paper. A square has two natural lines of symmetry, that is, two different ways of dividing it\ninto mirror-symmetric halves. If you crease the square along the diagonal, you get two mirror-\nsymmetric triangles and the diagonal is the line of symmetry. If you book-fold the square, you\nget two mirror-symmetric rectangles and the book fold is the line of symmetry. The two buttons\nnamed “diag” and “book” are presets for these two symmetries. Click on the “book” button.\nYou’ll see that the “Symmetry” check box is turned on, and we now have values entered for x, y,\nand the angle of the symmetry line as shown in figure 2.2.5.\n\n\n                                      2.2.5\n\n Click “OK” to make the dialog box go away.\n\n    • Note: you can, if you like, enter your own values to either offset the line of symmetry\n    from the center of the paper or to create a line of symmetry for a rectangle.\n\n\n                                  18",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d09cb"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 24,
  "content": " with the polygon. You’ll have to rebuild the polygons yourself, which you can do by selecting\n the Build Polys and Creases command from the Action menu. Then put the model back into\n Creases Only view (View menu).\n\nThe new crease pattern, shown in figure\n2.2.16, is mirror-symmetric about the                    6        2         1\nnew symmetry line and is completely\ndifferent from the crease pattern that has\n                                                          5        1\nbook symmetry.                                     2      1.000     1.000\n                                                                            2\nAlso, if you check the scale (at the top of\nthe window), you’ll see that the scale has                 2\nfallen once again to 0.2626. So the          3                     6\ndiagonal symmetry in this example is                                1.000\n                                                           2                7\nless efficient than book symmetry. In                       1.000\ngeneral, you can orient a model along   4\neither symmetry line and will have very          3\n                                                            3       2\ndifferent crease patterns for both                1.000\nconfigurations. Sometimes book                3\nsymmetry will be more efficient,                        4   3\nsometimes diagonal symmetry will be                     1.000\n                 TreeMaker\nmore efficient. With      , you can                  5\neasily check them both.\n\n                                                      2.2.15\n\n\n                                                      2.2.16\n\n\n                                  24",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d09cc"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 30,
  "content": "Your figure should look something like\nthis but it probably won’t look exactly\nthe same. You should see some red lines,\nhowever. The red lines are paths that are 4                                 5\nnot valid, meaning that their actual length      3                 4\nis less than their minimum length. They          1.000     2       1.000\nare a sign that no valid crease pattern is                 1\npossible with this arrangement of nodes.                    0.600\n                                                             1\nAgain, select Optimize Scale from the\nAction menu to find a new configuration.                  2\nThe result should look like figure 2.3.11.                 0.750\n\n\n                                                           3\n                                                    5          6\n                                                    1.000       1.000\n                                              6                      7\n\n                                                      2.3.10\n\n\n                                        4                                   5\n\n                                                 3                 4\n                                                 1.0002         2  1.000\n                                                           2\n                                                          1\n                                                          0.600\n                                        2                                  2\n\n                                                     2        2\n                                                          2\n                                                           0.750\n                                        3                                  3\n                                                3                   3\n\n                                                           3\n                                                 5                6\n                                                 1.000             1.000\n                                        6                                  7\n\n                                                      2.3.11\n\n\n                                  30",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d09cd"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 85,
  "content": "./origami_dataset_dev/TreeMkr40/page085_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d09ce"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 150,
  "content": " (2) for every path pij  between adjacent nodes ui  and u j ,\n\n                                       u ⋅ u\n                                    h ≤\n                                       u ⋅ r\n where\n\n                                     ≡   −\n                                   u   ui u j\n                                     ≡   −\n                                    r  ri r j\n Although this problem is a nonlinear constrained optimization, since there is only one variable, it\n\n can be solved directly by simply solving for each equality for all possible paths pij  and taking the\n smallest positive value of h found. The second relation (2) gives the value for h simply by\n replacing the inequality by equality. The solution for equality for relation (1), which is simply a\n quadratic equation in h, is given by the following sequential substitutions:\n\n                                  = ς + ς\n                                w    i  j\n                                a = r ⋅ r − w2\n                                  =  ⋅ +\n                                b  u r  lijw\n                                  =  ⋅ − 2\n                                c  u u  lij\n                                   −b +  b2 − ac\n                                h =\n                                         a\n Obviously, negative or complex values of h should be ignored.\n                                                        ′                  ′\n Once a solution is found, we create a set of new reduced nodes ui  and reduced paths pij  of\n       ′\nlength lij\n\n                                    ′ =  +\n                                   ui ui  hri\n\n                                 ′ =  −  ς + ς\n                                lij lij h()i j\n The reduced nodes and reduced paths are checked for active status and then subdivided into\n polygons, and the process is repeated.\n\n\n                                 150",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d09cf"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 144,
  "content": "    6.2  Definitions and Notation\n\n                                             ∈ n        n\n Define U to be the set of all node coordinates ui, i I , where I  is a set of node indices:\n  n =\n I  {1. . n n } . Each node ui has coordinate variables ui,x and ui,y.\n\n                                 ∈ e        e                     e =\n Define E to be the set of all edges ei , i I , where I  is a set of edge indices I {1. . n e } . Each\n                               ∈                                    σ\n edge contains exactly two nodes ni ,nj ek . Each edge ei  has a length li  and a strain i .\n\n Define U t to be the set of terminal nodes, which are those nodes connected to exactly one edge.\nDefine I tn  to be the set of terminal node indices. Clearly, U t ⊆ U  and I tn ⊆ I n .\n\n                                  ∈  n  ≠\nDefine P to be the set of all paths, pij , i, j I , i j . Each path is identified by the indices of the\n\nnodes at each end of the path. Each path has a length, lij , which is given by the sum of the\n strained lengths of the edges in the path; that is,\n\n                                  ≡      + σ\n                                 lij ∑(1    k )lk\n                                     ∈\n                                    e k pij\n\n        t\n Define P  to be the set of terminal paths, which are those paths that connect two terminal nodes\n\n Define m to be the overall scale of the tree.\n\n Define w, h to be the width and height of the paper. The paper is a rectangle whose lower left\n corner is the origin (0,0) and whose upper right corner is the point (w,h).\n\n   6.3   Scale Optimization\n\nThe most basic optimization is the optimization of the positions of all terminal nodes and the\nscale of the design. This is equivalent to solving the problem\n\n                 {}∈     t\nminimize (–m) over m,ui U   s.t.\n\n     ≤    ≤          ∈  t\n(1) 0  ui, x w  for all ui U\n\n     ≤    ≤          ∈  t\n (2) 0 ui, y h for all ui U\n\n        []+ σ    −      −    2+−2≤                  ∈  t\n (3) m ∑ (1  k )lk  ()ui,x uj,x ()ui,yuj,y0 for all pij , P\n      ∈\n     ekpij\n\n    6.4  Edge Optimization\n\n Edge optimization is used to selectively lengthen points by the same relative amount to “fill out”\n a crease pattern. The scale m is fixed, and a subset of the the edges Es is subjected to the same\nvariable strain s. A subset of the terminal nodes U s  is allowed to move. The edge optimizer\n solves the problem:\n\n                                 144",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d09d0"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 28,
  "content": "./origami_dataset_dev/TreeMkr40/page028_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d09d1"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 145,
  "content": "         −σ      σ   ∈  s\n minimize    over { ,ui U } s.t.\n\n     ≤    ≤          ∈  s\n (1) 0 ui, x w  for all ui U\n\n     ≤    ≤          ∈  s\n (2) 0 ui, y h for all ui U\n\n                             \n                             \n         []()+ σ +    ()+ σ     −     −    2+−2≤                   ∈  t\n (3) m ∑ 1    lk  ∑[]1    k lk  ()ui,x uj,x ()ui,yuj,y0 for all pij , P\n       ∈            ∈\n     ekpij        ekpij      \n       ∈ s          ∉ s\n     ek E         ek E       \n\n Equation (3) can be broken into a fixed and variable part:\n\n              σ  ⋅    []+       ()+σ    −     −    2+−2≤\n              {   ml∑  k  m∑[]1     klk    ()ui, x u j, x ()ui,yuj,y0\n                    ∈        ∈            1244444344444\n             variable ek pij ekpij\n                   e ∈E s   e ∉E s                 fixed or\n                  12434k   1244k  443              variable\n                    fixed       fixed\nNote, however, that the last term may or may not be a mixture of fixed and variable parts\ndepending upon which nodes are moving.\n\n   6.5   Strain Optimization\n\nStrain optimization is used to distort the edges of the tree minimally in order to impose other\nglobal constraints, e.g., symmetry, particular angles, etc, on the overall crease pattern. As with\nedge optimization, the overall scale is fixed, but in this case, rather than maximizing the same\nstrain for all affected edges, the strain optimizer minimizes the RMS strain for a large set of edges\nwith each edge potentially having a different strain. As with the strain optimizer, there is a set of\nstrainable edges E s and a set of moving nodes U s . The strain optimizer solves the problem:\n\n            σ 2     σ        ∈  s\n         ∑   i     { i ∈ s ,u j U }\n minimize       over  ei E        s.t.\n          ∈ s\n         ei E\n\n     ≤    ≤          ∈  s\n (1) 0 ui, x w  for all ui U\n\n     ≤    ≤          ∈  s\n (2) 0 ui, y h for all ui U\n\n                              \n                              \n          ()+ σ   +    ()+ σ    −      −    2+−2≤                   ∈ t\n (3) m ∑[]1  k lk  ∑[]1    k lk  ()ui,x uj,x ()ui,yuj,y0 for all pij , P\n       ∈             ∈\n     ekpij         ekpij      \n       ∈ s           ∉ s\n     ek E          ek E       \n\n Equation 3 can also be broken into a fixed and variable part:\n\n\n                                 145",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d09d2"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 151,
  "content": "                          7.0 Software Model\n\n This document describes the overall structure of the TreeMaker software model, the data\n structures, and how they correspond to the mathematical structures the make up the Tree Method\n of origami design. TreeMaker is written in C++ and elements of the crease pattern are\n represented by C++ objects, which are data structures and functions that act upon these data\n structures.\n\n TreeMaker is strongly object-oriented. Early versions of TreeMaker were written in Object\n Pascal, which was a step up from its predecessors (I actually carried out some of the earliest\n work in Fortran), but beginning with version 3.0, I switched to C++. for its power and\n extensibility. Because of this, as I’ve added to the mathematical algorithms, I’ve tended to put\n them in a very “C++-like” form. (To a man with a hammer, everything looks like a nail.)\n\n Whether or not C++ is the most “natural” language to do origami design modeling, I make use of\n many of the unique properties of the language in TreeMaker, including polymorphism, multiple\n inheritance, operator overloading, template classes and functions, run-time type identification,\n and exception classes. If you want to get understand the software model of TreeMaker, you\n should know C++.\n\n A comment on terminology: there are two things called “objects” in this document:\n mathematical/geometrical objects (which are part of the mathematical algorithm) and software\n objects (C++ data structures). For simplicity, I’ve given the C++ objects names appropriate to\n their mathematical analogous structure. To avoid confusion, I’ll refer to mathematical objects\n with lower-case names, while all C++ objects have upper-case names and will appear in\n Courier font. So, for example, a node is a part of the mathematical model; a Node is a C++\n object that represents the mathematical object.\n\n    7.1  Overview\n\n The code for TreeMaker consists of a bunch of classes that interact with each other. TreeMaker’s\nclasses are grouped into modules; classes within a module are related to each other in some way.\nSome modules depend on or are derived from other modules. A top-level view of all the modules\nin the program are shown below in figure 7.1.\n\n\n                                 151",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d09d3"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 31,
  "content": "The new scale is 0.36367, somewhat\nlarger; so this configuration is more   4                                   5\nefficient than the last. However, it’s not       3                 4\nvery elegant, because nodes 6 and 7 are           1.000             1.000\nclose to a corner but are not precisely in                  2\nthe corner. Option-drag each of those two                 1\nnodes into the corner as shown in figure                  1 0.600\n2.3.12.                                 2                                   2\n\n   •Note: you can put a node exactly\n                                                           2\n   into the corner by dragging it                          0.750\n   slightly beyond the corner. If you   3                                   3\n   drag a node beyond an edge, when\n   you let go, TreeMaker will snap the\n   node to the nearest edge. Drag it\n   beyond a corner and TreeMaker                           3\n   will snap it into the corner.                 5                 6\n                                                 1.000             1.000\n                                        6                                   7\nNow select Build Polys and Creases\nfrom the Action menu. Nothing happens.\nWhat’s wrong?                                         2.3.12\nTreeMaker cannot build polygons or\ncreases if there are unpinned, or movable, terminal nodes that are inside what would be a\npolygon. What do we mean by pinned? A pinned node is one that cannot be moved in any\ndirection without either violating a path constraint or going outside the square.\n\nNodes aren’t the only things that are pinned; an edge whose length cannot be made larger\nwithout causing some path to be violated is also said to be pinned. A pinned edge is shown in a\nlighter blue than an unpinned edge (initially, all edges are unpinned). Looking at figure 2.3.12,\nyou can see that all edges except edge number 1, and all terminal nodes except node 1, are\npinned.\n\nAn edge that isn’t pinned can be made longer without reducing the lengths of other edges, which\nmeans that the flap in the base that corresponds to the edge can be made longer. Sometimes\nlengthening a flap of the base is esthetically acceptable; sometimes it isn’t. For this example, if\nwe lengthen the head flap, we’ll just have a bit more paper with which to make hair, facial\nfeatures, et cetera. So we can, and will, length edge number 1.\n\n\n                                  31",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d09d4"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 25,
  "content": "    2.3  Tutorial 3: Changing edge lengths\n\n In this tutorial, you will work through the design of a base that could be used for a human figure.\n In the process, you will learn how to change the lengths of flaps.\n\nIf you have quit TreeMaker, start it up\nagain or select New from the File menu\nto create a new square. We will be                        1\n                                                                        5\nmaking a human figure, so using the\n                                                          1\n                                           4                     4\ntechniques described in the previous                      1.000\n                                                  3              1.000\ntutorial, draw a stick figure of a human as        1.000  2\nshown in figure 2.3.1.\n\nInitially, all of the edges of the tree graph\nhave the same length, which is defined to\n                                                          2\nbe 1 unit. The length of the edge is                      1.000\nwritten near the middle of the edge. For\nmany designs, it is desirable to change\nthe lengths of some of the edges to make\nthem longer or shorter than other edges.                  3\nFor example, if you were making a                  5             6\n                                                   1.000          1.000\ngrasshopper, you’d want the back legs to    6                            7\nbe much longer than the front legs. In\nTreeMaker, you can choose the length of\nany flap. That’s what we’ll learn how to\ndo now.                                                2.3.1\nEach edge of the tree has a set of\nattributes, one of which is its length. To change the length of the “head” (i.e., edge number 1),\ndouble-click on it. A dialog box will appear as shown in figure 2.3.2.\n\n\n                                      2.3.2\n\n\n                                  25",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d09d5"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 19,
  "content": "If you built creases to make your paper\nlook like figure 2.2.3, select Remove                      1\nPolygons from the Action menu and                2\n make sure you are in Default View (in                             2\n                                        4                  1\n the View menu). You’ll see that the                       1.000\n paper now has a green line, which               3\n                                                                            5\n                                                  1.000            4\n indicates the line of symmetry as shown                   2\n in figure 2.2.6.                                                   1.000\n                                        2\n Now we need to establish a relationship\n                                                           2          2\n between individual nodes and the line of                  1.000\n symmetry. A node can have one of two\n possible relationships with the line of                   3\n symmetry: it actually lie on the line of 3\n                                                                 3\n symmetry (for example, the head or tail\n of an animal) or it can be one of a pair of     5         6\n nodes arranged symmetrically about the          1.000     1.000\n line of symmetry. In our model, the head 6       3         7\n lies on the symmetry line of the tree.\n Thus, we need to force the node that\n corresponds to the head (node 7) to lie on            2.2.6\n the symmetry line of the square.\n\n When we want to impose additional requirements on a tree, we are imposing conditions on the\n various parts of the tree. We can impose conditions in several ways. The easiest is to simply\n select node 1, and from the Conditions menu, select the command Node fixed to symmetry\n line.\n\n What we have done is impose a\ncondition on node 1. The tangible                          1\nevidence of this is that the circle around       2\nnode 1 has turned green, as shown in                               2\n                                        4                  1\nfigure 2.2.7. Also, if you click on the                    1.000\nConditions menu, you’ll see that the             3\n                                                                            5\nNode fixed to symmetry line                       1.000            4\n                          command                          2\nis now checked. (Don’t select the                                   1.000\ncommand again, or you’ll toggle off this 2\ncondition.)\n                                                           2          2\n                                                           1.000\n   •Note that node 1 hasn’t moved and\n   isn’t on the symmetry line;                             3\n   conditions don’t take effect until   3\n                                                                 3\n   you perform another optimization.\n                                                 5         6\nNext, we need to tell TreeMaker that             1.000     1.000\npairs of flaps should be mirror-\n                                        6         3         7\nsymmetric. For example, nodes 4 and 5\ncorrespond to the left and right arms of\nthe figure. Thus, each of nodes 4 and 5                2.2.7\nshould be the mirror image of the other.\n\n                                  19",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d09d6"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 90,
  "content": "./origami_dataset_dev/TreeMkr40/page090_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d09d7"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 21,
  "content": "                                     2.2.9\n\nThe (empty) scrolling list is a list of all conditions that apply to node 6. It’s empty because there\nare no conditions on node 6. The popup menu at the right is for adding conditions. If you click on\nthe popup menu it will give you a list of conditions to choose from. Select Nodes paired about\nsymmetry line. A new condition will appear in the scrolling list, as shown in figure 2.2.10.\n\n\n                                    2.2.10\n\nYou see that a condition has been added to the scrolling list. You need to fill in which node is\npaired with node 6. Type a 7 into the field and click OK.\n\n\n                                 21",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d09d8"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 35,
  "content": "Select command Optimize Scale from\nthe Action menu; you should arrive at a                   5        3        4\ndistribution of terminal nodes as shown\nin figure 3.1.2.                                             4        3\n                                                    3\n                                                             1.000    1.000\nThis crease pattern gives a single active                                   3\npolygon, which is a hexagon. Now, as I                          3\n                                              2\nsaid, there are several ways to add                                   5\ncreases to this pattern to complete the                    2          1.000\n                                                                            6\nbase. The simplest is the one we have   7                  1.000\nalready learned; simply select Build          6\nPolys and Creases from the  Action             1.000  2\nmenu. This selection fills in the active                             3\npolygon with the “universal molecule”   2\ncrease pattern. This is the simplest          1        7\n                                                               2\npattern and produces the least total crease    1.000    1.000\nlength.\n                                        1       2        8\nAlthough the universal molecule is the\nsimplest pattern, it produces a base with\nwide flaps that must be repeatedly sunk                3.1.2\nin and out to narrow them.\n\n\n                                                       3.1.3\n\n\n                                  35",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d09d9"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 9,
  "content": " • Double-click on a node or edge to edit its individual characteristics (we’ll get into this later)\n\n By clicking and dragging, you can change the position of a node or edge. As you build up\n constraints on the position of a node, a node can become “pinned” and you won’t be able to drag\n it around any more. However, if you hold down the option key, you can override this behavior\n and drag a pinned node.\n\n To delete a node or edge, you can either hit the backspace key or select Clear from the Edit\n menu. Although you can’t drag a pinned node without holding down the option key, you can\n delete any node at any time.\n\n Keyboard commands for editing are:\n\n • <delete> or <forward delete> to delete selected nodes or edges\n\n • <tab> to deselect everything\n\n • Command-A to select everything\n\n Deleting a terminal node also removes the attached edge. Similarly, deleting an edge also deletes\n any nodes that would otherwise be orphaned.\n\n • Note: you can’t delete a node or edge if it would break the tree into two pieces. You’ll get an\n error message if you try.\n\nNow we will build a tree. Choose Select\nAll from the Edit menu and then choose\nClear from the Edit menu (or hit\n<delete>) to get rid of what’s currently\non the square. Now, starting near the\nbottom of the square, click once to place\na node; then click once about 1/3 of the\nway up; click once again about 2/3 of the\nway up; and click once near the top of\nthe square. You will have created a line\nof four nodes and three edges as shown\nin figure 2.1.3.\n\nThis line of nodes represents the head\n(top), body (middle) and tail (bottom) of\nthe animal. Note that only terminal nodes\nget circles around them.\n\n\n                                                       2.1.3\n\n\n                                   9",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d09da"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 91,
  "content": "./origami_dataset_dev/TreeMkr40/page091_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d09db"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 155,
  "content": "system. The UI classes are heavily platform-dependent; they are built from PowerPlant, which is\na Macintosh-specific class library.\n\n         Tree Classes\n\nThe Tree Classes are the classes that support a unified mathematical model of the tree (the stick\nfigure); the crease pattern; and the relationships between the various objects. The figure below\nshows the different classes and their inheritance hierarchy.\n\n            EdgeOwner\nPathOwner                    Tree\n             PolyOwner\nNodeOwner\n                             Poly\n            CreaseOwner\n                             Path        ConditionNodeFixed\n            VertexOwner                  ConditionNodeSymmetric\n                             Node        ConditionNodeOnEdge\n               Part          Condition   ConditionNodeOnCorner\n                                        ConditionNodesPaired\n                             Edge\n                                        ConditionNodesCollinear\n                                        ConditionEdgeLengthFixed\n                                                              ConditionPathAngleFixed\n                                         ConditionPathActive\n                                                              ConditionPathAngleQuant\n\n                                     7.2\n\nThe primary Tree Classes are:\nTree\n\nNode\n\nEdge\n\nPath\n\nPoly\n\nVertex\n\nCrease\n\nCondition\n\nAll primary classes inherit similar behavior from the Part base class. Some classes have the\ncapability of owning instances of other classes. Condition is a base class for conditions\nimposed on the crease pattern (e.g., bilateral symmetry). A more detailed description of the Tree\nclasses is given later.\n\n\n                                155",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d09dc"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 141,
  "content": " Figure 5.35. Oru tree crease pattern with middle points.\n Without the universal molecule one must arbitrarily add circles to the network of active paths\n until every polygon is of order 4 or smaller. Since there is some choice about where circles are\n added, the tree method solution for a base is not necessarily unique. The universal molecule,\n however, is entirely determined. By applying the recursive universal molecule construction, any\n network of active paths can be filled in with creases and collapsed into a uniaxial base. Thus, the\n progession from tree graph to full crease pattern may be accomplished using a single\n optimization.\n\n There is another, subtler advantage to the universal molecule: it tends to shift paper away from\n the plane of projection of the base, which simplifies collapsing the base and reduces the buildup\n of layers where flaps join together. Although the flaps tend to be wider than those produced with\n other algorithms, one can easily make points narrower by repeatedly sinking the corners of\n collapsed polygons to narrow the flaps. This, of course, builds up layers of paper in the base,\n which is to some degree unavoidable. The most equitable distribution of these extra layers comes\n when the points are sunk along lines parallel to the plane of projection. Since the edges of the\n inset polygons are parallel to the plane of projection in the folded base, these lines naturally form\n lines along which to sink.\n\n There are other polygon-filling algorithms beyond the universal molecule described above, and I\n will mention two of them here. Toshiyuki Meguro — who coined the term “molecule” (bun-shi,\n in Japanese) has developed a technique that makes use of overlapping circles, which in effect,\n allows one to add new branches to the tree by adding nodes to the middle of existing edges. This\n technique allows each new circle to touch four, rather than three, existing circles, and cuts down\n on the number of circles that need to be added. I have extended and generalized Meguro’s\n concept to apply to arbitrary polygons by introducing the concept of a “stub.” Also Fumiaki\n Kawahata has developed a technique for filling in polygons that involves projecting hyperbolas,\n rather than straight lines, inward from the edges of an active polygon, which results is bases\n whose points can be narrower and more regular (if desired). No doubt there are yet other\n algorithms lurking out there in the mathematical wilds.\n\n Although the mathematical algorithms for origami design are rigorously defined, the actual\n location of the nodes and creases can be computationally intensive. Computationally intensive\n problems are best handled by computer and indeed, the procedures described above can be cast\n in the mathematical and logical terms that lend themselves to computer modeling. The computer\n program TreeMaker implements these algorithms. Using TreeMaker, I’ve solved for bases for a\nnumber of subjects whose solutions have eluded me over the years — deer with varying sizes\nand types of antlers, 32-legged centipedes, flying insects, and more. Using a computer program\naccelerates the development of a model by orders of magnitude; from the tree to the full crease\npattern takes less than five minutes (although folding the crease pattern into a base may take two\nto three hours after that!) Not only does TreeMaker come up with the base initially, but it lets one\nincrementally iterate the design of the model, shifting paper from one part of the model to\nanother to lengthen some points and shorten others, all the while keeping the entire model\nmaximally efficient.\n\nOne need not program a computer, of course, to use the techniques I’ve described to design\norigami — origami designers have used similar techniques for years. But I foresee a dramatic\nshift in the art as these techniques — what one might call “algorithmic” origami design —\nbecome more widespread. For years, technical folders concentrated on getting the right number\n\n                                 141",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d09dd"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 169,
  "content": "                              8.0 Final Stuff\n\n    8.1 Comments and Caveats\n\n While TreeMaker is a very powerful tool for origami design (if I do say so), it is important to be\n aware of its limitations, so you don’t try to use it for something it’s not suited for. There are also\n several subtleties to TreeMaker design that, when properly accounted for, will further improve\n your productivity.\n\n Keep in mind that TreeMaker is basically a dumb optimizer; it does not seek out symmetries that\nlead to particularly elegant folding sequences, nor does it recognize when a slight modification of\nthe lengths of branches might allow a more elegant or symmetric folding sequence. TreeMaker\nalways takes the brute-force approach, seeking the absolute optimum, even when a slight\ndeviation from the optimum would make a much more elegant model. However, you can\nrecognize when a particularly symmetric configuration is close at hand and can set conditions to\nforce a symmetric and/or more elegant solution.\n\nAlso, TreeMaker finds local optima, not global optima. If you see a lot of unused space in the\ncrease pattern, you might consider rearranging a few circles and restarting the search routine.\nYou may find a better solution with a different initial trial solution. In general, efficient solutions\nhave many 3- and 4-sided polygons after the first optimization. If you find that you get several\npolygons with a large number of sides, try dragging one or more nodes into the center of the big\npolygon and re-optimizing.\n\nMost importantly, some subjects just don’t lend themselves to design using tree theory. Since\ntree theory abstracts the model as a stick figure, for subjects that can be approximated by a stick\nfigure, TreeMaker works very well; but for subjects that are not easily turned into a stick figure,\nTreeMaker is the wrong tool for the job. For example, for chunky models or models that require\nlarge flat regions (such as a hippo or butterfly) other design algorithms are likely to do a better\njob than TreeMaker. Also, since the tree itself is inherently one-dimensional, you can’t specify\n colors directly for models that show both sides of the paper; while you can force flaps to be edge\n or corner flaps (and thus are easily reversible), you can’t easily design complex two-toned\n models such as zebras or tigers.\n\n Finally, keep in mind that for all its power, TreeMaker only provides a base. It’s still up to you to\nthin the flaps and convert the base into the final model, and there is a lot of room for\npersonalizing, customizing, and putting your own stamp of artistry onto your design.\n\nTreeMaker is written in C++ using Metrowerks’s CodeWarrior development environment.\nVersions prior to 4.0 of TreeMaker may be freely distributed provided that you include all\ndocumentation and the copyright notice unmodified and that you do not charge anything for it.\nVersion 4.0 may not be freely distributed due to copyright restrictions on some of the code. See\nthe cover page of this manual for license terms.\n\nTreeMaker is constantly evolving, and my priorities are to fix known bugs and add features but\nnot to deal with obscure incompatibilities. It ain’t bulletproof, and while I currently know of no\nlife-threatening bugs and will try to fix any that I hear about, it still may exhibit unexpected\nbehavior (i.e., crashes). Have fun playing around, but use it at your own risk.\n\n\n                                 169",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d09de"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 69,
  "content": "./origami_dataset_dev/TreeMkr40/page069_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d09df"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 96,
  "content": "./origami_dataset_dev/TreeMkr40/page096_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d09e0"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 168,
  "content": "Vertex   mCreases            All creases that terminate on this vertex\n\n         mVertexOwner        node or path that owns this vertex\nCrease\n\nA Crease is a line in the crease pattern. There are three types of Creases: ValleyCrease,\nMountainCrease, and TristateCrease. The Crease inherits only from Part\n\n                             Part        Crease\n\nThe references contained by a Crease are summarized below. Names in bold refer to inherited\nmember variables.\nObject   References          What\n\nCrease   mVertices           2 vertices at each end of the crease\n\n         mCreaseOwner        poly or path that owns this crease\nCondition\n\nA Condition is a relationship between portions of the tree to implement symmetry, fixed\nangles, and other constraints on the crease pattern.\n\n          Part         Condition      ConditionEdgeLengthFixed\n                                      ConditionNodeFixed\n                                      ConditionNodeOnEdge\n                                      ConditionNodesCollinear\n                                      ConditionNodesPaired\n                                      ConditionNodeSymmetric\n                                      ConditionPathActive\n                                      ConditionPathAngleFixed\n                                      ConditionPathAngleQuant\n                                      ConditionNodeOnCorner\n                                     7.17\n\nCondition is a base class that defines the behavior for all possible conditions, which may\nestablish and enforce relationships any other part of the tree. Before an optimization is\nperformed, all Conditions associated with a Tree are polled and are allowed to apply\nmathematical constraints (equalities and inequalities) that enforce the condition.\n\nAt present, there are 10 types of Condition on Nodes, Edges, and Paths.\n\n\n                                168",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d09e1"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 140,
  "content": "fold up in the base (I encourage you to try). The flaps are, as you might expect, much wider than\nthey are long. However, by sinking the top of the base in and each, all of the flaps can be thinned\nto arbitrarily large aspect ratio while maintaining their relative lengths.\n\n\nFigure 5.34. Universal molecule version of the Oru tree\nAll of the crease patterns in figures 5.31–5.34 share the property that all points lie on the edge of\nthe square. If we relax this constraint and allow middle points, then we can achieve a slightly\nlarger and even simpler pattern (with a scale of 0.067 as compared to 0.065 for the previous\npattern), shown in figure 5.35.\n\n\n                                140",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d09e2"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 154,
  "content": "          Vector<T>\n\n Vector<T> is a template class for vectors (not the same as the STL vector<T> class) that\n supports arithmetic operations and various vector operations.\n\n          Matrix<T>\n\n Matrix<T> is a template class for matrices that supports arithmetic operations and various\n matrix operations.\n\n          LinearAlgebra\n\n LinearAlgebra contains a class, Ludecomp<T>, that perform various linear algebra\n operations, including LU decomposition, matrix inversion, and solution of linear systems. It also\n includes a class NewtonRaphson<T> that solves systems of nonlinear equations.\n\n          Cpfsqp\n\n Cpfsqp is a C++ interface to the CFSQP library for performing nonlinear constrained\n optimization. It is particularly suited for embedded applications where constraints are regularly\n added or removed or where the number of constraints are not known beforehand. Cpfsqp\n contains two classes, Cpfsqp, which takes over some of the housekeeping for problems with a\n large number of constraints, and DifferentiableFunction, which is a base class for a\n function of a vector that has a defined gradient function.\n\n          ListOf<T>\n\n ListOf<T> is a template class based on the (stand-alone) LArray class in PowerPlant. It\n provides type-safe arrays, support for PowerPlant’s LArrayIterator class for iterating\nthrough mutable arrays, and supports two independent notations for accessing arrays: a Pascal-\nstyle (1-based) notation, and a C-style (0-based) notation. It also adds routines for treating arrays\nas sets, supporting intersection and union of lists. (It’s my “general-purpose list” class.)\n\n         Ref<T>, RefList<T>\n\nThe Reference classes are classes that provide the equivalent of a “smart” pointer-to-T; when the\nobject of a Ref<T> is deleted, the Ref<T> sets itself to zero no matter where it is. This\neliminates dangling pointers (or at least transforms them into NULL pointers, which are easier to\ncatch). In addition, it’s possible to configure the objects being referenced in such a way that they\ndelete themselves when the number of references drops below a preset value (automatic garbage\ncollection). (I don’t use this latter capability in TreeMaker.)\n\n      TreeMaker Classes\n\nTreeMaker classes are the classes unique to the TreeMaker application. They are grouped in 3\nsets: Tree Classes, which support and maintain the internal structure of the Tree; they are nearly\nplatform-independent. Optimizer Classes perform calculations and implement algorithms that act\nupon the Tree. They, too, are nearly platform-independent. User Interface Classes provide the\nuser interface, support display and editing of Tree objects, interaction with the OS and the file\n\n\n                                 154",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d09e3"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 8,
  "content": "If exactly one node is selected and you\nclick somewhere else, a new node will be\nplaced at the click location with a line\nconnecting the nodes. The line between\nthe two nodes is called an edge. We’ll do\nthis now. Make sure the node is selected\n(click once on it so that it is highlighted)\nand then click once above the node; you\nhave now created an edge connecting the\ntwo nodes. Note that the new node is\nnow selected (highlighted), as is the\nedge, as shown in figure 2.1.2.\n\nThe edge displays two numbers near its\nmidpoint: the index, which serves to\nidentify the edge, and another number\nbelow it, which is the desired length of\nthe edge. The length of the edge is the\nsame as the length of the corresponding\nflap on the base.\n                                                       2.1.2\n   • Note: all lengths on the tree are\n   defined relative to each other, not\n   relative to the size of the square.\n\nAll edges start out with a length of 1.000 by default; later you’ll learn how to change the length\nof an edge. Note too that the displayed length of the edge doesn’t change when you drag nodes\nand edges around; the displayed length is not the actual length of the drawn line; it’s the desired\nlength of the corresponding flap.\n\nNote that each node has a circle around it. That’s because they are terminal nodes. Terminal\nnodes are nodes that have only one edge attached to them, and they correspond to the tips of\nflaps of the base.\n\nAs mentioned earlier, if you click on an existing node, it becomes selected. If you hold down the\nmouse button after clicking you can drag the node around on the square. If exactly one node is\nalready selected and you click elsewhere in the square, you create a new node at the click\nlocation and create a new edge connected to the selected node. (If zero or two or more nodes are\nselected and you click elsewhere, everything gets deselected.) You can also click on edges and\ndrag them; dragging an edge drags the nodes at each end. You can extended the selected (select\nmore than one node or edge at a time) by holding down the shift key when you click on nodes or\nedges. The collection of selected nodes and edges is called the selection.\n\nThe following are all the things you do with clicks:\n\n• Click on a node or edge to select it and deselect everything else\n\n• Shift-click on a deselected node or edge to add it to the selection\n\n• Shift-click on a selected node or edge to remove it from the selection\n\n                                   8",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d09e4"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 34,
  "content": "                       3.0 Tips and Techniques\n\n This section describes several tips and techniques that will improve your productivity when\n working with TreeMaker.\n\n   3.1 Adding nodes\n\nOnce you have defined a tree and found\nan optimum configuration of nodes, you\n                                                        5\nhave several options for filling in the                                 4\nremaining creases. In this section, I’ll\n                                                            4\n                                                                    3\ndemonstrate several different treaments                     1.000\nof the same tree. Construct a “generic                              1.000\nmammal” tree with equal-length head,                            3\ntail, four legs, and a body, as shown in\n                                            7                       5\nfigure 3.1.1.                                              2        1.000\n                                                 6         1.000        6\n                                                 1.000\n                                                      2\n\n                                                         7\n                                                 1        1.000\n                                                 1.000\n                                                             8\n                                            1\n\n\n                                                       3.1.1\n\n\n                                  34",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d09e5"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 20,
  "content": " To set up this condition, click on node 4 and shift-click on node 5 to select them both. Then go to\n the Conditions menu and select the Nodes paired command.\n\nNow that nodes 4 and 5 have a condition\non them, their node circles are also green                 1\nas shown in figure 2.2.8. If you still have      2\nthem selected and click on the                                     2\n                                        4                  1\nConditions menu, you’ll see that the                       1.000\nNodes paired command is checked.                 3\n                                                                            5\n                                                  1.000            4\n                                                           2\nWe also need to pair nodes 6 and 7. You                             1.000\ncould do this the same way — select     2\nnodes 6 and 7 and then select the Nodes\n                                                           2          2\npaired command — but there’s more                          1.000\nthan one way to place conditions on\nnodes. So, just for the experience, we’ll                  3\ndo these a different way.               3\n                                                                 3\nDouble-click on Node 6. This brings up           5         6\nthe Node Editor dialog, which is shown           1.000     1.000\nin figure 2.2.9.\n                                        6         3         7\n\n                                                       2.2.8\n\n\n                                  20",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d09e6"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 83,
  "content": "./origami_dataset_dev/TreeMkr40/page083_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d09e7"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 84,
  "content": "./origami_dataset_dev/TreeMkr40/page084_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d09e8"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 36,
  "content": "It is possible to narrow flaps by adding\nnew nodes to the tree and inflating them                  5                 4\nto break up the active polygon. For\nexample, in the tree shown above, if you                     4        3\nadd a point to node 3, as shown in figure                    1.000    1.000\n3.1.4,\n                                                                3\n\nand then, making sure both the new edge                               5\n                          Optimize                             8\nand node are selected, choose                              2    1.000 1.000\n                                                                            6\nSelection. This will expand the new edge 7                 1.0009\nto its limit, creating new active paths that  6\neffectively break up the hexagon into          1.000  2\nsmaller active polygons — in this case,\ntwo triangles and two quadrilaterals, as\nshown in figure 3.1.5.                        1        7\n                                               1.000    1.000\n\n                                        1                8\n\n                                                       3.1.4\n\n\n                                                          5        3        4\n\n                                                             4        3\n                                                    3\n                                                             1.000    1.000\n                                                            3               3\n                                                                3\n                                              2                8\n                                                              9 1.000-37.9%\n                                                         3            5\n                                                                   3  1.000\n                                                2          2\n                                                           1.000            6\n                                        7                    3\n                                              6\n                                               1.000  2\n                                                                     3\n\n                                        2                  2\n                                              1        7\n                                                               2\n                                               1.000    1.000\n\n                                        1       2        8\n\n                                                       3.1.5\n\n\n                                  36",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d09e9"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 22,
  "content": "The result is shown in figure 2.2.11.\nAfter the dialog box is closed, you’ll see                 1\nthat the circles for nodes 6 and 7 circle        2\nhave turned green.\n                                        4                 1        2\n                                                           1.000\n   • Note: if you haven’t defined a line         3\n                                                 1.000             4        5\n   of symmetry, the symmetry-related                       2\n   conditions have no effect.                                      1.000\n                                        2\n   • Note: terminal nodes are the only\n                                                           2          2\n   nodes you can set conditions on.                         1.000\n   You don’t have to set up any\n   conditions on internal nodes (and in                     3\n   fact any conditions you might set    3\n   up on them are ignored) since the                             3\n   position of internal nodes in the tree        5         6\n   are irrelevant to the final crease             1.000     1.000\n   pattern.\n                                        6         3         7\nNow we have set up the conditions that\nenforce symmetry. As mentioned above,                 2.2.11\nthe conditions don’t take effect until we\nre-optimize the pattern. Select Optimize\nScale           Action\n       from the       menu to re-                         1\noptimize the crease pattern taking the\nnew conditions into account. Figure              2                 2\n2.2.12 shows the result.                                  1\n                                        4                 1.000             5\n                                                 3                 4\n                                                 1.000     2       1.000\n\n                                          2                              2\n                                                           2\n                                                            1.000\n\n                                                            3\n                                             3                        3\n\n                                                     5         6\n                                                      1.000     1.000\n\n                                                6         3        7\n\n                                                      2.2.12\n\n\n                                  22",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d09ea"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 91,
  "content": "./origami_dataset_dev/TreeMkr40/page091_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d09eb"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 142,
  "content": "and lengths of points to the near-exclusion of other folding considerations such as line, form, and\ncharacter. With algorithmic origami design, point count comes automatically and is no longer the\noverwhelming consideration in technical origami design. In the past, origami art and origami\nscience have often been at odds, but with algorithmic origami design, the technical designer,\nfreed from the need to expend his or her energies on the number of appendages, can focus on the\nart of folding, secure in the knowledge that the science will take care of itself.\n\n\n                                142",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d09ec"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 156,
  "content": "          Optimizer Classes\n\n Optimizer classes perform mathematical operations on the Tree that generate a valid crease\n pattern. Optimizer classes are At present, there are four optimizer classes:\n ScaleOptimizer\n\n EdgeOptimizer\n\n StrainOptimizer\n\n StubFinder\n\n These four classes do the mathematical “heavy lifting”; they actually solve for particular creases\n patterns. They are derived from pure numerical classes (NewtonRaphson and Cpfsqp).\n\n ScaleOptimizer finds the arrangement of nodes that gives the largest possible crease\n pattern.\n\n EdgeOptimizer selectively increases particular edges to their largest possible size.\n\n StrainOptimizer is used in heavily constrained situations; it finds a configuration that\n minimizes the strain on the edges.\n\n StubFinder is a simple solver that adds stubs to a tree to break high-order polygons into\n lower-order polygons.\n\n The three optimizer classes inherit from the TreeOptimizer class, which embodies platform-\ndependent behaviors: cancellation, error messages, and showing of progress.\n\nTo support the optimizers, there are a number of DifferentiableFunction objects that\nare used for constraints and objective functions for the optimizers.\n\n\n                                 156",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d09ed"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 18,
  "content": "./origami_dataset_dev/TreeMkr40/page018_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d09ee"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 69,
  "content": "./origami_dataset_dev/TreeMkr40/page069_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d09ef"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 157,
  "content": " The inheritance relationships between the optimizer classes are shown below.\n\n             NewtonRaphson              StubFinder\n\n             Cpfsqp                     ScaleOptimizer\n                                        EdgeOptimizer\n             TreeOptimizer              StrainOptimizer\n\n                                        ScaleOptimizer_Objective\n                                         EdgeOptimizer_Objective\n                                         StrainOptimizer_Objective\n             DifferentiableFunction     OneVarFn\n                                         PathFn1\n                                         PathFn2\n                                         PathAngleFn1\n                                         PathAngleFn2\n                                         StrainPathFn1\n                                         StrainPathFn2\n                                         StrainPathFn3\n                                         StickToEdgeFn\n                                         StickToLineFn\n                                         PairFn1A\n                                         PairFn1B\n                                         PairFn2A\n                                         PairFn2B\n                                         CollinearFn1\n                                         CollinearFn2\n                                         CollinearFn3\n                                         BoundaryFn\n                                         QuantizeAngleFn1\n                                         QuantizeAngleFn2\n                                         LocalizeFn\n                                         MultiStrainPathFn1\n                                         MultiStrainPathFn2\n                                         MultiStrainPathFn3\n                                         CornerFn\n                                      7.3\n\n          User Interface Classes\n\n The user interface of TreeMaker is implemented by a collection of PowerPlant object\n descendants. In the following description, PowerPlant classes are in boldface type.\n\n             Application\n\n The TreeApp is the application object that maintains interaction with the operating system, puts\nup and controls the menu bar, and dispatches commands and clicks to control objects.\n\n                         LApplication        TreeApp\n                                      7.4\n\n\n                                 157",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d09f0"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 143,
  "content": "                     6.0 TreeMaker Algorithms\n\nThis section describes the internal mathematical algorithms of TreeMaker. You don’t need to\nknow any of this to use the program, but if you’re curious about what’s going on inside your\nmachine, you might find this section interesting. If you come up with any\nmathematical/algorithmic ideas of your own, send them to me and I’ll put them into a future\nversion.\n\n   6.1  Mathematical Model\n\nTreeMaker finds crease patterns by performing several different types of nonlinear constrained\noptimization. The quantity to maximize is the scale, which is the size of a 1-unit flap compared\nto the size of the square. There are two families of constraints that must be satisfied for any valid\ncrease pattern:\n\n— The coordinates of every node must lie within the square\n\n— The separation between any two nodes on the square must be at least as large as the scaled\nlength of the path between the two nodes as measured along the tree.\n\nIf there are N nodes in a figure, the first condition sets 4N linear inequality constraints while the\nsecond sets N(N–1)/2 quadratic inequality constraints. In addition to these constraints, the user\ncan set a number of other constraints:\n\n— A node can have its position set to a fixed value\n\n— A node can be constrained to lie on a line of bilateral symmetry\n\n— Two nodes can be constrained to lie symmetrically about a line of symmetry\n\n— Three nodes can be constrained to be collinear\n\n— An edge can be constrained to a fixed length\n\n— Two edges can be constrained to have the same strain\n\n— A path can be forced to be active\n\n— A path can have its angle set to a fixed value\n\n— A path can have its angle quantized to a multiple of a given angle\n\nThe problem is solved by converting the path conditions of the Tree Theorem and any constraints\ninto mathematical equations, specifically, a constrained nonlinear optimization. This document\ndecribes the equations that define each type of optimization.\n\n\n                                143",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d09f1"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 91,
  "content": "./origami_dataset_dev/TreeMkr40/page091_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d09f2"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 23,
  "content": "When you ran the optimization, you saw\nthat the figure almost instantly became\nsymmetric and the final pattern of\nterminal nodes is now symmetric.\n(Observe, though, that the internal nodes\nand edges are right where we left them.)\nIf you select Creases Only (from the\nView menu) and   Build Polys and\nCreases (from the Action menu), you\nwill see the full crease pattern, which is\nalso mirror-symmetric, as shown in\nfigure 2.2.13.\n\nNote the scale of the model (shown at the\ntop of the window) is now 0.272 (it was\n0.277 with the asymmetric structure).\nThe scale has dropped, meaning that the\nbase folded from this pattern is slightly\nsmaller than the asymmetric base. In\ngeneral, when you add constraints to a\npattern, you will reduce the scale and                2.2.13\nthus the size of the finished model.\n\nWe can also try the other line of symmetry. Select Edit Tree… from the Edit menu to open the\nTree Editor. Click on the “diag” button, which sets up a line of symmetry along one of the\ndiagonals of the square and click OK. Also, put the square back into Default View if it wasn’t\nthere already.\n\nNow the node pattern is still symmetric\nabout the book fold and the conditions on                 1\nthe nodes relating to symmetry haven’t\n                                                 2                 2\nchanged, but we have moved the line of\n                                                          1\nsymmetry; observe that the green line of 6                1.000             7\nsymmetry in figure 2.2.14 is now along                    11\n                                                 5                 6\nthe diagonal. Therefore, the conditions           1.000             1.000\n                                                 12        2      10\nwe imposed are no longer satisfied.                  14       15\nNothing has moved because conditions                  34\naren’t enforced until we re-optimize.     2               1              2\n                                                           2\nAgain select the command Optimize                           1.000\nScale from the Action menu.                               2\n                                                          13 3\nObserve that, as shown in figure 2.2.15,     3                        3\nthe nodes have moved to new positions                 8       9\nconsistent with the new symmetry                     3         4\nconditions. Also, the polygons and                    1.000     1.000\ncreases have disappeared. Whenever you          4         3        5\nchange the node configuration by moving\na node, the polygons that used to include\nthat node are destroyed, as are any                   2.2.14\ncreases that may have been associated\n\n                                  23",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d09f3"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 37,
  "content": "Building creases gives the crease pattern\nshown in figure 3.1.6.\n\nAlternatively, you could have added the\nnew edge to node 2, which would give\nyou the same crease pattern flopped end-\nfor-end.\n\nWith either of these two patterns, you get\na crease pattern in which the “head” and\n“tail” are folded differently. For reasons\nof symmetry, you might want the head\nand tail to be symmetric, in which case,\nif you add a new edge, you need to put it\nin the middle of edge 2.\n\nA third possibility is to split edge 2,\nusing the Split selected edge command.\n If you split the edge, add a new node and\n edge, and then optimize the length of the\n new edge, you will get the node                       3.1.6\narrangement shown in figure 3.1.7.\n\n                                                          5        3        4\n\n                                                             3        2\n                                                    3\n                                                             1.000    1.000\n                                                 9        3                 3\n                                                                3\n                                              2\n                                                          9\n                                                             8        4\n                                                              0.500\n                                                           9          1.000\n                                                          9        3        6\n                                        7       2    9    10  9\n                                                        7  1.000-43.8%\n                                              5          0.500\n                                               1.000\n                                                      2  9\n                                                                     3\n\n                                        2                2        9\n                                              1        6\n                                                               2\n                                               1.000    1.000\n\n                                        1       2        8\n\n                                                       3.1.7\n\n\n                                  37",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d09f4"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 83,
  "content": "./origami_dataset_dev/TreeMkr40/page083_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d09f5"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 93,
  "content": "    Build Polygons                     14\n Build all of the polygons in the crease pattern. This command constucts polys from active  and\n border paths; it also computes all the reduced paths and reduced polygons, according to the\n theory of the “universal molecule” construction. (The algorithm that does this is one of the\n centerpieces of my origami design theory.) Figure 4.5.17 shows a typical before and after for this\n command.\n\n\n                                       4.5.17\n\nIn the example above, the triangles are converted to triangle polygons, while the irregular\npentagon at the bottom contains a set nested subpolygons.\n   Fracture PolyÉ                       1;\n Any active polygon can be broken up into smaller active polygons by adding a stub to the\n corresponding subtree (this is a generalization of Toshiyuki Meguro’s overlapping circle\n algorithm). If you add the stub to an existing node and optimize it using the Optimize Selection\n command, you can usually only break the polygon into three smaller polys. However, if one adds\n the degree of freedom to create a new node along an edge, then it’s possible to break the poly\n into four smaller polys. (This is also a new algorithm I developed.) This command implements\n this improved algorithm.\n\n You must select a major polygon to fracture, then select this command. A dialog is put up as\n shown in figure 4.5.18.\n\n\n                                  93",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d09f6"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 87,
  "content": "                                       4.5.10\n\nThe other fields of the View Editor are:\n\nShow symmetry lines — draw the line of symmetry on the square\n\nShow terminal nodes — display nodes that have only one edge attached. All nodes are displayed\nas dark black dots at the location of each node. Nodes with conditions attached are shown in dark\ngreen.\n\nShow internal nodes — display nodes that have more than one edge attached\n\nShow sub nodes — display nodes that are not part of the Tree but that are contained by polys\n\nShow node indices — display the indices of the nodes\n\nShow node circles — display a circle around each terminal node. The circles around nodes with\nconditions attached are shown in dark green.\n\nShow node labels — display any labels you have defined for nodes\n\nShow node flags — display single-letter codes for the flags attached to each node, which are:\n\n   t — terminal node: node has only one edge attached\n\n   b — border node: node lies on the convex hull of the group of nodes\n\n                                  87",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d09f7"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 78,
  "content": "                                       4.4.11\n\nThere are no editable fields of a crease and you can’t apply conditions to one. However, the\nCrease Editor does tell you the index and the type of crease (mountain, valley, or tristate).\n\nThe disclosure triangle toggles to Expert Mode, which shows some of the structural information\nabout the crease, as shown in figure 4.4.12.\n\n\n                                       4.4.12\n\nThese editors are brought up by double-clicking on a visible part, but they can also be called up\nfor any part (visible or invisible) by selecting the Edit Part… command, Edit menu (see below).\n\n   4.5   Menu commands\n\nThis section summarizes all of the menu commands of TreeMaker. TreeMaker has five menus:\nApple, File, Edit, View, Actions, and Conditions. The commands in each menu are given\nbelow.\n\n    Apple Menu\n    About TreeMakerÉ \n Shows you the version and credits for the program as shown in figure 4.5.1.\n\n\n                                  78",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d09f8"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 50,
  "content": "However, we can force nodes to lie on\nthe edge of the paper, thereby turning the             2        1        3\nassociated flaps into edge flaps, by\nsetting conditions on them. Select all the     1\nnodes, either by shift-clicking on each in\nturn, or by choosing the Select All     4                                 1\ncommand from the  Edit menu. Then                        1        2\nselect the Node fixed to edge command                    1.000     1.000\nfrom the Condition menu, which applies\n                                                 3\nthis condition to each node in the      1         1.000                     8\nselection, as shown in figure 3.3.5.\n                                                                   7\n                                                                    1.000\nRe-run the optimizer. (Because of a quirk                   1\n                                                 4\nin the optimization code, you may have                                     1\nto re-run it several times sequentially to 5      1.000\nforce convergence.) When you do, you                     5        6\n                                                1         1.000    1.000\nwill find that all the nodes now lie on the\nedge of the paper, essentially forming                  6        1        7\none giant polygon. Select Build Polys\nand Creases from the Action menu and\nCreases Only from the View menu. This                  3.3.5\npattern results in the crease pattern\nshown in figure 3.3.6.\n\nEase of collapsing the crease pattern into\na base is a good reason to force flaps to\nbe edge flaps; another good reason is the\nnumber of layers. For a given width flap,\nedge flaps have only half the number of\nlayers of middle flaps, and so if a flap is\nto be folded further, it may be desirable\nto make it be an edge flap to it will be\neasier to fold.\n\nAnother reason to make a flap be an edge\nflap is for color-changing. The bases\nproduced by TreeMaker are inherently\nsingle-color. If you are making a model\nthat exploits the colors of both sides of\nthe paper — a bald eagle, for example,\nwhich would have white head, tail, and\nfeet — then you will need to make sure\nthat the flaps to be color-changed are\nedge flaps, so that they may be turned                 3.3.6\ninside-out around the raw edges of the\nflap. (It is extremely difficult to turn a middle flap inside-out!) Of course, color-changing\nindividual flaps is only the most rudimentary way of exploiting two-tone models and is\ninsufficient for models with stripes or spots, for example. For zebras, tigers, and giraffes, you’ll\nhave to use different techniques than those found in TreeMaker.\n\n\n                                  50",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d09f9"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 44,
  "content": "When adding the new node to the crease\npattern, we didn’t necessarily have to add                1\nit to node 2, which put the extra point          2                 2\nbetween the legs of the base; we could\n                                                          1\n                                        4                                   5\nhave added it to node 4, which would put                   1.000\nthe extra point at the shoulders of the          3        2        4\nbase. If you do that and run the                  1.000             1.000\n                                                            2\noptimization, you’ll get the pattern                      98\n                                                            1.000-56.8%\nshown in figure 3.2.10.                 2                                   2\n                                                          2\nThis gives a different crease pattern,\n                                                           2\nshown in figure 3.2.11. This crease                         1.000\npattern is entirely different: yet it results\nin a plan view base with exactly the same 3                                 3\nnumber and size of flaps as the first                     3\n                                                            3\nexample.\n                                                 5        7        6\nIn both cases, the extra flap “sops up”           1.000    0.400+115.8%1.000\n                                        6        3        8       3         7\nexcess paper between the top and bottom\nof the model. The difference between the\ntwo is that in the first example, the extra        Figure 3.2.10\npaper emanates from the junction of the\ntop group of points. In the second, the\nexcess flap emanates from the bottom\ngroup of points.\n\nThere’s another possibility: we could\ncollect the excess paper in the middle of\nthe model. This would be preferable\nbecause it distributes layers more evenly\nthrough the model. We can do this by\nadding the new flap in the middle of edge\n2.\n\nTo do this, delete the new node you just\nadded. Then select edge 2. Choose the\ncommand Split selected edge… from the\nAction menu, which puts up the dialog\nshown in figure 3.2.12.\n\n\n                                                      3.2.11\n\n\n                                  44",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d09fa"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 71,
  "content": "./origami_dataset_dev/TreeMkr40/page071_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d09fb"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 106,
  "content": "./origami_dataset_dev/TreeMkr40/page106_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d09fc"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 118,
  "content": " nodes on the square becomes an edge of the base that lies in the plane of projection.\n Consequently, we have another important result:\n\n    All active paths between terminal nodes map to an edge of the base in the plane of\n    projection of the base.\n Active paths on the square lie in the plane of projection of the square, but the plane of projection\n is where the vertical layers of paper in the base meet each other. Thus, active paths are not only\n edges of the base: they are major creases of the base.\n\n So now we have the rudiments of the crease pattern for the base. We know the points on the\n square that correspond to terminal nodes of the tree become the tips of the flaps of the base, and\n we know that active paths on the square become major creases of the base. Furthermore, they are\n creases that lie in the plane of projection of the base. In many cases, this information alone is\n enough to find the complete crease pattern for the uniaxial base that corresponds to the tree. In\n many cases, though, it isn’t. So we’ll keep going.\n\n If you draw all of the active paths on a square, you get a network of lines, each of which is a\n major crease of the base. Figure 6 includes the active paths for the node pattern for the six-legged\n animal, labeled with their length. Each of those lines will turn out to be a crease in the base.\n\n Since the active paths map one-to-one to paths on the tree, any features on the tree can be\n mapped directly onto the active paths. Specifically, we can locate where on an active path each\n internal node falls. If our hypothetical ant travels from one terminal node to another encountering\n internal nodes at distances d1, d2, d3, and so forth along the way, then when we draw the crease\n pattern, we can identify each internal node along the active path connecting the nodes at the same\n distances from the terminal nodes. Thus, we can add all of the internal nodes to our budding\n crease pattern. In figure 5.7, I’ve identified all of the nodes, terminal and internal, by a letter on\n the tree, and have added their locations to the active paths in the crease pattern on the square.\n Note that in general, an internal node will show up on more than one active path.\n\n                                      EF\n                      A\n                                            BB\n                                                  A\n               EF\n\n                       BBB\n\n                                          CC\n                       C\n\n               GH\n                                     GH\n                                            CC\n                      D\n                                                  D\n\nFigure 5.7. (Left). Tree with all nodes lettered. (Right) Crease pattern with terminal nodes,\ninternal nodes, and active paths.\n\n\n                                 118",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d09fd"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 124,
  "content": " “sawhorse.” If a, b, c, and d are the lengths of the four terminal edges in either graph and e is the\nlength of the “body” in the sawhorse, then a quadrilateral whose sides are all active paths will\nhave sides of length (a+b), (b+c), (c+d), and (d+a) for the 4-star and (a+b), (b+c+e), (c+d), and\n(d+a+e) for the sawhorse. There is an ambiguity associated with quadrilateral polygons; with the\ntriangle, if we are given the lengths of the three sides, then the lengths of the edges of the tree are\nuniquely determined but with a quadrilateral, knowledge of just the lengths of the sides is\ninsufficient to fully specify the dimensions of the tree. We must have the full tree to know\nwhether the graph is a 4-star or a sawhorse and in the latter case, to know the length of the body.\n\n                       a        d           a            d\n\n                                                  e\n                      bc                   b             c\n\n Figure 5.13. The two trees with four terminal nodes. (Left) The 4-star. (Right) The sawhorse.\n Finding crease patterns for quadrilaterals is more complex than finding patterns triangles because\n there is more than one crease pattern that will collapse a given quadrilateral into the appropriate\n subbase. In fact, there can be infinitely many different crease patterns for a given quad. However,\n there is one pattern that has the desirable property that it works for quadrilaterals corresponding\n to either type of tree. I call it “the gusset quad” crease pattern because it usually has a gusset\n across its top. Its construction is rather complex, but I will describe it briefly here.\n\n Given a quadrilateral ABCD as shown in figure 5.14. Inscribe a smaller quadrilateral inside\nwhose sides are parallel to the sides of the original quadrilateral but are shifted inward a distance\nh (the value of h is not yet determined). Denote the corners of the new quadrilateral by A′, B′, C′,\nand D′. Drop perpendiculars from these four corners to the sides of the original quadrilateral.\n                                                  ′\nLabel their points of intersection AAB where the line from A  hits side AB, BAB where the line\n from B′ hits AB, and so forth.\n\n                                           CCD       C\n                              D\n                         D     CD\n\n                                                       CBC\n                     D\n                      DA                       ′\n                                D′            C\n\n                  A\n                   DA                                      BBC\n                             ′\n                            A                     B′\n\n                                          h\n\n               A                                                B\n                            AAB                 BAB\n\n\n                                 124",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d09fe"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 7,
  "content": "./origami_dataset_dev/TreeMkr40/page007_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d09ff"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 130,
  "content": " Whenever we add a new node inside a polygon, if we make the corresponding flap sufficiently\n large, it forms several new active paths with the vertices of the old active polygon. In the process,\n it breaks up the polygon into smaller polygons with fewer sides than the original polygon. In\n figure 5.21, adding the new point has broken the five-sided polygon into one quadrilateral and\n three triangles. But we already know crease patterns for quadrilaterals and triangles! Filling in\n the crease patterns in each polygon gives a crease pattern for the full base, shown in figure 5.22.\n\n                      ABF\n\n\n                                                  F\n                      F\n\n                                      G\n                                                        C\n                      E\n\n                                                 F\n                               F\n\n                                        D\n\nFigure 5.22. Crease pattern for the 5-pointed base.\nImagining terminal nodes as being surrounded by circles makes it easier to visualize the path\nconstraints of the tree theorem. Although strictly speaking, the circle analogy only holds for\nterminal nodes with exactly one internal node between them, one can devise a similar condition\nfor more widely separated nodes. If you draw in circular arcs around each terminal node tangent\nto the tri-state creases, you get a set of contours on both the crease pattern and the base, in which\nedges attached to terminal nodes are represented by circles and edges attached only to internal\nnodes are represented by contours that snake through the crease pattern as in figure 5.23. For\nnumerical computation, I find that it is simpler to do all calculations in terms of paths and path\nlengths, but for intuition and visualization, the circles and contours constitute an equivalent and\nmore easily visualized tool for devising new crease patterns.\n\n\n                                 130",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a00"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 76,
  "content": "./origami_dataset_dev/TreeMkr40/page076_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a01"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 131,
  "content": "                   EF\n\n                          BB\n\n                                   A\n\n\n                              BB\n\n\n                        CC\n\n\n                 GH\n                           CC\n\n\n                                    D\n\nFigure 5.23. Circles and contours for the six-pointed lizard base.\nIf you’ve stuck with me so far, you’re now at the goal: an algorithm for finding a crease pattern\nto fold a base with any number of points from a square, rectangle, or any other shape paper. (In\nfact, this algorithm even works for circular paper!) To summarize the algorithm:\n\n   1. Draw a tree, or stick figure, of the base, labeling each edge with its desired length.\n\n   2. Find a pattern of terminal nodes on the square that satisfies the tree theorem, namely,\n   that the distance between any two nodes on the square is greater than or equal to their\n   separation on the tree.\n\n   3. Mark all of the active paths, paths whose actual length is equal to their minimum\n   length. Identify the active polygons.\n\n   4. For any active polygon with five or more sides, add a node and edge to the tree\n   attached at an internal node of the polygon and make the edge as large as possible,\n   thereby breaking up the active polygon into quads and triangles.\n\n   5. Fill in each active polygon with quad and triangle crease patterns.\nThe good news is that using the algorithm described above, a base can be constructed for any tree\n— in fact, there are usually many distinctly different solutions for a single tree. The bad news is,\nas you might suspect from some of the above, constructing the crease pattern can be\ncomputationally intensive.\n\n(The worse news is that even when you have the crease pattern, folding it up into a base can be\ninfuriatingly difficult; there is rarely a step-by-step folding sequence. More often than not, you\nneed to precrease everything, then collapse the base all at once.)\n\n\n                              131",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a02"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 125,
  "content": " Figure 5.14. Construction of the gusset quad for a quadrilateral ABCD. Inset the quadrilateral a\n distance h; then drop perpendiculars from the new corners to the original sides.\n\n Now we need some distances from the tree. Let lAC  be the distance from node A to node C on the\ntree and lBD be the distance from node B to node D. In most cases (see below for the exceptions),\nthere is a unique solution for the distance h for which one of these two equations holds:\n                                   ′ ′\n                           AA AB + A C  + CCBC  = lAC , or\n                                    ′ ′\n                            BB BC  + B D  + DD AD = lBD.\n\nLet us suppose we found a solution for the first equation. The diagonal A′C′ divides the inner\nquadrilateral into two triangles. Find the intersections of the bisectors of each triangle and call\nthem B′′ and D′′ . (If the second equation gave the solution, you’d use the opposite diagonal of\nthe inner quadrilateral and find bisector intersections A′′  and C′′.) The points A′,  B′′, C′, and D′′\nare used to construct the complete crease pattern.\n\n                                                ′\n                                 D′            C\n                                  D′′\n                                            B′′\n                              ′\n                            A                     B′\n\n                          \n\n Figure 15. On the inner quadrilateral, construct the bisectors of each triangle to find points B′′\n and D′′ .\n You’ve now found all of the points necessary to construct the crease pattern; connect them with\n creases as shown in figure 16 to produce the mountain folds that form the spine and the one\n valley fold that forms the gusset. You will also have to construct tri-state creases from each\n internal node along the sides of the quad to complete the crease pattern. Figure 5.16 also shows\n the folded gusset quad and its tree.\n\n                               C\n         D\n\n                                                        ′′\n                                                       B      ′′\n                          C′                                 D\n                                                                    ′\n                                                   C′              A\n                D′′\n                        B′′\n            A′\n                                                 C               D\n                                         B                                   A\n\n  A                                    B\n\n\n                                 125",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a03"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 119,
  "content": "It’s also worth pointing out that we don’t show any terminal nodes along the edges of the square\nbecause the paths between nodes G and E, E and F, and F and H are not active paths.\n\nIt can be shown that active paths never cross each other, so the only places where lines come\ntogether on the square are terminal nodes. This pattern of lines breaks up the square into a set of\npolygons. In some of the polygons, all of their sides are active paths (like the inverted-kite-\nshaped quadrilateral in the center of figures 5.6 and 5.7). If one of the sides of a polygon lies on\nthe edge of a square, it may or may not be an active path (in figure 5.6 and 5.7, each triangle has\none side on the edge of the square that is not an active path.)\n\nWe’ll call a polygon whose corners are terminal nodes and whose sides are active paths or the\nedge of the square an active polygon. Each active polygon has the property that all of its sides\nmap to the plane of projection of the base when the square is folded into a base. Consequently, to\nfind a crease pattern that collapses the square into the base, it is necessary to find a crease pattern\nthat maps the network of active paths onto the plane of projection of the base.\n\nThis sounds like we have added requirements and made our job harder, but in fact we have\nactually simplified things. One of the things that makes origami design so difficult is the\ninterrelatedness of all the parts of the base; if you try to change the dimensions of one part of the\nmodel, you have to take into account how that part interacts with the rest of the paper. But it\nturns out that when you have a square broken up into active polygons, you can separate the\ndesign into independent pieces. Recall that the tree is the projection of the base, which is folded\nfrom the complete square. Each polygon on the square corresponds to a portion of the overall\nbase and if you collapse any polygon into a section of the base — which I call a subbase — the\nprojection of the subbase is itself a portion of the projection of the complete base, i.e., a portion\nof the original tree. For example, figure 5.8 shows the polygons for our six-legged base and the\ncorresponding trees for each subbase. Note that since all of the corners of an active polygon must\nbe terminal nodes, the triangles at the bottom corners of the square are not active polygons and in\nfact do not contribute to the base at all.\n\n\n                                119",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a04"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 45,
  "content": "                                     3.2.12\n\nThis lets you add a node in the middle of\nthe edge (or anywhere along it). Enter 0.5                1\nin the field (to split the edge at its           2                 2\nmiddle) and click OK. There is now a\n                                                          1\n                                        4                                   5\nnew node, node 9 in the middle of the                      1.000\nedge, as shown in figure 3.2.13.                 2                 3\n                                                  1.000             1.000\n                                                            2\n\n                                        2                  7                2\n                                                            0.500\n                                        9                   9               9\n\n                                                           8\n                                        3                   0.500           3\n                                                            3\n\n                                                 4        6        5\n                                                  1.000    0.400+115.8%1.000\n                                        6        3        8       3         7\n\n                                                      3.2.13\n\n\n                                  45",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a05"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 51,
  "content": " All bases designed by TreeMaker are what I call a “uniaxial” base. A uniaxial base is one in\n which all the flaps lie along a single line. A base in which all of the flaps are edge flaps has the\n very useful property that the layers can be arranged so that with all of the layers in the same half-\n plane, no major flap is enclosed inside of another flap. I call a base with this latter property a\n “simple” uniaxial base. Simple bases can also be designed by the “string-of-beads” algorithm,\n and it is fairly easy to prove that the perimeter of an edge-flap-only base cannot exceed the\n perimeter of the square.\n\n It is tempting to suppose that any simply stacked base must be an edge-flap-only base, but it is\n often possible to add auxiliary nodes to a base with middle points to make them “quasi-edge-\n like”. An example will make this clear.\n\nAn eight-pointed base in which all of the\nflaps are edge flaps is shown in figure\n3.3.7. It has a scale of 0.250. If we don’t\nforce all the points to be edge flaps, we’ll\nfind the arrangement shown in figure\n3.3.8, in which four of the points have\nbecome middle flaps.\n\n\n                                                       3.3.7\n\n\n                                  51",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a06"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 79,
  "content": "    Copyright ©1994–1998 by\n    Robert J. Lang. All rights\n    reserved. Portions (CFSQP)\n    Copyright ©1993-1998 by Craig\n    T. Lawrence, Jian L. Zhou, and\n    Andre L. Tits. Use and\n    distribution of this program is\n    subject to restrictions described\n    in the TreeMaker documentation.\n                                              A Program for Origami Design\n    Thanks for suggestions and\n    algorithmic insight to:\n    Alex Bateman, Toshiyuki\n    Meguro, Tom Hull, Jun\n    Maekawa, Fumiaki Kawahata,\n    Erik Demaine, Barry Hayes, and\n    Marshall Bern.\n    Programmed with Metrowerks\n    CodeWarrior ™ and Metrowerks\n    PowerPlant™.\n\n                                      4.5.1\n\n   File Menu\nAll of these commands do what they usually do in a Macintosh application.\n   New                                1N\nCreate a new, blank square to work on.\n   Open                               1O\nOpen an existing tree.\n   Close                              1W\nClose the current tree. You will be prompted to save it if you have made any changes.\n   Save                                1S\nSave the current tree to disk.\n   Save AsÉ\nSave the current tree under a new name.\n   Revert\nRevert the current tree to the last saved version.\n   Page SetupÉ\nSelect the page orientation and other printing options.\n\n\n                                 79",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a07"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 86,
  "content": "    Custom ViewÉ                       1G\n puts up the View Editor, which lets you change how the image is displayed on the screen and\n display any combination of settings, as shown in figure 4.5.9.\n\n\n                                       4.5.9\n\nThe View Editor is a movable dialog and its settings take effect immediately so you can see what\nthe results of your settings are.\n\nThere are four buttons for preset combinations of settings:\n\nDefault — show the default view, which displays both the tree, node circles, polygons, and\ncreases.\n\nTree — show just the tree (stick figure)\n\nCreases — show just the crease pattern.\n\nAll — show everything. For all but the simplest figures, this is too busy to be useful (see figure\n4.5.10), but if you ever wanted to see all the “guts” of a TreeMaker design, this is the closest\nthing to it.\n\n\n                                  86",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a08"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 92,
  "content": "                                      4.5.16\n  Absorb Selected Node                1K\nNodes that have exactly two branches are unnecessary and are called “redundant” nodes. (the\nnode added by the previous command is a redundant node, at least until you attach something to\nit.) If you select a redundant node, this command absorbs it into the edges it connects and joins\nthe edges into a single edge. This is the inverse of Split Selected Edge.\n   Absorb Redundant Nodes              1-\nThis command absorbs all redundant nodes in the tree. It’s useful for cleaning up a tree if you\nfractured one or more polys and then subsequently deleted all of the stubs.\n   Remove Strain                       1]\nThis command sets the strain of all edges to zero while leaving their lengths unchanged.\n   Relieve Strain                      1[\nThis command changes the lengths of the edges to be equal to their strained length and then sets\nthe strain equal to zero.\n   Minimize Strain                    13\nThis command does another optimization that minimizes the RMS strain of the node\nconfiguration. This is the command to use when many path active conditions have been placed\non the nodes, particularly if they are coupled with quantized angles; often it is not possible to\nsatisfy all conditions without straining different edges by different amounts.\n\nNote: it is very easy to set up conditions that admit no solution at all. A sign that you have done\nthis is that the optimizer will suddenly set the scale nearly equal to zero.\n\n\n                                 92",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a09"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 12,
  "content": "./origami_dataset_dev/TreeMkr40/page012_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a0a"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 84,
  "content": "   Show Tree Only                      1T\nShow only the stick figure. Here is an example, shown in figure 4.5.6.\n\n\n                                      4.5.6\n  Show Creases Only                   1L\nShow only the crease pattern. Use these settings when you want to print out the crease pattern\nwithout any other extraneous elements. Here is an example shown in figure 4.5.7.\n\n\n                                 84",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a0b"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 90,
  "content": " interrupt the calculation. Figure 4.5.12 shows a typical configuration before and after “Scale\n Everything.”\n\n\n                                       4.5.12\n\nIf you interrupt the calculation, you will be presented with the following dialog:\n\n\n                                       4.5.13\n\nSimilarly, if the optimizer runs into problems, it may also interrupt the calculation and present\nyou with a dialog of explanation. You have the choice of continuing with the nodes in their\npresent positions or reverting to the state the nodes were in before the calculation. Even if you\nrevert, any creases you may have generated are irretrievably lost, but they are easily\nreconstructed.\n   Scale Selection                     12\n This command is used to remove degrees of freedom in a pattern after a Optimize Scale\n command. By selecting unpinned nodes (shown in gray) and unpinned edges (shown in darker\n\n\n                                  90",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a0c"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 47,
  "content": "Again, select Build Polys and Creases\nfrom the Action menu, followed by\nCreases Only from the View menu to\nget the crease pattern shown in 3.2.16.\n\nSo you see, there are many ways of\nadding circles to force a plan view base;\nyet another demonstration that there are\nmany different ways of achieving a base\nfor the same basic design.\n\nOne final note: if you have two circles in\nthe interior of the model that are touching\nalong the center line, you’ll have to add a\ncircle between them to force them apart.\nThe way to do this is to use a Nodes\ncollinear condition to force the new node\nto lie between the other two.\n\n   3.3   Forcing edge flaps\n                                                      3.2.16\nOnce you have run several TreeMaker\ndesigns and folded them, you will\neventually come to the realization that some crease patterns are easy to collapse into bases while\nothers are incredibly difficult to fold up. Closer examination of this phenomenon reveals a\ncommon thread: the more middle points a base has, the harder it is to fold up. In addition, while\nedge points can almost always be separated from the rest of the base by simply being folded out\nto the side (perpendicular to the plane of the the base), middle points are often surrounded by\nlayers of paper and can only be separated out by being reverse-folded up and out of the model\n(lying in the plane of the base). For these reasons, it is often desirable to force most of the flaps\nin the base to be edge flaps.\n\n\n                                  47",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a0d"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 53,
  "content": "As an example, construct the tree shown\nin figure 3.4.1 that has four legs of\ndifferent lengths.                            3\n                                                                    2\nWhen you optimize this tree, you will get\nan irregular quadrilateral. Building\n                                                   2          1\ncreases gives you a “gusset quadrilateral”         0.400      0.600\nas shown in figures 3.4.2 and 3.4.3.\n                                                        1\n\n                                                             4\n                                                   3          0.800\n                                                   1.000\n\n                                                                    5\n                                              4\n\n\n                                                       3.4.1\n\n\n                                                           2\n\n                                                1\n                                        3\n                                                         1\n                                                          0.600   1\n                                               2\n                                                0.400\n                                        1\n                                                        1\n\n                                                                 4\n                                                                  0.800\n                                                                            5\n                                               3\n                                                1.000\n                                                            1\n\n\n                                        4\n\n                                                       3.4.2\n\n\n                                  53",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a0e"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 71,
  "content": "./origami_dataset_dev/TreeMkr40/page071_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a0f"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 106,
  "content": "./origami_dataset_dev/TreeMkr40/page106_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a10"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 133,
  "content": " where lij  is the path length between nodes i and j measured along the tree graph. There is an\n analogous condition for reduced polygons; any two vertices of a reduced polygon must satisfy\n the condition\n\n                                    ′ − ′ ≥ ′\n                                   Ai  Aj  lij ,                            (2)\n       ′\n where lij  is a reduced path length given by\n\n                              ′ =  −    α  +   α\n                             lij lij h()cot i cot j                         (3)\n    α\n and i is the angle between the bisector of corner i and the adjacent side. I call equation (2) the\n reduced path constraint for a reduced polygon of inset distance h. Any path for which the\n reduced path constraint becomes an equality is, in analogy with active paths between nodes,\n called an active reduced path.\n\n So for any distance h, we have a unique reduced polygon and a set of reduced path constraints,\neach of which corresponds to one of the original path constraints. We have already assumed that\nall of the original path constraints are met; thus, we know that all of the reduced path constraints\nare met for the h=0 case (no inset distance). It can also be shown that there is always some\npositive nonzero value of h for which the reduced path constraints hold. On the other hand, as we\nincrease the inset distance, there comes a point beyond which one or more of the reduced path\nconstraints is violated. Suppose we increase h to the largest possible value for which every\nreduced path constraint remains true. At the maximum value of h, one or both of the following\nconditions will hold:\n\n(1) For two adjacent corners, the reduced path length has fallen to zero and the two inset corners\nare degenerate; or\n\n(2) For two nonadjacent corners, a path between inset corners has become an active reduced\npath.\n\nThese two situations are illustrated in figure 5.25.\n\n                                              α\n                                          A5\n                                             α 5\n                        l ′=0                 5\n                         ij                       ′\n                     ′  ′                        A5\n                   Ai  Aj                                  ′  ′  ′\n                                                          lij =|Ai –Aj |\n\n\n                      h                                              ′\n                                                                   A2\n         α\n          i                    α                          h           α\n           α                 α  j                                  α   2\n            i                 j                                     2\n       Ai                        Aj                                    A2\n\n\n                                 133",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a11"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 127,
  "content": "  EF\n\n         BB\n\n                  A\n                                          A\n                                                               F\n             BB\n\n                                        E\n                                                  B\n       CC\n                                                                      H\n\n                                                          C\n GH\n                                                G\n          CC\n                                                                D\n\n                  D\n\nFigure 5.18. Full crease pattern and six-legged base.\nIf you try to collapse figure 5.18 into the base, you will have to flatten some valley folds and turn\nseveral tri-state creases into valley or mountain folds, depending on how you stack the layers and\narrange the points. Although Tom Hull, Toshikazu Kawasaki, and others have identified several\nrules for assigning mountain and valley folds to a crease pattern that will allow it to be folded\nflat, I haven’t yet identified an algorithm to assign mountain and valley folds to a tree method\ncrease pattern — in fact, as you can tell by folding up a base, there is always more than one\ndistribution of mountain and valley folds for a given crease pattern. In any event, when you\ncollapse the base, all of the points will be free and unattached from the others and each segment\nof the base is precisely the same length as corresponding segment on the tree. You can thin the\npoints further and add reverse folds, et cetera, to turn the base into a subject.\n\nMuch the same procedure can be used for any network of active polygons. However, what\nhappens if there are polygons with five, six, or more sides? You saw the jump in complexity\ngoing from three to four corners was considerable. Although there was only one type of tree for a\ntriangle and two for a quadrilateral, for a five-sided polygon there are three possible types of\ntrees and the number rises quickly beyond that. So there are many more possibilities to\nenumerate. In addition, computation of the crease pattern for higher-order polygons gets very\ncomplicated very quickly, and you can imagine the difficulties as the number of points increases.\nFor a nineteen-pointed insect, the network of active polygons could conceivably consist of a\nsingle nineteen-sided polygon! How would we ever collapse such a beast?\n\nI recently discovered one solution: there is a generalization of the gusset quad that produces a\ncrease pattern for any active polygon. However, its construction is even more complex than the\nconstruction of the gusset quad was. It turns out, though, that we need no more than the gusset\nquad and the rabbit ear to fold a base for any tree.\n\nAgain, a paradox: we’ll simplify the design problem by making the tree more complicated.\nConsider the tree in figure 5.19, which is a 5-pointed star. This graph leads to a set of active\npaths that comprise a single five-sided polygon.\n\n                              127",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a12"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 89,
  "content": "./origami_dataset_dev/TreeMkr40/page089_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a13"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 76,
  "content": "./origami_dataset_dev/TreeMkr40/page076_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a14"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 101,
  "content": "./origami_dataset_dev/TreeMkr40/page101_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a15"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 126,
  "content": " Figure 5.16. (Left) The mountain and valley folds of the gusset quad. Two tri-state creases are\n shown. (Right) The folded version of the gusset quad.\n You can construct an equation for the distance h in terms of the coordinates of the four corners\nand the distances; it’s a rather involved quadratic equation, but can be solved using a pocket\ncalculator and high-school algebra. For arbitrary quadrilaterals, there is not a simple method to\nfind the crease pattern by folding, but symmetric quadrilaterals (such as the one in the middle of\nfigure 5.8) can be found by folding alone.\n\nI alluded to exceptions above; there are quadrilaterals for which the points A′, B′, C′, and D′ all\nfall on a line. In these special cases, you don’t get an inner quadrilateral; all of the inner creases\ncollapse onto a line (or sometimes a point) and you get the simplified crease pattern shown in\nfigure 5.17. Jun Maekawa has proven a theorem — called, appropriately enough, the Maekawa\ntheorem — that says, in essence, any quadrilateral can have its edges collapsed onto a line using\na crease pattern similar to this one. However, only in a relatively small number of cases will the\nlengths of the resulting flaps match the desired tree.\n\n                                                   C\n                          D\n\n\n                  A                                          B\n\n Figure 5.17. The Maekawa crease pattern.\n The Japanese folder Toshiyuki Meguro has extensively explored crease patterns that collapse\n polygons onto lines and has coined the name “bun-shi,” or “molecules,” to describe such\n patterns. Just as individual molecules fit together to make a larger biological structure, so too do\n origami molecules fit together to make an origamical structure: the base.\n\n Using the rabbit ear crease pattern for triangles and the gusset quad crease pattern for\n quadrilaterals, you can fill in any active polygon network that consists of triangles and\n quadrilaterals to get the complete crease pattern for the base. Such a polygon network is the one\n for the six-legged base considered earlier in this article. Figure 5.18 shows the full crease pattern\n for the six-legged base and the resulting base. Unlike figure 5.1, this base is a real, foldable base;\n you can easily verify the crease pattern by cutting it out and folding it on the lines. As you can\n see, the projection of the base into the plane is indeed the tree, and all of the flaps have their\n proper length.\n\n\n                                 126",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a16"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 132,
  "content": " Since every polygon network can be broken up into triangles and quads by the addition of extra\n circles, the triangle and quad molecules are by themselves sufficient for filling in the crease\n pattern for any tree. However, there are many other possible molecules, including molecules that\n can be used for higher-order polygons. It turns out that the gusset quad is just a special case of a\n more general construction that is applicable to any higher-order polygon. I call this construction\n the universal molecule. In fact, many of the known molecules — the Maekawa and Meguro\n molecules, the rabbit ear, and so forth (but not the arrowhead quad, as it turns out) are special\n cases of the universal molecule. The rest of this article describes the construction of this\n molecule for an arbitrary polygon.\n\n Consider a general polygon that satisfies the tree theorem, i.e., any two vertices are separated by\n a distance greater than or equal to their separation on the tree graph. Since we are considering a\n single active polygon, we know that of the paths between nonadjacent vertices, none are at their\n minimum length (otherwise it would be an active path and the polygon would have been split).\n\n Suppose we inset the boundary of the polygon by a distance h, as shown in figure 5.24. If the\n                                                                      ′  ′\n original vertices of the polygon were A1, A2,… then we will label the inset vertices A1 , A2 ,… as\n we did for the gusset quad construction. I will call the inset polygon a reduced polygon of the\n original polygon.\n\n                                     A4\n                                   α α       polygon\n                                    4 4\n                                                 reduced polygon\n                       α             A ′\n                   A5                 4\n                      α 5\n                       5                          α\n                                                   3\n                           ′                          A3\n                         A5                        α\n                                                ′   3\n                                               A3\n\n                             ′                ′\n                           A1               A2\n                        α\n                          1        h          α\n                          α                 α   2\n                           1                 2\n                       A1                       A2\n\n Figure 5.24. A reduced polygon is inset a distance h inside of an active polygon. The inset\ncorners lie on the angle bisectors (dotted lines) emanating from each corner.\n                   ′\n Note that the points Ai  lie on the bisectors emanating from the points Ai for any h. Consider first\na reduced polygon that is inset by an infinitesimally small amount. In the folded base, the sides\nof the reduced polygon all lie in a common plane, just as the sides of the original active polygon\nall lie in a common plane; however, the plane of the sides of the reduced polygon is offset from\nthe plane of the sides of the active polygon by a perpendicular distance h. As we increase h, we\nshrink the size of the reduced polygon. Is there a limit to the shrinkage? Yes, there is, and this\nlimit is the key to the universal molecule. Recall that for any polygon that satisfies the tree\ntheorem, the path between any two vertices satisfies a path length constraint\n\n                                     −   ≥\n                                   Ai  Aj  lij ,                            (1)\n\n                                 132",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a17"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 52,
  "content": "Although four of the flaps are middle\nflaps and will be trapped inside layers,\nit’s possible to squash-fold the raw-edged\nflaps attached to each node in such a way\nthat a simply-stacked base is obtained.\nAnd clearly, the perimeter of this base\nexceeds the perimeter of the square by\nthe factor (sec(15°)), or by about 3.5%.\n\n   3.4 Fracturing polygons\n\nOnce you have completed an\noptimization, the simplest crease pattern\nthat collapses into a base is produced by\nchoosing Build Polys and Creases,\nwhich creates all creases using the\n“universal molecule” algorithm. You can\nalso break up high-order active polygons\ninto lower-order active polygons by\nadding new edges to existing nodes.\nWhen you create a new edge and scale it                3.3.8\nusing Optimize selection, it will be\n expanded until it forms typically three\n new active paths.\n\n This process will break any polygon of order 5 or higher into polygons of lower order. In\n general, the lower the order of the active polygon, the simpler it is to fold, so this is often a\n desirable process. However, if you try to break up a polygon of order 4 (a quadrilateral), unless it\n happens to have a line of symmetry, you will form two triangles and another quadrilateral. Thus,\n you cannot in general reduce a crease pattern to all triangles simply by adding new edges to\n existing nodes.\n\n\n                                  52",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a18"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 46,
  "content": "Click on node 9 to highlight it. Then\nclick next to it to create a new node and                 1\nedge attached at node 9 as shown in\nfigure 3.2.14.\n                                                          1\n                                        4                                   5\n                                                           1.000\nApply a Node fixed to symmetry line              2                 3\ncondition to node 10, then select edge 9          1.000             1.000\nand node 10 and choose the Optimize                         2\nselection command from the  Action\n                                                           7\n menu. Again, you will create an active           10        0.500\n path between nodes 1, 8, and the new                  9\n                                                            9\n node, as shown in figure 3.2.15.                      1.000\n                                                           8\n                                                            0.500\n                                                            3\n\n                                                 4        6        5\n                                                  1.000    0.400+115.8%1.000\n                                        6                 8                 7\n\n                                                      3.2.14\n\n\n                                                          1\n\n                                                 2                 2\n                                                            1\n                                        4                                   5\n                                                            1.000\n                                                   2      2          3\n                                                   1.000             1.000\n                                                               2\n                                                          9\n                                        2                                   2\n                                                              7\n                                                          10  0.500\n                                        9                  9                9\n                                                          9  1.000-56.8%9\n\n                                        3                     8             3\n                                                          3   0.500\n                                                              3\n\n                                                  4        6        5\n                                                   1.000     0.400+115.8%1.000\n                                        6        3        8       3         7\n\n                                                      3.2.15\n\n\n                                  46",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a19"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 91,
  "content": " blue) and selecting this command, the lengths of all of the unpinned selected edges will be\n lengthened proportionally by increasing their strain, optimizing the position of the unpinned\n selected nodes. If you happen to have selected pinned nodes or edges, they will be ignored. Since\n only the selected nodes and edges will be considered, an easy way to increase all possible nodes\n and edges is to select all (command-A) and then select this command. Figure 4.5.14 shows a\n typical before and after configuration for scaling a single edge.\n\n\n                                       4.5.14\n   Split Selected EdgeÉ                1H\n This command lets you add a node somewhere in the middle of an existing edge. Selecting this\n comands puts up a dialog shown in figure 4.5.15.\n\n\n                                       4.5.15\n\nYou enter the distance the soon-to-be-created node should be from the indicated node (in tree\nunits). You must enter a positive value less than the length of the edge. A new node will be\nadded along the edge, breaking it into two separate edges. Just adding a node to an edge doesn’t\naccomplish anything, but you can use the new node to add new branches to the tree. Figure\n4.5.16 shows a before and after configuration.\n\n\n                                  91",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a1a"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 85,
  "content": "                                      4.5.7\n  Show Creases and Circles            1U\nShow the crease pattern plus circles around terminal nodes. This group of settings shows some of\nthe structure of the base superimposed over the crease pattern. It’s a good compromise between\nshowing just the crease pattern but also giving some indication of where paper goes into flaps.\nHere is an example shown in figure 4.5.8.\n\n\n                                      4.5.8\n\n                                 85",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a1b"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 63,
  "content": "./origami_dataset_dev/TreeMkr40/page063_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a1c"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 81,
  "content": "    Select All                         1A\n This command selects all visible nodes and edges. It’s most useful for deleting everything and\n starting over and, with operations that are constrained to the selection (like Optimize Edges and\n Fracture Poly), for giving the largest number of degrees of freedom possible.\n    Edit PartÉ                          1I\n This command puts up a dialog, the Part Selector, that lets you select a part to edit by several\n different criteria. This is useful if several parts are close together and you can’t easily click on the\n one you want.\n\n\n                                       4.5.2\n\nThe fields of the Part Selector are:\n\nPath by nodes — specifies a path according to the indices of the nodes at each end of the path\n\nNode by index — specifies a node according to its index\n\nEdge by index — specifies an edge according to its index\n\nPath by index — specifies a path according to its index\n\nPoly by index — specifies a poly according to its index\n\nVertex by index — specifies a vertex according to its index\n\nCrease by index — specifies a crease according to its index\n\nThis command is used to edit a node, edge, path, poly, vertex, or crease when you can’t easily\ndouble-click on it. I find that I use it most often to get access to a particular path when I know the\nnodes at each end of the path, so that’s the default selection criterion.\n\nAfter you close this dialog, an editor will be put up for the selected part.\n\n\n                                  81",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a1d"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 77,
  "content": "./origami_dataset_dev/TreeMkr40/page077_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a1e"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 95,
  "content": "                                       4.5.20\n   Remove Polygons                     1B\n This command removes all polygons. If you are working with arranging nodes, the presence of\n polygons can be a distraction; this command gets rid of them all.\n    Build Creases                      1B\n Build all of the creases in the crease pattern. Creases will only be built for existing polygons, so\n you need to have built all polygons prior to calling this routine.\n\n A typical sequence of commands after defining the tree might be:\n\n 1. Optimize Scale to maximize the scale and get the largest possible base.\n\n 2. Select All followed by Optimize Selection to maximize any unpinned edges.\n\n3. Build Polygons.\n\n4. Triangulate Tree (optional)\n\n5. Build Creases.\n\nBy the time you are done, the main window is likely to be rather cluttered, so it’s a good idea to\nselect Creases Only to display just the crease pattern. The figures below illustrate this entire\nsequence.\n\nFirst, draw the initial tree as shown in figure 4.5.21.\n\n\n                                  95",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a1f"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 42,
  "content": "The new node — node 8 — is now on\nthe bottom of the square. The darker blue                 1\nof its edge tells you that it isn’t pinned.      2                 2\nChoose Select all from the Edit menu,\nthen Optimize selection from the Action 4                 1                 5\n                                                          1.000\nmenu. This will expand the edge to its           3                 4\nmaximum possible length.                         1.000             1.000\n                                                           2\nSo now we have nodes 1 and 8 at the top\n                                        2                                   2\nand bottom of the symmetry line — but\nthere is still no active path between them.\n                                                          2\nThe reason is that the distance between                    1.000\nnodes 1 and 8 is larger than the minimum 3                                  3\nallowed path length between them. To\nget active paths in place, we need to add                  3\nanother node to the symmetry line                5        7        6\nsomewhere between 1 and 8 to “soak up”           1.000     0.400+115.8%1.000\n                                        6        3        8       3         7\nthis excess length. The longer the new\nnode, the more excess length it will\nrequire. For this new node, we don’t                   3.2.6\nknow how large it must be, so we’ll use\nthe Optimize Selection command to\noptimize its size. Add a new node                         1\nconnected to node 3 and apply a Stick to\nsymmetry line condition (which by now,\nyou know how to do). The result is\n                                        4                 1                 5\nshown in figure 3.2.7.                                    1.000\n                                                 3                 4\nThen select both the node and edge and           1.000             1.000\nselect Optimize Selection from the                         2\nAction menu to optimize the position of\nthe node and the length of the edge.\n                                                          2\n                                                        9\n                                                           1.000\n                                                         8\n                                                         1.000\n                                                           3\n                                                 5        7        6\n                                                 1.000     0.400+115.8%1.000\n                                        6                 8                 7\n\n                                                       3.2.7\n\n\n                                  42",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a20"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 56,
  "content": "                                      3.4.7\n\n Only top-level polygons can be fractured in this version of TreeMaker. Click inside the largest\n polygon (but outside of the two sub-polygons) to select it. Then select Fracture Poly… from the\nAction menu, which puts up the dialog shown in figure 3.4.7.\n\nThere is frequently more than one way to fracture a poly. This dialog lists all possibilities in a\npopup menu, cataloged by which edge is split and what the length of the new edge would be.\nBelow the popup menu is listed the location of the new node and the distance that the split is\nfrom one of the nodes along the edge. Choose edge 3 from the popup and click OK.\n\nEnter the index of the polygon to\nfracture. (Since we only have one active                   2\npolygon in this figure, its index is 1.)\nThen click OK. The result is shown in           1\nfigure 3.4.8.                           3                   1\n                                                             0.600\n                                                  2               1\nObserve that the former edge 3 has been            0.4001\n                                             1\nsplit into two with a new node at the                         1\n                                        1\njunction. A new edge — called a “stub”          6   6      4\n— has been attached to the node with                       0.223\n                                                     6   6          3\nanother new node at its end. The new    6          7   6\n                                                      0.184 1        0.800\nnode makes active paths with all four of         6\nthe corners of the original quadrilateral,                                  5\nthereby breaking it into four active            5\ntriangles.\n                                                0.777       1\n                                                       6\n\n                                        4\n\n                                                       3.4.8\n\n\n                                  56",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a21"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 136,
  "content": "approach to design. As in the tree method, you begin with a tree graph of the model to be folded.\nEach line of the graph is doubled and the graph is expanded to fill a square, with the nodes of the\ngraph spaced around the edges of the square like beads on a string. The process is illustrated for a\nsix-flap based in figure 5.28.\n\n\nFigure 5.28. The string-of-beads design method. The tree graph is turned into a closed polygon,\nwhich is then “inflated” inside of a square with straight lines between the terminal nodes. The\nresult is a large polygon inside the square that is collapsed into the base.\nIn the string-of-beads method, the tree graph is converted into a large polygon in which each\ncorner is one of the terminal nodes of the tree and each side is as long as the path between\nadjacent terminal nodes. It is clear that this distribution of terminal nodes is just a special case of\nthe tree method in which we have constrained all of the nodes to lie on the edge of the square; it\navoids having middle points, but at the expense of possibly reduced efficiency.\n\nThe string-of-beads approach produces a large polygon that must be collapsed into the base, and\nthe techniques described by Maekawa involve placing tangent circles in the contours shown in\nthe last step of figure 5.28 (which is analogous to our use of additional circles to break down\nactive polygons into smaller polygons in the tree method; Kawahata’s algorithm projects\nhyperbolas in from the edges to locate reference points for molecular patterns.) However, one\ncan also apply the universal molecule directly to the string-of-beads polygon, achieving another\nefficient crease pattern that collapses it into a base.\n\n\n                                136",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a22"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 13,
  "content": "./origami_dataset_dev/TreeMkr40/page013_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a23"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 122,
  "content": "                          A\n\n                      a      a                           EA\n                  D\n                                D                              a\n                          E\n                                         B\n              b                    cbD\n                                                               c\n                                                                      C\n        B                              C\n                 bcD\n\nFigure 5.10. Crease pattern for a rabbit ear and resulting subbase. Note that the three flaps of the\nsubbase have the same lengths as the three edges of the tree.\nIf you are actually folding the active polygon, you can find the intersection of the angle bisectors\n— point E in the figure — just by pinching each corner in half along the bisector and finding the\n point where all the creases come together. If you are calculating the crease locations numerically,\n there is a beautiful formula for the location of the intersection of the angle bisectors of an\n arbitrary triangle. If pA, pB, and pC are the vector coordinates of corners A, B, and C and pE is\nthe coordinate of the bisector intersection, then pE is given by the simple formula\n\n                            p (b + c) + p (c + a) + p (a + b)\n                        p  =  A        B        C      .\n                         E           2(a + b + c)\n\nThat is, the location of the bisector intersection is simply the average of the coordinates of the\nthree corners with each corner weighted by the length of the opposite side.\n\nWhat happens when one of the sides of the triangle is not an active path? This can happen, for\nexample, when one of the sides of the triangle lies along an edge of the square; all of the triangles\nin figure 5.8 are of this type. Since the distance between any two terminal nodes must be greater\nthan or equal to the minimum path length, the side that isn’t an active path must be slightly too\nlong to be an active path rather than too short. Fortunately, only a slight modification of the\nrabbit ear is necessary to address this situation. Figure 5.11 shows the crease pattern and subbase\nwhen side BC is slightly too long.\n\n                          A\n\n                      a      a                           E        A\n                  D\n                                D                              a\n              b           E              B\n                                    c             b\n                                                               c\n                                                                      C\n        B        b               c     C\n\nFigure 5.11. (Left) Crease pattern for a triangle when side BC is not an active path. (Right)\nResulting subbase.\n\n                                 122",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a24"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 62,
  "content": "./origami_dataset_dev/TreeMkr40/page062_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a25"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 41,
  "content": "./origami_dataset_dev/TreeMkr40/page041_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a26"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 14,
  "content": "./origami_dataset_dev/TreeMkr40/page014_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a27"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 123,
  "content": " If the triangle has two sides that aren’t active paths, a similar modification will still collapse it\n appropriately.\n\n Another case that we should consider is a triangle graph that has one or more internal nodes\n along its edges, which may or may not be due to a kink in the subgraph. For example, the two\n side subgraphs in figure 5.8 each have three terminal nodes, but in each graph, one of the edges\n has an internal node because the subgraph has a kink at that point. We can still use the rabbit ear\n construction to find most of the creases, but wherever we have an internal node along an active\n path, we need a crease radiating inward from the internal node to the mountain fold that forms\n the “spine” of the subbase.\n\n We might wonder which creases are valley and mountain folds. All of the creases that form the\n spine of the subbase are always mountain folds. Most of the creases corresponding to active\n paths are valley folds; however, for terminal nodes that fall in the interior of the paper, there is a\n mathematical requirement that the number of mountain and valley folds that come together at a\n point differ by 2; consequently, for any terminal node that lies in the interior of the square, one of\n the active paths must be converted to a mountain fold.\n\n The other type of creases we will encounter are those creases that radiate inward from internal\n nodes; they can be mountain folds, valley folds, or no folds at all, depending on which way we\n lay the flaps when we flatten the uniaxial base. Since any such fold has three possible states, I\n call them tri-state folds. To give some indication which way the folds go, I’ll draw all of the\n active paths as valley folds (even though a few of them may actually turn out to be mountain\n folds) and draw all of the tri-state folds as x-ray lines (since they can go either way).\n\n Using the rabbit-ear crease pattern, we can fill in three of the four active polygons of the six-\n legged base as shown in figure 5.12. Using similar patterns, we can fill in the crease patterns for\n any triangle in any network of active polygons. Let us now turn out attention to the next case:\n four-sided active polygons.\n\n                           EF\n                                BB\n                                       A\n\n                                   BB\n\n                               CC\n\n                          GH\n                                 CC\n\n                                       D\n\nFigure 5.12. Crease pattern for the six-legged base with triangles filled in.\nJust as a triangular polygon corresponded to a tree with three terminal nodes, a four-sided\npolygon, or quadrilateral, has a tree with four terminal nodes. There are two distinct types of\ntrees with four terminal nodes, shown in figure 5.13. I call these two graphs the “4-star” and the\n\n                                 123",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a28"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 137,
  "content": "Figure 5.29. Construction of the universal molecule for the polygon shown in figure 28.\nFigure 5.29 shows the universal molecule. The initial hexagon is inset to the point that the two\nhorizontal reduced paths become active, and the hexagon is split into two triangles and rectangle.\nThe triangles are filled with rabbit ear creases; the rectangle is further inset, forming a Maekawa\nmolecule.\n\nFigure 5.30 compares the crease pattern obtained from this polygon by adding an additional node\nto the tree pattern (i.e., adding a middle flap) and that obtained with the universal molecule. (Tri-\nstate creases are shown as dotted lines.)\n\n\nFigure 5.30. (Left) Crease pattern obtained by adding an additional node to the hexagonal active\npolygon. (Right) Crease pattern obtained by using the universal molecule.\nA nice feature of the universal molecule is that it is very frugal with creases. A tree filled in with\nuniversal molecules tends to have relatively few creases and large, wide flaps (which can, of\n\n                                 137",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a29"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 57,
  "content": "Building the creases gives a distorted\nBird Base–like shape shown in figure\n3.4.9 whose flaps remain the proper\nlength for the specified tree.\n\nIf instead we had chosen to make the\nstub on edge 1, we would have achieved\nthe crease pattern shown in figure 3.4.10.\n\nBoth crease patterns result in the 4 initial\nflaps coming out with the same length\nand scale. In both cases, there is an extra\nflap that corresponds to the stub. The\nextra flap “soaks up” excess paper within\nthe polygon.\n\n\n                                                       3.4.9\n\n\n                                                      3.4.10\n\n\n                                  57",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a2a"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 43,
  "content": "The result is shown in figure 3.2.8. Now\nthere are active paths between nodes 6                    1\nand 9 and between nodes 9 and 8, filling         2                 2\nthe entire symmetry line. Thus, the\n                                                          1\n                                        4                                   5\ncondition for making a plan view model                     1.000\nis satisfied.                                    3        2        4\n                                                  1.000             1.000\nSelect Build Polys and Creases to                           2\ncomplete the pattern and Creases Only\n                                        2                                   2\nto display it. The crease pattern is shown\nin figure 3.2.9. And if you fold this                     3\n                                                           2\npattern into a base, you will indeed get a                  1.000\nplan view base.                                           9\n                                        3                 8                 3\n                                                          3 1.000-56.8%\n                                                            3\n\n                                                 5        7        6\n                                                  1.000    0.400+115.8%1.000\n                                        6        3        8       3         7\n\n                                                       3.2.8\n\n\n                                                       3.2.9\n\n\n                                  43",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a2b"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 94,
  "content": "                                       4.5.18\n\nThe dialog computes all possible ways to fracture the poly and displays them in a popup menu,\ncataloged by which edge is split and the length of the stub to be added. The location of the new\nnode and the distance of the split from the end of the edge is shown immediately below the\npopup menu. Clicking OK results in the addition of a new terminal node and edge (a stub) to the\ntree, which fractures the polygon into lower-order polygons. Figure 4.5.19 shows before and\nafter examples.\n\n\n                                       4.5.19\n\nNote: you must explicitly call Build Polys again after fracturing a poly to build the new polys.\n    Triangulate Tree                    1/\n This command repeatedly tries to fracture every active polygon of order-4 or higher until all\n active polygons are triangles. If you then build creases, you will get all mountain, valley, and\n tristate creases in the model making rabbit-ear patterns. Figure 4.5.20 shows a typical before and\n after example.\n\n\n                                  94",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a2c"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 77,
  "content": "./origami_dataset_dev/TreeMkr40/page077_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a2d"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 80,
  "content": "    PrintÉ                             1P\n Print the current tree. The printout is exactly the same size as what’s on the screen and the same\n elements will be shown as are displayed. If you are in Default View, you’ll see all the nodes,\nedges, circles, and so forth; if you are in Creases Only View, then you’ll print just the crease\npattern.\n\nIf the image is too large to fit on a single sheet, it will be tiled on multiple pages with crop marks\nat the joints. There will be a header on each page consisting of the name of the file on the left and\nthe current scale on the right.\n   Print OneÉ\n Print a single page.\n    Quit                               1Q\n Quit the program.\n\n    Edit Menu\n    Undo                               1Z\n Undo is currently not supported except for text entries in dialogs. The structure of an origami\n design has many complex interrelationships between parts; if you do something as simple as\n moving a node, many data structures are created, destroyed, and re-connected. Implementation of\n Undo would be difficult.\n\n The next four commands are the standard Macintosh editing commands that behave normally for\n text in dialog boxes.\n    Cut                                1X\n In a text field, Cut cuts the current selection to the Clipboard. In the main window, Cut delete\n the current selection of nodes or edges.\n    Copy                               1C\n In a text field, copy the current selection to the Clipboard. In the main window, copy the contents\n of the window to the Clipboard as a picture (PICT) with embedded Postscript commands for line\n weight and polygon formation. You can paste the crease pattern into another drawing program to\n touch it up, change line weights or styles, or color it in. Many of the images in this document, for\n example, were generated by Copying the image of the main window to the Clipboard and pasting\n them into the document.\n    Paste                              1V\n In a text field, past the contents of the Clipboard into the field. This command does nothing in\n the main window.\n    Clear\n In a text field, delete the current selection. In the main window, delete the current selection of\n nodes or edges.\n\n\n                                  80",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a2e"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 70,
  "content": "./origami_dataset_dev/TreeMkr40/page070_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a2f"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 96,
  "content": "                                       4.5.21\n\nThen select Optimize Scale, Action menu, to find the configuration of nodes that gives the\nlargest possible scale, as shown in figure 4.5.22.\n\n\n                                  96",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a30"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 82,
  "content": "    Edit treeÉ                          1J\n Puts up the Tree Editor, which lets you alter attributes of the overall pattern, as shown in figure\n 4.5.3.\n\n\n                                       4.5.3\n\nThe fields of the Tree Editor are:\n\nPaper width — gives the width of the paper in dimensionless units. This value is normally set to\n1, no matter how big the screen or printout is. To change the actual size of the screen (or printed)\nimage, select Set Paper Size… in the View menu.\n\nPaper height — gives the height of the paper in dimensionless units. This value is normally set\nto 1 for a square but you can change it to other values if you like. To work out designs on a\nrectangle, you can change either the width or height to a different value. (You can, if you like,\nchange both to a different value, but it won’t make any difference.)\n\nScale — this sets the relationship between the units of the tree (edge lengths) and the\ndimensionless size of the square. This quantity is determined when you invoke the Optimize\nScale command. You will ordinarily not change this number, but if you are creating a very\ncomplicated tree, you might want to set it to a very small number to keep from cluttering up the\nscreen with a lot of circles.\n\nSymmetry — on = define a line of symmetry. The line is defined by a point on the line and an\nangle. Two common lines of symmetry are the point (0.5, 0.5) and angle 45° (for a diagonal\nmodel) and the point (0.5, 0.5) and angle 90° (for a book-folded model). The two buttons\nimmediately below the check box are preset for these values.\n\ndiag — preset button for diagonal symmetry\n\nbook — preset button for book-fold symmetry\n\nx = ___ — the x-coordinate of a point on the line of symmetry.\n\ny = ___ — the y-coordinate of a point on the line of symmetry.\n\nangle = ___ — the angle (in degrees) of the line of symmetry.\n\nClicking on the disclosure triangle toggles to Expert Mode, which displays additional structural\ninformation about the Tree as shown in figure 4.5.4.\n\n\n                                  82",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a31"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 55,
  "content": "The process can be repeated essentially\ninfinitely; you can make the quad smaller                  2\nand smaller, but you’ll never get rid of it!\nFigure 3.4.5 continues the process, but         1\nthere is still one quadrilateral.       3\n                                                    1\nThere is a fundamental reason for this         1                  1\n                                                  7      1\n                                             1\nlimitation: breaking up an arbitrary quad      1    1         1\n                                        1     9\ninto four triangles requires the formation   1    1\n                                                  8 1   6\nof four active paths. But when you add a          1         1\nnew edge to an existing node, you only               1\nhave three degrees of freedom: the x and\ny coordinates of the new node and the                                       5\nlength of the edge. To create four active\npaths, you need a fourth degree of\n                                                            1\nfreedom.\n\nIf we add the new edge to a newly-\n                                        4\ncreated node formed by splitting an edge,\nwe have a fourth degree of freedom,\nnamely, the location of the split along the            3.4.5\nedge. There is a special command for\nadding a node that forms four active\npaths by splitting an edge; it is the Fracture Poly… command in the Action menu. This\ncommand lets you break up an active polygon by splitting one of the edges in such a way as to\nform four active paths.\n\nTo use this command, you need to build\nthe polygons and select the one to be                      2\nfractured. Select the Build Polys\ncommand from the   Action menu, as              1\nshown in figure 3.4.6.                  3                   1\n                                                             0.600\n                                                  2               1\nThis builds all of the polygons for the            0.400 6\ncrease pattern. There are two kinds of           7            1\npolygons: “top-level” polygons, which   1          10\n                                                   2  1\nare formed from the nodes of the tree,                 311\n                                                             9      4\nand “subpolygons,” which are smaller                                 0.800\npolygons located inside of the top-level         8\npolygons. In the figure, the largest              3                         5\npolygon — the quadrilateral — is a top-            1.000\nlevel polygon. The two small triangles\n                                                            1\nare sub-polygons, which are fully\nenclosed by the top-level polygon.\n                                        4\n\n                                                       3.4.6\n\n\n                                  55",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a32"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 41,
  "content": "                                      3.2.4\n\nThere is still the question of how long to\nmake the associated edge. For now, give                   1\nit a length of 0.4 — we’ll discuss how           2                 2\nlength matters in a moment. After you re-\nrun the optimization (Optimize Scale),  4                 1                 5\n                                                          1.000\n you should get a modified arrangement           3                 4\n of node circles shown in figure 3.2.5.          1.000             1.000\n                                                           2\n\n                                        2                                   2\n\n                                                          2\n                                                           1.000\n                                        3                                   3\n\n                                                           3\n                                                 5        7        6\n                                                 1.000    0.400    1.000\n                                        6                 8                 7\n\n                                                       3.2.5\n\n\n                                  41",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a33"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 69,
  "content": "    4.3  Creating a new Tree\n\n When a window is first opened, it will be in Default View showing a blank square, as shown in\n figure 4.3.1.\n\nYou define the tree by pointing and\nclicking in the square to draw a stick\nfigure that defines the topology of the\ndesired origami base. Clicking once in\nthe square produces a node at the\nlocation of the click, as shown in figure\n4.3.3. When a node is selected it is\nhighlighted: it has a spot of color around\nit in the highlight color of the computer\nTreeMaker is running on.\n\nIf a single node is highlighted, clicking in\nanother location will add a node with an\nedge connecting the two, as shown in\nfigure 4.3.3.\n\n\n                                                       4.3.1\n\n\n                                                       4.3.2\n\n\n                                  69",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a34"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 65,
  "content": "./origami_dataset_dev/TreeMkr40/page065_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a35"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 121,
  "content": " Now, there is conceivably an infinite number of polygons and a polygon can have any number of\n sides, so we’re not out of the woods yet. We need to find a way to collapse an arbitrary polygon\n into its corresponding subbase. Let’s look at a few simple cases.\n\n We’ll start with triangles. A triangle has three sides and three corners. Recall that the corners of\n active polygons are terminal nodes. Thus, the tree of a triangle must be a tree with three terminal\n nodes and vice-versa. There is only one graph with three terminal nodes, which is shown in\n figure 5.9. This tree corresponds to a uniaxial base with three flaps, whose lengths I have dubbed\n a, b, and c.\n\n                       A                                  A\n\n                                                       a      a\n                       a\n                                                   D\n                                                                 D\n                     D\n                                               b\n              b             c                                       c\n\n       B\n                                 C       B                              C\n                                                  bcD\n\nFigure 5.9. (Left) The tree with three terminal nodes, corresponding to a subbase with flaps of\nlength a, b, and c. (Right) The corresponding triangle polygon.\nNow, one of the assumptions we’ve made is that the sides of the active polygons are active paths.\nFor a triangle whose three sides are active paths, that means we already know the lengths of the\nsides: they are, respectively, (a+b), (b+c), and (c+a). A triangle is uniquely specified by its\nsides, so if we are given the tree we know what the triangle is and vice versa. Given a triangle\nwith sides defined above, is there a crease pattern that collapses this triangle into a subbase with\nflaps of the appropriate length?\n\nThere is such a crease pattern and it is one familiar to every paper folder: the humble rabbit ear.\nIt’s been known since Euclid that the three bisectors of a triangle intersect at a point, which\nenables one to form a rabbit ear from any triangle with all of the edges lying in the same plane\n(or if you flatten the rabbit ear, the edges all lie on a line). One can also show the converse; if\nthree sides of a triangle are (a+b), (b+c), and (c+a), then the length of the flaps of the resulting\nrabbit ear are a, b, and c. So any triangle bounded by three active paths can be filled in with the\n creases of a rabbit ear, as shown in figure 5.10.\n\n\n                                 121",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a36"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 13,
  "content": "./origami_dataset_dev/TreeMkr40/page013_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a37"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 135,
  "content": "Figure 5.26. In a triangle, all three corners are inset to the same point, which is the intersection\nof the angle bisectors. This gives the rabbit ear molecule.\n\n\nFigure 5.27. The four possible universal molecules for a quad. If all four corners are inset to the\nsame point, the result is the Husimi molecule (top left). If adjacent pairs of corners are inset to\ntwo points, the Maekawa molecule is obtained (top right). If the inset polygon is a triangle, it is\nfilled in with a rabbit ear molecule, which also results in a Maekawa molecule (bottom left).\nFinally, if the inset polygon is a quad crossed by an active reduced path, the result is the gusset\nquad.\nThese examples are just the tip of the iceberg; beyond four sides, the possibilities rapidly\nexplode. But this explosion doesn’t matter; there is a unique universal molecule for every\npossible active polygon that satisfies the tree theorem.\n\nAn alternative design approach that blends aspects of the circle method and tree methods has\nbeen described by Kawahata2 and Maekawa3. It has been called this the “string-of-beads”\n\n\n2Fumiaki Kawahata, Fantasy Origami, pub. by Gallery Origami House, Tokyo, Japan, 1995 [in Japanese].\n\n3Jun Maekawa, Oru magazine, also in Proceedings of the Second International Conference on Origami Science and\nTechnology, 1994 [in Japanese]\n\n                                 135",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a38"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 109,
  "content": "Check mark: the three nodes currently have this condition applied to them. Selecting the\ncommand removes the condition.\n   Remove selected Node conditions\nThis command removes all conditions that apply specifically to this node. It does not affect Edge\nconditions or path conditions.\n   Remove all Node conditions\nThis command removes all conditions that apply to all nodes. It does not affect edge conditions\nor path conditions.\n   Edge length fixed\nThis command applies/removes a “Edge length fixed” condition to the selected edge(s). It is\nenabled if at least one edge is selected. The command has the following marks and effects:\n\nNo mark: none of the selected edges have this condition. Selecting the command applies a\ncondition to each of the selected edges.\n\nDiamond mark: some of the selected edges have this condition. Selecting the command applies a\ncondition to all of the selected edges.\n\nCheck mark: all of the selected edges have this condition. Selecting the command removes this\ntype of Condtion from each of the selected edges.\n   Edges same strain\nThis command applies/removes a “Edges same strain” condition to a selected pair of edges. It is\nenabled only if you have selected exactly two edges . The command has the following marks and\neffects:\n\nNo mark: neither of the selected edges has this condition. Selecting the command applies a\ncondition binding the two edges together.\n\nDiamond mark: one or both of the selected edges have this condition but not with each other.\nSelecting the command removes the existing pair conditions and applies a condition binding the\ntwo edges together.\n\nCheck mark: the two edges currently have this condition applied to them. Selecting the command\nremoves the condition.\n   Remove selected Edge conditions\nThis command removes all conditions that apply specifically to this edge. It does not affect node\nconditions or path conditions.\n   Remove all Edge conditions\nThis command removes all conditions that apply to all edges. It does not affect node conditions\nor path conditions.\n\n\n                                109",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a39"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 62,
  "content": "./origami_dataset_dev/TreeMkr40/page062_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a3a"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 108,
  "content": "No mark: none of the selected nodes have this condition. Selecting the command applies a\ncondition to each of the selected nodes.\n\nDiamond mark: some of the selected nodes have this condition. Selecting the command applies a\ncondition to all of the selected nodes.\n\nCheck mark: all of the selected nodes have this condition. Selecting the command removes this\ntype of Condtion from each of the selected nodes.\n   Node fixed to symmetry line\nThis command applies/removes a “Node fixed to symmetry line” condition to the selected\nnode(s). It is enabled if at least one node is selected. The command has the following marks and\neffects:\n\nNo mark: none of the selected nodes have this condition. Selecting the command applies a\ncondition to each of the selected nodes.\n\nDiamond mark: some of the selected nodes have this condition. Selecting the command applies a\ncondition to all of the selected nodes.\n\nCheck mark: all of the selected nodes have this condition. Selecting the command removes this\ntype of Condtion from each of the selected nodes.\n   Nodes paired\nThis command applies/removes a “Nodes paired about symmetry line” condition to a selected\npair of nodes. It is enabled only if you have selected exactly two nodes. The command has the\nfollowing marks and effects:\n\nNo mark: neither of the selected nodes has this condition. Selecting the command applies a\ncondition binding the two nodes together.\n\nDiamond mark: one or both of the selected nodes have this condition but not with each other.\nSelecting the command removes the existing pair conditions and applies a condition binding the\ntwo nodes together.\n\nCheck mark: the two nodes currently have this condition applied to them. Selecting the command\nremoves the condition.\n   Nodes collinear\nThis command applies/removes a “Nodes Collinear” condition to a selected triplet of nodes. It is\nenabled only if you have selected exactly three nodes. The command has the following marks\nand effects:\n\nNo mark: none of the selected nodes has this condition. Selecting the command applies a\ncondition binding the three nodes together.\n\nDiamond mark: one of the three selected nodes have this condition but they don’t form a triplet.\nSelecting the command removes the existing triplet conditions and applies a condition binding\nthe three nodes together.\n\n\n                                108",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a3b"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 134,
  "content": "Figure 5.25. (Left) Two corners are inset to the same point, which is the intersection of the angle\nbisectors. (Right) Two nonadjacent corners inset to the point where the reduced path between the\ninset corners becomes active.\nAs I said, one or the other or both of these situations must apply; it is possible that path\ncorresponding to both adjacent and nonadjacent corners have become active simultaneously or\nfor multiple reduced paths to become active for the same value of h (this happens surprisingly\noften). In either case, the reduced polygon can be simplified, thus reducing the complexity of the\nproblem.\n\nIn a reduced polygon, if two or more adjacent corners have coalesced into a single point, then the\nreduced polygon has fewer sides (and paths) than the original active polygon. And if a path\nbetween nonadjacent corners has become active, then the reduced polygon can be split into\nseparate polygons along the active reduced paths, each with fewer sides than the original polygon\nhad (just as in the polygon network, an active path across an active polygon splits it into two\nsmaller polygons). (In the gusset quad, for example, the reduced quad is inset until one of its\ndiagonals becomes an active path; the reduced quad is then split along the diagonal into two\ntriangles.) In either situation, you are left with one or more polygons that have fewer sides than\nthe original. The process of insetting and subdivision is then applied to each of the interior\npolygons anew, and the process repeated as necessary.\n\nIf a polygon (active or reduced) has three sides, then there are no nonadjacent reduced paths. The\nthree bisectors intersect at a point, and the polygon’s reduced polygon evaporates to a point,\nleaving a rabbit ear molecule behind composed of the bisectors.\n\nFour-sided polygons can have the four corners inset to a single point or to a line, in which case\nno further insetting is required, or to one or two triangles, which are then inset to a point. Higher-\norder polygons are subdivided into lower-order ones in direct analogy.\n\nSince each stage of the process absolutely reduces the number of sides of the reduced polygons\ncreated (although possibly at the expense of creating more of them), the process must necessarily\nterminate. Since each polygon (a) can fold flat, and (b) satisfies the tree theorem, then the entire\ncollection of nested polygons must also satisfy the tree condition. Consequently, any active\npolygon that satisfies the tree theorem — no matter how many sides — can be filled with a\ncrease pattern using the procedure outlined above and collapsed into a base on the resulting\ncreases.\n\nSo what are the creases of the universal molecule? Each polygon is divided into two parts: the\ncore is the reduced polygon (which may be crossed by active reduced paths); the border around\nthe core is the ring. The angle bisectors that cross the ring are mountain folds. Internal nodes\nalong active paths propagate inward across the ring forming tri-state folds. Active reduced paths\nthat cross the core are valley folds. The boundary of reduced polygons can also be tri-state folds,\nas one may or may not fold layers along them. The same assignment of crease applies to each\nlevel of the recursive universal molecule construction.\n\nA remarkable feature of the universal molecule is that many of the molecular crease patterns that\nhave been previously enumerated are just special cases of it, including the rabbit ear molecule,\nthe gusset quad, and both Maekawa and Meguro quads. Figures 5.26 and 5.27 illustrates these\nspecial cases.\n\n\n                                134",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a3c"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 120,
  "content": "                                      A\n\n                               EF\n\n                                       B\n\n                          EF\n                A                                           A\n                                 BB\n                                      A\n         E                                                         F\n\n                 BBBB\n\n                              CC\n                 C                                           C\n\n         G                                                         H\n                         GH\n                                CC\n\n                                       D\n\n                                       A\n\n\n                                        B\n\n                                        C\n\n                                GH\n\n                                       D\n\nFigure 5.8. The four active polygons for the six-legged base and the trees corresponding to each\nsubbase.\nAn incredibly useful property of active polygons is that although two polygons may share a\ncommon side, if that side is an active path, any crease pattern that collapses one polygon into a\nsubbase is always compatible with a crease pattern that collapses the adjacent polygon into its\nsubbase! If you like, for example, you could cut up the square into separate polygons, fold each\npolygon into a subbase, and then glue matching edges of the subbases back together and be\nassured that they would match up. This matching property is unique to active paths, so any two\npolygons that share a side that is an active path will be guaranteed to match up. The practical\nupshot of this is that in order to find the creases that collapse the entire base, we can find crease\npatterns that collapse each polygon into a section of the overall base, taking the polygons one at a\ntime. So here is a way to break up the design of a complicated base into a bunch of much simpler\nbases. To collapse the entire square into a uniaxial base, it suffices to find a way to collapse each\npolygon individually into the appropriate subbase.\n\n\n                                120",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a3d"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 100,
  "content": "./origami_dataset_dev/TreeMkr40/page100_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a3e"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 68,
  "content": " The top of the window shows the scale of the current design (the scale is the relationship\nbetween one edge unit and the size of the square). The rest of the window shows all the parts.\n\nThe collection of nodes and edges is known as a tree. Lines between nodes are paths. There is a\npath between most pairs of nodes, however, most paths are invisible in the windows above.\nGroups of certain paths form polys (“poly” is short for “polygon” and I’ll use the term more or\nless interchangeably). Polys are filled in with vertices and creases. The vertices and creases form\nthe crease pattern for the origami base. The design of an origami base is accomplished in three\nsteps:\n\n(1) Construction of a tree and specification of the desired attributes of the base (this is done by\nyou)\n\n(2) Placement of the nodes in a valid configuration (this is computed by TreeMaker)\n\n(3) Construction of the polys, vertices, and creases, forming the crease pattern for the base. (This\nis also computed by TreeMaker.)\n\n\n                                       4.2.3\n\nFigure 4.2.33 shows a finished crease pattern.\n\n\n                                  68",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a3f"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 40,
  "content": " Now any time we add a new node, it brings with it a node circle that cannot overlap any other\n node circle. In the current configuration, there is no room between node circles 1 and 3 to add a\n new circle. So we will have to add a new node and re-optimize in order to make room for the\n new node. This is a very important point: there is no way to modify the original configuration of\n nodes to make a plan view base without rearranging the entire pattern of nodes!\n\nSo, we’ll add a new node attached to\nnode 3. We’ll want the node to be located                 1\non the centerline between nodes 6 and 7.\nWe’ll make this forcing using conditions.\n                                                          1\nThere are a couple of ways we could do  4                                   5\nit: we could apply a Node fixed to                        1.000\n                                                 3                 4\nsymmetry line and Node fixed to edge             1.000             1.000\ncondition to the same node; but since we                   2\nknow exactly where the node should lie,\nwe can just use a Node fixed to position\ncondition. So, create a new node attached\nto node 3 as shown in figure 3.2.3.                       2\n                                                           1.000\nThen double-click on the node to bring\nup the Node Editor. Apply a Node fixed\nto position condition, affixing the node                   3\n                                                           7\nto location x=0.5, y=0 (turn on both                 5         6\n                                                           1.000\n                                                     1.000  8  1.000\ncheckboxes).                                    6                  7\n\n                                                       3.2.3\n\n\n                                  40",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a40"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 54,
  "content": "If you add a new edge to node 1 and\nexpand it, you’ll get something like the\npolygon pattern shown in figure 3.4.4.\nIndeed, the quad has been broken into\ntwo triangles — and another quad.\n\n\n                                                       3.4.3\n\n\n                                                           2\n\n                                                1\n                                        3\n\n                                                     1            1\n                                                      0.6001\n                                           2\n                                        1   0.400\n                                                        6\n                                                    5       1\n                                                     1\n                                                1    1.000-79.1%\n                                                             4\n                                                              0.800         5\n\n                                           3\n                                            1.000           1\n\n                                        4\n\n                                                       3.4.4\n\n\n                                  54",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a41"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 77,
  "content": "./origami_dataset_dev/TreeMkr40/page077_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a42"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 83,
  "content": "                                      4.5.4\n\n   View Menu\nThe View menu contains commands that affect the way the tree and crease pattern are displayed\non the screen or printout. Commands are:\n   Default View                       1D\nAlters settings so that both the tree (the stick figure) and creases are visible. This is usually the\nmost useful combination of settings for working through a design. Here is an example shown in\nfigure 4.5.5.\n\n\n                                      4.5.5\n\n\n                                 83",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a43"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 97,
  "content": "                                       4.5.22\n\nMost of the nodes and edges are pinned, but node 7 isn’t pinned and edge 6 could be larger. So,\nselect node 7 and edge 6 and then select the Optimize Selection command, Action menu, giving\nthe result shown in figure 4.5.23.\n\n\n                                  97",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a44"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 107,
  "content": "./origami_dataset_dev/TreeMkr40/page107_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a45"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 70,
  "content": "./origami_dataset_dev/TreeMkr40/page070_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a46"
  },
  "pdf_name": "TreeMkr40",
  "page_number": 25,
  "content": "./origami_dataset_dev/TreeMkr40/page025_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a47"
  },
  "pdf_name": "boxpleating_guide_1",
  "page_number": 6,
  "content": "The stick figure for this CP will look like this.\n\n\nFor this specific model the stick figure doesn’t really tell that much, because the model also makes\nuse of the fact that due to paper thickness the flaps (which theoretically are all coming from the same\npoint in the stick figure) will be spread apart and create a voluminous 3D body.\nBut at least theoretically the collapsed base will look similar to the stick figure.\n\nTo make things easier for the folder I usually show the meaning of the flaps in a separate drawing along\nwith the CPs I publish.\nWhen designing a box pleated model, the main challenge is to create such a square packing to fit the\nintended stick figure by arranging squares of different size into a square.\n\n                                   Lower Jaw\n\n                      QuillUpper Jaw                 Quill\n\n         Foreleg                                                Foreleg\n                                     Eyes &\n                                      Ears\n\n\n              Quill          Quill   Quill   Quill           Quill\n\n                                     Neck\n\n\n          QuillQuillQuill                            Quill       Quill\n\n\n        Hind legQuill     Quill                  Quill   Quill  Hind leg\n\n                                      Tail\n\n                  Quill   Quill                  Quill   Quill\n\nWith this we have gathered the most important information from the CP and can commence with the\nfolding.",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a48"
  },
  "pdf_name": "boxpleating_guide_1",
  "page_number": 5,
  "content": "With this assignment of squares to the CP we have arrived at the form of CP I usually use when\npublishing CPs for my models, i.e. showing the CP together with the square packing.\n\n\nWhen it comes to specifying, which flap will become which part of the model there is no generic\nmethod to do this but you will learn from experience.\nFor example in the corners of this model you see some small flaps next to each other. Structures like\nthis will in most cases become fingers or toes, which implies that the surrounding rivers will be arms\nor legs.\n\nUsing the information we gathered, you could also create a stick-figure of the model to get a better\nunderstanding of how the base will look like and to get an idea of what the different flaps might be\nused for.\n\nFor constructing the stick-figure there are some simple rules to follow.\nThe length of a line in the stick-figure equals the lenght of the flap in the CP.\nFlaps that are not separated by a river will start at the same point.\nIf two flaps are separated by a river the distance between their starting points equals the width of the\nriver.",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a49"
  },
  "pdf_name": "boxpleating_guide_1",
  "page_number": 4,
  "content": "All of what I have explained so far works well for what I like to call “perfect” square packings, i.e.\neach flap only takes up the space it needs without any “wasted” space. In such cases the square packing\nonly consists of squares and rivers.\nBut there are several reasons when the designer needs to put more paper into a flap, f.e. so that the\npaper can be spread in the finishing process to create broader flaps for wings, clothes etc, or because\na perfect square packing is not possible at all. A flap like this would look like the following drawing\n\n\nWhen you look at this part closely you will notice that it actually is just a normal flap square with some\npleats added in the middle.\n\n\nThe four white pleats in the above drawing represent the extra paper you will have in this flap. How\nand if this extra paper will be used depends on the intended function of the flap.\nOne interpretation that always works and has the advantage to create a perfect square packing as\ndescribed above is to turn the extra paper into several small 1 unit flaps.\nThe resulting CP would look as follows with several small flap squares surrounded by a river. A\nstructure like this could for example be used as a leg with claws on the paws.\n\n\nSo after you have assigned squares to the CP you will have to look out for rectangles like this as well\nto complete the flap assignment. In the case of my porcupine this is not necessary since my CP uses\na perfect square packing (by my own definition).",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a4a"
  },
  "pdf_name": "boxpleating_guide_1",
  "page_number": 1,
  "content": "         How to fold Box Pleated CPs\n                    Part 1 - Understanding the CP\nWe’ll start with a CP in the form which you will most likely encounter on the Internet, namely with\nno information included except for the creases.\nThis design of mine will become an (Old World) Porcupine and I chose it for this guide because it\noffers most of the challenges you will encounter in box pleated CPs while still being of an intermediate\ndifficulty level.\n\n\nBefore we start folding we will need to understand this CP a bit better.\nHow many flaps are there? Where are the flaps? How long are the flaps?\n\nThe end points of the flaps can be determined very easily in the CP. They are the points where both\nhorizontals and both diagonals come together. For points on the edge of the paper you will have to add\nthe missing lines that would be outside of the paper in thought.\n\n\n                   centre flap     edge flap      corner flap\n\n                                                     Guide by Gerwin Sturm (2007/01)\n                                     Porcupine 1.2 designed by Gerwin Sturm (2007/01/23)",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a4b"
  },
  "pdf_name": "boxpleating_guide_1",
  "page_number": 3,
  "content": "Let’s try this for one point in the CP.\n\n\n                       1 unit flap - ok    2 unit flap - ok   3 unit flap - fail\nWe see that this flap is 2 units long. Let’s do this for the rest of the CP.\n\n\nWhat is left between the squares are so called rivers, which will separate the flaps from each other.\nThose might for example be arms that separate the fingers from the rest of the model, a neck that\nseparates the head from the rest of the model, a body that separates the arms from the legs, etc.",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a4c"
  },
  "pdf_name": "boxpleating_guide_1",
  "page_number": 2,
  "content": "Let’s apply this knowledge to the CP at hand.\n\n\nYou should find 36 flaps in this CP which is quite a lot.\nTo determine the length of the flaps we first have to know how a flap looks like in the CP.\nA flap will always have the form of a square in varying sizes with the just found end points as centre.\nAn exception are edge flaps which might seem to be rectangles because a part of the square is outside\nof the paper.\n                                             1 unit flap\n\n                                             2 unit flap\n\n                                             3 unit flap\n\n                                             4 unit flap\n\nThe crease distribution inside a flap square will always look exactly the same, so when trying to find\nthe length of a flap we are looking for the largest possible square around the flap end point which looks\nlike in the picture above.",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a4d"
  },
  "pdf_name": "Lang_s Universal Molecule Algorithm",
  "page_number": 3,
  "content": "./origami_dataset_dev/Lang_s Universal Molecule Algorithm/page003_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a4e"
  },
  "pdf_name": "Lang_s Universal Molecule Algorithm",
  "page_number": 3,
  "content": "./origami_dataset_dev/Lang_s Universal Molecule Algorithm/page003_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a4f"
  },
  "pdf_name": "Lang_s Universal Molecule Algorithm",
  "page_number": 3,
  "content": "./origami_dataset_dev/Lang_s Universal Molecule Algorithm/page003_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a50"
  },
  "pdf_name": "Lang_s Universal Molecule Algorithm",
  "page_number": 1,
  "content": "                                                                   Smith ScholarWorks \n\nComputer Science: Faculty Publications                                        Computer Science \n\n8-1-2015 \n\nLang’s Universal Molecule Algorithm \n\nJohn C. Bowers \nUniversity of Massachusetts Amherst \n\nIleana Streinu \nSmith College, istreinu@smith.edu \n\n\nFollow this and additional works at: https://scholarworks.smith.edu/csc_facpubs \n\n   Part of the Computer Sciences Commons \n\nRecommended Citation \nBowers, John C. and Streinu, Ileana, \"Lang’s Universal Molecule Algorithm\" (2015). Computer Science: \nFaculty Publications, Smith College, Northampton, MA. \nhttps://scholarworks.smith.edu/csc_facpubs/305 \n\n\nThis Article has been accepted for inclusion in Computer Science: Faculty Publications by an authorized \nadministrator of Smith ScholarWorks. For more information, please contact scholarworks@smith.edu ",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a51"
  },
  "pdf_name": "Lang_s Universal Molecule Algorithm",
  "page_number": 3,
  "content": "              (a) Tree                (b) Crease Pattern                         (c) Uniaxial Base\n\n Figure 1: The applet illustrates the intercorrelation of the three structures that underlie the Universal Molecule algorithm.\n\n  As the contour shrinks inwards, an edge between two          3.   SOFTWARE AND VIDEO\nmarker vertices maintains its length, while an edge between      Our software is a Java Applet implementation in which the\na marker and a corner shrinks. This corresponds to a shrink-   user deﬁnes the input tree and is then able to modify a dou-\ning of the tree by moving the leaves inward.   At certain      bling cycle for the tree to produce different Lang polygons.\ndiscrete heights one of two events occurs.  A  contraction     A slider allows the user to visualize the sweeping process. A\nevent occurs when an edge between a corner and a marker        3D  window shows the user a live visualization of the ﬁnal\nvertex shrinks to a single point. All leaves incident to the   folded base realizable with the computed crease-pattern.\ninternal node corresponding to the marker vertex shrink at       After a brief overview of TreeMaker, the video discusses\nonce. This node is then a leaf node of the shrunken tree.      the intricacies of Lang's Universal Molecule algorithm, and\nA  branching event occurs when the distance between two        shows a totally rigid example it may produce.   The ani-\ncorner vertices becomes equal to the corresponding distance    mations for the Universal Molecule segment were screen-\nbetween the leaf nodes. If the sweeping process were to pro-   captured from our implementation, with annotations added\nceed past this point, the contour would cease to be a Lang     in post-processing with presentation software.  The   live\npolygon, since the distance between two leaf nodes would       demo of   our  implementation is available at our website\nbecome less than the corresponding distance between the        linkage.cs.umass.edu/origamiLang.\nleaves. The contour is therefore split by adding an edge\nbetween the two corner nodes. Marker nodes are added so\nthat the edge corresponds to the path in the tree between      4.   ACKNOWLEDGEMENTS\nthe two leaf nodes. This splits the contour into two con-        Research funded by DARPA\\23 Mathematical Challenges\"\ntours, both of which are Lang polygons. The sub-tree for       (under \\Algorithmic Origami and Biology\") and NSF CCF-\neach of the contours is created by splitting the tree along    1016988 grants of the second author. The ﬁrst author is\nthe path between the two leaf nodes. The sweeping process      supported by an NSF Graduate Fellowship.\nthen proceeds in parallel in each contour.\n  In 3D  the sweeping contours correspond to a sweeping        5.   REFERENCES\nprocess of the shrinking tree upwards by the height of the     [1] J. C. Bowers and I. Streinu. Lang's universal molecule\ncontour. Conceptually, the sweeping process is a continuous       algorithm. Technical report, Dec 2011.\nprocess with discrete events. The algorithm, however, works    [2] J. C. Bowers and I. Streinu. Rigidity of Lang's origami\nby identifying the height of the next event and by recursing      universal molecules. Technical report, Feb 2012.\non the contour and sub-tree at that event. The base case is       (Submitted).\nwhen the next event is a contraction of all edges to the same\n                                                               [3] R. J. Lang. Origami design secrets: mathematical\npoint.\n                                                                  methods for an ancient art, A. K. Peters, 2003.\n                                                               [4] R. J. Lang. A computational algorithm for origami\nRigidity   of Universal Molecules.       Lang's Universal         design. In Proceedings of the 12th Annual ACM\nMolecule algorithm produces crease patterns for which uni-        Symposium   on Computational Geometry, pages 98{105,\naxial realizations exist. A question remains: can the uniaxial    1996.\nstate be achieved by continuously folding the creased paper,   [5] R. J. Lang. Treemaker 4.0: A program for origami\nin such a way that the faces are kept rigid and folds oc-         design, 1998. http://www.langorigami.com.\ncur only along creases? In the video, we show an example\nfound using our software implementation, which (as proven\nin [2]) answers this question in the negative. The example\ngives a totally inﬂexible crease pattern, which would not fold\ninto its associated uniaxial base without further deformation\n(bending) of the paper.\n\n\n                                                           420",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a52"
  },
  "pdf_name": "Lang_s Universal Molecule Algorithm",
  "page_number": 2,
  "content": "                       Lang’s Universal Molecule Algorithm\n\n                       John C. Bowers                                         Ileana Streinu\n                Department of Computer Science                       Department of Computer Science\n                  University of Massachusetts                                   Smith College\n                   Amherst, MA 01003, USA.                             Northampton, MA 01063, USA.\n                     jbowers@cs.umass.edu                       istreinu@smith.edu, streinu@cs.umass.edu\n\n\nABSTRACT                                                         A base in which each face is perpendicular to a common\nWe present a Java implementation     of Lang's Universal       plane is called projectable. Lang's bases project to a tree\nMolecule algorithm, alongside with a visualization of its in-  called the shadow tree.A uniaxial base is a Lang projectable\nterconnected structures: the input metric tree and compat-     base in which the boundary of the paper folds exactly onto\nible convex polygon, whose 2D crease pattern and 3D uni-       its shadow tree, and the rest of the base lies above the projec-\naxial base are computed by the algorithm.                      tion plane. Lang's TreeMaker algorithm  solves the follow-\n  The Java applet, the video, as well as further references    ing version of the origami design problem: given a metric\nand accompanying materials are available on our web site       tree and a sheet of paper (typically, a square or rectangle),\nlinkage.cs.umass.edu/origamiLang. We also include a re-        produce a crease pattern which has a realization as a uni-\ncent example, found with the help of this implementation,      axial base whose shadow tree is the input tree. In a ﬁrst\nof a Universal Molecule crease pattern which, as a ﬂat-faced   step, TreeMaker subdivides the paper into regions, called\norigami, is completely rigid; in particular, its corresponding molecules, which can be folded independently. The Univer-\nuniaxial base cannot be reached through continuous folding     sal Molecule algorithm then ﬁlls in the crease pattern of each\nwithout bending of the paper.                                  molecule.\n                                                                 This video provides a visualization of Lang's Universal\n                                                               Molecule algorithm through a Java implementation, and is\nCategories and Subject Descriptors                             a companion to our recent papers [1, 2].\nI.3.5 [Computational Geometry and Object Model-\ning]: [Geometric algorithms, languages, and systems]           2.   UNIVERSAL MOLECULE\n                                                                 The input to Lang's Universal Molecule algorithm   is a\nGeneral Terms                                                  topologically embedded metric tree and a special type of\nTheory, Algorithms                                             convex polygon associated to the tree, which we call a Lang\n                                                               polygon. The output is a crease pattern for the polygon\n                                                               for which there exists a folded realization as a uniaxial base\nKeywords                                                       with shadow tree equal to (a geometric embedding of) the\ncomputational origami, origami design, rigidity, Universal     input tree.\nMolecule, TreeMaker                                              A Lang polygon is a special case of a doubling cycle for the\n                                                               input tree. A doubling cycle is a polygon created by walking\n                                                               around the topologically embedded input tree.   Each arc\n1.   INTRODUCTION                                              traversed along the walk corresponds to an edge of the same\n  In a beautiful paper from SoCG 1996 [4] (see also [5, 3]),   length in the doubling cycle. The leaf nodes are encountered\nRobert Lang introduced TreeMaker, an algorithm     for de-     only once and thus have unique corresponding vertices in\nsigning origami crease patterns compatible with an input       the polygon, which we call  corners. An interior node of\nmetric tree. His designs are distinguished by the existence    degree d is encountered d times and is each time marked\nof a ﬂat-folded uniaxial base compatible with the input tree.  on the boundary. We call these vertices marker vertices. If\nAt the core of TreeMaker lies the Universal Molecule algo-     a doubling cycle is convex and for each pair of corners the\nrithm, which is the focus of this video.                       distance between the corners is greater than or equal to the\n  In origami design, line segments called creases are intro-   distance in the tree between the corresponding leaf nodes,\nduced on a sheet of paper to allow the paper to fold along     then the doubling cycle is a Lang polygon. The interior angle\nthem into a 3D state, called a base. The line segments form    of any marker vertex is π.\nthe crease pattern, which subdivides the paper into a set of     The algorithm works by a  parallel sweep process in which\npolygonal faces. The TreeMaker algorithm   creates creases     the edges of the polygon are moved inwards in a parallel\nthat guarantee the existence of special 3D  folded shapes,     fashion at constant speed. The interior sweeping polygon\ncalled uniaxial bases.                                         is called a contour and the distance the edges have moved\n                                                               at any point in the sweep process is called the height of the\n                                                               contour. The edges of the crease pattern are created by\nCopyright is held by the author/owner(s).\nSCG’12, June 17–20, 2012, Chapel Hill, North Carolina, USA.    tracing the paths of the vertices (both corner and marker)\nACM 978-1-4503-1299-8/12/06.                                   of the polygon.\n\n\n                                                           419",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a53"
  },
  "pdf_name": "Lang_s Universal Molecule Algorithm",
  "page_number": 1,
  "content": "./origami_dataset_dev/Lang_s Universal Molecule Algorithm/page001_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a54"
  },
  "pdf_name": "Lang_s Universal Molecule Algorithm",
  "page_number": 1,
  "content": "./origami_dataset_dev/Lang_s Universal Molecule Algorithm/page001_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a55"
  },
  "pdf_name": "C06_images",
  "page_number": 2,
  "content": "./origami_dataset_dev/C06_images/page002_image013.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a56"
  },
  "pdf_name": "C06_images",
  "page_number": 16,
  "content": "./origami_dataset_dev/C06_images/page016_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a57"
  },
  "pdf_name": "C06_images",
  "page_number": 2,
  "content": "./origami_dataset_dev/C06_images/page002_image007.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a58"
  },
  "pdf_name": "C06_images",
  "page_number": 35,
  "content": "./origami_dataset_dev/C06_images/page035_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a59"
  },
  "pdf_name": "C06_images",
  "page_number": 21,
  "content": "./origami_dataset_dev/C06_images/page021_image004.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a5a"
  },
  "pdf_name": "C06_images",
  "page_number": 11,
  "content": "./origami_dataset_dev/C06_images/page011_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a5b"
  },
  "pdf_name": "C06_images",
  "page_number": 34,
  "content": "./origami_dataset_dev/C06_images/page034_image005.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a5c"
  },
  "pdf_name": "C06_images",
  "page_number": 4,
  "content": "./origami_dataset_dev/C06_images/page004_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a5d"
  },
  "pdf_name": "C06_images",
  "page_number": 20,
  "content": "./origami_dataset_dev/C06_images/page020_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a5e"
  },
  "pdf_name": "C06_images",
  "page_number": 34,
  "content": "./origami_dataset_dev/C06_images/page034_image004.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a5f"
  },
  "pdf_name": "C06_images",
  "page_number": 3,
  "content": "./origami_dataset_dev/C06_images/page003_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a60"
  },
  "pdf_name": "C06_images",
  "page_number": 35,
  "content": "./origami_dataset_dev/C06_images/page035_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a61"
  },
  "pdf_name": "C06_images",
  "page_number": 2,
  "content": "./origami_dataset_dev/C06_images/page002_image006.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a62"
  },
  "pdf_name": "C06_images",
  "page_number": 2,
  "content": "./origami_dataset_dev/C06_images/page002_image012.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a63"
  },
  "pdf_name": "C06_images",
  "page_number": 2,
  "content": "./origami_dataset_dev/C06_images/page002_image004.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a64"
  },
  "pdf_name": "C06_images",
  "page_number": 2,
  "content": "./origami_dataset_dev/C06_images/page002_image010.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a65"
  },
  "pdf_name": "C06_images",
  "page_number": 2,
  "content": "./origami_dataset_dev/C06_images/page002_image038.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a66"
  },
  "pdf_name": "C06_images",
  "page_number": 35,
  "content": "./origami_dataset_dev/C06_images/page035_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a67"
  },
  "pdf_name": "C06_images",
  "page_number": 36,
  "content": "./origami_dataset_dev/C06_images/page036_image009.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a68"
  },
  "pdf_name": "C06_images",
  "page_number": 34,
  "content": "./origami_dataset_dev/C06_images/page034_image006.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a69"
  },
  "pdf_name": "C06_images",
  "page_number": 4,
  "content": "./origami_dataset_dev/C06_images/page004_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a6a"
  },
  "pdf_name": "C06_images",
  "page_number": 27,
  "content": "./origami_dataset_dev/C06_images/page027_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a6b"
  },
  "pdf_name": "C06_images",
  "page_number": 4,
  "content": "./origami_dataset_dev/C06_images/page004_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a6c"
  },
  "pdf_name": "C06_images",
  "page_number": 34,
  "content": "./origami_dataset_dev/C06_images/page034_image007.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a6d"
  },
  "pdf_name": "C06_images",
  "page_number": 20,
  "content": "./origami_dataset_dev/C06_images/page020_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a6e"
  },
  "pdf_name": "C06_images",
  "page_number": 36,
  "content": "./origami_dataset_dev/C06_images/page036_image008.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a6f"
  },
  "pdf_name": "C06_images",
  "page_number": 2,
  "content": "./origami_dataset_dev/C06_images/page002_image039.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a70"
  },
  "pdf_name": "C06_images",
  "page_number": 2,
  "content": "./origami_dataset_dev/C06_images/page002_image011.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a71"
  },
  "pdf_name": "C06_images",
  "page_number": 2,
  "content": "./origami_dataset_dev/C06_images/page002_image005.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a72"
  },
  "pdf_name": "C06_images",
  "page_number": 2,
  "content": "./origami_dataset_dev/C06_images/page002_image029.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a73"
  },
  "pdf_name": "C06_images",
  "page_number": 2,
  "content": "./origami_dataset_dev/C06_images/page002_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a74"
  },
  "pdf_name": "C06_images",
  "page_number": 2,
  "content": "./origami_dataset_dev/C06_images/page002_image015.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a75"
  },
  "pdf_name": "C06_images",
  "page_number": 35,
  "content": "./origami_dataset_dev/C06_images/page035_image004.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a76"
  },
  "pdf_name": "C06_images",
  "page_number": 21,
  "content": "./origami_dataset_dev/C06_images/page021_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a77"
  },
  "pdf_name": "C06_images",
  "page_number": 36,
  "content": "./origami_dataset_dev/C06_images/page036_image018.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a78"
  },
  "pdf_name": "C06_images",
  "page_number": 5,
  "content": "./origami_dataset_dev/C06_images/page005_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a79"
  },
  "pdf_name": "C06_images",
  "page_number": 34,
  "content": "./origami_dataset_dev/C06_images/page034_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a7a"
  },
  "pdf_name": "C06_images",
  "page_number": 10,
  "content": "./origami_dataset_dev/C06_images/page010_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a7b"
  },
  "pdf_name": "C06_images",
  "page_number": 34,
  "content": "./origami_dataset_dev/C06_images/page034_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a7c"
  },
  "pdf_name": "C06_images",
  "page_number": 17,
  "content": "./origami_dataset_dev/C06_images/page017_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a7d"
  },
  "pdf_name": "C06_images",
  "page_number": 35,
  "content": "./origami_dataset_dev/C06_images/page035_image005.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a7e"
  },
  "pdf_name": "C06_images",
  "page_number": 21,
  "content": "./origami_dataset_dev/C06_images/page021_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a7f"
  },
  "pdf_name": "C06_images",
  "page_number": 2,
  "content": "./origami_dataset_dev/C06_images/page002_image014.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a80"
  },
  "pdf_name": "C06_images",
  "page_number": 2,
  "content": "./origami_dataset_dev/C06_images/page002_image028.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a81"
  },
  "pdf_name": "C06_images",
  "page_number": 2,
  "content": "./origami_dataset_dev/C06_images/page002_image016.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a82"
  },
  "pdf_name": "C06_images",
  "page_number": 2,
  "content": "./origami_dataset_dev/C06_images/page002_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a83"
  },
  "pdf_name": "C06_images",
  "page_number": 21,
  "content": "./origami_dataset_dev/C06_images/page021_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a84"
  },
  "pdf_name": "C06_images",
  "page_number": 35,
  "content": "./origami_dataset_dev/C06_images/page035_image007.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a85"
  },
  "pdf_name": "C06_images",
  "page_number": 10,
  "content": "./origami_dataset_dev/C06_images/page010_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a86"
  },
  "pdf_name": "C06_images",
  "page_number": 34,
  "content": "./origami_dataset_dev/C06_images/page034_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a87"
  },
  "pdf_name": "C06_images",
  "page_number": 35,
  "content": "./origami_dataset_dev/C06_images/page035_image006.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a88"
  },
  "pdf_name": "C06_images",
  "page_number": 2,
  "content": "./origami_dataset_dev/C06_images/page002_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a89"
  },
  "pdf_name": "C06_images",
  "page_number": 2,
  "content": "./origami_dataset_dev/C06_images/page002_image017.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a8a"
  },
  "pdf_name": "C06_images",
  "page_number": 39,
  "content": "./origami_dataset_dev/C06_images/page039_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a8b"
  },
  "pdf_name": "C06_images",
  "page_number": 12,
  "content": "Can make origami with simultaneous folds\n\n\n    Randlett, “New Flapping Bird”",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a8c"
  },
  "pdf_name": "C06_images",
  "page_number": 6,
  "content": "Larry Howell’s group (BYU, 2014)",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a8d"
  },
  "pdf_name": "C06_images",
  "page_number": 39,
  "content": "./origami_dataset_dev/C06_images/page039_image015.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a8e"
  },
  "pdf_name": "C06_images",
  "page_number": 8,
  "content": "./origami_dataset_dev/C06_images/page008_image017.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a8f"
  },
  "pdf_name": "C06_images",
  "page_number": 8,
  "content": "./origami_dataset_dev/C06_images/page008_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a90"
  },
  "pdf_name": "C06_images",
  "page_number": 38,
  "content": "./origami_dataset_dev/C06_images/page038_image012.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a91"
  },
  "pdf_name": "C06_images",
  "page_number": 38,
  "content": "./origami_dataset_dev/C06_images/page038_image006.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a92"
  },
  "pdf_name": "C06_images",
  "page_number": 38,
  "content": "./origami_dataset_dev/C06_images/page038_image007.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a93"
  },
  "pdf_name": "C06_images",
  "page_number": 38,
  "content": "./origami_dataset_dev/C06_images/page038_image013.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a94"
  },
  "pdf_name": "C06_images",
  "page_number": 8,
  "content": "./origami_dataset_dev/C06_images/page008_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a95"
  },
  "pdf_name": "C06_images",
  "page_number": 8,
  "content": "./origami_dataset_dev/C06_images/page008_image016.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a96"
  },
  "pdf_name": "C06_images",
  "page_number": 7,
  "content": "Larry Howell’s group (BYU, 2014)",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a97"
  },
  "pdf_name": "C06_images",
  "page_number": 39,
  "content": "./origami_dataset_dev/C06_images/page039_image014.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a98"
  },
  "pdf_name": "C06_images",
  "page_number": 13,
  "content": "Can make origami with simultaneous folds\n\n\n    Randlett, “New Flapping Bird”",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a99"
  },
  "pdf_name": "C06_images",
  "page_number": 39,
  "content": " Degree 6, symmetric vertex\n\n After some work, we can calculate the conﬁguration space for the \n symmetrically-folding degree-6 vertex.\n\n                                       pop down\n                                             ( ⇡/3, ⇡) ⇢1 \n To self-fold along mode 1, for example,  pop up −\n we need a driving force                   mode 2\n \n                                          mode 1\n                                   ( ⇡, ⇡/3)\n                                    −                  2+p3, 1\n in order to be orthogonal to mode 2 at the           h    i\n                                                              ⇢2\n ﬂat state.       ( :o :o :o  !!!!! )              O\n\n       pop down               pop up                          (⇡, ⇡/3)\n    ρ2                                                          −\nmode 1:\n                                                               mode 1\n                          ρ1\n                                                        mode 2\n            ρ1\n                              ρ2                     (⇡/3, ⇡)\n    ρ2                                                  −\nmode 2:\n                          ρ1              Thus we want to drive all \n                                          creases to be valleys!!!\n           ρ1\n       pop up                 ρ2 pop down",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a9a"
  },
  "pdf_name": "C06_images",
  "page_number": 39,
  "content": "./origami_dataset_dev/C06_images/page039_image016.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a9b"
  },
  "pdf_name": "C06_images",
  "page_number": 5,
  "content": "Robert Wood’s robotics lab at Harvard (2014)",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a9c"
  },
  "pdf_name": "C06_images",
  "page_number": 11,
  "content": "Can make origami with simultaneous folds",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a9d"
  },
  "pdf_name": "C06_images",
  "page_number": 39,
  "content": "./origami_dataset_dev/C06_images/page039_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a9e"
  },
  "pdf_name": "C06_images",
  "page_number": 8,
  "content": "./origami_dataset_dev/C06_images/page008_image028.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0a9f"
  },
  "pdf_name": "C06_images",
  "page_number": 8,
  "content": "./origami_dataset_dev/C06_images/page008_image014.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0aa0"
  },
  "pdf_name": "C06_images",
  "page_number": 38,
  "content": "./origami_dataset_dev/C06_images/page038_image005.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0aa1"
  },
  "pdf_name": "C06_images",
  "page_number": 38,
  "content": "./origami_dataset_dev/C06_images/page038_image011.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0aa2"
  },
  "pdf_name": "C06_images",
  "page_number": 38,
  "content": "./origami_dataset_dev/C06_images/page038_image010.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0aa3"
  },
  "pdf_name": "C06_images",
  "page_number": 38,
  "content": "./origami_dataset_dev/C06_images/page038_image004.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0aa4"
  },
  "pdf_name": "C06_images",
  "page_number": 8,
  "content": "./origami_dataset_dev/C06_images/page008_image015.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0aa5"
  },
  "pdf_name": "C06_images",
  "page_number": 8,
  "content": "./origami_dataset_dev/C06_images/page008_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0aa6"
  },
  "pdf_name": "C06_images",
  "page_number": 10,
  "content": "Self-folding polymer gels",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0aa7"
  },
  "pdf_name": "C06_images",
  "page_number": 39,
  "content": "./origami_dataset_dev/C06_images/page039_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0aa8"
  },
  "pdf_name": "C06_images",
  "page_number": 39,
  "content": "./origami_dataset_dev/C06_images/page039_image017.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0aa9"
  },
  "pdf_name": "C06_images",
  "page_number": 4,
  "content": "What is self-folding?\n\n• Devising ways to make materials fold automatically in response to some \n stimulus.\n\n\n• Example: \n Harvard \n Microrobotics Lab",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0aaa"
  },
  "pdf_name": "C06_images",
  "page_number": 38,
  "content": " Degree 6, symmetric vertex\n\n After some work, we can calculate the conﬁguration space for the \n symmetrically-folding degree-6 vertex.\n\n                                       pop down\n                                             ( ⇡/3, ⇡) ⇢1 \n To self-fold along mode 1, for example,  pop up −\n we need a driving force                   mode 2\n \n                                          mode 1\n                                   ( ⇡, ⇡/3)\n                                    −                  2+p3, 1\n in order to be orthogonal to mode 2 at the           h    i\n                                                              ⇢2\n ﬂat state.       ( :o :o :o  !!!!! )              O\n\n       pop down               pop up                          (⇡, ⇡/3)\n    ρ2                                                          −\nmode 1:\n                                                               mode 1\n                          ρ1\n                                                        mode 2\n            ρ1\n                              ρ2                     (⇡/3, ⇡)\n    ρ2                                                  −\nmode 2:\n                          ρ1\n\n\n           ρ1\n       pop up                 ρ2 pop down",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0aab"
  },
  "pdf_name": "C06_images",
  "page_number": 9,
  "content": "./origami_dataset_dev/C06_images/page009_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0aac"
  },
  "pdf_name": "C06_images",
  "page_number": 39,
  "content": "./origami_dataset_dev/C06_images/page039_image013.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0aad"
  },
  "pdf_name": "C06_images",
  "page_number": 39,
  "content": "./origami_dataset_dev/C06_images/page039_image007.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0aae"
  },
  "pdf_name": "C06_images",
  "page_number": 14,
  "content": "Miura-Ori pattern \n\n\n                                                                     Focused on valley  \n\n\n          Before release  \n\n\n                                                                  Focused on mountain ",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0aaf"
  },
  "pdf_name": "C06_images",
  "page_number": 28,
  "content": "   Conﬁguration space of a ﬂat-foldable, deg 4 vertex\n\n  What does the conﬁguration space look like?\n  \n\n      e2\n                            ρ1                        ρ1\n     e\n     3  α  π  β     ρ2\nmode 1:    −\n                 e1                              mode 2\n       β            ρ3\n           π α\n            −\n     e4\n                      ρ4                                     mode 1\n      e2\n                                                                 ρ2\n                   ρ3\n     e\n     3  α  π  β             ρ1\nmode 2:    −\n                 e1\n       β           ρ2\n           π α\n           −\n      e4\n                     ρ4\n  \n  Note: (1) The ﬂat state                 is a singularity (or a branch point) of the \n  conﬁguration space manifold.  This means that folding from the ﬂat state is \n  harder than unfolding to the ﬂat state.  :-)\n            (2)  The conﬁg space is symmetric about the origin (reversing MVs). \n",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ab0"
  },
  "pdf_name": "C06_images",
  "page_number": 8,
  "content": "./origami_dataset_dev/C06_images/page008_image005.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ab1"
  },
  "pdf_name": "C06_images",
  "page_number": 8,
  "content": "./origami_dataset_dev/C06_images/page008_image011.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ab2"
  },
  "pdf_name": "C06_images",
  "page_number": 38,
  "content": "./origami_dataset_dev/C06_images/page038_image014.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ab3"
  },
  "pdf_name": "C06_images",
  "page_number": 38,
  "content": "./origami_dataset_dev/C06_images/page038_image015.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ab4"
  },
  "pdf_name": "C06_images",
  "page_number": 38,
  "content": "./origami_dataset_dev/C06_images/page038_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ab5"
  },
  "pdf_name": "C06_images",
  "page_number": 8,
  "content": "./origami_dataset_dev/C06_images/page008_image010.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ab6"
  },
  "pdf_name": "C06_images",
  "page_number": 8,
  "content": "./origami_dataset_dev/C06_images/page008_image004.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ab7"
  },
  "pdf_name": "C06_images",
  "page_number": 29,
  "content": "What is self-folding?\n\nTo self-fold, each crease needs an actuator of some kind.\n\n\n                                                  \nEach actuator applies torque.\nWe call the collection of these torques\nat all the creases the driving force of the\nfolding, which we can think of as a\nvector ﬁeld on the conﬁguration space.\n\n\n                                                       \nIn a separable driving force, each actuator only\nknows its own folding angle.  I.e., \n\n\nA conservative driving force is the gradient of a potential function:\n\n                    f~ =     U(~⇢ )\nFor example, if we’re lucky wer could try the driving force:",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ab8"
  },
  "pdf_name": "C06_images",
  "page_number": 39,
  "content": "./origami_dataset_dev/C06_images/page039_image006.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ab9"
  },
  "pdf_name": "C06_images",
  "page_number": 15,
  "content": "Swelling and Deswelling \n(Na, Evans, Bae, Chiappelli, Santangelo, Lang, Hull, Hayward, 2014)",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0aba"
  },
  "pdf_name": "C06_images",
  "page_number": 1,
  "content": "                  Tomohiro Tachi                                                 Thomas C. Hull \n            The University of Tokyo                                                 Western New England           \n                                                      U                     University\n\n\nSelf-foldabiliy and Rigid Origami\n\nThomas Hull, Associate Professor of Mathematics \n\nWestern New England University\n\nthull@wne.edu\n\n\n\n                         supported by:  NSF grant EFRI-1240441 \n               Mechanical Meta-Materials from Self-Folding Polymer Sheets",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0abb"
  },
  "pdf_name": "C06_images",
  "page_number": 39,
  "content": "./origami_dataset_dev/C06_images/page039_image012.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0abc"
  },
  "pdf_name": "C06_images",
  "page_number": 9,
  "content": "./origami_dataset_dev/C06_images/page009_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0abd"
  },
  "pdf_name": "C06_images",
  "page_number": 17,
  "content": "Swelling and Deswelling \n(Na, Evans, Bae, Chiappelli, Santangelo, Lang, Hull, Hayward, 2014)",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0abe"
  },
  "pdf_name": "C06_images",
  "page_number": 39,
  "content": "./origami_dataset_dev/C06_images/page039_image004.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0abf"
  },
  "pdf_name": "C06_images",
  "page_number": 39,
  "content": "./origami_dataset_dev/C06_images/page039_image010.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ac0"
  },
  "pdf_name": "C06_images",
  "page_number": 3,
  "content": "What is self-folding?\n\n• Devising ways to make materials fold automatically in response to some \n stimulus.\n\n\n• Example: \n Harvard \n Microrobotics Lab\n (Hawkes, An, Benbernou, \n Tanaka, Kim, Demaine, \n Rus, Wood 2009)",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ac1"
  },
  "pdf_name": "C06_images",
  "page_number": 8,
  "content": "./origami_dataset_dev/C06_images/page008_image012.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ac2"
  },
  "pdf_name": "C06_images",
  "page_number": 8,
  "content": "./origami_dataset_dev/C06_images/page008_image006.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ac3"
  },
  "pdf_name": "C06_images",
  "page_number": 38,
  "content": "./origami_dataset_dev/C06_images/page038_image017.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ac4"
  },
  "pdf_name": "C06_images",
  "page_number": 38,
  "content": "./origami_dataset_dev/C06_images/page038_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ac5"
  },
  "pdf_name": "C06_images",
  "page_number": 38,
  "content": "./origami_dataset_dev/C06_images/page038_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ac6"
  },
  "pdf_name": "C06_images",
  "page_number": 38,
  "content": "./origami_dataset_dev/C06_images/page038_image016.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ac7"
  },
  "pdf_name": "C06_images",
  "page_number": 8,
  "content": "./origami_dataset_dev/C06_images/page008_image007.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ac8"
  },
  "pdf_name": "C06_images",
  "page_number": 8,
  "content": "./origami_dataset_dev/C06_images/page008_image013.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ac9"
  },
  "pdf_name": "C06_images",
  "page_number": 39,
  "content": "./origami_dataset_dev/C06_images/page039_image011.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0aca"
  },
  "pdf_name": "C06_images",
  "page_number": 2,
  "content": "What is origami good for?\n\n• The Miura map fold, invented by Japanese astrophysicist Koryo Miura in the 1970s, \n  has been used for maps, solar panels in space satellites, and in nature.",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0acb"
  },
  "pdf_name": "C06_images",
  "page_number": 16,
  "content": "Swelling and Deswelling \n(Na, Evans, Bae, Chiappelli, Santangelo, Lang, Hull, Hayward, 2014)",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0acc"
  },
  "pdf_name": "C06_images",
  "page_number": 39,
  "content": "./origami_dataset_dev/C06_images/page039_image005.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0acd"
  },
  "pdf_name": "C06_images",
  "page_number": 19,
  "content": "./origami_dataset_dev/C06_images/page019_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ace"
  },
  "pdf_name": "C06_images",
  "page_number": 39,
  "content": "./origami_dataset_dev/C06_images/page039_image008.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0acf"
  },
  "pdf_name": "C06_images",
  "page_number": 33,
  "content": "Back to the degree 4 case\n\nTheorem: For every rigidly, ﬂat-foldable degree-4 vertex with arbitrary target \nand starting conﬁgurations, there exists a driving force that makes the vertex \nuniquely self-foldable.\n\n                                                    ⇢1\n\nProof:  Assume that the target        is on mode 1.\nWe want to ﬁnd a potential function                      ~⇢ (1)\nsuch that\n(1)            monotonically decreases along mode 1\n                                                  ~⇢ (0)\ntoward the target state and                                     ⇢2\n(2)            monotonically decreases along mode 2\ntoward the ﬂat state.\n\nThe following works:     4\n        1                   1\nU(~⇢ )=     ~⇢  ~⇢  2 =        (⇢    ⌧ )2\n        2k   −  T k         2   i −  i\n                        i=1\nwhere       are the coordinates ofX the target conﬁguration.",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ad0"
  },
  "pdf_name": "C06_images",
  "page_number": 27,
  "content": " Conﬁguration space of a ﬂat-foldable, deg 4 vertex\n\nDemo:",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ad1"
  },
  "pdf_name": "C06_images",
  "page_number": 8,
  "content": "./origami_dataset_dev/C06_images/page008_image022.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ad2"
  },
  "pdf_name": "C06_images",
  "page_number": 8,
  "content": "./origami_dataset_dev/C06_images/page008_image023.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ad3"
  },
  "pdf_name": "C06_images",
  "page_number": 26,
  "content": " Conﬁguration space of a ﬂat-foldable, deg 4 vertex\n\nConﬁguration space: n-dimensional parameter space containing points\n                                    where the        are all the folding angles will contain the \nconﬁguration space containing all such points that satisfy the rigid folding \nconstraints:   Around every vertex we must have\n\n\nwhere                   is the matrix that rotates 3D space about line       by       .\n\n                             e2\nApply to this vertex:\n                                                  ρ1\n                          e\n                         3  α   π β     ρ2\n                     mode 1:      −\n                                      e1\n                            β            ρ3\n                                π α\n                                −\n                           e4\n                                          ρ4\n                             e\nOR                           2\n                                         ρ3\n                          e\n                          3  α   π β             ρ1\n                     mode 2:      −\n                                      e1\n                             β           ρ2\n                                π α\n                                 −\n                           e4\n                                           ρ4",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ad4"
  },
  "pdf_name": "C06_images",
  "page_number": 32,
  "content": "What is self-folding?\n\nTheorem: For every rigidly, ﬂat-foldable degree-4 vertex with arbitrary target \nand starting conﬁgurations, there exists a driving force that makes the vertex \nuniquely self-foldable.\n\n                                                    ⇢1\n\nProof:  Assume that the target        is on mode 1.\nWe want to ﬁnd a potential function                      ~⇢ (1)\nsuch that\n(1)            monotonically decreases along mode 1\n                                                  ~⇢ (0)\ntoward the target state and                                     ⇢2\n(2)            monotonically decreases along mode 2\ntoward the ﬂat state.\n",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ad5"
  },
  "pdf_name": "C06_images",
  "page_number": 39,
  "content": "./origami_dataset_dev/C06_images/page039_image009.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ad6"
  },
  "pdf_name": "C06_images",
  "page_number": 19,
  "content": "./origami_dataset_dev/C06_images/page019_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ad7"
  },
  "pdf_name": "C06_images",
  "page_number": 18,
  "content": "                                                Junhee Na, Ryan Hayward, \n                                                Thomas Hull, Chris Santangelo\n\n A more complicated fold\n\n• Origami octahedron-tetrahedron truss (invented by numerous origamists:  David \n  Huffman, Ron Resch, Toshikazu Kawasaki, and others)\n                                                                B\n                                                        A\n                                                               C\n\n\n             A\n\n                           B\n\n\n                                         Mountain crease\n                C\n                                         Valley crease",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ad8"
  },
  "pdf_name": "C06_images",
  "page_number": 24,
  "content": "The classic way to fold a Miura-ori\n\n\n          How do we make such animations?",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ad9"
  },
  "pdf_name": "C06_images",
  "page_number": 30,
  "content": "What is self-folding?\n\nA nice continuous rigid folding           from a rigid folding           to            is an \narc-length parameterized piecewise         curve in a conﬁguration space.  At \neach point there will be at most two tangent vectors:\n\n\n\nThe set of all such tangent vectors for all nice continuous rigid foldings passing \nthrough a conﬁguration point projected onto the unit sphere is called the set of \nvalid tangents.\n\nWe deﬁne the constrained forces along a nice continuous rigid folding          to \nbe                                                    (the forward force) and         ⇢   1               \n\n                                                        (the backward force). ~⇢ (1)\n\n                                                      ~v+(s)\n                                                           f~(~⇢ (s))\n                                                 ~⇢ (0)\n                                                                ⇢2",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ada"
  },
  "pdf_name": "C06_images",
  "page_number": 8,
  "content": "./origami_dataset_dev/C06_images/page008_image009.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0adb"
  },
  "pdf_name": "C06_images",
  "page_number": 8,
  "content": "./origami_dataset_dev/C06_images/page008_image021.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0adc"
  },
  "pdf_name": "C06_images",
  "page_number": 38,
  "content": "./origami_dataset_dev/C06_images/page038_image018.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0add"
  },
  "pdf_name": "C06_images",
  "page_number": 8,
  "content": "./origami_dataset_dev/C06_images/page008_image020.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ade"
  },
  "pdf_name": "C06_images",
  "page_number": 8,
  "content": "./origami_dataset_dev/C06_images/page008_image008.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0adf"
  },
  "pdf_name": "C06_images",
  "page_number": 31,
  "content": "What is self-folding?\n\nA nice continuous folding           from a rigid folding             to           is \nself-foldable by driving force             if for all                      the forward force\nat             on the conﬁguration space is positive and takes on a local maximum \namong the valid tangents at    .\n\n                                               ⇢1\n\nThat is, you want the dot product of             and\nto be positive.  It makes sense!\n                     ~⇢ (1)\n\n                                                   ~v+(s)\n                                                         f~(~⇢ (s))\n                                            ~⇢ (0)\n                                                               ⇢2\n\n\nWe say that a nice continuous folding          is uniquely self-foldable if            is \nthe only nice continuous folding that is self-foldable by     .\n\n",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ae0"
  },
  "pdf_name": "C06_images",
  "page_number": 25,
  "content": " Conﬁguration space of a ﬂat-foldable, deg 4 vertex\n\nConﬁguration space: n-dimensional parameter space containing points\n                                    where the        are all the folding angles will contain the \nconﬁguration space containing all such points that satisfy the rigid folding \nconstraints:   Around every vertex we must have\n\n\nwhere                   is the matrix that rotates 3D space about line       by       .",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ae1"
  },
  "pdf_name": "C06_images",
  "page_number": 19,
  "content": "3D octahedron-tetrahedron truss structure -Ronald D. Resch \n(Tomas Hull proposed)\n\n\n3D octahedron-tetrahedron truss structure -Ronald D. Resch 2.2 mm\n(Tomas Hull proposed)                Junhee Na, Ryan Hayward, \n   Octet Truss                       Thomas Hull, Chris Santangelo\n             First attempts did not fold very well.\n\n                               valley mountain  2.2 mm\n\n\n                                 valley mountain\n\n\n                 500 µ m\n\n\n                     500 µ m\n\n                                                     J.-H. Na\n\n                                                    J.-H. Na",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ae2"
  },
  "pdf_name": "C06_images",
  "page_number": 19,
  "content": "./origami_dataset_dev/C06_images/page019_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ae3"
  },
  "pdf_name": "C06_images",
  "page_number": 19,
  "content": "./origami_dataset_dev/C06_images/page019_image005.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ae4"
  },
  "pdf_name": "C06_images",
  "page_number": 21,
  "content": "                                                   Junhee Na, Ryan Hayward, \nOctet Truss                                        Thomas Hull, Chris Santangelo",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ae5"
  },
  "pdf_name": "C06_images",
  "page_number": 35,
  "content": "Degree 6, symmetric vertex\n\nConsider a symmetric, degree-6 vertex.  We want to  \nself-fold it to a target state (1, -3.7, 1, -3.7, 1, -3.7).\n  \n                                            \n\n                                                             \nThe “obvious” driving force would be to push the\n                                               \ncreases to be (V, M, V, M, V, M), right?\n             \n\nWrong!  The desired state is a pop-up vertex.\nBut we can have a (V, M, V, M, V, M) state and  Bifurcation!\nget a pop-down vertex!  ",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ae6"
  },
  "pdf_name": "C06_images",
  "page_number": 9,
  "content": "Self-folding polymer gels\n\nThree-step lithographic patterning of trilayer gels:\n\n\nSchematic side-view of a fold:",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ae7"
  },
  "pdf_name": "C06_images",
  "page_number": 8,
  "content": "./origami_dataset_dev/C06_images/page008_image024.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ae8"
  },
  "pdf_name": "C06_images",
  "page_number": 8,
  "content": "./origami_dataset_dev/C06_images/page008_image018.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ae9"
  },
  "pdf_name": "C06_images",
  "page_number": 38,
  "content": "./origami_dataset_dev/C06_images/page038_image009.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0aea"
  },
  "pdf_name": "C06_images",
  "page_number": 38,
  "content": "./origami_dataset_dev/C06_images/page038_image008.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0aeb"
  },
  "pdf_name": "C06_images",
  "page_number": 8,
  "content": "./origami_dataset_dev/C06_images/page008_image019.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0aec"
  },
  "pdf_name": "C06_images",
  "page_number": 8,
  "content": "./origami_dataset_dev/C06_images/page008_image025.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0aed"
  },
  "pdf_name": "C06_images",
  "page_number": 8,
  "content": "                                    Mechanical Meta-materials from Self-folding Polymer Sheets\n\n  Scientific Goals:           Understanding mechanics of origami structures in order to fabricate “self-folding” polymer gels with designed\n                              mechanical properties.\n\n  Design Goals:               Creating new structures using novel polymer materials (origomu) and developing the design tools to engineer\n                              these new materials.\n\n\n  Development of polymer gels for self-folding origami                                         New mathematical tools\n\n   Taking advantage of inhomogeneous swelling, polymer gels can be patterned to reversibly fold at Any self-folding structure is subject to becoming trapped in metastable states or otherwise misfolding.\n   controllable angles.                                                                           How do we “program” origami robustly?\n\nUMass Soft Matter &Gel Polymer lithography Science Group                                            counting “misfolds”\n     high swelling\n• Chris Santangelo & Ryan Hayward\n    low swelling                         As crosslinked          Swelled state\n                                          (dry) state\n\n                                                                                                                                       related to 3-colorings of a graph\n\n                                                                     Kim et al., Soft Matter (2012)\n                                             A                                                      forcing sets The minimal set of folds that must be programmed “correctly” to ensure that the\n                                               0                     A                                          entire fold pattern folds without error.\n   By controlling area fraction of high and low swelling materials, Gaussian curvature can be “programmed.”\n                                                    = A/A\n                                                             0                                  How do you find optimal patterns for robust folding of polymer gels? (swelling patterns are not unique)\n        cone with        cone with       hyperbolic      spherical\n                                            disk            cap\n      deficit angle    excess angle                                                             Optimize for finite experimental range of swelling available, pattern resolution, and robustness of folding.\n                                                                     confocal\n                               20 °C                                 reconstruction\n                                                                     and cross-section\n\n\n                                                                                                   This swelling pattern empirically\n                                                                                                    folds better than an axisymmetric\n                                                                                                    pattern for the sphere.\n                                                                              Gaussian\n                                                                              curvature                    Kim et al., Science (2012)\n\n\n                                                                                                                                   Gel swelling pattern         Almost a sphere\n                                                                       Kim et al., Science (2012)\n\n   Understanding and designing origami mechanics                                               Tools for mechanical characterization\n\n              Elastic energy as a function of the shape of the first crease                     Apparatus built to simultaneously measure mechanics during 3D visualization\n\n\n                                                                        Dias et al., EPL (2012)                    Miura map                       “Defected” Miura map\n   Geometry couples the stiff in-plane stretching to the floppy bending modes of a sheet, leading to novel\n   mechanical properties.\n                                                                                                The 3D reconstruction of mean and Gaussian curvatures reveal where the sheet has stretched and where\n   Non-Euclidean origami                                                                        it has folded in response to an external force.\n                                     By combining folds with shells, entirely new structures are                                                                     Mean curvature\n                                     possible.\n                                                                                                  Gaussian curvature                                                 (folding)\n                                                                                                  (stretching)\n\n                                     Folding shells introduces new local and global constraints \n                                     leading to snap-through transitions. These transitions depend\n                                     on the direction of the fold and the underlying curvature of\n                                     the surface.\n\n\n      Numerically determined shape\n      combining curvature and folding.\n\n\n  Team\n\n\n    Christian Santangelo          Ryan Hayward                  Itai Cohen                 Tom Hull                        Robert Lang               Jeannine Mosely\n    UMass Physics                 UMass Polymer                 Cornell Physics            Western New England\n                                  Science & Engineering                                    Math",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0aee"
  },
  "pdf_name": "C06_images",
  "page_number": 34,
  "content": "Degree 6, symmetric vertex\n\nConsider a symmetric, degree-6 vertex.  We want to  \nself-fold it to a target state (1, -3.7, 1, -3.7, 1, -3.7).\n  \n                                            \n\n                                                             \nThe “obvious” driving force would be to push the\n                                               \ncreases to be (V, M, V, M, V, M), right?              ",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0aef"
  },
  "pdf_name": "C06_images",
  "page_number": 20,
  "content": "                              Junhee Na, Ryan Hayward, \nOctet Truss                   Thomas Hull, Chris Santangelo\nWith more accurate folding angles, it worked much better.",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0af0"
  },
  "pdf_name": "C06_images",
  "page_number": 29,
  "content": "./origami_dataset_dev/C06_images/page029_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0af1"
  },
  "pdf_name": "C06_images",
  "page_number": 19,
  "content": "./origami_dataset_dev/C06_images/page019_image004.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0af2"
  },
  "pdf_name": "C06_images",
  "page_number": 2,
  "content": "./origami_dataset_dev/C06_images/page002_image042.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0af3"
  },
  "pdf_name": "C06_images",
  "page_number": 2,
  "content": "./origami_dataset_dev/C06_images/page002_image040.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0af4"
  },
  "pdf_name": "C06_images",
  "page_number": 19,
  "content": "./origami_dataset_dev/C06_images/page019_image006.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0af5"
  },
  "pdf_name": "C06_images",
  "page_number": 29,
  "content": "./origami_dataset_dev/C06_images/page029_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0af6"
  },
  "pdf_name": "C06_images",
  "page_number": 36,
  "content": "Degree 6, symmetric vertex\n\nHow do we “push” the creases to fold through singularities (like the ﬂat, \nunfolded state) to the conﬁguration we want?\n            pop down                              pop up\n       ρ2\n mode 1:\n                                           ρ1\n\n                    ρ1\n                                                  ρ2\n        ρ2\n mode 2:\n                                           ρ1\n\n\n                    ρ1\n             pop up                              ρ2 pop down",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0af7"
  },
  "pdf_name": "C06_images",
  "page_number": 22,
  "content": "Octet Truss",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0af8"
  },
  "pdf_name": "C06_images",
  "page_number": 8,
  "content": "./origami_dataset_dev/C06_images/page008_image027.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0af9"
  },
  "pdf_name": "C06_images",
  "page_number": 8,
  "content": "./origami_dataset_dev/C06_images/page008_image026.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0afa"
  },
  "pdf_name": "C06_images",
  "page_number": 39,
  "content": "./origami_dataset_dev/C06_images/page039_image018.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0afb"
  },
  "pdf_name": "C06_images",
  "page_number": 23,
  "content": "                                Junhee Na, Ryan Hayward, \nOctet Truss                     Thomas Hull, Chris Santangelo\n(confocal ﬂuorescence microscopy image by Junhee Na)",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0afc"
  },
  "pdf_name": "C06_images",
  "page_number": 37,
  "content": "Degree 6, symmetric vertex\n\nHow do we “push” the creases to fold through singularities (like the ﬂat, \nunfolded state) to the conﬁguration we want?\n\n\nHere’s the idea:  Choose a driving force       that \n(a) pushes the state along the desired path (making                        ), and\n(b) is orthogonal to other, undesired manifolds at all singular points.\n                              ⇢1\n\n                    undesired      d~\n                    folding path\n                                        desired\n                          d~           folding path\n                                            ⇢2\n                     d~",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0afd"
  },
  "pdf_name": "C06_images",
  "page_number": 29,
  "content": "./origami_dataset_dev/C06_images/page029_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0afe"
  },
  "pdf_name": "C06_images",
  "page_number": 2,
  "content": "./origami_dataset_dev/C06_images/page002_image041.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0aff"
  },
  "pdf_name": "C06_images",
  "page_number": 2,
  "content": "./origami_dataset_dev/C06_images/page002_image032.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b00"
  },
  "pdf_name": "C06_images",
  "page_number": 2,
  "content": "./origami_dataset_dev/C06_images/page002_image026.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b01"
  },
  "pdf_name": "C06_images",
  "page_number": 36,
  "content": "./origami_dataset_dev/C06_images/page036_image017.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b02"
  },
  "pdf_name": "C06_images",
  "page_number": 36,
  "content": "./origami_dataset_dev/C06_images/page036_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b03"
  },
  "pdf_name": "C06_images",
  "page_number": 7,
  "content": "./origami_dataset_dev/C06_images/page007_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b04"
  },
  "pdf_name": "C06_images",
  "page_number": 15,
  "content": "./origami_dataset_dev/C06_images/page015_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b05"
  },
  "pdf_name": "C06_images",
  "page_number": 40,
  "content": "./origami_dataset_dev/C06_images/page040_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b06"
  },
  "pdf_name": "C06_images",
  "page_number": 36,
  "content": "./origami_dataset_dev/C06_images/page036_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b07"
  },
  "pdf_name": "C06_images",
  "page_number": 36,
  "content": "./origami_dataset_dev/C06_images/page036_image016.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b08"
  },
  "pdf_name": "C06_images",
  "page_number": 12,
  "content": "./origami_dataset_dev/C06_images/page012_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b09"
  },
  "pdf_name": "C06_images",
  "page_number": 2,
  "content": "./origami_dataset_dev/C06_images/page002_image027.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b0a"
  },
  "pdf_name": "C06_images",
  "page_number": 2,
  "content": "./origami_dataset_dev/C06_images/page002_image033.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b0b"
  },
  "pdf_name": "C06_images",
  "page_number": 2,
  "content": "./origami_dataset_dev/C06_images/page002_image025.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b0c"
  },
  "pdf_name": "C06_images",
  "page_number": 2,
  "content": "./origami_dataset_dev/C06_images/page002_image031.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b0d"
  },
  "pdf_name": "C06_images",
  "page_number": 2,
  "content": "./origami_dataset_dev/C06_images/page002_image019.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b0e"
  },
  "pdf_name": "C06_images",
  "page_number": 12,
  "content": "./origami_dataset_dev/C06_images/page012_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b0f"
  },
  "pdf_name": "C06_images",
  "page_number": 36,
  "content": "./origami_dataset_dev/C06_images/page036_image014.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b10"
  },
  "pdf_name": "C06_images",
  "page_number": 24,
  "content": "./origami_dataset_dev/C06_images/page024_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b11"
  },
  "pdf_name": "C06_images",
  "page_number": 13,
  "content": "./origami_dataset_dev/C06_images/page013_image004.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b12"
  },
  "pdf_name": "C06_images",
  "page_number": 23,
  "content": "./origami_dataset_dev/C06_images/page023_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b13"
  },
  "pdf_name": "C06_images",
  "page_number": 41,
  "content": "./origami_dataset_dev/C06_images/page041_image004.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b14"
  },
  "pdf_name": "C06_images",
  "page_number": 14,
  "content": "./origami_dataset_dev/C06_images/page014_image004.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b15"
  },
  "pdf_name": "C06_images",
  "page_number": 14,
  "content": "./origami_dataset_dev/C06_images/page014_image005.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b16"
  },
  "pdf_name": "C06_images",
  "page_number": 13,
  "content": "./origami_dataset_dev/C06_images/page013_image005.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b17"
  },
  "pdf_name": "C06_images",
  "page_number": 15,
  "content": "./origami_dataset_dev/C06_images/page015_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b18"
  },
  "pdf_name": "C06_images",
  "page_number": 36,
  "content": "./origami_dataset_dev/C06_images/page036_image015.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b19"
  },
  "pdf_name": "C06_images",
  "page_number": 36,
  "content": "./origami_dataset_dev/C06_images/page036_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b1a"
  },
  "pdf_name": "C06_images",
  "page_number": 12,
  "content": "./origami_dataset_dev/C06_images/page012_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b1b"
  },
  "pdf_name": "C06_images",
  "page_number": 2,
  "content": "./origami_dataset_dev/C06_images/page002_image018.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b1c"
  },
  "pdf_name": "C06_images",
  "page_number": 2,
  "content": "./origami_dataset_dev/C06_images/page002_image030.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b1d"
  },
  "pdf_name": "C06_images",
  "page_number": 2,
  "content": "./origami_dataset_dev/C06_images/page002_image024.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b1e"
  },
  "pdf_name": "C06_images",
  "page_number": 2,
  "content": "./origami_dataset_dev/C06_images/page002_image008.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b1f"
  },
  "pdf_name": "C06_images",
  "page_number": 2,
  "content": "./origami_dataset_dev/C06_images/page002_image020.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b20"
  },
  "pdf_name": "C06_images",
  "page_number": 2,
  "content": "./origami_dataset_dev/C06_images/page002_image034.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b21"
  },
  "pdf_name": "C06_images",
  "page_number": 36,
  "content": "./origami_dataset_dev/C06_images/page036_image005.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b22"
  },
  "pdf_name": "C06_images",
  "page_number": 36,
  "content": "./origami_dataset_dev/C06_images/page036_image011.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b23"
  },
  "pdf_name": "C06_images",
  "page_number": 13,
  "content": "./origami_dataset_dev/C06_images/page013_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b24"
  },
  "pdf_name": "C06_images",
  "page_number": 41,
  "content": "./origami_dataset_dev/C06_images/page041_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b25"
  },
  "pdf_name": "C06_images",
  "page_number": 14,
  "content": "./origami_dataset_dev/C06_images/page014_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b26"
  },
  "pdf_name": "C06_images",
  "page_number": 1,
  "content": "./origami_dataset_dev/C06_images/page001_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b27"
  },
  "pdf_name": "C06_images",
  "page_number": 36,
  "content": "./origami_dataset_dev/C06_images/page036_image010.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b28"
  },
  "pdf_name": "C06_images",
  "page_number": 36,
  "content": "./origami_dataset_dev/C06_images/page036_image004.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b29"
  },
  "pdf_name": "C06_images",
  "page_number": 6,
  "content": "./origami_dataset_dev/C06_images/page006_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b2a"
  },
  "pdf_name": "C06_images",
  "page_number": 2,
  "content": "./origami_dataset_dev/C06_images/page002_image035.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b2b"
  },
  "pdf_name": "C06_images",
  "page_number": 2,
  "content": "./origami_dataset_dev/C06_images/page002_image021.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b2c"
  },
  "pdf_name": "C06_images",
  "page_number": 2,
  "content": "./origami_dataset_dev/C06_images/page002_image009.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b2d"
  },
  "pdf_name": "C06_images",
  "page_number": 2,
  "content": "./origami_dataset_dev/C06_images/page002_image037.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b2e"
  },
  "pdf_name": "C06_images",
  "page_number": 2,
  "content": "./origami_dataset_dev/C06_images/page002_image023.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b2f"
  },
  "pdf_name": "C06_images",
  "page_number": 36,
  "content": "./origami_dataset_dev/C06_images/page036_image012.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b30"
  },
  "pdf_name": "C06_images",
  "page_number": 36,
  "content": "./origami_dataset_dev/C06_images/page036_image006.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b31"
  },
  "pdf_name": "C06_images",
  "page_number": 41,
  "content": "In conclusion\n\n• We can also prove some multiple-vertex crease patterns can self-fold, while \n others cannot!  \n\n\n• See our paper:  Self-foldability in rigid origami, Journal of Mechanisms and \n Robotics, Vol. 9, No. 2, 2017, 021008-021008-9, doi:10.1115/1.4035558 \n\n\n• Contact:   Thomas Hull                     Tomohiro Tachi\n                  thull@wne.edu                  tachi@idea.c.u-tokyo.ac.jp ",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b32"
  },
  "pdf_name": "C06_images",
  "page_number": 13,
  "content": "./origami_dataset_dev/C06_images/page013_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b33"
  },
  "pdf_name": "C06_images",
  "page_number": 41,
  "content": "./origami_dataset_dev/C06_images/page041_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b34"
  },
  "pdf_name": "C06_images",
  "page_number": 14,
  "content": "./origami_dataset_dev/C06_images/page014_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b35"
  },
  "pdf_name": "C06_images",
  "page_number": 14,
  "content": "./origami_dataset_dev/C06_images/page014_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b36"
  },
  "pdf_name": "C06_images",
  "page_number": 41,
  "content": "./origami_dataset_dev/C06_images/page041_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b37"
  },
  "pdf_name": "C06_images",
  "page_number": 13,
  "content": "./origami_dataset_dev/C06_images/page013_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b38"
  },
  "pdf_name": "C06_images",
  "page_number": 40,
  "content": "Degree 6, symmetric vertex\n\nAmazingly, this actually works in experiments!  Tomohiro made a physical \nmodel with loaded springs to model the two different valley torque strengths.",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b39"
  },
  "pdf_name": "C06_images",
  "page_number": 1,
  "content": "./origami_dataset_dev/C06_images/page001_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b3a"
  },
  "pdf_name": "C06_images",
  "page_number": 22,
  "content": "./origami_dataset_dev/C06_images/page022_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b3b"
  },
  "pdf_name": "C06_images",
  "page_number": 36,
  "content": "./origami_dataset_dev/C06_images/page036_image007.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b3c"
  },
  "pdf_name": "C06_images",
  "page_number": 36,
  "content": "./origami_dataset_dev/C06_images/page036_image013.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b3d"
  },
  "pdf_name": "C06_images",
  "page_number": 12,
  "content": "./origami_dataset_dev/C06_images/page012_image004.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b3e"
  },
  "pdf_name": "C06_images",
  "page_number": 2,
  "content": "./origami_dataset_dev/C06_images/page002_image022.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b3f"
  },
  "pdf_name": "C06_images",
  "page_number": 2,
  "content": "./origami_dataset_dev/C06_images/page002_image036.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b40"
  },
  "pdf_name": "s41598-022-23875-6",
  "page_number": 11,
  "content": "./origami_dataset_dev/s41598-022-23875-6/page011_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b41"
  },
  "pdf_name": "s41598-022-23875-6",
  "page_number": 3,
  "content": "./origami_dataset_dev/s41598-022-23875-6/page003_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b42"
  },
  "pdf_name": "s41598-022-23875-6",
  "page_number": 2,
  "content": "./origami_dataset_dev/s41598-022-23875-6/page002_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b43"
  },
  "pdf_name": "s41598-022-23875-6",
  "page_number": 5,
  "content": "./origami_dataset_dev/s41598-022-23875-6/page005_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b44"
  },
  "pdf_name": "s41598-022-23875-6",
  "page_number": 12,
  "content": "        www.nature.com/scientificreports/\n\n\n                                     33. Murdoch, W. J., Singh, C., Kumbier, K., Abbasi-Asl, R. & Bin, Y. Defnitions, methods, and applications in interpretable machine \n                                       learning. PNAS 116, 22071–22080 (2019).\n                                     34. Zhu, Y. & Filipov, E. T. Sequentially working origami multi-physics simulator (SWOMPS): A versatile implementation. in IDETC/\n                                       CIE 2021 (2021).\n                                     35. Zhu, Y. & Filipov, E. T. A bar and hinge model for simulating bistability in origami structures with compliant creases. J. Mech. \n                                       Robot. 12, 021110 (2020).\n                                     36. Zhu, Y. & Filipov, E. T. Rapid multi-physics simulation for electro-thermal origami systems. Int. J. Mech. Sci. 202–203, 106537 \n                                       (2021).\n                                     37. Buitinck, L. et al. API design for machine learning sofware: Experiences from the scikit-learn project. in ECML PKDD Workshop: \n                                       Languages for Data Mining and Machine Learning, 108–122 (2013).\n                                     38. Tarwat, A. Classifcation assessment methods. NEJE 17, 168–192 (2020).\n                                     39. Faber, J. A., Arrieta, A. F. & Studart, A. R. Bioinspired spring origami. Science 359, 1386–1391 (2018).\n                                     40. Silverberg, J. L. et al. Using origami design principles to fold reprogrammable mechanical metamaterials. Science 345, 647–650 \n                                       (2014).\n                                     41. Tachi, T. Freeform origami tessellations by generalizing Resch’s patterns. in IDETC/CIE USA, (2013).\n                                     42. Lin, J., Zhong, C., Rudin, D. H. C. & Seltzer, M. Generalized and scalable optimal sparse decision trees. in Proceedings of the 37th \n                                       International Conference on Machine (2020).\n                                     43. Bertsimas, D. & Dunn, J. Optimal classifcation trees. Mach. Learn. 106, 1039–1082 (2017).\n                                     44. Zhu, Y., Schenk, M. & Filipov, E. A review on origami simulations: From kinematics, to mechanics, toward multiphysics. Appl. \n                                       Mech. Rev. 74(3), 030801 (2022).\n                                    Acknowledgements\n                                    Te authors want to thank the helpful discussion with Ziyang (Tony) Tang at Purdue University.\n                                    Author contributions\n                                    Conceptualization: Y.Z., Methodology: Y.Z., Investigation: Y.Z., Visualization: Y.Z., Supervision: E.T.F., Writ-\n                                    ing—original draf: Y.Z., Writing—review & editing: Y.Z., E.T.F.\n                                    Funding\n                                    National Science Foundation Grant #2054148 Automotive Research Center (ARC) in accordance with Coopera-\n                                    tive Agreement W56HZV-19-2-0001 U.S. Army Ground Vehicle System Center (GVSC) in Warren, MI.\n\n                                    Competing interests \n                                    Te authors declare no competing interests.\n                                    Additional information\n                                    Supplementary Information Te online version contains supplementary material available at https:// doi. org/ \n                                    10. 1038/ s41598- 022- 23875-6.\n                                    Correspondence and requests for materials should be addressed to Y.Z.\n                                    Reprints and permissions information is available at www.nature.com/reprints.\n                                    Publisher’s note Springer Nature remains neutral with regard to jurisdictional claims in published maps and \n                                    institutional afliations.\n                                               Open Access  Tis article is licensed under a Creative Commons Attribution 4.0 International \n                                               License, which permits use, sharing, adaptation, distribution and reproduction in any medium or \n                                    format, as long as you give appropriate credit to the original author(s) and the source, provide a link to the \n                                    Creative Commons licence, and indicate if changes were made. Te images or other third party material in this \n                                    article are included in the article’s Creative Commons licence, unless indicated otherwise in a credit line to the \n                                    material. If material is not included in the article’s Creative Commons licence and your intended use is not \n                                    permitted by statutory regulation or exceeds the permitted use, you will need to obtain permission directly from \n                                    the copyright holder. To view a copy of this licence, visit http:// creat iveco mmons. org/ licen ses/ by/4. 0/.\n\n                                    © Te Author(s) 2022\n\n\n        Scientifc Reports |        (2022) 12:19277  | https://doi.org/10.1038/s41598-022-23875-6                                12\nVol:.(1234567890)",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b45"
  },
  "pdf_name": "s41598-022-23875-6",
  "page_number": 6,
  "content": "        www.nature.com/scientificreports/\n\n\n                                    as 1 and the rest of the data as 0. Afer labeling, we can use the procedure in Fig. 2 to compute the design rules \n                                    for this target. Te design rule with the best performance is shown in the lef column of Fig. 3b. We can then \n                                    repeat the process for the other three target zones (Zone a2 to a4) by reusing the existing database. Te computed \n                                    rules for all targets are shown in Fig. 3b, and this series of rules tells us how the preferred design for an origami \n                                    metasheet changes as the target for axial stifness is increased. Interestingly, the machine learning method prefers \n                                    changing the continuous variables to achieve the diferent axial stifness targets without paying much attention \n                                    to the categorical features used to represent diferent origami patterns. More specifcally, the machine learning \n                                    method suggests that controlling the thickness of creases (t c ) and the width of the creases (W  ) are more impor-\n                                    tant than other parameters because tighter thresholds are used for these two features. Two sample metasheet \n                                    designs for target Zones a1 and a3 are shown in Fig. 3d. Te resulting performance of these designs indeed falls \n                                    within the desired targets.\n                                      However, the design rules can be very diferent when we study the bending stifness at 90% extension. Simi-\n                                    larly, four design rules are computed for four diferent target zones as shown in Fig. 3c. Here, we set the targets \n                                    to contain less data points in order to test out how well the proposed method performs when dealing with unbal-\n                                    anced databases, where the targets only contain around 5% of the total data. When we investigate the result of \n                                    this series of design rules, we see that the machine learning method is paying more attention to the categorical \n                                    features. As the target moves from one zone to another, the computed design rules change in a non-continuous \n                                    manner because of the complex interactions between categorical variables and continuous variables. For example, \n                                    when the target changes from Zone b2 to Zone b3 where we have a stifer target, the machine learning method \n                                    indicates that increasing the thickness of the panel is sufcient to meet the target. However, when we further \n                                    increase bending stifness requirement as we move from Zone b3 to Zone b4, the method suggests that it is bet-\n                                    ter to change the categorical features (number of cells) and the continuous features simultaneously. A similar \n                                    categorical jump is also observed when the target moves from Zone b1 to Zone b2. Te proposed method can \n                                    capture these complex interactions between the continuous features and categorical features, which cannot be \n                                    done with optimization-based design methods.\n                                      To consider the infuence of material properties on the inverse design problem, we add two design features \n                                    representing the Young’s moduli of creases and panels. Te inverse design results with this new database are \n                                    demonstrated in Fig. 3e and f. Te results show that the proposed methodology can still handle the problem \n                                    relatively well afer adding in the new material design features, and that there are still complex interactions \n                                    between categorical and continuous features like those we found in Fig. 3c. Adding the material properties \n                                    does not change the underlying mathematical formulations of this inverse design framework, so the proposed \n                                    methodology is still applicable to the problem.\n                                    Multi-objective design for multi-physical functional origami\n                                    Handling multiple objectives is ofen necessary for designing functional origami structures because these systems \n                                    exhibit multi-physical behaviors that need to be measured and compared using several diferent indices. Because \n                                    such multi-objective problems are difcult to handle with standard optimization-based techniques, most existing \n                                    functional origami systems were designed using trial-and-error approaches 4–6. In this section, however, we dem-\n                                    onstrate that the tree method can efectively handle multi-physical behaviors and can simultaneously consider \n                                    multiple objectives. To this end, we present an example design for an electro-thermally actuated origami gripper \n                                    where dynamics, power consumption, thermal behavior, and stifness are all of interest (see Fig. 4).\n                                      In this example, one of three origami gripper patterns can be selected to achieve the target gripping motion \n                                    (closing the gripping tip to less than a 1 mm gap). We assume that the gripper is actuated at the creases using an \n                                    electro-thermal bi-layer system demonstrated in Fig. 4a and discussed in detail  in7. Tis actuator contains two \n                                    material layers with diferent coefcients of thermal expansion where one layer also serves as an electro-thermal \n                                    heater (the top layer in this case). Joule heating causes diferential expansion in the two layers, local curvature at \n                                    the crease, and global folding of the origami patterns. Design features for the gripper include one categorical vari-\n                                    able p used to describe the pattern, and seven continuous variables including the length (3.0 mm < L1 < 7.0 mm ) \n                                    and width ( 2.0 mm < L2 < 4.0 mm ) of the gripper arm, the location of the frst hinge (0.2 < Ra < 0.6) , the \n                                    width of the actuator creases (100 µm < W < 300 m ), the thickness of the two layers in the actuator design \n                                    ( 0.15 µm< t1 < 0.25 µm and 0.6 µm < t2 < 1.0 µm ), and the thickness of the panels 10 (µ m < tp < 30 µm).\n                                      We use four indices to compare the multi-physical performance of the gripper, specifcally (1) the fundamental \n                                    frequency ( freq ) of the gripper, (2) input heating power (Q  ) needed to close the gripping arm, (3) maximum \n                                    crease temperature (T  ) during the gripping motion, and (4) stifness ( k ) of the gripper in resisting loads applied \n                                    to pry it open. Te origami simulation package SWOMPS is used to simulate and fnd these four performance \n                                    indices (see Supplementary Materials S2 for details).\n                                      To demonstrate how interpretable machine leaning can tackle multiple multi-physical objectives, sup-\n                                    pose we want to design an origami gripper to simultaneously match the following performance indices: \n                                   10 rad/s < freq < 40 rad/s , heating power Q < 0.2 W , and maximum temperature T < 200 ◦C (Target 1). We \n                                    label all data points that satisfy the performance targets to be Class 1 and label the rest of the data as Class 0. \n                                    Ten, by computing the more representative decision rules for Class 1, we obtain design rules for a functional \n                                    origami that will satisfy all three performance indices simultaneously. Figure 4b shows two design rules that \n                                    have the highest F-score for this Target 1. Interestingly, both rules have high precision and are nearly identical \n                                    except for small diferences in the selection of t1 and tp.\n                                      We can use the same method to simultaneously design for all four performance indices (Target 2: frequency \n                                   10 rad/s < freq , heating power Q < 0.7 W, and maximum temperature T < 500 ◦C , and stifness 0.002 N/m < k ), \n                                    with the result presented in Fig. 4c. If we compare the computed rules for Target 2 with those for Target 1, we can \n                                    see that the machine learning method has picked another pattern afer adding in the minimum prying stifness \n\n\n        Scientifc Reports |        (2022) 12:19277  | https://doi.org/10.1038/s41598-022-23875-6                                 6\nVol:.(1234567890)",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b46"
  },
  "pdf_name": "s41598-022-23875-6",
  "page_number": 7,
  "content": "www.nature.com/scientificreports/\n\n\n                            Figure 4.  Design of an origami gripper with multi-physics and multiple objectives. (a) Problem setup for \n                            building active electro-thermal origami grippers with three diferent patterns. (b–d) Te top two design rules \n                            of designing the grippers for three diferent multi-objective targets (Targets 1 to 3). (e) Te top two design rules \n                            for Target 3 give distinct design alternatives where a diferent origami pattern is selected, yet both data point \n                            distributions meet the given target.\n\n                            requirement. While Pattern 3 was selected for Target 1, its horizontal creases cannot provide additional stifness \n                            to resist prying, so Pattern 2 is now selected to achieve Target 2. Tis high interpretability of the tree methods \n                            helps users to better understand and reason about the desired behaviors of functional origami systems. Moreover, \n                            the machine learning method also shows how important each feature is for diferent design targets. For example, \n                            controlling the values of the gripping arm length L1 and the location of the frst creases (defned by Ra ) is only \n                            important for Target 2 but not for Target 1.\n                              In general, the design rules with the highest F-scores obtained from the machine learning method tend to \n                            be similar to each other. However, Fig. 3d shows an interesting result where the top two competing rules have \n                            relatively large diferences between them. Te large diference is because the two rules select diferent origami \n                            patterns, and the machine learning method thinks that both of these rules are appropriate for the desired design. \n                            Rule 1 of Target 3 selects Pattern 1 while Rule 2 selects Pattern 2. Tese results highlight that by computing \n                            multiple rules with high F-scores, it is possible to fnd distinct design alternatives that can all achieve the desired \n\n\nScientifc Reports |        (2022) 12:19277  | https://doi.org/10.1038/s41598-022-23875-6                                 7\n                                                                                                                     Vol.:(0123456789)",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b47"
  },
  "pdf_name": "s41598-022-23875-6",
  "page_number": 5,
  "content": "www.nature.com/scientificreports/\n\n\n                            Figure 3.  Comparing diferent origami patterns using the decision tree-random forest method. (a) Problem \n                            setup: two origami patterns are compared for their performance as a metasheet. (b) Design rules for diferent \n                            axial stifness targets when the metasheet is at a 60% extension. (c) Design rules for the bending stifness at \n                            a 90% extension. (d) Sample designs for the four selected design targets. (e) Design rules afer adding design \n                            features regarding the materials stifness. (f) Design realizations of the origami metasheet afer adding materials \n                            stifness as design features.\n\n                            the diferent origami systems (details in the Supplementary Materials Section S2). In this example, we separately \n                            design the metasheet for two targets including the axial stifness ka at 60% extension and the bending stifness \n                            kb at 90% extension (design for multiple targets/objectives is discussed in the next section). As before, we defne \n                            the extension of the origami ( Ext ) as the ratio between the folded length to the fat length. Four stifness target \n                            zones are created for both the axial stifness and the bending stifness as indicated in Fig. 3b and c.\n                              We frst study the design for axial stifness ka at 60% extension (see Fig. 3b). Assume that we want to design \n                            an origami metasheet to have 15, 000 N/m < ka < 30, 000 N/m (Zone a1), we can label data that meet the target \n\n\nScientifc Reports |        (2022) 12:19277  | https://doi.org/10.1038/s41598-022-23875-6                                 5\n                                                                                                                     Vol.:(0123456789)",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b48"
  },
  "pdf_name": "s41598-022-23875-6",
  "page_number": 11,
  "content": "www.nature.com/scientificreports/\n\n                                shows that it is possible to fnd the more representative design rules (tree branches) using the F-score function. \n                                To achieve this inverse design method, we developed an open-access code package to analyze the trained ran-\n                                dom forest classifcation model, and to back track all tree branches (design rules) associated with the class that \n                                meet the target performance. Tis new code implementation then ranks the design rules and picks the most \n                                representative one using the proposed selection methodology. Further details on the inverse design workfow \n                                can be found in the Supplementary Document Section S3. Te implementation code package of this work can be \n                                found on GitHub: https:// github. com/ zzhuy ii/ TreeF orOri gami.\n\n                                Evaluation criterion.      Common evaluation indices for machine learning, including the precision and the \n                                recall, are used to evaluate the performance of design rules. Te precision is defned as the ratio between the \n                                number of accurate predictions of Class t over the number of all predictions of Class t 38. In Fig. 2e, Rule 1 (blue \n                                dots) predicts 10 data points as Class 1, and 9 of them are correct so it has a precision of 0.9. Te recall is defned \n                                as the accurate predictions of Class t over the number of all data of Class t 38. In Fig. 2e, suppose we have a total \n                                number of 30 points in the target zone (within the blue decision boundary), then Rule 1 will have a recall of 0.3 \n                                (9/30).\n                                Data availability\n                                All data and code used for the analyses are available in the main text or the supplementary materials.\n\n                                Received: 14 July 2022; Accepted: 7 November 2022\n\n                                References\n                                 1. Felton, S., Tolley, M., Demaine, E., Rus, D. & Wood, R. A method for building self-folding machines. Science 345, 644–646 (2014).\n                                 2. An, B. et al. An end-to-end approach to self-folding origami structures. IEEE Trans. Robot. 34, 1409–1424 (2018).\n                                 3. Kuribayashi, K. et al. Self-deployable origami stent grafs as a biomedical application of Ni-rich TiNi shape memory alloy foil. \n                                    Mater. Sci. Eng. A 419, 131–137 (2006).\n                                 4. Leong, T. G. et al. Tetherless thermobiochemically actuated microgrippers. Proc. Natl. Acad. Sci. 106, 703–708 (2009).\n                                 5. Na, J. et al. Programming reversibly self-folding origami with micropatterned photo-crosslinkable polymer trilayers. Adv. Mater. \n                                    27, 79–85 (2015).\n                                 6. Liu, Q. et al. Micrometer-sized electrically programmable shape-memory actuators for low-power microrobotics. Sci. Robot. 6, \n                                    6663 (2026).\n                                 7. Zhu, Y., Birla, M., Oldham, K. R. & Filipov, E. T. Elastically and plastically foldable electrothermal micro-origami for controllable \n                                    and rapid shape morphing. Adv. Funct. Mater. 30, 20003741 (2020).\n                                 8. Biswas, A., Zekios, C. L. & Georgakopoulos, S. V. Transforming single-band static FSS to dual-band dynamic FSS using origami. \n                                    Sci. Rep. 10, 13884 (2020).\n                                 9. Fuchi, K., Tang, J., Crowgey, B., Diaz, A. R. & Ouedraogo, R. O. Origami tunable frequency selective surfaces. IEEE Antenn. Wirel. \n                                    Prop. Lett. 11, 473–475 (2012).\n                                 10. Schenk, M. & Guest, S. D. Geometry of Miura-folded metamatrials. PNAS 110, 3276–3281 (2013).\n                                 11. Boatti, E., Vasios, N. & Bertoldi, K. Origami metamaterials for tunable thermal expansion. Adv. Mater. 29, 1700360 (2017).\n                                 12. Zirbel, S. A. et al. HanaFlex: A large solar array for space. in Proc. SPIE 9467, Micro-and Nanotechnology Sensors, Systems, and \n                                    Applications VII, 94671C (2015).\n                                 13. Kaddour, A.-S. et al. A foldable and reconfgurable monolithic refectarry for space applications. IEEE Access 8, 219355–219366 \n                                    (2020).\n                                 14. Dudte, L. H., Vouga, E., Tachi, T. & Mahadevan, L. Programming curvature using origami tessellations. Nat. Mater. 15, 583–588 \n                                    (2016).\n                                 15. Dang, X. et al. Inverse design of deployable origami structures that approximate a general surface. Int. J. Solids. Struct. 234–235, \n                                    111224 (2022).\n                                 16. Chen, Y., Fan, L., Bai, Y., Feng, J. & Sareh, P. Assigning mountain-valley fold lines of fat-foldable origami patterns based on graph \n                                    theory and mixed-integer linear programming. Comput. Struct. 239, 106328 (2020).\n                                 17. Zhou, X., Wang, H. & You, Z. Design of three-dimensional origami structures based on a vertex approach. Proc. R. Soc. A 471, \n                                    20150407 (2015).\n                                 18. Carleo, G. et al. Machine learning and the physical sciences. Rev. Mod. Phys. 91, 045002 (2019).\n                                 19. Spiegeleer, J. D., Madan, D. B., Reyners, S. & Schoutens, W. Machine learning for quantitative fnance: Fast derivative pricing, \n                                    hedging and ftting. Quant. Finace 18(10), 1635–1643 (2018).\n                                 20. Kononenko, I. Machine learning for medical diagnosis: History, state of the art, and perspective. Artif. Intell. Med. 23, 89–109 \n                                    (2001).\n                                 21. Vinyals, O. et al. Grandmaster level in StarCraf II using multi-agent reinforcement learning. Nature 575, 350–354 (2019).\n                                 22. LeCun, Y., Bengio, Y. & Hinton, G. Deep learning. Nature 521, 436–444 (2015).\n                                 23. Wang, F. & Rudin, C. Falling rule lists. in Proceedings of the 18th International Conference on Artifcal Intelligence and Statistics \n                                    (AISTATS), 1013–1022 (2015).\n                                 24. Freund, Y. & Schapire, R. E. Experiments with a new boosting algorithm. in Machine Learning: Proceedings of the Tirteenth \n                                    International Conference (1996).\n                                 25. Breiman, L., Friedman, J., Olshen, R. & Stone, C. Classifcation and Regression Trees (Wadsworth and Brooks, 1984).\n                                 26. Yasuda, H. et al. Data-driven prediction and analysis of chaotic origami dynamics. Commun. Phys. 3, 168 (2020).\n                                 27. Namiki, A. & Yokosawa, S. Robotic origami folding with dynamic motion primitives. in IEEE/RSJ International Conference on \n                                    Intelligent Robots and Systems (IROS), Sept 28–Oct 2 (2015).\n                                 28. Chen, Z., Ogren, A., Daraio, C., Brinson, C. L. & Rudin, C. How to see hidden patterns in metamaterials with interpretable machine \n                                    learning. Extreme Mech. Lett. 1, 101895 (2022).\n                                 29. Quinlan, J. R. Induction of decision trees. Mach. Learn. 1, 81–106 (1986).\n                                 30. Yasuda, H. & Yang, J. Reentrant origami-based metamaterials with negative poisson’s ratio and bistability. Phys. Rev. Lett. 114, \n                                    185502 (2015).\n                                 31. Silverberg, J. L. et al. Origami structures with a critical transition to bistability arising from hidden degrees of freedom. Nat. Mater. \n                                    14, 389–393 (2015).\n                                 32. Rudin, C. Stop explaining black box machine learning models for high stakes decision and use interpretable models instead. Nat. \n                                    Mach. Intell. 1, 206–215 (2019).\n\nScientifc Reports |        (2022) 12:19277  |       https://doi.org/10.1038/s41598-022-23875-6                                              11\n                                                                                                                                        Vol.:(0123456789)",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b49"
  },
  "pdf_name": "s41598-022-23875-6",
  "page_number": 8,
  "content": "./origami_dataset_dev/s41598-022-23875-6/page008_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b4a"
  },
  "pdf_name": "s41598-022-23875-6",
  "page_number": 10,
  "content": "        www.nature.com/scientificreports/\n\n\n                                    results show the beneft of focusing on sparser tree branches for solving the inverse design problem than using \n                                    the standard decision tree method.\n                                      In summary, this work establishes a novel inverse design method for functional origami structures using \n                                    an interpretable machine learning method. First, the origami performance database can be populated using \n                                    reduced-order simulation methods like the SWOMPS package. Afer populating the databases, the data points \n                                    are classifed into two classes depending on whether they meet the specifed target performance, which casts a \n                                    binary classifcation problem. Afer setting up the target performance, the decision tree-random forest method \n                                    was trained to identify origami patterns and design features in origami structures that achieve a specifed target \n                                    performance. Finally, origami design rules were computed by backtracking the splitting criteria associated with \n                                    each tree branch and selecting the rules with the highest F-score.\n                                      To test the performance and versatility of the proposed method we built databases for four design scenarios, \n                                    including: (1) Stifness of a single unit Miura-ori, (2) Stifness of origami metasheets, (3) Multi-physical perfor-\n                                    mance of electro-thermal origami grippers, and (4) Stifness and shape ftting of origami arches. We believe these \n                                    four databases populated in this work can be reused for generating new designs or for testing the performance \n                                    of other machine learning algorithms when applied to analyze origami related data.\n                                      Future research could explore and improve the reliability and performance of the proposed method by using \n                                    other state-of-the-art training methods for decision trees (like the Generalized and Scalable Optimal Sparse \n                                    Decision  Trees42 and the Optimal Classifcation  Trees43). In addition, it would be possible to make the origami \n                                    performance database more representative by including data points generated with high fdelity FE simulations \n                                    and/or experiments. Addressing potential shifs between the distribution of simulated and experimental data \n                                    and assigning diferent weights to the simulated and experimental results are two interesting problems that \n                                    would need further investigation. Moreover, the inverse design results presented in this work have not yet been \n                                    experimentally verifed and tested. Physical experiments could be used to judge the performance of this inverse \n                                    design framework under realistic engineering conditions.\n                                      As a concluding remark, we want to summarize the benefts of using this data science and interpretable \n                                    machine learning based approach for origami inverse design when compared to using existing optimization-\n                                    based strategies. First, any generated database can be reused to compute new rules for diferent targets, or in \n                                    other words to fnd appropriate designs for diferent scenarios. Second, the proposed method can simultaneously \n                                    analyze the signifcance of design features for a given design target, which is not provided in optimization-based \n                                    design methods. If a design feature is important for achieving a given performance target, a relatively tight thresh-\n                                    old of that feature will be identifed. Tird, the proposed method demonstrates the complex interaction between \n                                    continuous variables and categorical variables. Identifying these interactions is necessary for designs where \n                                    comparing diferent origami patterns will naturally introduce categorical variables that cannot be captured with \n                                    continuous optimization-based design methods. Fourth, we show that the proposed method can handle multi-\n                                    objective design targets for active origami systems with multi-physical behaviors. Finally, we demonstrate that \n                                    the proposed method can extend existing origami shape ftting algorithms to further design for non-geometrical \n                                    performance of origami structures, which together enables a holistic framework for inverse design of functional \n                                    origami. We envision that the proposed methodology can be used for designing active origami systems with \n                                    superior performance for various applications in biomedical devices, sof robotics, metamaterials, deployable \n                                    structures, and many more.\n                                    Methods\n                                    Origami simulation.    Tis work uses an open-access origami simulation package called SWOMPS 34. Tis \n                                    origami simulator uses a common simulation technique called the bar and hinge model to represent the geom-\n                                    etry of origami systems. Tis simulator can explicitly model compliant origami creases (folds with distributed \n                                    width) which makes it suitable for simulating the behaviors of practical origami structures 35. In addition, the \n                                    simulator package integrates a state-of-the-art multi-physics model to capture the electro-thermal  actuation36 \n                                    important for active origami assemblages. Other origami simulation techniques may be used for capturing dif-\n                                    ferent performance of interest, and the reference 44 provides a summary of diferent origami simulation tech-\n                                    niques. Te implementation codes for building origami databases are thoroughly discussed in the Supplemen-\n                                    tary Materials and are available on the GitHub page: https:// github. com/ zzhuy ii/ Gener ateOr igami DataS et. A \n                                    more detailed introduction of the underlying origami simulation method and how it is applied in each design \n                                    example can be found in the Supplementary Text Sections S1 and S2.\n\n                                    Training the decision tree-random forest method.     Tis work uses an open-access package  sklearn36 \n                                    to train the decision tree-random forest machine learning method. More specifcally, the sklearn package imple-\n                                    ments a classical decision tree method, where the trees are trained using suboptimal greedy approaches. Other \n                                    state-of-the-art tree methods (like the Generalized and Scalable Optimal Sparse Decision  Trees41 and the Opti-\n                                    mal Classifcation  Trees42) could be used in the future to further improve the performance. When training deci-\n                                    sion trees, an entropy-based criterion is used to identify the best splitting rules at branch nodes. Because the \n                                    target class tends to contain only a small number of data (5% to 10%), the balanced class weight is used to tackle \n                                    the imbalanced dataset. Te results computed in the main article are accomplished using the following hyperpa-\n                                    rameters: the cost-complexity-pruning alpha value is 0.001, the maximum depth of trees is 20, and the number \n                                    of training trees is 100. Te details on the hold-out testing and hyperparameter selection can be found in the \n                                    Supplementary Text Section S3.\n\n                                    Finding the inverse design rules.  Tis work shows that each tree branch for data points that meet the \n                                    target performance can be treated as a design rule for an origami system. With this in mind, the work further \n\n        Scientifc Reports |        (2022) 12:19277  | https://doi.org/10.1038/s41598-022-23875-6                                10\nVol:.(1234567890)",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b4b"
  },
  "pdf_name": "s41598-022-23875-6",
  "page_number": 4,
  "content": "          www.nature.com/scientificreports/\n\n\n                                                        ◦\n                                     W  = 1.2 mm , γ = 52  ) is most likely to produce a single unit Miura-ori with axial stifness k < 6000 N/m . \n                                      Te algorithm comes to this conclusion because the feature design values match the rule: tc < 0.8 mm , and \n                                     tp < 2.1 mm . As such, each branch associated with Class 1 in the decision tree gives a design rule that would \n                                      produce an origami design that meets the target performance. Tis highly interpretable structure of a tree method \n                                      is useful for inverse design because the inverse relationship (i.e. f −1 ) shows how to pick features based on the \n                                      target performance. Moreover, we use randomly selected sub-datasets to train diferent decision trees to create \n                                      more potential design rules. Training multiple decision trees forms an ensemble version of the tree method called \n                                      a random forest. Te structure of the trees, the splitting criteria, and the leaf node predictions are learned by \n                                      the machine learning algorithm during the training process using a machine learning package called sklearn 37. \n                                      Afer training multiple decision trees, we gather all the design rules by tracing back through the tree branches \n                                      (Fig. 2d). For example, Rule 1 and Rule 2 gathered in Fig. 2d are correlated to the two diferent branches in the \n                                      sample tree (gray arrows in Fig. 2c).\n                                        Although these decision trees are automatically learned by the machine learning method, there are other \n                                      manually specifed variables that control how decision trees are computed. Tese user-specifed variables are \n                                      referred to as hyperparameters in machine learning and a technique called grid search is usually performed to \n                                      select these hyperparameters. Diferent combinations of the hyperparameters are used to train the machine learn-\n                                      ing algorithms and the best combination is selected. Te hyperparameters considered in this work includes: (i) \n                                      the maximum depth of the trees, (ii) the number of tree learners in the forest, (iii) the cost-complexity pruning \n                                      alpha value, (iv) the splitting criterion, and (v) the sub-dataset ratio for training diferent decision trees. Details \n                                      on the considered hyperparameters and the grid search are provided in the Supplementary Materials Section S3.3.\n                                        Now that we have collected a number of potential design rules, we need to select those that provide better per-\n                                      formance for the inverse design problem. More specifcally, a better design rule needs to have a higher precision \n                                      value and a higher recall value, where a high precision means that the rule is accurate, and a high recall means that \n                                      the rule is representative (see the method section for details). In this work, we use the following routine to select \n                                      design rules with better performance. Te rules need to satisfy two thresholds and they are: (1) the precision is \n                                      greater than 0.9, and (2) the number of data points satisfying the rule is greater than 10. Rules that do not satisfy \n                                      these thresholds are eliminated from further consideration. Next, we rank the rules using the F-score function 38:\n\n                                                                              2      precision · recall\n                                                                   Fβ =  1 + β\n                                                                                \u001d β2 · precision + recall \u001c\n                                                                        \u001f      \u001e\n                                        Tis F-score function creates an average score from both the precision and the recall value, where the recall \n                                      is seen as β times more signifcant than the precision value. In this work, we select a value of β = 0.2 because the \n                                      precision is more important for an inverse design problem, where the goal is to fnd “some designs” that meet \n                                      the target performance not “all designs” that meet the target performance. Finally, we select the rules with the \n                                      highest F-scores for our origami design and Fig. 2f shows the selected rule for this demonstration example. Te \n                                      shaded (darker) region of the box chart indicates the computed range of the four design variables and the design \n                                                                                      ◦\n                                      rule is tc < 0.78 mm , tp < 2.2 mm , W ≥ 1.9 mm , γ ≥ 67 .\n                                        Although we managed to fnd a rule that performs well in the training dataset with a precision of 1.0, we need \n                                      to further test the rule to verify that it is indeed a good rule. Te testing is conducted by computing the precision \n                                      of the rule using another testing dataset that is not used for training the machine learning method. Tis process is \n                                      usually referred to as the hold-out testing in machine learning. Basically, the training data are homework problems \n                                      for the machine learning algorithm and the testing data is the fnal exam. Details of the hold-out testing setup \n                                      can be found in the Supplementary Materials Section S3.3. In this demonstration example, a testing precision of \n                                      0.86 is obtained, which is reasonably good for an unbalanced dataset like the one for the single unit Miura cells, \n                                      where the target data only consists of 7% of the total dataset.\n                                        Once good design rules are obtained and their quality is confrmed through testing, a designer can directly \n                                      use these rules to design a suitable origami structure. Figure 2f presents one sample design that satisfes the rules \n                                                                                                          ◦\n                                      and has the following features: tc = 0.70 mm , tp = 1.5 mm , W = 2.5 mm , γ = 70  . Tis design has an axial stif-\n                                      ness k = 5702 N/m , which indeed meets the target performance.\n\n                                      Comparing diferent origami patterns.     It is difcult to inverse design functional origami considering \n                                      multiple origami patterns because categorical features are needed to represent and compare these diferent pat-\n                                      terns. Categorical features including the type of origami pattern, the number of unit cells, and the topological \n                                      design of each pattern, cannot be implemented directly into common continuous optimization-based inverse \n                                      design  methods14,15. Capturing and comparing diferent patterns is essential because diferent origami produce \n                                      intrinsically diferent motions and functional performances. To address this challenge, this section shows that \n                                      the decision tree-random forest method can handle the complex interaction between categorical and continuous \n                                      variables, which allows the method to compare and select between diferent origami patterns.\n                                        Here, we study a design problem for origami metasheets shown in Fig. 3a. Tese origami metasheets are \n                                      cut out from a thin square plate with a footprint of 0.2 m × 0.2 m and can be built from two distinctly difer-\n                                      ent origami patterns including the standard Miura-ori pattern (Pattern 1) and the Tachi-Miura Polyhedron \n                                      (TMP)30 (Pattern 2). To represent these two patterns, we introduce an integer (binary) variable p ={1, 2} . In \n                                      addition, these origami metasheets can have diferent numbers of unit cells, represented as m ={24, 30, 36} and \n                                     n ={6, 9, 12} , in the two directions. In addition to these three categorical features, three continuous design fea-\n                                      tures are also used in this problem, and they are the thickness of panels (1.0 mm < tp < 6.0 mm ), the thickness \n                                      of creases ( 0.5 mm < tc < 1.0 mm ), and the width of creases (1.0 mm < W < 4.0 mm ). An origami database of \n                                      2000 Miura origami samples and 2000 TMP origami samples is populated by randomly sampling values of the \n                                      other design features. Te origami simulation package SWOMPS is used to calculate the stifness performance of \n\n          Scientifc Reports |        (2022) 12:19277  | https://doi.org/10.1038/s41598-022-23875-6                                 4\n  Vol:.(1234567890)",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b4c"
  },
  "pdf_name": "s41598-022-23875-6",
  "page_number": 1,
  "content": "                                                                                    www.nature.com/scientificreports\n\n\n             OPEN           Harnessing interpretable machine \n                            learning for holistic inverse design \n                            of origami\n                            Yi Zhu1,2* & Evgueni T. Filipov1,2\n\n                            This work harnesses interpretable machine learning methods to address the challenging inverse \n                            design problem of origami-inspired systems. We established a work fow based on decision tree-\n                            random forest method to ft origami databases, containing both design features and functional \n                            performance, and to generate human-understandable decision rules for the inverse design of \n                            functional origami. First, the tree method is unique because it can handle complex interactions \n                            between categorical features and continuous features, allowing it to compare diferent origami \n                            patterns for a design. Second, this interpretable method can tackle multi-objective problems for \n                            designing functional origami with multiple and multi-physical performance targets. Finally, the \n                            method can extend existing shape-ftting algorithms for origami to consider non-geometrical \n                            performance. The proposed framework enables holistic inverse design of origami, considering \n                            both shape and function, to build novel reconfgurable structures for various applications such as \n                            metamaterials, deployable structures, soft robots, biomedical devices, and many more.\n\n                            Origami, the art of folding paper, provides a method to build novel 3D engineering structures from fat 2D \n                             surfaces1,2. Tese origami structures can be used in a variety of applications such as biomedical  devices3,4, micro/\n                            sof  robots5–7, frequency selective  surfaces8,9,  metamaterials10,11, aerospace structures 12,13, and many more. Over \n                            the years, there have been a number of inverse design methods proposed for origami  systems14–17, but these \n                            methods and algorithms only solve kinematic design problems like ftting origami to arbitrary shapes and geom-\n                            etries. Designing functional origami structures for general engineering applications is still difcult because these \n                            active origami systems can have highly nonlinear motions, variable properties, and unintuitive multi-physical \n                            behaviors. Properly addressing a generic inverse design problem of origami requires considering the interaction \n                            between categorical and continuous features and handling formulations with multiple multi-physical objectives. \n                            Tese problems are difcult to handle with existing optimization-based inverse design methods for origami shape \n                            ftting so new solutions are needed.\n                              Machine learning has proven to be a versatile and powerful method to solve physical science  problems18, \n                            fnancial  problems19, biomedical  problems20, E-sport  games21, etc. Moreover, a large number of diferent machine \n                            learning methods like neural  network22, rule  list23,  boosting24, random  forest25, and others have been developed \n                            to solve problems of diferent size, complexity, and nature. Because of the broadness and diversity of these meth-\n                            ods, one key challenge on using machine learning is to select the appropriate method for a given problem. For \n                            origami type problems, machine learning techniques have been used to predict chaotic dynamic  responses26 and \n                            to solve for origami folding  motions27. In addition, interpretable machine learning techniques were also used \n                            for handling design problems for metamaterials systems that have diferent input data types when compared \n                            to  origami28. However, no prior work has tackled the inverse design problem for origami using interpretable \n                            machine learning techniques.\n                              In this work, we show that an interpretable machine learning method called the decision tree method and its \n                            ensemble version called random  forest25,29 are particularly suitable for the inverse design of functional origami. \n                            Figure 1 summarizes the fundamental idea of this work. Te design of origami can be thought of as building a \n                            nonlinear function f  to calculate the performance indices of the system (such as stifness, Poisson’s ratio, mate-\n                            rial cost, etc.) based on given design features (such as the number of origami cells, the thickness of materials, \n                            sector angles of the origami pattern, etc.). Usually, numerical simulations are used to represent this function f  \n                            because it is too complex to be expressed in a closed form. In a traditional setting, designing origami structures \n                            is accomplished through plotting and observing the relationships between the features and the performance \n                            using nonlinear simulation methods 30,31. To extend this traditional design method to an inverse design setup, \n\n                            1Department of Civil and Environmental Engineering, University of Michigan, Ann Arbor, USA. 2Department of \n                            Mechanical Engineering, University of Michigan, Ann Arbor, USA. *email: yizhucee@umich.edu\n\nScientifc Reports |        (2022) 12:19277  | https://doi.org/10.1038/s41598-022-23875-6                                 1\n                                                                                                                     Vol.:(0123456789)",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b4d"
  },
  "pdf_name": "s41598-022-23875-6",
  "page_number": 3,
  "content": "www.nature.com/scientificreports/\n\n\n                            Figure 2.  Computing interpretable design rules for origami assemblages. (a) Te problem setup for the single \n                            unit Miura-ori cell. Te axial stifness is computed for the folded origami with supports on the lef and axial \n                            loads on the right. (b) A database of Miura-ori design features and resulting axial stifness performance is \n                            populated using a physics-based origami simulator. Data points are labeled based on whether they meet the \n                            target performance or not (axial stifness k < 6000 N/m). (c) A number of decision trees are trained to classify \n                            the database. (d) Design rules are gathered by collecting the splitting criteria in each branch of the decision tree \n                            (following the gray lines in the sub-fgure (C)). (e) Representative rules are selected based on the precision, the \n                            recall, and the number of data points satisfying the rules. In this case, the rule 1 (blue dot) is better than the rule \n                            2 (orange box) and the rule 3 (pink cross) because it has high precision and recall. (f) A fnal design rule with \n                            the highest F-score is picked. Te box chart contains the full range for all features, while the shaded regions \n                            indicate the fnal design rule for the target performance. A Miura-ori design that follows the fnal rule is shown \n                            (indicated with dark lines in the box chart).\n\n                             SWOMPS34 (step 2 in Fig. 2b). Te SWOMPS package is used in this paper because it is computationally efcient \n                            and can capture multi-physical behaviors important for many origami designs 35,36 (see Materials and Methods). \n                            Tis simulation package is based on a bar and hinge mechanics representation of origami systems and contains \n                            a reduced-order model for electro-thermally actuated creases. Te simulation results of this package have been \n                            verifed against both FE simulations and physical experiments 35,36 so the generated database is representative of \n                            realistic behaviors in active origami structures. Based on the simulated performance of each data point, we assign \n                            class labels depending on if the design can achieve the target performance or not (step 3 in Fig. 2b). Data points \n                            that meet the target ( k < 6000 N/m ) are assigned a label of 1 while the remaining samples are assigned a label of 0.\n                              Next, we use the design features and the class labels to set up a supervised learning problem that can be solved \n                            using the decision tree-random forest method. Te method is trained to diferentiate designs that meet the target \n                            performance (with label 1) from those that do not (with label 0) based on the design feature values. Figure 2c \n                            shows a sample decision tree for the design problem of the Miura-ori unit cell. To determine the class of a data \n                            point, we send the data point into the tree from the top. Each time the data point encounters a branch node, \n                            a simple criterion is checked to determine if the point should go to the lef branch or to the right branch. For \n                            example, a datapoint with tp = 1.1 mm at the frst node of the sample decision tree (shown on Fig. 2c) will be sent \n                            to the lef branch because tp = 1.1 mm < 2.1 mm . Afer a series of judgments, the data point will be sent to a leaf \n                            node, where no more branching occurs, and a class label is predicted. For example, the datapoint listed in column \n                            one of the Table in Fig. 2b will follow the gray arrow (marked as “Rule 1”) downward and be judged as a Class \n                            1 data. Tis means the machine learning algorithm thinks that this feature design (t c = 0.78 mm , tp = 1.1 mm , \n\nScientifc Reports |        (2022) 12:19277  | https://doi.org/10.1038/s41598-022-23875-6                                 3\n                                                                                                                     Vol.:(0123456789)",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b4e"
  },
  "pdf_name": "s41598-022-23875-6",
  "page_number": 2,
  "content": "        www.nature.com/scientificreports/\n\n\n                                    Figure 1.  Interpretable machine learning for inverse design of origami. Te relationship between origami \n                                    design features (lef) and performance of origami systems (right) can be thought of as a black-box nonlinear \n                                    function f  . Tis work shows that it is possible to train an interpretable machine learning method (a decision \n                                    tree-random forest method at the bottom) to uncover the underlying structure of this black-box nonlinear \n                                    function f  , so that we can build human understandable design rules to solve the inverse design problem (solve \n                                         1\n                                    for f − ).\n\n                                    one needs to construct an inverse relationship f −1 that calculates a set of design features from the target perfor-\n                                    mance. In this work, we show that it is possible to compute this inverse relationship f −1 by frst populating an \n                                    origami performance database and then applying interpretable machine learning to ft the database (approximat-\n                                    ing f  ). Unlike standard “black box” machine learning methods, interpretable machine learning can produce \n                                    human-understandable decision rules with which people can understand why certain judgments are made by \n                                    the  algorithms32,33. Once an interpretable approximation of the nonlinear function f  is obtained, the inverse \n                                    relationship f −1 can be constructed. Trough our implementation and exploration of the decision tree method \n                                    for functional origami systems, we found that selecting the “more informative” branches provides useful design \n                                    rules for this set of problems (fnding the inverse relationship f −1).\n                                      In the following sections, we demonstrate how to resolve the origami inverse design problem as a data sci-\n                                    ence and machine learning problem. We show how to build the origami performance database and use the \n                                    decision tree-random forest method to compute human-understandable decision rules for the inverse design \n                                    of functional origami. First, we demonstrate the methodology using a simple design problem on Miura origami \n                                    cells. Next, we show that the proposed method can handle categorical features and compare diferent origami \n                                    patterns for a more complex origami metasheet design problem. We then show that the tree-based method \n                                    can tackle multi-objective and multi-physical problems by designing a set of electro-thermal origami grippers. \n                                    Finally, with a design problem on origami arches, we demonstrate that the proposed method can enable origami \n                                    shape ftting algorithms to further consider non-geometrical properties so that holistic origami design can be \n                                    achieved. Tese examples show that the decision tree-random forest method ofers unprecedented versatility \n                                    for the inverse design of origami systems.\n                                    Results\n                                    Computing origami design rules with interpretable machine learning.       Tis section introduces \n                                    how the decision tree-random forest method can be used to compute design rules for the inverse design of \n                                    origami systems. To demonstrate the methodology, we use a simple design problem on Miura-ori unit cells \n                                    as presented in Fig. 2a. Te design objective is to fnd a Miura-ori unit cell to have an axial stifness k smaller \n                                    than 6000 N/m (target performance: k < 6000 N/m ). Te Miura-ori cell is cut from a square sheet and is \n                                    folded to a 60% extension ratio, defned using the ratio between the folded length and fat length of the pattern \n                                    ( Ext = L′/L = 60% ). Te axial stifness is calculated by fxing the unit cell at one end and applying small forces \n                                    to stretch it at the other end. For this problem, four design variables (features) are used including the thickness \n                                    of panels (t p ), the thickness of creases (t c ), the width of creases (W  ), and the sector angle of the Miura-ori pattern \n                                    (γ  ). We determine the design ranges for these features based on practical fabrication and material limits, and \n                                                                                                                ◦          ◦\n                                    they are: 1.0 mm < tp < 6.0 mm , 0.5 mm < tc < 1.0 mm , 1.0 mm < W < 4.0 mm , and 50 <γ <80 .\n                                      To build a database for training the machine learning model, we randomly create designs using diferent \n                                    feature values within the specifed ranges (step 1 in Fig. 2b). Each column of the table in Fig. 2b represents one \n                                    design (data point) and 1000 random designs are generated for this example problem. Next, we compute the \n                                    axial stifness (or the performance) for each data point using a physics-based origami simulation package called \n\n        Scientifc Reports |        (2022) 12:19277  | https://doi.org/10.1038/s41598-022-23875-6                                 2\nVol:.(1234567890)",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b4f"
  },
  "pdf_name": "s41598-022-23875-6",
  "page_number": 9,
  "content": "www.nature.com/scientificreports/\n\n                            gives a more desirable non-geometric performance. Suppose our target is to build an origami structure that \n                            can achieve a given stifness performance while ftting a target shape, how should we select these shape ftting \n                            parameters and other design features of the origami? Te proposed machine learning based method is able to \n                            answer questions like this.\n                              Without loss of generality, we focus on designing a Miura-origami half-circle arch with a 2 m radius. \n                            Te origami arch database is generated by randomly picking shape ftting design features and other origami \n                            design features. The shape fitting features include the number of segments ( m ={8, 12, 16, 24} ), the off-\n                            set length (100 mm < lo < 300 mm ), the strip width (10 mm < Ws < 40 mm ), and the extrude dimension \n                            (50 mm < le < 250 mm ). Other design features such as the thicknesses of panels (1.0 mm < tp < 6.0 mm ) and \n                            creases ( 0.5 mm < tc < 1.0 mm ) and the width of creases (1.0 mm < W < 4.0 mm ) are also included because \n                            they afect the stifness of the arch. Based on these features, we compute and record the responses of 3000 random \n                            origami designs using the SWOMPS simulation package to populate a database. Te performance indices include \n                            the stifness in X-direction ( kx ) and Z-direction ( kz ), the error of shape ftting ( e ), and whether the structure \n                            will snap or buckle under a 5 N load applied vertically ( Sz ) (see Supplementary Materials Section S2 for details).\n                              With the database established, we apply the proposed inverse design method to analyze the database. Because \n                            the decision tree-random forest method can handle a mixture of categorical and continuous variables, it can \n                            consider the integer variables used in shape ftting algorithm. Moreover, because the method can also tackle \n                            multi-objective problems, we can design for diferent combinations of shape-ftting errors and stifness targets. \n                            Target 1 in Fig. 5c represents a target with stricter stifness requirement but a less strict shape ftting objec-\n                            tive while Target 2 has a more relaxed stifness requirement but a stricter error objective. Both targets contain \n                            about 5% of the total data, so they are comparable in terms of overall design selectiveness. Figure 5c shows the \n                            computed decision rules for the two targets and indicates that both rules have reasonably high precision. Tis \n                            result demonstrates that the machine learning method can produce diferent design rules to accommodate the \n                            interactions between desired shape ftting error and mechanical performance. More importantly, the proposed \n                            machine learning method is not tied to specifc origami patterns or shape ftting methods. Tus, the proposed \n                            methodology can be combined with other origami shape ftting approaches, such as those  in14,15,17, to enable \n                            a holistic inverse design of origami that considers both shape and non-geometrical function or performance.\n                              Next, we show that the proposed method can design origami systems with complex mechanical behaviors \n                            such as bistability and multi-stability39,40. Target 3 in Fig. 5c shows the design rules for an origami arch to exhibit \n                            a snap-through behavior under a vertically applied 5 N load. Unlike designing for a stif arch with small ftting \n                            errors, the machine learning method shows that only the designs with more segments (larger m ) in the strip \n                            can experience the snapping behavior. Moreover, it is necessary to have a low panel thickness and a low crease \n                            thickness so that the origami is more likely to snap. Te testing precision of this design rule is high, indicating \n                            that the design rule is reliable and accurate.\n                              Here, we have demonstrated one design scenario for shape ftting a Miura origami pattern to an arch geom-\n                            etry. However, we believe the versatility of the proposed framework can be readily extended to other origami \n                            shape ftting methods and even to freeform-origami design methods (such as those  in41). For example, suppose \n                            that the origami geometry is allowed to slightly deviate from the target center line in order to achieve better \n                            mechanical behaviors. Ten, in addition to the design features shown in Fig. 5, new xyz directional ofsets of \n                            selected control vertices on the Miura arch can be used to generate diferent free-form variations of the geometry. \n                            With the directional ofsets used as additional design features, it would be possible to simultaneously design for \n                            both the geometry and mechanical/non-mechanical performances of free-form origami structures.\n                            Discussion\n                            In this section, we further discuss our reasoning on the implication behind the obtained results. We will start with \n                            data generation. In general, we believe reduced order simulation methods like the SWOMPS  package34 are good \n                            for populating origami performance databases, because these methods can capture the multi-physical active fold-\n                            ing in origami with reasonable accuracy 35,36 and they are computationally efcient. To further improve the validity \n                            of the inverse design results, the populated origami performance database can be augmented with experimental \n                            data and/or high-fdelity FE simulations. By training the decision tree-random forest method with higher weight \n                            added to the experimental data points, the inverse design results can be made more representative and realistic.\n                              Next, when labeling the dataset based on target performance, we fnd that it is common to generate imbal-\n                            anced databases because those data points that meet our target performance tend to be sparse (engineering \n                            design usually targets rarer performances). It is possible to make the database more balanced by using domain \n                            knowledge to preselect sample zones or even rule out non-relevant design features. Nonetheless, this work \n                            shows that the proposed method can handle the inverse design problem without using techniques to balance \n                            out imbalance databases. Tis work uses the sklearn package to train the decision tree-random forest method \n                            and uses the embedded imbalanced weight to handle the imbalance dataset.\n                              Tis work demonstrates that it is possible to fnd the representative combination of design features for inverse \n                            design of origami systems by fnding the tree branches with higher F-score. Tis strategy is similar to fnding \n                            the better classifer from a pool of classifers using the F-score, but focusing on a sparser tree branch. Focusing \n                            on a few high performing branches in the decision tree-random forest method produces design rules with high \n                            interpretability for solving the inverse design problem. Analysis from Section S3.4 shows that better inverse \n                            design results can be obtained by using larger origami dataset and the method is not afected by overftting \n                            issues because using a tree branch for inverse design enforces a highly sparse structure. Moreover, results in \n                            Section S3.5 further highlight that the proposed methodology can produce stable inverse design results under \n                            diferent training/testing data partition, which is usually not achievable when using a single decision tree. Tese \n\n\nScientifc Reports |        (2022) 12:19277  | https://doi.org/10.1038/s41598-022-23875-6                                 9\n                                                                                                                     Vol.:(0123456789)",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b50"
  },
  "pdf_name": "s41598-022-23875-6",
  "page_number": 8,
  "content": "        www.nature.com/scientificreports/\n\n\n                                    Figure 5.  Integrating the machine learning method with shape ftting for holistic inverse design of origami. (a) \n                                    Defnitions for a modifed Miura-ori design that can ft arbitrary curved shapes. Geometrical design features \n                                    for the modifed Miura include the number of units m , the ofset length lo , the width of the strip Ws , and the \n                                    extrusion length le . (b) Four performance indices are studied including the error of ftting e , the stifness in X \n                                    and Z directions kx and kz , and a binary variable Sz that indicates if the structure will snap if loaded with a 5 N \n                                    load in the Z direction. (c) Computed rules for three diferent targets and corresponding sample designs.\n\n                                    performance. Because Target 3 is 2-dimensional, we present the data points that ft the rules in both the training \n                                    and testing datasets in Fig. 3e. Te result shows that the extracted data points can trace the design boundary \n                                    nicely and fll the design boundary with reasonable coverage.\n                                      Te results from this section demonstrate the capability for the tree method to design functional origami \n                                    systems where multiple objectives with multi-physical performance indices are of interest. Moreover, the pre-\n                                    sented examples show that this methodology can provide alternative design options when they are available.\n\n                                    Design for non-geometrical properties together with origami shape ftting.     Finally, we demon-\n                                    strate how the proposed method can enable origami shape ftting algorithms to further consider non-geomet-\n                                    rical properties of the origami so that a holistic design can be accomplished. So far, most research on origami \n                                    inverse design focuses on geometric shape ftting (such as those  in14,15,17). Usually, the shape ftting problem can \n                                    be constructed as an optimization problem, where the error between the target geometry and the origami is \n                                    minimized given certain  constraints14,15. However, these existing shape ftting studies cannot consider the non-\n                                    geometrical properties that determine the functional performance of origami systems. Moreover, these shape \n                                    ftting algorithms ofen leave tremendous fexibility for a designer to vary the origami pattern (e.g. number of \n                                    panels used or maximum size of panels), without showing which combination may be better. Tus, this section \n                                    will demonstrate how the proposed method can enable existing origami shape ftting algorithms to consider the \n                                    interaction between the shape ftting and non-geometrical behaviors of the origami systems.\n                                      As a demonstration, we implement our method on top of an existing shape ftting approach introduced in 14, \n                                    where an analytical solution was derived to build Miura-origami strips to ft arbitrary planar curves. Figure 5a \n                                    shows how this shape ftting method can generate diferent origami strips to ft a target planar curve. In this \n                                    method, the target curve is frst separated into a specifed number of segments defned by m . Ten a planar ori-\n                                    gami strip geometry is generated by setting the ofset length lo of the center node and the width of the strip Ws . \n                                    Finally, the 3D origami is created by extruding the planar geometry to form the Miura geometry with an extru-\n                                    sion length le . Figure 5a shows the shape ftting results for three diferent curves. As can be seen, there is great \n                                    fexibility in selecting these parameters for shape ftting and the selection can now depend on which combination \n\n        Scientifc Reports |        (2022) 12:19277  | https://doi.org/10.1038/s41598-022-23875-6                                 8\nVol:.(1234567890)",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b51"
  },
  "pdf_name": "s41598-022-23875-6",
  "page_number": 7,
  "content": "./origami_dataset_dev/s41598-022-23875-6/page007_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b52"
  },
  "pdf_name": "a-mathematicians-origami-robert-j-lang",
  "page_number": 4,
  "content": "./origami_dataset_dev/a-mathematicians-origami-robert-j-lang/page004_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b53"
  },
  "pdf_name": "a-mathematicians-origami-robert-j-lang",
  "page_number": 3,
  "content": "./origami_dataset_dev/a-mathematicians-origami-robert-j-lang/page003_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b54"
  },
  "pdf_name": "a-mathematicians-origami-robert-j-lang",
  "page_number": 2,
  "content": "./origami_dataset_dev/a-mathematicians-origami-robert-j-lang/page002_image004.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b55"
  },
  "pdf_name": "a-mathematicians-origami-robert-j-lang",
  "page_number": 5,
  "content": "./origami_dataset_dev/a-mathematicians-origami-robert-j-lang/page005_image004.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b56"
  },
  "pdf_name": "a-mathematicians-origami-robert-j-lang",
  "page_number": 3,
  "content": "./origami_dataset_dev/a-mathematicians-origami-robert-j-lang/page003_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b57"
  },
  "pdf_name": "a-mathematicians-origami-robert-j-lang",
  "page_number": 4,
  "content": "./origami_dataset_dev/a-mathematicians-origami-robert-j-lang/page004_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b58"
  },
  "pdf_name": "a-mathematicians-origami-robert-j-lang",
  "page_number": 4,
  "content": "./origami_dataset_dev/a-mathematicians-origami-robert-j-lang/page004_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b59"
  },
  "pdf_name": "a-mathematicians-origami-robert-j-lang",
  "page_number": 3,
  "content": "./origami_dataset_dev/a-mathematicians-origami-robert-j-lang/page003_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b5a"
  },
  "pdf_name": "a-mathematicians-origami-robert-j-lang",
  "page_number": 5,
  "content": "./origami_dataset_dev/a-mathematicians-origami-robert-j-lang/page005_image005.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b5b"
  },
  "pdf_name": "a-mathematicians-origami-robert-j-lang",
  "page_number": 2,
  "content": "./origami_dataset_dev/a-mathematicians-origami-robert-j-lang/page002_image005.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b5c"
  },
  "pdf_name": "a-mathematicians-origami-robert-j-lang",
  "page_number": 2,
  "content": "./origami_dataset_dev/a-mathematicians-origami-robert-j-lang/page002_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b5d"
  },
  "pdf_name": "a-mathematicians-origami-robert-j-lang",
  "page_number": 5,
  "content": "./origami_dataset_dev/a-mathematicians-origami-robert-j-lang/page005_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b5e"
  },
  "pdf_name": "a-mathematicians-origami-robert-j-lang",
  "page_number": 2,
  "content": "./origami_dataset_dev/a-mathematicians-origami-robert-j-lang/page002_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b5f"
  },
  "pdf_name": "a-mathematicians-origami-robert-j-lang",
  "page_number": 5,
  "content": "./origami_dataset_dev/a-mathematicians-origami-robert-j-lang/page005_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b60"
  },
  "pdf_name": "a-mathematicians-origami-robert-j-lang",
  "page_number": 3,
  "content": "./origami_dataset_dev/a-mathematicians-origami-robert-j-lang/page003_image005.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b61"
  },
  "pdf_name": "a-mathematicians-origami-robert-j-lang",
  "page_number": 4,
  "content": "./origami_dataset_dev/a-mathematicians-origami-robert-j-lang/page004_image005.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b62"
  },
  "pdf_name": "a-mathematicians-origami-robert-j-lang",
  "page_number": 4,
  "content": "./origami_dataset_dev/a-mathematicians-origami-robert-j-lang/page004_image004.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b63"
  },
  "pdf_name": "a-mathematicians-origami-robert-j-lang",
  "page_number": 3,
  "content": "./origami_dataset_dev/a-mathematicians-origami-robert-j-lang/page003_image004.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b64"
  },
  "pdf_name": "a-mathematicians-origami-robert-j-lang",
  "page_number": 5,
  "content": "./origami_dataset_dev/a-mathematicians-origami-robert-j-lang/page005_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b65"
  },
  "pdf_name": "a-mathematicians-origami-robert-j-lang",
  "page_number": 2,
  "content": "./origami_dataset_dev/a-mathematicians-origami-robert-j-lang/page002_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b66"
  },
  "pdf_name": "a-mathematicians-origami-robert-j-lang",
  "page_number": 5,
  "content": "",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b67"
  },
  "pdf_name": "a-mathematicians-origami-robert-j-lang",
  "page_number": 4,
  "content": "",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b68"
  },
  "pdf_name": "a-mathematicians-origami-robert-j-lang",
  "page_number": 1,
  "content": "",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b69"
  },
  "pdf_name": "a-mathematicians-origami-robert-j-lang",
  "page_number": 3,
  "content": "",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b6a"
  },
  "pdf_name": "a-mathematicians-origami-robert-j-lang",
  "page_number": 2,
  "content": "",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b6b"
  },
  "pdf_name": "a-mathematicians-origami-robert-j-lang",
  "page_number": 1,
  "content": "./origami_dataset_dev/a-mathematicians-origami-robert-j-lang/page001_image005.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b6c"
  },
  "pdf_name": "a-mathematicians-origami-robert-j-lang",
  "page_number": 1,
  "content": "./origami_dataset_dev/a-mathematicians-origami-robert-j-lang/page001_image004.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b6d"
  },
  "pdf_name": "a-mathematicians-origami-robert-j-lang",
  "page_number": 1,
  "content": "./origami_dataset_dev/a-mathematicians-origami-robert-j-lang/page001_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b6e"
  },
  "pdf_name": "a-mathematicians-origami-robert-j-lang",
  "page_number": 1,
  "content": "./origami_dataset_dev/a-mathematicians-origami-robert-j-lang/page001_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b6f"
  },
  "pdf_name": "a-mathematicians-origami-robert-j-lang",
  "page_number": 1,
  "content": "./origami_dataset_dev/a-mathematicians-origami-robert-j-lang/page001_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b70"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 298,
  "content": "             44. Pinch the two right points in     45. Slide the wings              46. Sink the long edge on\n             half and swing them downward; at      upward slightly and              the existing crease.\n             the same time, the top flap pivots    flatten.\n             over to the right, slightly beyond\n             vertical. Flatten the model firmly.\n\n\n                 47. Reverse-fold the             48. Fold the right edge of the  49. Bring one layer of paper to\n                 hidden edge upward.              flap over to the left. Repeat   the front. Repeat behind.\n                                                  behind.\n\n\n               50. Swing both wings over to       51. Fold one flap over to           52. Fold the layers\n               the right.                         the right.                          down.\n\n\n              53. Swing the left flap behind to 54. Swing the left flap back to       55. Fold the two legs\n              the right and bring the two right the right. Flatten firmly.            downward. Flatten\n              flaps (one long, one short) around                                      firmly.\n              to the left. Flatten firmly.\n\n     286\n                         Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b71"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 529,
  "content": "           20. Fold the corners back out 21. Unfold to step 19.      22. Reverse-fold in and out\n           to the sides.                                             using the creases you just\n                                                                     made.\n\n\n                                                                                           517\n                                                         FoldingChapter Instructions: 12: Box  OrganistPleating\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b72"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 515,
  "content": "                                                                        Figure 12.45. \n                                                                        A single column, crease pattern \n                                                                        and folded form.\n\n                A single crimp is, as we have seen, nothing more than a \n            pair of closely spaced reverse folds: an inside reverse fold fol-\n            lowed by an outside reverse fold. There is nothing that says \n            that the reverse folds must come in pairs, though. One could, \n            in fact, create quite a complex conﬁguration from a folded strip \n            by reverse-folding at several angles, as shown in Figure 12.46. \n            Could this pattern be replicated in a full array of pleats? Of \n            course, and the result is also shown in the ﬁgure.\n\n\n            Figure 12.46. \n            A reverse-folded pleated shape. Left–right: Crease pattern for a single \n            strip; the folded form of the strip; the folded form of the pleated form; \n            the crease pattern of the pleated form.\n\n                                                                                                     503\n                                                                  Chapter 12: Box Pleating\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b73"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 273,
  "content": "             Figure 8.27. \n             Crease pattern, base, and folded model of the Pegasus.\n\n\n             Figure 8.28. \n             Left: the basic rectangle tile. \n             Right: the tile with additional creases.\n\n                  Similarly, the triangular tiles also have somewhat more \n             complex crease patterns than we saw previously.\n\n\n                                                                                Figure 8.29. \n                                                                                Left: the basic isosceles triangle \n                                                                                tile crease pattern. \n                                                                                Right: the same tile with \n                                                                                additional creases.\n\n                                                                                                                 261\n                                                                                  Chapter 8: Tiling\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b74"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 267,
  "content": "                              +=\n\n\n                              +=\n\n\n            Figure 8.17. \n            The same two tiles can be mated along their short edges to create a \n            different conﬁguration of ﬂaps.\n\n                Compare the four tile crease patterns with the folded form \n            of each tile. Each circular arc deﬁnes a region of paper that \n            belongs to a single ﬂap.\n                The value of the circles is that when two tiles mate so \n            that the circles line up, then the folded forms of each tile also \n            mate so that the boundaries of adjacent ﬂaps line up with each \n            other. An example is shown in Figure 8.16. Since the boundary \n            of each tile is axial, the seam between the two tiles must also \n            be axial, and so I have colored the crease at the joint green to \n            indicate its axial character.\n                In Figure 8.16, each triangular tile contains two long ﬂaps \n            and one short ﬂap. If we mate the two triangles along their long \n            edges, the long ﬂaps merge, top and bottom, into two long ﬂaps; \n            but the two side ﬂaps remain separate, so that the resulting \n            crease pattern contains two long ﬂaps and two short ﬂaps: a \n            Fish Base.\n                Alternatively, as shown in Figure 8.17, by mating the two \n            tiles along their short edges, instead of long ﬂaps merging, one \n            long and one short ﬂap merge, and the resulting base has three \n            long ﬂaps and one short ﬂap (and its crease pattern is a right \n            triangle, rather than a square).\n                Observe that in each mating, distinct segments of circles \n            correspond to distinct ﬂaps. Thus, a simple way of determining \n            the number of ﬂaps created by the crease pattern is to count the \n            number of distinct portions of circles in the crease pattern.\n\n                                                                                                     255\n                                                                         Chapter 8: Tiling\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b75"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 501,
  "content": "             Figure 12.32. \n             Left: crease pattern for a vertical array of ﬁve ﬂaps. \n             Right: the folded form.\n\n                                                                                                                 489\n                                                                          Chapter 12: Box Pleating\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b76"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 59,
  "content": "                                                                                                              B\n\n\n                                                                                                   A                    C\n\n\n                                                                                                             D\n                   1. Begin with the          2. Fold and unfold.         3. Bring the four          4. Fold edges AD and\n                   colored side up. Fold                                  corners together at        CD in to the center line\n                   and unfold along the                                   the bottom to make         and unfold. Then fold\n                   diagonals. Turn the                                    a Preliminary Fold.        point B down and\n                   paper over.                                                                       unfold.\n                                                      D                          D\n\n                          B                           B                          B                           B\n\n                                                     A  C                       A  C\n                A                    C\n                                                                                                       A            C\n\n                                                                                                             D\n                          D\n                  5. Petal-fold front and     6. Fold and unfold on      7. Fold corner D down       8. Turn the paper\n                  back to make a Bird         the near flap. Each        while pulling points A      over.\n                  Base.                       crease lies directly       and C out to the sides;\n                                              over a folded edge.        flatten.\n                                                                                  E\n\n                           B                          B                           B                           B\n\n\n                                                                                                              E\n                     C           A             C            A              C            A              C            A\n\n\n                           D                          D                           D                           D\n                   9. Reverse-fold the        10. Narrow the two         11. Fold point E down.     12. Fold point B down.\n                   two bottom points          points with valley folds\n                   out to the sides.          in front and behind.\n\n\n                                        E\n                                  C            A              A            C\n\n\n                                        D                           D\n                                13. Fold the corners        14. Curve the tusks.        15. Finished\n                                down and turn the                                       Elephant’s Head.\n                                model over.\n                Figure 3.5. \n                Folding sequence for yet another Elephant’s Head.\n\n                                                                                                                                   47\n                                                                                   Chapter 3: Elephant Design\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b77"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 71,
  "content": "                      A1                        A5                       A8                        A9\n\n\n                      A2                        A6                       A10                      A11\n\n\n                      A3                        A7                       A13                      A12\n\n\n                      A4                                                                          A14\n\n\n             Figure 4.4.                                                                          A15\n             The Uchiyama system of A bases, which are based primarily upon \n             diagonal and/or radial folds. Note that the Kite Base, Fish Base, \n             Bird Base, and Frog Base are among them.\n\n                                                                                                                  59\n                                                                       Chapter 4: Traditional Bases\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b78"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 717,
  "content": "            However, by adding a rectangular segment into the middle of \n            each of the four wing ﬂaps, we create extra paper that allows \n            a uniform width to the wings along their length. Can you ﬁnd \n            the added paper in the crease pattern?\n\n\n            Figure 15.6. \n            Crease pattern, base, and folded model of the Dragonﬂy.\n\n            15.2. Multiaxial Bases\n            One of the biggest mismatches between technique and subject \n            that arises in the use of uniaxial bases is that multiﬂapped bases \n            tend to be skinny, while many subjects have parts that are thick \n            and chunky. In particular, many animals have relatively stout \n            bodies and hindquarters relative to their limbs: mice and squir-\n            rels, hippos and elephants. A purely uniaxial base, while possess-\n            ing ﬂaps for all of the major appendages, may not provide enough \n            width in the ﬂaps that are used for the body. Furthermore, the \n            very efﬁciency that makes circle-packed bases so desirable usu-\n            ally means that there isn’t much, if any, excess paper available \n            to pull out to widen the desired ﬂap.\n                Another problem is a bit more subtle. If we create an ani-\n            mal subject from a uniaxial base that is represented in side view \n            as opposed to plan view, we will typically fold the leg ﬂaps out \n            to the sides, then fold the model in half, as, for example, was \n            done with the Bull Moose in the previous chapter.\n                When we fold a uniaxial base in half, the fold line occurs \n            on the axis of the base, and this naturally becomes the back \n\n                                                                                                     705\n                                                                  Chapter 15: Hybrid Bases\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b79"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 703,
  "content": "             Scarab Beetle\n\n\n             Mark the edges of a 22×22 square grid. Use the edge\n             markings to locate interior vertices. You can estimate\n             the position of the axial+1 creases that run along the\n             hypotenuse of the extended Pythagorean stretch from\n             where they hit the edge relative to the edge markings.\n             The creases in the middle are used in the shaping of\n             the body.\n\n\n                                                                                                                 691\n                                                                      CreaseChapter Patterns: 14: Polygon Scarab Packing Beetle \n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b7a"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 65,
  "content": "                                                        Traditional4 Bases\n\n                         he design of an origami model may be broken \n                         down into two parts, folding the base, and \n                         folding the details. A base is a regular geomet-\n                         ric shape that has a structure similar to that \n                         of the subject, although it may appear to bear \n            very little resemblance to the subject. The detail folds, on \n            the other hand, are those folds that transform the appear-\n            ance of the base into the ﬁnal model. The design of a base \n            must take into account the entire sheet of paper. All the \n            parts of a base are linked together and cannot be altered \n            without affecting the rest of the paper. Detail folds, on the other \n            hand, usually affect only a small part of the paper. These are the \n            folds that turn a ﬂap into a leg, a wing, or a head. Converting a \n            base into an animal using detail folds requires tactical thinking. \n            Developing the base to begin with requires strategy.\n                The traditional Japanese designs were, by and large, de-\n            rived from a small number of bases that could be used to make \n            different types of birds, ﬂowers, and various other ﬁgures. For \n            much of the 20th century, most new origami designs were also \n            derived from these same basic shapes.\n                Bases have been both a blessing and a curse to inventive \n            folding: a blessing because the different bases can each serve \n            as a ready-made starting point for design, a curse because by \n            luring the budding designer onto the safe, well-trodden path \n            of using an existing base, he or she starts to feel that there’s \n            nothing new to do and never explores the wilds of base-free \n            origami design.\n                We will, by the end of this book, do both. However, we \n            will start with the traditional bases—ﬁrst, to understand \n            what our origami designer forebears had to work with, and \n            second, because the traditional bases, despite being picked \n\n                                                                                                      53\n\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b7b"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 688,
  "content": "                                             (Note, however, that not everything carries over. The \n                                         universal molecule was only deﬁned for convex axial polygons. \n                                         Hinge polygons, though, may be nonconvex; a generalization of \n                                         the universal molecule to nonconvex polygons is still needed.)\n                                             Ultimately, one could choose entirely irregular hinge poly-\n                                         gons and then use the universal molecule to force regularity of \n                                         the axis-parallel creases, at the expense of some irregularity \n                                         around the tips of the ﬂaps. That approach is in some sense a \n                                         dual to the use of tree theory, which insures clean, sharp tips \n                                         of ﬂaps but generally results in irregular axis-parallel creases \n                                         when the base is sunk and countersunk to a constant width.\n                                             Either extreme results in a lot of irregularity. The sweet \n                                         spot in origami design is reached by striking a balance between \n                                         irregularity and regularity in the design, so that one can achieve \n                                         one’s aesthetic goals in the ﬁnished model and, hopefully, create \n                                         an interesting and efﬁcient design along the way. \n                                             As an example of an irregular structure that one might \n                                         incorporate into a combination of grid-based and other polygon \n                                         packing, I’d like to return to a structure we saw a bit earlier \n                                         in this chapter. Both the Cicada Nymph and the Scorpion HP \n                                         included segmented regions in their bodies. The way those seg-\n                                         ments were obtained was to create a series of short ﬂaps spaced \n                                         out along a longer ﬂap—the abdomen of the Cicada Nymph \n                                         and the body of the Scorpion, respectively. Those are special \n                                         examples of a general concept I call a comb: a series of equal or \n                                         nearly equal ﬁlaments spaced out along a longer shaft. \n                                             In a circle-packed or polygon-packed representation, a \n                                         comb consists of a series of rivers that spread apart to have \n                                         circles inserted between them. Those circles constitute the se-\n                                         ries of ﬁlaments; the bundle of rivers gives the gaps between \n                                         each ﬁlament along the shaft, as illustrated in Figure 14.56.\n                                             It’s pretty clear that this pattern could be extended arbi-\n                                         trarily for larger numbers of ﬁlaments. It’s also clear that by \n                                         varying the sizes of the circles while keeping the river widths \n                                         ﬁxed (or vice versa), we could alter the ratio between the ﬁla-\n                                         ment length and the gaps between ﬁlaments. Larger circles \n                                         mean longer ﬁlaments; narrower rivers mean smaller gaps.\n                                             What is less obvious from this example is that we can in-\n                                         dependently vary the angle that the rivers bend as they turn \n                                         around the circles. You can see that from the two appearances \n                                         of this concept in the crease patterns of the Cicada Nymph and \n                                         Scorpion HP; in the Cicada, the rivers turn at right angles (as \n                                         in the above); in the Scorpion, they bend at 60°.\n                                             In fact, one can choose the bend angle arbitrarily, and that \n                                         allows for another degree of design freedom. In the Cicada and \n                                         Scorpion HP, I used this structure to realize a segmented body; \n\n     676\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b7c"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 139,
  "content": "                45. Reverse-fold one edge.           46. Squash-fold the           47. Turn the paper over.\n                Do not repeat behind.                flap upward.\n\n\n              48. Tuck the edge        49. Turn the paper            50. Fold the thick  51. Fold one flap down\n              into the pocket.         back over.                    edge upward.        in front and behind.\n\n\n             52. Fold and unfold, making a      53. Fold the top point down    54. Reverse-fold the edge, tucking\n             light pinch through the diagonal   along a horizontal crease that the excess paper underneath using a\n             crease.                            runs through the pinch you just vertical mountain fold.\n                                                made.\n\n\n                  55. Fold the flap up.             56. Unfold to step 53.       57. Refold, making the creases\n                                                                                 on the front side match the\n                                                                                 creases on the far side.\n\n                                                                                                                 127\n                                                                       FoldingChapter Instructions: 5: Splitting Goatfish Points\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b7d"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 105,
  "content": "                                                             Splitting5 Points\n\n                          he currency with which the origami designer most \n                          often deals is the point (or ﬂap). Subjects can be \n                          classiﬁed by the number of signiﬁcant points that \n                          they have. A snake has two (a head and a tail); \n                          a standing bird has four (six, if the wings are \n            outstretched). A mammal has six (four legs, a head, and a tail), \n            while a spider has eight. A lobster may have twelve; a centipede, \n            one hundred. The number of points in the subject dictates the \n            number of ﬂaps needed in the base from which it is folded.\n                The number of points assigned to the subject depends not \n            only on the subject, but also upon what the designer deﬁnes \n            as a “signiﬁcant” point. Quite often, minor features such as \n            ears may be derived from small amounts of excess paper in \n            the model and may be safely ignored in the initial stages of \n            design. However, the larger the point is, the more important \n            it is to include it in the ground stages of design.\n                Most people’s ﬁrst designs are modiﬁcations of another \n            model. One’s ﬁrst structural design might very well be a modi-\n            ﬁcation of an existing base, either a Classic Base or perhaps a \n            more recent base from the origami literature. A prime reason \n            to modify a base is to obtain one or more extra ﬂaps. Short of \n            redesigning the base entirely, it is often possible to convert one \n            ﬂap into two, three, or more ﬂaps by folding alone, a process I call \n            point-splitting. The ability to split a point—without cutting—\n            is a useful tactic to have in the designer’s arsenal, and it also \n            provides tangible evidence of the mutability of origami bases.\n\n            5.1. The Yoshizawa Split\n            Of course, there is always one way to split a point—cut it in \n            two. Traditional Japanese designs quite often did split points in \n\n                                                                                                      93\n\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b7e"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 663,
  "content": "            thagorean stretches in a very different way from the straight \n            skeleton, it turns out that even in Pythagorean stretches, the \n            ridge creases are the straight skeleton of the underlying hinge \n            polygons, no matter how irregular they may be.\n\n            14.5. Tight Meanders\n            Back when I was setting out the rules for polygon packing, I \n            said that while hinge polygons could be as large as possible, \n            hinge rivers had to be precisely the width of their correspond-\n            ing ﬂap. While that is indeed the case, there is a way of ap-\n            parently fattening rivers selectively along their length, using \n            a technique devised by Toshiyuki Meguro. \n                We don’t really fatten the rivers, though; the constancy \n            of their width is truly a law of polygon packing. What we do \n            is make them extremely tightly wound to increase their ap-\n            parent width. Hinge rivers in uniaxial box pleating bend at \n            right angles, and if two bends come in immediate succession, \n            then the river can actually double back on itself, in a shape \n            I call a meander. Figure 14.28 illustrates this process for a \n            1-unit-wide river with successively tighter meanders.\n\n\n                                                                       Figure 14.28. \n                                                                       1-unit hinge rivers. Top: a simple \n                                                                       river. \n                                                                       Upper middle: a single meander. \n                                                                       Lower middle: the meander with \n                                                                       the gap on the bottom closed up. \n                                                                       Bottom: a string of successive \n                                                                       meanders.\n\n                The bottom subﬁgure shows a sequence of such meanders \n            in which the gaps, both top and bottom, are entirely closed. \n            The result is, effectively, a 1-unit river that widens to two \n            units for a portion of its length.\n                Note that while the gap outside of the two banks of the \n            river has completely closed up, we still have the 1-unit-high \n            hinge creases on both top and bottom; these interdigitated \n            “teeth,” and the associated ridge creases, are what preserve \n            the 1-unit width of the river. You can think of these hinge \n            “teeth” as inﬁnitesimally thick peninsulas extending into the \n\n                                                                                                     651\n                                                               Chapter 14: Polygon Packing \n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b7f"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 677,
  "content": "                The process for constructing a hex-pleated base is pretty \n            much the same as that for a box-pleated base. You start with \n            the stick ﬁgure, which deﬁnes the circles and rivers that \n            dictate the minimum size for each hinge polygon. Then draw \n            the hinge polygons and hinge rivers on the grid, making sure \n            that the hinge polygons enclose their respective circles and \n            that the rivers respect their constant width. \n                Let’s work through another example. We’ll use the same \n            stick ﬁgure (i.e., the same dimensions) as the Scarab Beetle of \n            Figure 14.27. We begin with the circle packing based on the \n            stick ﬁgure with circles and rivers, but now we use a hexagonal \n            grid as our background, as shown in Figure 14.43.\n\n\n                                                        1\n                                                       1\n                                                          1\n                                                        2\n                                                      3\n\n                                                           2\n                                                        3\n\n\n                                                                       Figure 14.43. \n                                                                       Stick ﬁgure and packing for the \n                                                                       left half of the crease pattern for \n                                                                       a hex-pleated Scarab Beetle.\n\n                (Incidentally, do you see that little spur near the top of \n            the river? That’s a hex-pleated version of a meander.)\n                Once the packing is in place, one can add the ridge creas-\n            es, followed by the axis-parallel contours. The ridge creases \n            are the straight skeleton of each hinge polygon and the angle \n            bisectors of the corners of the rivers, respectively, and are \n            shown in the left subﬁgure of Figure 14.44.\n                Next come the axials. Since this is a plan view base, \n            the center line of the crease pattern (which is the right side \n            of each half-pattern shown in the ﬁgure) must be axial. The \n            junctions of ridge creases along this line are axial points, and \n            these points “seed” axial contours that propagate toward their \n\n                                                                                                     665\n                                                               Chapter 14: Polygon Packing \n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b80"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 111,
  "content": "                       XY                             XY                            XY\n\n                                                  B\n\n                      A\n                                                                                  C\n\n\n                                                  B\n              XYXYXY\n                                                                                  C\n                    A\n\n\n            Figure 5.7. \n            Upper row: path in the folded form. \n            Bottom row: path traveling along the surface of the unfolded paper.\n\n                Now, what’s interesting is that although path C is the short-\n            est path from tip to tip in the unfolded paper, it’s clearly not \n            the shortest possible path in the folded model. As can be seen in \n            the ﬁgure, the bookworm backtracks a bit and actually travels \n            somewhat below the baseline of the two points. This means that \n            we’ve devoted more paper to the gap than we really needed to—\n            paper that could have been used to make longer points.\n                In the most efﬁcient possible structure, the amount of \n            paper that is used to create a gap between two points would be \n            as close as possible to the minimum required. In other words, \n            if we compared the tip-to-tip path in the folded model and the \n            crease pattern, they would look something like Figure 5.8.\n                Of course, we don’t know what the rest of the crease \n            pattern looks like or even what the folded model looks like. \n            But we’ve identiﬁed several salient features of both. We \n            know where the tips of the two points are (indicated by the \n            black dots), and we know how deep the gap is in the folded \n            model (half the distance between the point tips on the crease \n            pattern). Knowing the depth of the gap, we also know where \n            the baseline of the two ﬂaps must be, and we can make cor-\n            responding creases on the paper.\n\n                                                                                                      99\n                                                                 Chapter 5: Splitting Points\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b81"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 209,
  "content": "./origami_dataset_dev/Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li/page209_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b82"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 449,
  "content": "             Alamo Stallion\n\n\n             1. Begin with a square, white       2. Make a pinch halfway along       3. Make three more pinches\n             side up. Fold and unfold along      the left side and bottom.           along the edges.\n             the diagonal.\n\n\n     438\n                         Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b83"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 461,
  "content": "             24. Pull the edge out and 25. Squash-fold. The        26. Petal-fold. Repeat  27. Lift up the flap.\n             squash the right edge     vertical valley fold lies on behind.                Repeat behind.\n             over. The hidden valley   an existing crease; the\n             fold falls on an existing remaining creases form\n             crease; the near valley   when you flatten the\n             fold connects two         squash. Repeat behind.\n             crease/edge intersections.\n\n\n             28. Bring some paper to   29. Fold and unfold      30. Sink the point on     31. Swing one flap over\n             the front. Repeat behind. along a horizontal line. the crease you just       to the right.\n                                       Repeat behind.           made. Repeat behind.\n\n\n     450\n                         Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b84"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 307,
  "content": "                One of the goals of all scientiﬁc endeavors is the concept of \n            uniﬁcation: describing several disparate phenomena as differ-\n            ent aspects of a single concept. Rather than thinking in terms \n            of quarter-circles, half-circles, and full-circles for different kinds \n            of ﬂaps, we can unify our description of these different types \n            of ﬂaps by realizing that the quarter-circles, half-circles, and \n            full circles are all formed by the overlap of a full circle with \n            the square, as shown in Figure 9.6. The common property of all \n            three types of ﬂaps is that the paper for each can be represented \n            by a circle with the center of the circle lying somewhere within \n            the square. With middle ﬂaps, the circle lies wholly within the \n            square. However, with corner and edge ﬂaps, part of the circle \n            laps over the edge of the square. The center of the circle still \n            has to lie within the square, though. Thus, any type of ﬂap can \n            be represented by a full circle whose center, which corresponds \n            to the tip of the ﬂap, lies somewhere within the square.\n\n\n            Figure 9.6. \n            All three types of ﬂaps can be represented by a circle if we allow the \n            circle to overlap the edges of the square.\n\n            9.2. Overlaps\n            You might have noticed an interesting feature of the circle \n            pattern for any base; the circles corresponding to individual \n            ﬂaps touch, but do not overlap. In tiled crease patterns, this \n            is, of course, by design; no circles overlapped within the tiles \n            we started with, so no circles will overlap in the assembled \n            crease pattern.\n                However, in any base, if we represent distinct ﬂaps by \n            circles, they can never overlap, whether the crease pattern was \n            constructed from a tiling or not. A moment’s reﬂection will reveal \n            why this must be so. Each circle encloses the paper used in a \n\n                                                                                                     295\n                                                                  Chapter 9: Circle Packing\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b85"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 313,
  "content": "            in the Five-Sided Square, the four edge ﬂaps and the corner \n            ﬂap go in the same direction and can easily be made to appear \n            identical. (This was the original rationale for Montroll’s design; \n            the shape on the far right resembles a Preliminary Fold with \n            one extra ﬂap). This is an aesthetic tradeoff between efﬁciency \n            and effect; it’s worth a slight reduction in size to obtain the \n            similarity in appearance for all ﬁve ﬂaps.\n                Efﬁcient circle packings also tend to require simpler tiles. \n            At the moment, the only tiles we have at our disposal are tri-\n            angles, rectangles, and parallelograms. Thus, it is most desir-\n            able to use the circles themselves to create a packing in which \n            the induced tiles are triangles or quadrilaterals. This object is \n            accomplished by maximizing the number of points of contact \n            among circles; on average, the more circles touched by each \n            circle—a number called the valency of the circle—the lower the \n            number of sides in the surrounding polygons.\n                You can see this relationship at work in the three regular \n            circle packings in Figure 9.9. In the triangular packing, each \n            circle touches six others and the polygons are all triangles; in the \n            square packing, each circle touches four others and the polygons \n            are all quadrilaterals; and in the hexagonal packing, each circle \n            touches only three others and the polygons are hexagons.\n\n\n            Figure 9.9. \n            Circle packings of varying density and valency.\n\n                As the number of neighbors declines, the amount of empty \n            space around the circles rises. The most space-efﬁcient pack-\n            ings are characterized by circles with many neighbors, which \n            also give polygons with relatively few sides.\n\n            9.5. The Circle Jig\n            A useful conceptual model for ﬁnding an efﬁcient base using \n            circle packing is: Represent each point by a circle whose center \n\n                                                                                                     301\n                                                                  Chapter 9: Circle Packing\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b86"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 475,
  "content": "             Figure 12.4. \n             Raymond K. McLain’s original instructions for Mooser’s Train.\n\n                                                                                                                 463\n                                                                          Chapter 12: Box Pleating\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b87"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 312,
  "content": "                                         unit is equivalent to 10 inches or 25 cm.) For the crease pattern \n                                         on the left in Figure 9.7, if all of the circles are the same size, \n                                         it is fairly easy to work out that the radius of each circle, and \n                                         thus the length of each of the ﬁve ﬂaps in the base, is\n                                                            1\n                                                        r =    ≈ 0.354.                       (9–1)\n                                                             2\n                                             For the pattern on the right, it requires some algebra to \n                                         calculate, but you will ﬁnd that the circle radius is\n\n                                                               1    1\n                                                        r  1               ≈+−+= 324.02 .     (9–2)\n                                                               2    2\n\n                                             Since 0.324 is smaller than 0.354, the radius of each circle \n                                         in the second pattern is about 10% smaller than in the one on \n                                         the left. Since the radius of the circle is equal to the length of \n                                         the ﬂap, the ﬂaps in a base folded from the pattern on the right \n                                         are about 10% shorter than ﬂaps folded from the pattern on \n                                         the left. Thus, a ﬁve-ﬂap base made from the pattern on the \n                                         left will be slightly larger and slightly more efﬁcient than the \n                                         pattern made from the one on the right.\n                                             These two circle patterns are relatively simple. By con-\n                                         necting the centers of the circles with creases and adding a \n                                         few more creases, you can collapse the model into a base that \n                                         has the desired number of ﬂaps. As it turns out, there already \n                                         exist in the origami literature bases that correspond to both \n                                         circle patterns, shown in Figure 9.8. The pattern on the left is \n                                         the circle pattern for the Frog Base, while the one on the right \n                                         is the circle pattern for John Montroll’s Five-Sided Square.\n\n\n                                         Figure 9.8. \n                                         Full crease patterns corresponding to the two circle patterns. \n                                         Left: Frog Base. \n                                         Right: Montroll’s Five-Sided Square.\n\n                                             There is more than just a size difference between these \n                                         two bases; there is also a qualitative difference between them. \n                                         In the Frog Base, the ﬁfth ﬂap is a thick middle ﬂap and points \n                                         in the opposite direction from the four corner ﬂaps; whereas \n\n     300\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b88"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 474,
  "content": "                                    Mooser’s Train Crease Pattern & Order of Attack\n\n                                                                                 Worked out by R. K. McLain,\n                                                                                 March 20, 1967\n                                                                                 Hindman, KY 41822\n\n                                                                                 Begin with (2) x (1) square.\n                                                                                 Divide (2) into 32 squares.\n                                                                                 Divide (1) into 16 squares.\n                                                                                 Remove 4 squares the long way.\n                                                                                 You now have 32 x 12 squares.\n                                                                                 Mtn. fold under 1 square the long way\n                                                                                 on each side.\n                                                                                 Now make the crease pattern as\n                                                                                 indicated. Each box car requires 10\n                                                                                 squares long and 12 squares wide. The\n                                                                                 locomotive requires 12 x 12.\n                                                                                 Now mould the model much as you\n                                                                                 would clay.\n                                                                                 Several things must give at once so\n                                                                                 that a firm crease pattern without\n                                                                                 extraneous creases is helpful. Be patient\n                                                                                 & gentle.\n                                                                                        When moulding is\n                                                                                        completed, squash & partially\n                                                                                        petal fold the wheels & turn\n                                                                                        under the end points a little.\n                                                                                        (Make catcher with A & A′.)\n                                                                                 Dent inwards the platform between\n                                                                                 cars, lock the end of the last car by\n                                                                                 valley folding inwards the platform\n                                                                                 part, lock the underside by folding\n                                                                                 inward the extra material between &\n                                                                                 behind the wheels.\n                                                                                 Bend the locomotive’s snout upwards,\n                                                                                 penetrate (with a cut) it inwards into\n                                                                                 the boiler & bring it back outwards\n                                                                                 (with another cut) (and a valley fold)\n                                                                                 as a smoke stack. If you succeed, you\n                                                                                 get the prize for diligence! I’ll take\n                                                                                 one too! This surely is a clever model\n                                                                                 & points the way to future 3D origami.\n                                                                                 Perhaps the crease pattern could be\n                                                                                 scratched onto paper (making valley\n                                                                                 folds only on both sides of the paper)\n                                                                                 with a knife denting but not cutting\n                                                                                 through.\n                          AA′\n\n                                             Figure 12.3. \n                                             Folding instructions for Mooser’s Train.\n\n     462\n                         Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b89"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 173,
  "content": "./origami_dataset_dev/Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li/page173_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b8a"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 460,
  "content": "             15. Fold a group of edges over to 16. Fold a rabbit ear using the existing 17. Fold another rabbit ear using\n             the right. Repeat behind.         creases. The left side of the model will the existing creases. The left side\n                                               not lie flat. Repeat behind.        of the model will still not lie flat.\n                                                                                   Repeat behind.\n\n\n              18. Squash-fold, using the existing     19. Reverse-fold on the existing   20. Fold one flap to the left.\n              creases. Repeat behind.                 creases. Repeat behind.            Repeat behind.\n\n\n                 21. Fold and unfold.     22. Fold and unfold through a    23. Squash-fold the layer over to the right.\n                 Repeat behind.           single layer of paper. Repeat    Note that the reference point for the nearly\n                                          behind.                          hidden valley fold is the intersection of two\n                                                                           hidden creases. Repeat behind.\n\n                                                                                                                 449\n                                                                  Folding Instructions:Chapter 11: Roosevelt Tree Theory Elk\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b8b"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 306,
  "content": "                                                                          L               L\n\n\n                                         Figure 9.4. \n                                         Folding an edge ﬂap of length L from a square.\n\n                                         L and then unfold to the original square, you see that an edge \n                                         ﬂap of length L consumes a half-circle of paper, and again, the \n                                         radius of the circle is L, the length of the ﬂap.\n                                             Similarly, we can make a ﬂap from some region in the \n                                         interior of the paper (it doesn’t have to be the very middle, of \n                                         course). Figure 9.5 shows how such a ﬂap is made. When you \n                                         unfold the paper, you see that a middle ﬂap requires a full \n                                         circle of paper, and once again, the radius of the circle is the \n                                         length of the ﬂap.\n\n\n                                                                           L              L\n\n\n                                         Figure 9.5. \n                                         Folding a middle ﬂap of length L from a square.\n\n                                             The amount of paper consumed doesn’t depend on the \n                                         angle of the tip of the ﬂap, only its length and location. So any \n                                         ﬂap in any model consumes a quarter, half, or full circle of \n                                         paper, depending upon whether it is a corner ﬂap, edge ﬂap, \n                                         or middle ﬂap.\n                                             This relationship doesn’t depend on whether the base was \n                                         constructed from tiles; it doesn’t depend on whether the base \n                                         is a uniaxial base. It is a property of any ﬂap that comes to a \n                                         point in any origami model whatsoever. This relationship gives \n                                         us a new set of tools for designing origami bases that permits \n                                         a more direct approach than the assembly of preexisting tiles; \n                                         we can represent each ﬂap by a circle and work from the pat-\n                                         tern of circles directly.\n\n     294\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b8c"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 448,
  "content": "                                                    Folding Instructions\n\n\n                                       Alamo Stallion\n\n\n                                       Roosevelt Elk\n\n\n                                                                                           437\n                                                       ChapterChapter 11: Folding 11:  TreeInstructions Theory\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b8d"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 4,
  "content": "./origami_dataset_dev/Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li/page004_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b8e"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 676,
  "content": "                                             So what if we want our ﬂaps to be wider than the fundamen-\n                                         tal width quantization? We can, as with box pleating, introduce \n                                         level shifters. Recall that with box pleating, the symmetric level \n                                         shifters came in two varieties, one for each of the two angles that \n                                         ridge creases could make with incident axis-parallel creases (45° \n                                         and 90°). With hex pleating, there are three possible angles, and \n                                         so there must be three different types of symmetric level shifter. \n                                         All three are shown in Figure 14.41. \n\n\n            Figure 14.41. \n            Level-shifting gadgets for hex \n            pleating. Each gadget shifts an \n            axial contour (green) to axial+2 \n            (violet) for a different angle of \n            incidence between the axis-\n            parallel creases and the initial \n            ridge crease.\n\n                                             These are the symmetric gadgets, but there are, of course, \n                                         asymmetric ones, as well; a few are shown in Figure 14.42. \n                                         Note that the ﬁrst asymmetric shifter follows the 30° sym-\n                                         metry of the grid, in contrast to its symmetric counterpart in \n                                         Figure 14.41.\n                                             And, of course, there are more complex level-shifting gad-\n                                         gets that work near junctions of ridge creases.\n\n\n            Figure 14.42. \n            Asymmetric versions of the \n            level-shifting gadgets for hex \n            pleating.\n\n     664\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b8f"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 110,
  "content": "                                         other, but you could only travel along the paper—you couldn’t \n                                         jump across the gap. Imagine a microscopic bookworm that \n                                         travels within a sheet of paper—that is, he crawls between the \n                                         two sides of the sheet but never ventures to either surface. (He \n                                         is a very shy bookworm.) How far must he crawl to get from the \n                                         tip of one ﬂap to the tip of the other? Even without knowing \n                                         anything about the folded structure of the two ﬂaps, we can \n                                         say for certain that the bookworm must travel from the tip of \n                                         one ﬂap down to its baseline, then back out to the tip of the \n                                         other ﬂap (at a minimum) because there’s no shorter path that \n                                         doesn’t require the bookworm to leave the paper, as shown in \n                                         Figure 5.6. So the bookworm must travel the sum of the lengths \n                                         of both ﬂaps. (And since it may not be possible to go from the \n                                         baseline of one ﬂap directly to the other ﬂap via the interior of \n                                         the paper, the journey could be even longer.)\n\n\n            Figure 5.6. \n            Path followed by an origami \n            bookworm.\n\n                                             Suppose, for the moment, that our bookworm were further \n                                         restricted to traveling only along folded or raw edges. Then \n                                         there is only a small number of paths he could travel along. \n                                         The two shortest paths, labeled A and B, are shown in Figure \n                                         5.7 by dashed lines (in some cases, he is traveling along hidden \n                                         layers of paper). A third path, labeled C, is shown that does \n                                         not follow existing folds.\n                                             It helps to distinguish the different paths by simultaneous-\n                                         ly examining the crease pattern and the model with the paths \n                                         drawn on each. These are shown together in Figure 5.7.\n                                             Of course, paths A and B are only two of the possible paths \n                                         the bookworm could take, but these are the two shortest paths \n                                         that travel along folded or raw edges of the paper. Neither, \n                                         however, is the shortest possible path from the bookworm’s \n                                         point of view, which is the same whether the paper is folded \n                                         or unfolded. That shortest path is easy to draw on the crease \n                                         pattern; it’s a straight line. It’s a bit harder to work out what \n                                         it is on the folded model, lying as it does in hidden layers of \n                                         paper, but it is shown as path C in Figure 5.7.\n\n      98\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b90"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 104,
  "content": "",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b91"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 662,
  "content": "                                         Figure 14.26. \n                                         Two versions of an extended Pythagorean stretch.\n\n\n                                                               12 012\n                                                               1/2 1/2\n\n\n                                         Figure 14.27. \n                                         Crease pattern, base, and folded model of a Scarab Beetle that uses \n                                         four extended Pythagorean stretches. \n\n                                             As you look through the ﬁgures of the various Pythagorean \n                                         stretches in this section, you might notice that I have drawn \n                                         in the hinge creases that divide the two touching ﬂaps. These \n                                         are the actual divisions between the hinge polygons for each \n                                         ﬂap and so give rise to hinge polygons that are not rectilinear. \n                                         Although we have constructed the ridge creases in these Py-\n\n     650\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b92"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 174,
  "content": "./origami_dataset_dev/Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li/page174_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b93"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 138,
  "content": "        32. Crimp the left point upward; 33. Fold the flap up 34. Fold the flap back to   35. Unfold to step 33.\n        note that the lower creases are along the folded edge. the left along a crease\n        perpendicular to the edge.                            perpendicular to the edge.\n\n\n                36. Reverse-fold four      37. Crimp the left flap upward on the    38. Mountain-fold the\n                corners upward.            existing creases; at the same time, push inside flap as far down as\n                                           down some paper from the underside of    possible.\n                                           the flap to the right of the crimp.\n\n\n             39. Reverse-fold the corner.       40. Unwrap a single layer.         41. Reverse-fold the corner.\n\n\n                42. Reverse-fold two             43. Reverse-fold two           44. Reverse-fold and squash the near\n                corners to align with the        corners to align with the      flap up and over to the left, forming\n                folded edges.                    folded edges.                  a long gusset in the layer behind the\n                                                                                flap. Repeat behind.\n\n     126\n                         Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b94"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 727,
  "content": "./origami_dataset_dev/Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li/page727_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b95"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 689,
  "content": "                                                                       Figure 14.56. \n                                                                       Circle and hinge river packing \n                                                                       for a comb. The stick ﬁgure for \n                                                                       the comb is shown at the bottom. \n                                                                       The x-ray line through the circle \n                                                                       centers deﬁnes the left boundary \n                                                                       of the minimum paper needed to \n                        boundaryboundary                               realize both the main shaft and \n                                              comb                     the ﬁlaments of the comb.\n\n            the “ﬁlaments” were, in fact, squared-off ﬂaps, much wider \n            than their lengths. But we could also use this technique to \n            make sharp-pointed ﬁlaments. To minimize the paper going \n            into each ﬁlament, we would likely want to orient the boundary \n            line of the comb along the edge of the paper. (Although this \n            certainly isn’t necessary; one could use this technique to create \n            rows of middle ﬂaps, and indeed, you can see something very \n            much like this in the Centipede and Pill Bug of Chapter 8.)\n                Now we can start thinking about the positioning of the \n            axial contours. If all of the ﬁlaments lie at the same elevation, \n            then we’d want them all to have axial contours emanating from \n            them, heading off somewhere into the interior of the paper. \n            And we’d need some type of off-axis contour (say, axial+1) \n            spaced evenly between those axial contours. In order to avoid \n            additional bouncing of those contours, we’d want the axial+1 \n            contours to terminate on the junctions between adjacent ridge \n            creases. This leads to the geometry shown in Figure 14.57.\n                The entire pattern is tilted with respect to the paper edge \n            by an angle , which can be continuously varied. This angle \n            affects the ﬁlament-to-gap ratio; if we deﬁne this ratio as f, \n            i.e., f ≡ l/g, then you can show that\n                                      1\n                       f            =  ()cscα  −   1   ,     (14–16)\n                                      2\n\n                                                                                                     677\n                                                               Chapter 14: Polygon Packing \n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b96"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 702,
  "content": "             Water Strider\n\n\n             Mark the edges of a 36x36 square grid. Use the edge\n             markings to locate interior vertices. You don’t need\n             to pre-crease the folds outside of the perfect\n             Pythagorean stretches; just fold the corners underneath\n             after precreasing the rest.\n\n\n     690\n                         Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b97"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 64,
  "content": "",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b98"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 70,
  "content": "                                         to make use of the extra ﬂaps. The procedure of folding  \n                                         four corners to the center is called blintzing, named after the \n                                         blintz pastry in which the four corners of a square piece of \n                                         dough are folded to the center. For many years blintzing a base \n                                         has been recognized as a straightforward way of increasing the \n                                         number of ﬂaps in a base.\n                                             Yet another named base system had been developed \n                                         in Japan by Michio Uchiyama in the 1930s and thereafter. \n                                         His system, carried on by his son Kosho, recognized two broad \n                                         families of bases, one characterized by diagonal or radiat-\n                                         ing folds (type A) and the other by predominantly rectilinear \n                                         folds (type B). Figures 4.4 and 4.5 show both families of bases. \n                                         I have labeled them with Uchiyama’s original numbering \n                                         but rearranged them to better illustrate the relationships \n                                         between bases. \n                                             Note that Uchiyama only gives the major creases for \n                                         each base and does not specify the mountain/valley assign-\n                                         ment; to make the shape ﬂat, you will have to add additional \n                                         creases on some of the patterns and work out the assignment \n                                         for yourself.\n                                             Beginning with the development of subject-specific \n                                         bases in the 1970s (Animal Base, Flying Bird Base, \n                                         Human Figure Base), the variety of bases quickly prolifer-\n                                         ated to the point that naming every base began to seem a bit \n                                         silly (the Great Crested Flycatcher Base). The net result \n                                         was that most names were left by the wayside. Different \n                                         authorities recognize different groups of bases as the standard \n                                         set, but the four Classic Bases plus the Preliminary Fold, \n                                         Waterbomb Base, Cupboard Base and Windmill Base are \n                                         common to most.\n\n                                         4.3. Relationships between Bases\n                                         The standard bases are not wholly independent; some can be \n                                         derived from others, as was suggested by Uchiyama’s clas-\n                                         siﬁcation system and is illustrated more explicitly in Figure \n                                         4.6. Arrows indicate derivation. The square can be folded into \n                                         a Cupboard Base, which can be further transformed into a \n                                         Windmill Base. Similarly, the Kite Base is but a way station \n                                         on the path to a Fish Base. The Preliminary Fold and Water-\n                                         bomb Base are the same thing—one is just the inverse of the \n                                         other—but while the Preliminary Fold alone can be turned \n                                         directly into a Bird Base, either the Waterbomb Base or the \n                                         Preliminary Fold can be used to make a Frog Base.\n                                             But the four Classic Bases—Kite, Fish, Bird, and Frog—\n                                         share a deeper similarity that is only evident when one examines \n\n      58\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b99"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 716,
  "content": "                                         Figure 15.5. \n                                         Crease pattern, base, and folded model of the Butterﬂy.\n\n                                         ﬂap on the line of symmetry for the thorax. In this pattern, three \n                                         of the ﬂaps fall on the line of symmetry, which means that two \n                                         of them have to be manipulated to lie side-by-side in the folded \n                                         model. Fortunately, the layers allow this rearrangement.\n                                             In retrospect, creating four separate ﬂaps for the wings was \n                                         probably representational overkill. The hazard of attempting \n                                         to create too much in the way of appendages is that inevitably, \n                                         some other aspect of the model is compromised. It does no good \n                                         artistically to get the point count correct if the result is mis-\n                                         shapen, clunky, or lifeless. In subsequent butterﬂy designs, I \n                                         have gone back to representing both fore and aft wings by a \n                                         single ﬂap. Even with that simpliﬁcation, the case can still be \n                                         argued that adding legs is an aesthetic mistake. Because they \n                                         are almost never as thin as a real butterﬂy’s legs (which are \n                                         almost impossible to see without an extreme close-up or still \n                                         photo), explicitly created legs are frequently more of a distrac-\n                                         tion than an enhancement to the model. But perhaps this is \n                                         not an inherent limitation of the subject, merely a statement \n                                         that an accurately representational, yet artistically graceful, \n                                         butterﬂy origami ﬁgure has yet to be designed. Perhaps by ap-\n                                         plying some of the techniques I’ve outlined here, yours could \n                                         be the ﬁrst.\n                                             Yet another example of allocating extra paper to widen \n                                         ﬂaps is illustrated in the Dragonﬂy design in Figure 15.6. The \n                                         construction of the abdomen and legs is classic circle packing. \n\n     704\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b9a"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 58,
  "content": "                                                                              D                                D\n\n\n                                                               ABAB\n\n\n                                                                              C                                C\n                                   1. Begin with the colored        2. Fold edges AC and BC in       3. Fold rabbit ears\n                                   side up. Fold and unfold         to lie along the center line     from corners A and B.\n                                   along both diagonals. Turn       DC and unfold. Repeat with\n                                   the paper over.                  edges AD and BD.\n\n                                            D                                D\n                                                                                                         EF\n\n\n                                                                                                              D\n                                                                                                        AB\n                                                                         AB\n                                           AB\n\n                                            C                                C                                C\n                                  4. Fold corners A and B to    5. Fold corner D down so that it  6. Fold corners A and B in half.\n                                  the outside edges.            lies on an imaginary line running Fold corners E and F down (the\n                                                                between points A and B.           exact amount isn’t critical).\n\n                                          EF                          GH                                GH\n\n                                             D\n                                      AB                                B           A                    B           A\n\n\n                                                                                                               C\n\n                                             C                                C\n                                   7. Turn the model                8. Pleat the front flap upward.  9. Pleat the sides of the\n                                   over.                            The mountain fold will run       head to form ears.\n                                                                    from corner G to corner H.\n\n\n                                                                   10. Finished Elephant’s Head.\n                                                     Figure 3.4. \n                                                     Folding sequence for the more complex Elephant’s Head.\n\n        46\n                              Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b9b"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 266,
  "content": "                                             Figure 8.15. \n                                             Four generic form tiles decorated with circular arcs and representative \n                                             folded forms.\n\n\n                                                              +=\n\n\n                                                              +=\n             Figure 8.16. \n             Mating two tiles so that the \n             circles align insures that the \n             folded forms align as well.\n\n     254\n                         Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b9c"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 500,
  "content": "                                         Figure 12.30. \n                                         Crease pattern and folded form for a colored 2-unit-long ﬂap.\n\n\n                                         Figure 12.31. \n                                         Crease pattern and folded form of two 1-unit ﬂaps grafted together.\n\n                                             This is how Mooser was able to create 14 wheels at speci-\n                                         ﬁed locations along his train. We can easily string arbitrary \n                                         numbers of ﬂaps out along the length of a base using this \n                                         technique.\n                                             But we are not restricted to connecting ﬂaps that are all \n                                         the same size. Longer ﬂaps have more vertical pleats, true. \n                                         But we can easily add pleats to shorter ﬂaps, simply by folding \n                                         the smaller ﬂaps, creating their horizontal pleats, and then \n                                         pleating through the entire bundle of layers as needed, until \n\n     488\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b9d"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 514,
  "content": "                                         consumed. Great bends are possible by making deeper pleats \n                                         to start with, and a wide variety of forms are possible; British \n                                         artist Paul Jackson has created a wide variety of bowls and \n                                         abstract shapes using such stretched pleats.\n                                             It is instructive to pull apart one of these forms to exam-\n                                         ine the crease pattern. The crease pattern for the structure of \n                                         Figure 12.43 is shown in Figure 12.44.\n\n\n                                         Figure 12.44. \n                                         Crease pattern of a doubly pleated structure. \n                                         Left: before stretching. \n                                         Right: after stretching.\n\n                                             As you can see, the angles of the valley folds have changed. \n                                         They are no longer parallel; they are angled, and that is what \n                                         gives the overall curve to the structure. The crease pattern has \n                                         obvious translational symmetry; each pair of vertical columns \n                                         of panels is repeated horizontally, so that the overall form is \n                                         entirely speciﬁed by a single pair of columns. Let’s focus in on \n                                         a single column pair, as shown in Figure 12.45.\n                                             Narrowing our focus to a single column of the pleated pat-\n                                         tern lets us consider more broadly what the possibilities are for \n                                         pleated forms. This shape is nothing more than a simple strip \n                                         of paper folded in half and then crimped with angled folds. We \n                                         can turn this strip into a pleated form by making use of the \n                                         translational symmetry: the fact that the left and right sides of \n                                         the strip are superimposed in the ﬂattened folded form means \n                                         that we can, in principle, glue together multiple strips along \n                                         their edges. That is, we can graft vertical strips together. We \n                                         can do so with simple parallel crimps; we can do so with angled \n                                         crimps; but we can do so with far more complex treatments of \n                                         this vertical strip.\n\n     502\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b9e"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 272,
  "content": "            Figure 8.26. \n            Left: the finished crease \n            pattern. \n            Right: the folded base.\n\n\n                                         ﬂap will be longer than the others. There are two circles at the \n                                         bottom, separated by a river that runs across the pattern. Those \n                                         two circles will give rise to two more ﬂaps, the same length as \n                                         the upper four, but separated from them by a body; and ﬁnally, \n                                         the tiny circle at the very bottom will turn into a small ﬂap, \n                                         joined to the other two that it touches.\n                                             And indeed, with suitable crease assignment, this pat-\n                                         tern can be folded into the shape shown in Figure 8.26, which \n                                         matches every element of the structural description.\n                                             This structure is not just a contrived example; I have used \n                                         it to realize a Pegasus. The folded model and its crease pattern \n                                         is shown in Figure 8.27. Folding instructions are given at the \n                                         end of the chapter.\n                                             If you compare the crease patterns in Figures 8.26 and 8.27, \n                                         you will see that although the overall structure is the same, \n                                         the second crease pattern has many more creases within the \n                                         individual tiles. It is useful, in fact, to examine the various tiles \n                                         because they are illustrative of some of the variations you can \n                                         ﬁnd within tiles.\n                                             First, let’s look at the rectangular tile that forms the body \n                                         and four legs of the animal. The two forms—the basic crease \n                                         pattern, and the form in the folded model—are shown in Fig-\n                                         ure 8.28.\n                                             In the two tile crease patterns, the circles and rivers have \n                                         the same radii and width, respectively, and the ﬂaps have the \n                                         same lengths in the folded forms. The only difference lies in \n                                         the widths of the folded ﬂaps and the number of layers in each \n                                         ﬂap. The narrower ﬂaps necessarily have more layers.\n\n     260\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0b9f"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 528,
  "content": "                                                                            19. Fold the corners upward\n                                                                            on the existing creases.\n\n\n           17. Add some horizontal          18. Fold the bottom flap\n           valley folds.                    upward on the existing crease.\n\n\n     516\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ba0"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 299,
  "content": "                56. Reshuffle the layers of       57. Reverse-fold the             58. Swivel the tail\n                the body and legs so that they    centermost layer (which was      downward.\n                alternate.                        freed in the previous step).\n\n\n                59. Pull out some loose            60. Reverse-fold the           61. Mountain-fold a double\n                paper. Repeat behind.              corner. Repeat behind.         layer of paper underneath.\n                                                                                  Repeat behind.\n\n\n                62. Mountain-fold another            63. Swing both wings           64. Fold the point down.\n                layer of paper underneath.           back to the left.              There's no exact reference\n                Repeat behind.                                                      point.\n\n                                                                                                                 287\n                                                                       Folding Instructions:Chapter 8: Pegasus Tiling\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ba1"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 448,
  "content": "./origami_dataset_dev/Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li/page448_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ba2"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 699,
  "content": "./origami_dataset_dev/Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li/page699_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ba3"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 258,
  "content": "                                         of symmetry, we ﬁnd that the raw edges of the ﬂaps don’t lie \n                                         along the axis and the hinges aren’t perpendicular, so it’s not \n                                         a uniaxial base. However, if we rotate the base by 90°, we can \n                                         re-draw the axis along the raw edges, the hinges are perpen-\n                                         dicular to the axis, and it is thereby revealed to be a uniaxial \n                                         base in this new orientation, as shown in Figure 8.4.\n                                             Uniaxial bases lend themselves to strip grafting because \n                                         the alignment of many folded edges along the axis of an exist-\n                                         ing base makes the creases along those edges natural candi-\n                                         dates for cutting to insert strip grafts into the crease pattern. \n                                         The creases that lie along the axis in the base form a special \n                                         set; they are called the axial creases in the crease pattern. In \n                                         Figure 8.5 I have colored the axial creases green (whether \n                                         mountain, valley, or unfolded) in the crease patterns for the \n                                         six bases. I have also similarly colored those portions of the \n                                         raw edge of the paper that lie along the axis.\n\n\n                                         Figure 8.5. \n                                         The axial creases and axial portions of the paper edge in the six uni-\n                                         axial base crease patterns.\n\n                                             Axial creases are natural candidates for cutting and insert-\n                                         ing strip grafts, in part because in uniaxial bases every ﬂap has \n                                         at least one axial crease (or an axial raw edge) running to its \n\n     246\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ba4"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 711,
  "content": "./origami_dataset_dev/Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li/page711_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ba5"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 502,
  "content": "                                         the number of vertical pleats in the shorter ﬂap structures \n                                         equals the number of pleats needed by the longest ﬂap in \n                                         the entire assembly. In fact, given sufﬁcient paper, we can \n                                         create any string of any number of ﬂaps of any length we \n                                         wish. Figure 12.32 shows an example of ﬁve ﬂaps, whose \n                                         lengths run 1-2-3-2-1, each spaced two units from the next. \n                                         I encourage you to try folding this, which will help develop \n                                         a physical intuition for how to assemble these types of struc-\n                                         ture from their crease patterns. Sequential folding sequences \n                                         can be elusive.\n                                             In this pattern, I put 2-unit gaps between the ﬂaps for \n                                         clarity, to make it easy to resolve the individual ﬂap crease \n                                         patterns. As further practice, you might try folding this \n                                         same structure, but with 1-unit gaps, or no gaps—all ﬂaps \n                                         emanating from the same point.\n\n                                         12.4. Corner and Middle Flaps\n                                         Thus far, we’ve seen how to create edge ﬂaps using box pleat-\n                                         ing, and we can put any number of ﬂaps of any length, at any \n                                         spacing, around the edges of the paper. That is provided, of \n                                         course, that there is enough paper available. If we have allowed \n                                         ourselves to use arbitrary rectangles (a la Mooser’s Train), then \n                                         we can, effectively, scale up our rectangle to accommodate all \n                                         of the ﬂaps that we need.\n                                             But are we restricted to only creating ﬂaps around the \n                                         edges of the paper? No, as it turns out. As we have seen in \n                                         previous chapters, there are corner, edge, and middle ﬂaps. \n                                         Thus far, we’ve only looked at box-pleated edge ﬂaps: but \n                                         surely there are box-pleated analogs of corner and middle \n                                         ﬂaps. And indeed there are.\n                                             A corner ﬂap is easily created by simply splitting one \n                                         of the edge ﬂaps that we’ve already constructed along the \n                                         obvious line of symmetry of the ﬂap. Figure 12.33 shows the \n                                         results for 1-unit, 2-unit, and 3-unit ﬂaps. \n                                             As with the edge ﬂaps, the color changes depending on \n                                         whether the length of the ﬂap is odd or even. And, as with \n                                         the edge ﬂaps, one can add additional strips to the top and/or \n                                         side to change the color of the ﬂap, to add layers, or simply \n                                         to make the parity of the alternating mountain/valley folds \n                                         match the parity of the folds to which the ﬂap is grafted.\n                                             What about middle ﬂaps, though? Can we create box-\n                                         pleated middle ﬂaps? We can indeed. A corner ﬂap is half of \n                                         an edge ﬂap; an edge ﬂap, then, could be considered half of \n                                         a middle ﬂap, and so we could create the crease pattern by \n                                         joining two middle ﬂaps along their raw edges.\n\n     490\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ba6"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 264,
  "content": "                     (a)                           (b)                                (c)\n\n                                         Figure 8.12. \n                                         (a) The rectangle tile from the strip graft. \n                                         (b) A wider rectangle. \n                                         (c) The limiting case of an equilateral rectangle, i.e., a square.\n\n                                         composed of rectangles and triangles. The triangles are famil-\n                                         iar; the rectangles are new. Rectangles, too, can be used as tiles \n                                         from which crease patterns may be assembled. Figure 8.12 \n                                         shows the rectangular tile from the strip graft; it, too, can be \n                                         folded so that its perimeter lies along a common line. Thus, a \n                                         rectangle can also serve as an axial polygon.\n                                             Just as we saw that creases can be constructed inside of \n                                         any triangle to make an axial polygon, so too can creases be \n                                         constructed within any rectangle, no matter what its aspect \n                                         ratio. Figure 8.12 shows creases for three different aspect \n                                         ratios, including the limiting case of a square—which gives \n                                         rise to the uniaxial orientation of the Waterbomb Base as its \n                                         folded form.\n                                             As we saw for the triangle, it is possible to orient the ﬂaps \n                                         of a tile in several different ways. Figure 8.13 shows several \n\n\n                                         Figure 8.13. \n                                         Three different crease patterns and arrangements of ﬂaps for a \n                                         rectangular tile.\n\n     252\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ba7"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 270,
  "content": "                                                               body\n\n                                                                                              river\n\n                                         Figure 8.22. \n                                         A body can be inserted into a triangular tile by representing it as a \n                                         partial annulus.\n\n                                             So, for example, the rectangular tile and two divided isos-\n                                         celes triangle tiles can now be mated, one on either side, as \n                                         shown in Figure 8.23. We enforce the mating of the circles on \n                                         both sides, which constrains the aspect ratio of the rectangle \n                                         relative to that of the two triangles.\n\n\n            Figure 8.23. \n            Mating of two isosceles triangle \n            tiles with a rectangular tile.\n\n                                             We must enforce mating of both the circles and the rivers, \n                                         as shown in Figure 8.23. And now, perhaps, you see the reason \n                                         for the name river: in a large crease pattern, rivers are regions \n                                         of constant width that meander among the circles like a river \n                                         meandering among hills.\n                                             Now, before we even try folding this crease pattern, we can \n                                         determine what the resulting shape will be simply by examin-\n                                         ing the circles and rivers. There are six distinct segments of \n                                         circles; each circle will create a distinct ﬂap. The four circles \n                                         at the top are separated from the two at the bottom by a river \n                                         running across the pattern; consequently, the folded shape \n                                         should have six ﬂaps, with four at one end separated from two \n                                         at the other by a body.\n                                             And indeed, if we fold this crease pattern, assigning crease \n                                         directions as shown in Figure 8.24, that is exactly the shape \n                                         we obtain.\n                                             This crease pattern isn’t a square, of course. But we can \n                                         make a square pattern by packing these tiles into a square, as \n                                         shown in Figure 8.25. There are two possible orientations; the \n\n     258\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ba8"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 516,
  "content": "            Figure 12.47. \n            My Organist combines box-\n            pleated ﬂaps (for the human), \n            stretched pleats (for the skirt, \n            keyboard, and pedals), and \n            boxes (for the seat and main \n            body).\n\n                                             Both reverse-folded pleats as in Figure 12.46 and crimped \n                                         pleats as in Figures 12.41–45 can be stretched horizontally \n                                         into circular form, as we did with the dollar-bill coaster. This \n                                         treatment has been the basis of a wide variety of decorative \n                                         forms. You can see examples in the Trattato delle piegature \n                                         plate in Figure 12.39; it is the basis of a magic routine called \n                                         the Troublewit, and numerous origami and paper artists have \n                                         incorporated these stretched pleated forms into their own de-\n                                         signs. Of course, these concepts can serve entirely alone as the \n                                         basis of an origami artwork, but they have a special connection \n                                         to box pleating. Since the basic crease network here consists \n                                         of alternating parallel pleats, such pleated forms can easily be \n                                         integrated into larger constructions that include box-pleated \n                                         ﬂaps and box-like shapes. All three usages of pleats are in my \n                                         Organist, shown in Figure 12.47, whose instructions are given \n                                         at the end of this chapter.\n\n                                         12.6. Elias Stretch\n                                         In box-pleated models, the pleats can and do run in both di-\n                                         rections, vertically and horizontally. Flaps are deﬁned by the \n                                         diagonal folds, which, like the pleats, alternate from section \n                                         to section. Often, though, there is a dominant direction to the \n                                         pleats; more run vertically than horizontally or vice versa. \n                                         When one direction dominates, a natural way to develop a \n                                         folding sequence is to fold all of the pleats in the dominant \n                                         direction.\n\n     504\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ba9"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 99,
  "content": "             Baby\n\n\n             1. Fold the paper in half\n             and unfold.\n\n\n             2. Fold the top left corner           3. Fold the paper in half         4. Fold the right side\n             down to touch the horizontal          on the existing crease.           over to the left, making\n             crease; make a pinch along the                                          the crease hit the edge at\n             top edge and unfold.                                                    the same place as the\n                                                                                     mark.\n\n\n                 5. Squash-fold both             6. Crease the angle bisectors.  7. Fold the left flap over along a\n                 flaps symmetrically.                                            vertical crease that runs through the\n                                                                                 intersection of the horizontal edge\n                                                                                 with the crease you just made.\n\n                                                                                                                  87\n                                                                       ChapterFolding 4: Instructions: Traditional  BasesBaby\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0baa"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 728,
  "content": "",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0bab"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 66,
  "content": "                                         over by scores of origami designers for decades, still have \n                                         some surprising life in them. While they may seem like unique \n                                         constructions, the traditional origami bases are actually \n                                         specific embodiments of quite broad and general design \n                                         principles. By thoroughly understanding the traditional bases, \n                                         we are prepared to understand the deeper principles of origami \n                                         design.\n\n                                         4.1. The Classic Bases\n                                         So what, exactly, are the standard bases of the origami \n                                         repertoire? Now, it must be admitted that any labeling scheme \n                                         that dubs certain structures “the standard bases” is going to \n                                         be somewhat arbitrary. But there are four shapes known for \n                                         hundreds of years in Japan that are the basis of several tra-\n                                         ditional models. These shapes have a particularly elegant \n                                         relationship with one another that takes on a special sig-\n                                         niﬁcance in origami design. They are often called the four \n                                         Classic Bases of origami and are named for the most famous \n                                         models that can be folded from them: the Kite, Fish, Bird, \n                                         and Frog Base.\n                                             Perhaps not surprisingly, in many cases, more of the \n                                         structure of an origami model is evident in the crease pattern \n                                         than in the folded base. For one thing, in the crease pattern, \n                                         all parts of the paper are visible, while in the folded model \n                                         only the outermost layers are visible—perhaps 90% or more \n                                         of them are hidden. Furthermore, certain structures appear \n                                         over and over in a crease pattern, which you can recognize \n                                         as features of the ﬁnished model. (Do a lot of creases come \n                                         together at a single point? That point probably becomes the \n                                         tip of a ﬂap of the model.) With practice, you can learn to read \n                                         the structure of a model in the crease pattern as if it were \n                                         the entire folding sequence. The crease patterns, bases, and \n                                         a representative model from each of the four Classic Bases \n                                         are shown in Figure 4.1.\n                                             We have already encountered three of these in the El-\n                                         ephant’s Head series—the Kite, Fish, and Bird Bases. (Chal-\n                                         lenge: Can you design an elephant that makes full use of the \n                                         ﬂaps of a Frog Base?) There is no precise deﬁnition of a base; \n                                         perhaps a good working deﬁnition is “a geometric form with \n                                         the same general shape and/or number of ﬂaps as the desired \n                                         subject.”\n                                             In origami, a ﬂap is a region of paper that can be manipu-\n                                         lated relatively independently of other parts of the model. In \n                                         origami design, bases supply ﬂaps; major ﬂaps on a base then \n                                         get turned into major appendages of a ﬁnal model. The Kite, \n\n      54\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0bac"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 700,
  "content": "             Longhorn Beetle\n\n\n             Mark the edges of a 24x24 square grid. Use the edge\n             markings to locate interior vertices. Note the use of\n             level shifters to selectively widen regions of the body.\n\n\n     688\n                         Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0bad"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 714,
  "content": "                                         the corners nearest the body; therefore, we need to introduce \n                                         gaps between the left and right wings (and, if we want separate \n                                         fore and aft wings, between those pairs as well).\n                                             We saw how to introduce gaps back when we were split-\n                                         ting points in Chapter 6; we added a strip graft between the \n                                         regions that needed a gap. The width of the strip was twice the \n                                         depth of the gap. We can do that here using the unassigned \n                                         paper for the graft. In Figure 15.3, I’ve added diagonal creases \n                                         that delineate the gap. I’ve also added half-circles, which do \n                                         the same. A gap can be considered to be two half-ﬂaps, joined \n                                         at their base; consequently, we can use portions of circles (and \n                                         portions of molecular crease patterns) to construct the gaps as \n                                         well as the ﬂaps.\n\n                                                                    gap\n\n                                                      wing                        wing\n\n\n                                                                  unassigned\n\n\n            Figure 15.3. \n            Between adjacent pairs of wings \n            we introduce gaps (pairs of half-\n            points). The paper required for           wing                        wing\n            the gaps is indicated by the half \n            circles.\n\n                                             In this model, I’ve made the gaps two-thirds of the length \n                                         of the side of the wing triangles. It’s possible, of course, to ex-\n                                         tend the gaps all the way to the tips of the wing triangles, but \n                                         if I extend it only partway, then I can use the corners of the \n                                         wing triangles in a different way, as four points of the cluster \n                                         of points forming body, legs, and antennae.\n                                             The head, legs, and abdomen all emanate from the same \n                                         point. To a reasonable approximation, the antennae can also be \n                                         treated as emanating from the same location, which means that \n                                         all ten ﬂaps—two antennae, six legs, abdomen and head—can \n                                         be represented by a simple circle packing. We will now require \n                                         that the circles not just ﬁt into the square, but that they not \n\n     702\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0bae"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 72,
  "content": "                  B1                   B5                  B8                  B11\n\n\n                  B2                   B6                  B9                  B12\n\n\n                  B3                   B7                  B10                 B13\n\n\n                  B4                                                           B14\n\n\n                                                                               B15\n\n           Figure 4.5. \n           Uchiyama’s B bases.\n\n      60\n                     Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0baf"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 648,
  "content": "            Figure 14.12. \n            A hinge polygon with an even \n            semiperimeter but that thwarts \n            alternating contours because of \n            the bouncing pattern.\n\n                                             We can insure that all straight skeleton vertices lie on grid \n                                         points by insuring that every side of the hinge polygon is an \n                                         even number of units in length. That is often relatively easy to \n                                         do, but this policy may force some polygons to be larger than \n                                         we’d like, resulting in longer ﬂaps, or greater usage of paper. \n                                         There may very well be places where we’d like to use short \n                                         ﬂaps—ﬂaps of length 1/2 unit turn out to be useful in adding \n                                         folded edges for very little cost. In such circumstances, the \n                                         ideal design may very well be a mixture of even-semiperimeter \n                                         polygons, odd polygons, and level shifters.\n\n                                         14.4. Overlapping Polygons\n                                             I have mentioned several times that circle packing pro-\n                                         duces the most efﬁcient uniaxial base possible. By “most ef-\n                                         ﬁcient,” I mean that the size of the base relative to the size of \n                                         the square is maximal. In very broad, general terms, efﬁciency \n                                         is a good thing; a more efﬁcient base will have fewer layers (on \n                                         average) than an inefﬁcient base, which means that the slender \n                                         parts (like legs) will be easier to make thin. \n                                             But efﬁciency is not the most important criterion in ori-\n                                         gami design by a long shot, even in the narrow slice of design \n                                         that is uniaxial base design. Perhaps even more important is \n                                         foldability: how easy is it to do the precreasing and the collapse \n                                         of the base? These two steps are the Achilles’ heel of circle-\n                                         packed bases: the crease patterns can be so irregular that the \n                                         process of precreasing becomes a grueling ordeal of measuring, \n                                         marking, folding; repeat ad nauseum. The beauty of box pleat-\n                                         ing as a strategy for base design is that the crease patterns \n                                         are so regular that only a simple grid of marks is needed, and \n                                         many, or even all, of the creases may be constructed by folding \n                                         alone. But one of the prices one pays for this foldability is ef-\n                                         ﬁciency; box-pleated designs are inherently less efﬁcient than \n\n     636\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0bb0"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 112,
  "content": "            Figure 5.8. \n            The optimum tip-to-tip path. \n            Top: path in the folded model. \n            Bottom: path through the paper. \n            The creases (and the exact \n            shape of the folded model) are \n            not yet speciﬁed.\n\n                                             Now, we have two points with a gap between them, and \n                                         the shortest bookworm path on the crease pattern is also the \n                                         shortest bookworm path on the folded model. This strikes \n                                         precisely the right balance between paper devoted to the ﬂaps \n                                         and paper devoted to the gap. The paper saved from the gap \n                                         can go into making longer ﬂaps. And indeed, a comparison of \n                                         the folded and original ﬂap in Figure 5.10 shows that the two \n                                         ﬂaps are indeed longer than in the simpler split.\n                                             The ratio of the lengths of the new and original ﬂaps is \n                                                         short flap  tan 45°\n                                                                  =         ≈ 0.414,          (5–2)\n                                                         longflap   tan67.5°\n                                         which is almost 50% longer than that obtained by simply sink-\n                                         ing and spread-sinking the corners. This is, in fact, the longest \n                                         possible pair of ﬂaps that can be made from a standard Bird \n                                         Base corner ﬂap, and so I call it an ideal split.\n                                             One quibble you may have: In this form, the two ﬂaps over-\n                                         lap each other while the Yoshizawa-split ﬂaps have daylight \n                                         between them. So the structures are not perfectly comparable. \n                                         It is possible to further sink and squash the ideal split to put \n                                         a gap between the two ﬂaps (at the cost of a slight reduction of \n                                         gap depth). But if you fold the two pairs in half (as one might, \n                                         for example, in making a pair of ears), then the two arrange-\n                                         ments can be compared directly, as shown in Figure 5.11.\n\n     100\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0bb1"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 674,
  "content": "            Figure 14.39. \n            Hex-pleating hinge polygons \n            with forced axial contours.\n\n                                             Since axial creases are perpendicular to hinge creases, \n                                         and hinge creases can run in three directions, axial creases, \n                                         too, can run in three directions, which are the directions of \n                                         the hinge creases rotated by 90°. There are no vertical hinge \n                                         creases, as we have seen (with this grid); therefore, there are \n                                         no horizontal axial creases, and that matters for the orienta-\n                                         tion of the base. Remember that we have seen that for a plan \n                                         view base, there must be a continuous chain of axial creases \n                                         running up the middle of the crease pattern from bottom to \n                                         top. This chain forms the spine of a booklet that is opened ﬂat \n                                         into the base. If there must be some vertical axial crease, then \n                                         the hinge creases that it crosses must all be horizontal and we \n                                         must use the grid orientation of these last few ﬁgures, i.e., the \n                                         grid lines must include a horizontal set.\n                                             Note, too, that the axial creases do not run along grid lines \n                                         (as they did in box pleating). Since the axials are perpendicu-\n                                         lar to the hinges, and the hinges run along grid lines, no axial \n                                         crease (or axis-parallel crease) can ever run along a line of the \n                                         triangular grid. Instead, axials and axis-parallel creases run \n                                         along lines of a separate grid that shares vertices with the hinge \n                                         crease grid. You can draw this grid, if you like; I will not display \n                                         it in the drawings here to keep them (relatively) uncluttered.\n                                             Another difference between uniaxial box pleating and \n                                         uniaxial hex pleating arises in the proportions of the generated \n                                         ﬂaps. This becomes evident by considering the dimensions of \n                                         the smallest possible ﬂap in either system.\n                                             Figure 14.40 shows the 1- and 2-unit hinge polygons for \n                                         box pleating and hex pleating for two same-size circles and the \n                                         resulting ﬂaps for comparison.\n                                             If we deﬁne both grids so that our “unit” gives the length \n                                         quantization, then for the same length ﬂap, the hex-pleated ﬂap \n\n     662\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0bb2"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 660,
  "content": "                                             There is more than one way to make an extended Py-\n                                         thagorean stretch; there is a range over which we can vary the \n                                         geometry. The angle between the two ridge creases is ﬁxed by \n                                         the laws of ﬂat foldability at 135°, but the orientation of the pair \n                                         of creases as a unit is not ﬁxed (in the same way that the two \n                                         ridge creases of a level shifter were ﬁxed in relative angle but \n                                         not absolutely). We can pivot the pair as a unit freely, within \n                                         a modest range, as shown in Figure 14.24. Beyond this range, \n                                         you will shorten the ﬂap on one side or the other by cutting off \n                                         its tip, but within this range, you can arbitrarily choose the \n                                         position of the wedge of ridge creases.\n\n\n            Figure 14.24. \n            The two ridge creases can be \n            pivoted within the indicated \n            range so long as they keep to a \n            relative angle of 135°.\n\n                                             Quite often, one of the two extreme angles is going to be \n                                         more desirable than an intermediate conﬁguration because it \n                                         places one or the other crease on a grid point on the edge of the \n                                         paper. We can analyze the general case by noting that, as shown \n                                         in Figure 14.25, in all positions, there is a right triangle that \n                                         circumscribes a circle of radius t, where t is the elevation of the \n                                         apex of the ridge creases that was given by Equation (14–1).\n                                             We deﬁne the width and height of the extended rectangle \n                                         to be x and y, respectively. Then we can choose either one and \n                                         solve for the other. If we choose the value of x, then\n                                                            2t(y − t)\n                                                  x       =        ,                         (14–7)\n                                                             y − 2t\n\n                                         and if we set x = s1, so that one of the ridges hits the bottom \n                                         right corner of the rectangle within the paper, then\n                                                           ()s + s − d ()s + d − s\n                                                    x     =  1   2      2      1  .          (14–8)\n                                                                  2()d − s1\n\n     648\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0bb3"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 106,
  "content": "                                         this way (the custom of one-piece, no-cut folding is a relatively \n                                         modern restriction) and many of the designers of the 1950s \n                                         and 1960s had no compunctions about cutting a point into two \n                                         or more pieces to make ears, antlers, wings, or antennae. Isao \n                                         Honda—who for many in the West deﬁned 1960s origami design \n                                         via his English-language publications—used cuts as a matter of \n                                         routine. Yoshizawa, the man from whom Honda derived many \n                                         of his designs, also on occasion used cuts, but even in the 1950s \n                                         had developed what is to my knowledge the ﬁrst technique of \n                                         splitting a point into two by folding alone. This procedure is \n                                         illustrated in Figure 5.1, on a Kite Base ﬂap. (I encourage you \n                                         to fold a Kite Base and try it out.)\n\n\n            1. Fold the top of the flap down and 2. Sink the tip on the existing 3. Mountain-fold a portion of the\n            unfold.                     creases.                     flap behind. The exact amount isn’t\n                                                                     critical. Turn the paper over.\n\n\n                             4. Fold the flaps up and spread-sink 5. Finished split flap. The dashed\n                             the corners.                 line shows the outline of the\n                                                          original flap.\n                                         Figure 5.1. \n                                         Sequence for splitting a Kite Base ﬂap into two smaller points.\n\n                                             Where once there was one ﬂap, now there are two ﬂaps, \n                                         albeit considerably shorter than the one we started with (which \n                                         is indicated by the dashed line). This maneuver is particularly \n                                         nice for turning one long ﬂap into a short pair of ears, which is \n                                         precisely what Yoshizawa used it for.\n\n      94\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0bb4"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 489,
  "content": "            square in each direction. We do this by cutting out both a verti-\n            cal and horizontal strip.\n                Because we’ve cut paper out, the ﬂaps that fold toward \n            each other in the handles now overlap. It is desirable to avoid \n            such overlaps; we can eliminate them by adding a few extra \n            reverse folds as shown in Figure 12.17.\n\n\n                                                              2. Now fold the box in the same way\n                                                              as before. Note that the two side flaps\n                          1. Cut out the shaded cross-        overlap one another.\n                          shaped region.\n\n\n                                           3–4\n\n\n            3. Reverse-fold the 4. Reverse-fold 5. Repeat steps 3–4 6. Fold the flaps 7. Finished box.\n            corner so that the the other corner on the near flaps. out to the sides.\n            raw edge lines up in the same way.\n            with the far vertical\n            edge.\n\n            Figure 12.17. \n            Folding a smaller box.\n\n                The extra reverse folds add a few new folds to the crease \n            pattern. They, too, are predominantly vertical and horizontal. \n            If you cut out a section of this box (the shaded region in Fig-\n            ure 12.18), you will come back to the original 3 × 2 box exactly \n            half the size of the original pattern (with somewhat longer \n            handles).\n                Comparing steps 4 and 5 shows that the difference between \n            a shallow box and a deeper box is precisely the shaded region \n            in step 2. Thus, we can make a box wider or longer by adding \n            simple strips of paper, and by adding a more complicated shape, \n\n                                                                                                     477\n                                                                  Chapter 12: Box Pleating\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0bb5"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 338,
  "content": "                                         only if every circle touches either another circle or an edge of \n                                         the square at three well-separated points (not all in the same \n                                         semicircle). It will turn out as we explore more sophisticated \n                                         design algorithms that the issue of stability plays a crucial role \n                                         in the construction of crease patterns for bases.\n                                             The problem of getting eight ﬂaps in a base is encoun-\n                                         tered when one attempts to fold the simplest insects. Beetles, \n                                         for example, must have a head, abdomen, and six legs, at a \n                                         minimum. Of course, it is always challenging to add more \n                                         body parts: Thorax, antennae, mandibles, horns, wings, and \n                                         forewings would be nice, each requiring another ﬂap (and we \n                                         will see examples that have all of them). But even the simplest \n                                         insect must have six legs, which by the standards of classical \n                                         folding, is no mean feat. Historically, the ﬁrst published instruc-\n                                         tions for a one-piece six-legged insect of which I am aware is \n                                         George Rhoads’s Bug. It is made from a blintzed Bird Base, \n                                         which corresponds to the N = 9 circle diagram.\n\n\n                                         Figure 9.37. \n                                         Crease pattern and folded model for Rhoads’s Bug, made from a \n                                         blintzed Bird Base and the N = 9 circle packing.\n\n                                             We encountered the blintzed Bird Base back in Chapter 4. \n                                         It is constructed by folding the four corners to the center of a \n                                         square, folding a Bird Base from the reduced square, and then \n                                         unwrapping the extra paper to form new ﬂaps. There is also such \n                                         a thing as double-blintzing, in which the four corners are folded \n                                         to the center, and those four corners are folded to the center \n                                         again, before folding a base and unwrapping all the layers. The \n                                         double-blintzed Frog Base, with its thirteen equal-length ﬂaps, \n                                         was used by the Japanese master Yoshizawa as early as the \n                                         1950s for his famous Crab, and surely holds the record for the \n                                         pointiest base of the Classical period.\n\n     326\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0bb6"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 476,
  "content": "                                         was already one of America’s most inventive folders and had \n                                         diagrammed hundreds of his own new designs. Elias displayed \n                                         an amazing ingenuity with the traditional origami bases. The \n                                         classic Bird Base—which some folders felt had already been \n                                         played out—in Elias’s hands blossomed into new shapes. \n                                         Most notably, Elias had a ﬂair for multisubject creations, for \n                                         example, a birdhouse with two birds peering out, from a single \n                                         Bird Base. When he saw Mooser’s Train, he immediately saw \n                                         its vast potential.\n                                             To understand what this model signiﬁes, we have to recall \n                                         the state of origami design in the 1950s and 1960s. Origami \n                                         designers typically picked a subject, then chose one of several \n                                         bases that had varying numbers of ﬂaps to work with. By choos-\n                                         ing a base with the same number of ﬂaps as the desired subject, \n                                         and hopefully with the ﬂaps arranged in roughly the same \n                                         positions as the features of the subject, the budding designer \n                                         could, with further shaping folds, massage the base into some \n                                         semblance of the desired subject. The designers of the 1950s \n                                         and 1960s in both Japan and the West had systematically \n                                         identiﬁed a dozen or so known bases. They had combined pieces \n                                         of two bases to make hybrid bases. A few—notably American \n                                         folder (and friendly rival of Elias) Fred Rohm—had devised \n                                         new bases of their own.\n                                             But a three-car train bears no resemblance to any known \n                                         origami base, uniaxial or not. Such a train combines big, boxy \n                                         shapes with the need for fourteen identical ﬂaps to form the \n                                         wheels, appropriately distributed along the bottoms of the three \n                                         cars (six on the locomotive, four on each of the boxcars). This is \n                                         pretty speciﬁc. No one was ever going to fold a train from a con-\n                                         ventional base. Even though throughout the 1950s and 1960s \n                                         new bases were continuously being discovered by trial and er-\n                                         ror, the odds of a given base having the right number and size of \n                                         ﬂaps in just the right place to make a train were millions to one. \n                                         Even fast-forwarding to the 1990s, the techniques of uniaxial \n                                         bases—circles, rivers, molecules, and trees—could handle the \n                                         ﬂaps but were not going to produce the solid elements. What \n                                         Mooser had found, and displayed brilliantly in his Train, was \n                                         a set of techniques for apparently making three-dimensional \n                                         boxes and ﬂaps at will.\n                                             How was this possible? What is it about the crease pat-\n                                         tern of the Train that bestows this incredible versatility? The \n                                         answer is not immediately obvious. The most distinctive aspect \n                                         of the crease pattern of Mooser’s Train is the fact that most of \n                                         the creases run up-and-down or left-to-right. A smaller number \n                                         run at 45°. This is to be contrasted with other origami bases in \n                                         which the creases appear, at ﬁrst perusal, to run every which \n\n     464\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0bb7"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 310,
  "content": "                                             • The center of each circle lies within the square.\n\n                                             • The circles may overlap the edges of the square, \n                                             but not each other.\n\n                                             We have now assembled the necessary building blocks to \n                                         carry out origami design from the ground up. Throughout the \n                                         history of origami, most designs were modiﬁcations, and the \n                                         techniques we’ve learned so far—offsetting, distortion, point-\n                                         splitting, grafting, tiling—have implicitly assumed that we \n                                         started with something reasonably close to our ﬁnal objective. \n                                         But proximity is no longer needed; we can proceed directly from \n                                         the desired subject to a base that contains all the structure nec-\n                                         essary to realize our subject. Here, therefore, is an algorithm \n                                         for origami design, called the circle method: \n\n                                             • Count up the number of appendages in the subject \n                                             and note their lengths.\n\n                                             • Represent each ﬂap of the desired base by a circle \n                                             whose radius is the length of the ﬂap.\n\n                                             • Position the circles on a square such that no two \n                                             overlap and the center of each circle lies within the \n                                             square.\n\n                                             • Connect the centers of touching circles to one an-\n                                             other with axial creases, dividing the square into axial \n                                             polygons.\n\n                                             • Identify tiles whose circles match up with the \n                                             circles in the axial polygons.\n\n                                             • Fill in the axial polygons with tile creases.\n\n                                             The resulting pattern can be folded into a base with the \n                                         number and dimension of ﬂaps with which you started.\n\n                                         9.4. Scale of a Circle Pattern\n                                         One aspect of the circle method of design that we have already \n                                         seen is that corner ﬂaps consume less paper than edge ﬂaps, \n                                         which consume less paper than middle ﬂaps. Turn this property \n                                         around, and you ﬁnd that for a given size square, you can fold \n                                         a larger model (with fewer layers of paper) if you use corner \n                                         ﬂaps rather than edge ﬂaps, and edge ﬂaps rather than middle \n                                         ﬂaps. Seen in the light of the circle method, the traditional \n                                         Crane—and the Bird Base from which it comes—is an extremely \n                                         efﬁcient design, since all four ﬂaps are corner ﬂaps, and almost \n\n     298\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0bb8"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 304,
  "content": "                                         types of ﬂaps are named for the point where the tip of the ﬂap \n                                         falls on the square. A corner ﬂap has its tip come from a cor-\n                                         ner of the square, an edge ﬂap has its tip lie somewhere along \n                                         an edge, and a middle ﬂap, as you would expect, comes from \n                                         the middle of the paper. For example, the four large ﬂaps on \n                                         a Frog Base are corner ﬂaps; the four stubby ﬂaps are edge \n                                         ﬂaps; and the thick ﬂap at the top is a middle ﬂap. All three \n                                         are illustrated in Figure 9.1.\n\n                                                                        middle flap\n\n\n                                                                          edge\n                                                                          flap\n\n            Figure 9.1. \n            Flaps in the base have their tips \n            at unique points in the crease \n            pattern.                                                     corner flap\n\n                                             Paper, like people, can only be in one place at a time. \n                                         Paper that goes into one ﬂap can’t be used for another. There-\n                                         fore, every time you create a ﬂap from the square, a portion of \n                                         the paper gets consumed by that ﬂap. The reason to make a \n                                         distinction between the three different types of ﬂaps—corner, \n                                         edge, middle—is that for the same length ﬂap, each of the three \n                                         types of ﬂaps consumes a different amount of paper.\n                                             One way to see this difference is to fold corner, edge, \n                                         and middle ﬂaps of exactly the same size from three different \n                                         squares. Figure 9.2 shows the folding of a corner ﬂap. If you \n                                         imagine (or fold) a boundary across the base of the ﬂap, then \n                                         that boundary divides the paper into two regions: The paper \n                                         above the boundary is part of the ﬂap, and the paper below the \n                                         boundary is everything else. The paper that goes into the ﬂap \n                                         is for all intents and purposes consumed by the ﬂap; any other \n                                         ﬂaps must come from the rest of the square.\n                                             So, as Figure 9.2 shows, if you fold a ﬂap of length L from \n                                         a square so that the tip of the ﬂap comes from the corner of \n                                         the square, when you unfold the paper to the original square, \n                                         you see that the region of the square that went into the ﬂap \n                                         is roughly a quarter of a circle; precisely, it’s a quarter of an \n                                         octagon. Suppose we made the ﬂap half the width, as shown \n                                         in Figure 9.3, before we unfolded it; then the ﬂap becomes a \n                                         quarter of a hexadecagon. If we kept making the ﬂap thinner \n                                         and thinner (using inﬁnitely thin paper!), the boundary of the \n\n     292\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0bb9"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 462,
  "content": "             32. Fold and unfold.      33. Sink the pair of        34. Fold the flap        35. Swing one flap over\n                                       edges together.             back to the left.        to the left.\n\n\n              36. Fold and unfold.     37. Fold and unfold.        38. Fold and unfold.    39. Open-sink in and out\n                                                                                           on the existing creases.\n\n\n             40. Sink the corner        41. Fold the narrow        42. Fold one flap          43. Fold the flap\n             slightly.                  flap to the left.          down.                      to the left.\n\n                                                                                                                 451\n                                                                  Folding Instructions:Chapter 11: Roosevelt Tree Theory Elk\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0bba"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 173,
  "content": "./origami_dataset_dev/Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li/page173_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0bbb"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 305,
  "content": "            ﬂap would approach a quarter-circle. In all cases, the polygonal \n            segment is inscribed by a circular segment, which represents \n            the limiting case of an inﬁnitely narrow ﬂap. Thus, a circle is \n            the minimum possible boundary of the region of the paper con-\n            sumed by the ﬂap. A corner ﬂap of length L, therefore, requires \n            a quarter-circle of paper, and the radius of the circle is L, the \n            length of the ﬂap.\n\n\n                                                                      L        L\n\n\n            Figure 9.2. \n            Folding a corner ﬂap of length L from a square.\n\n\n                 L        L                                 L       L\n\n\n            Figure 9.3. \n            Left: making a narrower ﬂap makes the boundary a quarter of a \n            hexadecagon. \n            Right: the limit of the boundary as the ﬂap becomes inﬁnitely thin \n            approaches a quarter circle.\n\n                Therefore, all of the paper that lies within the quarter-\n            circle is consumed by the ﬂap, and the paper remaining is ours \n            to use to fold the rest of the model.\n                Now, suppose we are making a ﬂap from an edge. For ex-\n            ample, if we fold the square in half, then the points where the \n            crease hits the edge become corners, and we can fold a corner \n            ﬂap out of one of these new corners, as shown in Figure 9.4. \n            If we fold and unfold across the ﬂap to deﬁne a ﬂap of length \n\n                                                                                                     293\n                                                                  Chapter 9: Circle Packing\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0bbc"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 703,
  "content": "./origami_dataset_dev/Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li/page703_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0bbd"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 173,
  "content": "./origami_dataset_dev/Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li/page173_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0bbe"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 463,
  "content": "             44. Crease in fourths, as 45. Open-sink in and out 46. Sink the two         47. Fold the flap back\n             you did in steps 37–38. on the existing creases.  corners.                  to the right.\n\n\n               48. Sink the two      49. Sink the corner so   50. Fold the pair of       51. Fold two edges over\n               edges along angle     that its edges align with points back up to the top to the left.\n               bisectors.            the edges behind.        of the model.\n\n\n               52. Fold the small     53. Fold one flap to   54. Fold the point over; 55. Fold the point back to the\n               flap down.             the right.             the crease lines up with left. The crease lines up with the\n                                                             the edges behind it.    vertical center line of the model.\n\n     452\n                         Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0bbf"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 477,
  "content": "            way at many different angles and directions. Which pattern \n            shows greater ﬂexibility: the constrained, uptown/downtown/\n            crosstown pattern of the Train, or the many-different-direction \n            pattern of conventional origami? Clearly, the rules by which the \n            Train was constructed were more restrictive than the rules of \n            conventional origami. How could it be that a more restrictive \n            set of rules leads to a less restrictive, more ﬂexible result?\n                Paradoxically, it is the very tightness of the constraints of \n            box pleating that makes it possible to fold such complex designs. \n            The reason it has always been difﬁcult to develop new origami \n            bases is that a base is a gestalt, an inseparable whole; all parts \n            of the pattern interact with other parts, so that it is very dif-\n            ﬁcult to make a substantial change in one part of the pattern \n            without having to change all other parts. The resemblance of \n            a crease pattern to a spider’s web is an apt analogy; pluck a \n            single strand and it reverberates throughout the web. Perhaps \n            a better analogy is a stack of apples: Move the wrong apple and \n            the heap collapses. Move one circle in a circle-packing and the \n            entire packing might need to rearrange. Change a single vertex \n            in a crease pattern, and its effects propagate throughout the \n            entire pattern.\n                And those effects may very well precipitate a descent \n            into unfoldability. Let’s take a simple example: the Frog Base, \n            shown in Figure 12.5. Suppose that for some reason we wished \n            to move the vertex that corresponds to the central point. Move \n            that vertex the tiniest amount away from the center, changing \n            nothing else, and the crease pattern becomes unfoldable (or \n            rather, un-ﬂat-foldable; it can no longer be pressed ﬂat without \n            creating wrinkles). It is possible, however, to move other verti-\n            ces to return the base to ﬂat foldability, as shown on the right \n            in Figure 12.5; but to do so requires that we shift the location \n            of all the other interior vertices, resulting in moving nearly \n            every crease in the pattern.\n                One seemingly innocuous change in the pattern forces \n            changes throughout the design. And this was the result of an \n            attempt to shift the location of a single point. We have not even \n            added any points. In the early days of origami, design was in-\n            cremental, a change at a time. But if such a tiny change forces \n            a complete redesign of the crease pattern, what hope has the \n            designer of incrementally creating a fourteen-wheeled, three-\n            vehicled conveyance such as a train? How would a designer of \n            a real steel-and-wood train fare if the most minor change—say, \n            moving a door handle—forced an unpredictable change in every \n            dimension of every part of the structure?\n                But in Mooser’s Train, some changes don’t cause so much \n            trouble. In the Train, the creases don’t run every which way. \n\n                                                                                                     465\n                                                                  Chapter 12: Box Pleating\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0bc0"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 311,
  "content": "            all of the paper goes into one of the four ﬂaps. However, add \n            one or two more ﬂaps, and you are forced to use edge ﬂaps. \n            Once you start mixing edge ﬂaps and middle ﬂaps, you begin \n            to run into tradeoffs in efﬁciency. Sometimes, it is even better \n            not to use the corners for ﬂaps if there are additional ﬂaps to \n            be placed on the square.\n                So, for example, suppose we want to fold a base with ﬁve \n            equal-length ﬂaps. A little doodling with a pencil and paper \n            (alternatively, you can cut out some cardboard circles and \n            shufﬂe them around) will reveal two particularly efﬁcient ar-\n            rangements of circles, as shown in Figure 9.7.\n\n\n                         r = 0.354                              r = 0.324\n\n            Figure 9.7. \n            Two circle patterns corresponding to bases with ﬁve equal-length ﬂaps.\n\n                Now we have two possible circle patterns. Which one is \n            better? Is there any way to quantify the quality of a crease \n            pattern?\n                As mentioned earlier, one measure of the quality of a \n            model is its efﬁciency, that is, the relationship between the size \n            of the folded model and the square from which it is folded. A \n            quantitative measure of efﬁciency is to compare the size of some \n            standard feature of the base—such as the length of a ﬂap—to \n            the size of the original square. The most efﬁcient base is the \n            largest possible base for a given size square. Since the ﬂaps \n            of the base are represented by circles whose radius is equal \n            to the length of the ﬂaps, the most efﬁcient base corresponds \n            to the most efﬁcient circle packing, i.e., the packing with the \n            largest circles.\n                To facilitate this comparison, let’s assume our square is \n            one unit on a side. (If you’re using standard origami paper, a \n\n                                                                                                     299\n                                                                  Chapter 9: Circle Packing\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0bc1"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 339,
  "content": "             Figure 9.38. \n             Crease pattern and folded model for Yoshizawa’s Crab, made from a \n             double-blintzed Frog Base and the N = 13 circle packing.\n\n\n             Figure 9.39. \n             Three stages in the progression of the blintzed Frog Base. Left: the \n             Frog Base. Center: a blintzed Frog Base. Right: a double-blintzed \n             Frog Base.\n\n\n                                                                                Figure 9.40. \n                                                                                Left: N = 8 circle pattern. \n                                                                                Right: a base made from the \n                                                                                N = 8 circle packing.\n\n                                                                                                                 327\n                                                                          Chapter 9: Circle Packing\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0bc2"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 105,
  "content": "./origami_dataset_dev/Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li/page105_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0bc3"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 488,
  "content": "                                             In a box-pleated model, nearly all the creases are either \n                                         vertical or horizontal. So if a cut is made vertically or horizon-\n                                         tally, then the creases are either parallel to the cut, in which \n                                         case they don’t hit the cut, or they are perpendicular to the \n                                         cut, in which case they hit it at the proper angle. So, as long \n                                         as you are careful to avoid cutting through the few diagonal \n                                         creases, it’s possible to enlarge and extend box-pleated models \n                                         by repeated application of the cut-and-tape technique.\n                                             Coming back to our 3 × 2 box, you should be able to see \n                                         now how to make the box wider rather than longer by adding a \n                                         strip running horizontally through the middle of the rectangle. \n                                         This process, which changes the rectangle from 6 × 4 to 6 × 5, \n                                         is shown in Figure 12.16.\n                                             What if we wanted to make the box smaller, not larger? \n                                         Then instead of adding paper, we would take paper away. Let’s \n                                         reduce both the length and the width of the box by a single \n\n\n                              1. To make the box wider, add a               2. Like this.\n                              strip of paper horizontally through\n                              the crease pattern.\n\n\n                                                    3. The wider box.\n                                         Figure 12.16. \n                                         Adding a strip to enlarge the box in the other direction.\n\n     476\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0bc4"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 704,
  "content": "./origami_dataset_dev/Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li/page704_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0bc5"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 661,
  "content": "                                             r2\n                                                 t\n\n\n                                                           r1\n\n                     s2\n                   y\n\n\n                                                                       Figure 14.25. \n                                        s1                             Geometry of an extended Py-\n                                     x                                 thagorean stretch.\n\n                Conversely, if we choose the value of y, then\n                               2t(y − t)\n                     x       =        ,                        (14–9)\n                                y − 2t\n\n            and if we set y = s2, so that one of the ridges hits the upper \n            left corner, then\n                              ()s + s − d ()s + d − s\n                       x    =   1   2      2      1 .        (14–10)\n                                     2()d − s1\n                These tend to be small rational numbers, and so are \n            usually easily constructible (often purely by folding). The two \n            cases for the test conﬁguration I’ve been using for illustration \n            are shown in Figure 14.26. Note that in the case on the left, \n            several of the vertices fall neatly on grid points. This type \n            of pleasant coincidence happens fairly often. Note, too, that \n            you don’t actually have to construct the creases between the \n            highlighted crease and the corner; if you simply fold the corner \n            underneath prior to precreasing, then the necessary creases \n            will be formed in place when you fold the rest of the model \n            through the resulting double layer of paper.\n                An example that illustrates extended Pythagorean \n            stretches is shown in Figure 14.27. This is a simple Scarab \n            Beetle, but because the extended Pythagorean stretches avoid \n            gusset slivers, it can be folded well at relatively small size. \n            Observe that this model, too, uses level shifters to selectively \n            widen the body relative to the legs.\n\n                                                                                                     649\n                                                               Chapter 14: Polygon Packing \n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0bc6"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 107,
  "content": "                Of course, the resulting points are smaller than the one \n            we started with; nothing comes for free. Our folding sequence \n            was not particularly directed at making them long, which \n            leads to the question: How long could they get?\n                That question actually raises a more fundamental one: \n            How does one quantitatively deﬁne the length of a ﬂap? Intu-\n            ition suggests that we deﬁne the length of a ﬂap as the distance \n            from the baseline to the farthest point of the ﬂap, but this only \n            pushes the question down a level: What would we mean by \n            the baseline of the ﬂap? Let us deﬁne the baseline of a ﬂap as \n            an imaginary line drawn across the ﬂap, above which the ﬂap \n            can freely move. While this still permits some wiggle room \n            in the deﬁnition, it allows us to deﬁne a baseline for the two \n            ﬂaps in the split point above as the obvious horizontal crease; \n            in this case, we can clearly deﬁne the length of the two ﬂaps \n            as shown in Figure 5.2.\n\n\n                                        A\n\n                                                                       Figure 5.2. \n                            6. The new flaps are shorter than          Comparison of the original and \n                            the original we started with.              newly created ﬂaps.\n                The two new ﬂaps are less than 1/4 of the length of the \n            original—not a very good tradeoff, it would seem. That gets us \n            back to our question: How long can we make the two ﬂaps? If \n            you have folded an example to play with, you can answer this \n            experimentally, by taking ﬂap A and gently pulling it lower \n            down while massaging the spread-sunk triangles and allowing \n            them to expand toward each other, as shown in Figure 5.3. \n            (It is actually easier to do this before having ever pressed the \n            two triangles ﬂat.)\n                As Yoshizawa pointed out in his opus, Origami Dokuhon \n            I, the optimum length is attained when the distance from the \n            top edge down to the valley fold is equal to half the width of \n            the top edge.\n                Clearly, these are the longest ﬂaps we can make, at least, \n            by this technique. Note that the baseline of the ﬂaps moved \n            downward in the process. Quite often, we have the baseline \n            of the ﬂap already deﬁned and we’d like to make the longest \n\n                                                                                                      95\n                                                                 Chapter 5: Splitting Points\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0bc7"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 113,
  "content": "                          Base                                    Base                                   Base\n\n\n                 1. For an optimally efficient point split, 2. Now we’ll refold the model. The        3. Fold the sides in.\n                 the point where the base crease hits the top point isn’t used; fold it down.\n                 edge is separated from the desired point\n                 tip by a distance equal to half the\n                 separation between the point tips.\n\n\n                          Base\n\n\n                 4. Make creases that connect the       5. Squeeze the sides in so that the    6. Fold the excess paper from side to\n                 edges of the base with the points      extra paper swings downward,           side. Flatten firmly.\n                 that will become the tips of the two   using the creases on the far layers\n                 flaps. Turn the model over.            that you made in the previous step.\n\n\n                                                                                                         Base\n\n\n                 7. Reverse-fold the edge inside.       8. The finished split point. Now the           9. Crease pattern.\n                 Observe that the edge of the reverse   shortest path on the crease pattern is\n                 fold (the black dot) lines up with the also the shortest path on the folded\n                 previously defined base.               model.\n\n                Figure 5.9. \n                Folding sequence for the ideal split.\n\n                                                                                                                                  101\n                                                                                     Chapter 5: Splitting Points\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0bc8"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 675,
  "content": "            Figure 14.40. \n            Fully assigned crease patterns for 1- and 2-unit hinge polygons and \n            silhouettes of their folded forms. \n            Left: uniaxial box pleating. \n            Right: uniaxial hex pleating.\n\n            is noticeably narrower than its box-pleated equivalent. The \n            minimum-length box-pleated ﬂap is as wide as it is long; the \n            minimum-length hex-pleated ﬂap is only 1/√3 times as wide \n            as it is long—about 58% of the length.\n                That means that hex-pleated ﬂaps are naturally narrower \n            than their box-pleated kin. This may or may not be desirable. \n            For insect legs, for example, one can almost never go too thin. \n            But for the body segments, one typically would like those \n            ﬂaps to be much wider. In that case, one will be working at \n            a disadvantage with hex pleating, though of course, one may \n            use level shifters to selectively widen ﬂaps, just as with box \n            pleating, as we will shortly see.\n                In fact, because of this fundamental asymmetry between \n            up/down and side/side that exists in hex pleating, there are two \n            naturally different length scales that apply. When we design \n            a uniaxial base using either box pleating or hex pleating, we \n            must quantize the dimensions of the desired base in order to \n            ﬁt them to the required grid. For box pleating, both lengths \n            and heights are quantized to the nearest multiple of the same \n            unit distance. But for hex pleating, while ﬂap lengths along \n            the axis will be similarly quantized to a multiple of the basic \n            unit, ﬂap widths will be quantized to multiples of a different \n            amount, which is this fundamental width unit, and which is \n            only 58% of the length quantization. So in hex pleating we can \n            talk about the length unit and the (smaller) width unit.\n\n                                                                                                     663\n                                                               Chapter 14: Polygon Packing \n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0bc9"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 649,
  "content": "            circle-packed designs. In some cases, the efﬁciency penalty \n            can be 40% or worse.\n                The inefﬁciencies in box pleating come about because \n            the fundamental packing objects, e.g., squares, do not pack \n            with the same versatility that circles do. An extreme case is \n            illustrated by the packing consisting of two equal-length ﬂaps \n            into a slightly-too-small square where one of the ﬂaps must \n            lie on the symmetry line, as shown in Figure 14.13. \n\n\n            collisioncollision                                         Figure 14.13. \n                                                                       A packing of two circles and \n                                                                       squares into the paper square in \n                                                                       which the square corners prevent \n                                                                       a close packing of their respective \n                                                                       circles.\n\n                In the packing shown in Figure 14.13, if we were circle \n            packing, we could easily get the two circles much closer to \n            each other than is shown here. But using square packing, \n            the corners of the two minimum squares collide and we can’t \n            get them any closer. This limitation results in considerable \n            wasted space and forces a much larger square (for a given \n            desired base), or equivalently, more layers of paper in the \n            resulting base.\n                Maybe, though, there is a hybrid solution, which gets a \n            little closer to circle packing in terms of efﬁciency, but still \n            maintains the grid structure of a box-pleated design. In order \n            to get the circle centers closer to each other, we will have to \n            let the minimum-size squares overlap. But we still can’t allow \n            the circles to overlap. If we want the polygon center to lie on \n            a grid point, then between square overlap and circle overlap, \n            there is a small set of grid points that constitute acceptable \n\n                                                                                                     637\n                                                               Chapter 14: Polygon Packing \n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0bca"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 715,
  "content": "            intrude into the wing regions—at least, not beyond the circles \n            that delineate the gaps.\n                A bit of manipulation reveals that nine circles ﬁt neatly \n            into the space available, as shown in Figure 15.4. Unfortunate-\n            ly, that’s one circle too few. The obvious next step is to reduce \n            the circles and rearrange them to add a tenth circle. But the \n            nine-circle packing is so elegant, it would be nice to ﬁnd a way \n            to make use of it. Rather than rearranging, we can jettison \n            one ﬂap; a separate ﬂap for the head isn’t really needed if we \n            use the presence of the two antennae ﬂaps to suggest a head. \n            This means that a ﬁnal packing of circles for the appendages \n            and the square facets for the wings can be solidiﬁed as shown \n            in Figure 15.4.\n\n\n                                                                        Figure 15.4. \n                                                                        Circle packing for a butterﬂy \n                                                                        with ﬂat regions allocated for \n                                                                        the wings.\n\n                In this packing, all of the axial creases are orthogonal, \n            which suggests that a box-pleated crease pattern is possible, \n            and indeed it is. We have a choice of how many divisions to \n            use in the box-pleated sections. In the published version of this \n            model, I chose to use 12, as shown in Figure 15.5 in the crease \n            pattern, base, and folded model.\n                The same packing and arrangement of ﬂaps can also be \n            folded using more divisions, which give narrower ﬂaps. You \n            might enjoy the challenge of working out what the crease pat-\n            tern (and folded result) would be using 20 divisions, rather \n            than 12, in the box-pleated portion.\n                Note that our nine ﬂaps would ideally come in the form of \n            four symmetric pairs of ﬂaps for legs and antennae, plus a single \n\n                                                                                                     703\n                                                                  Chapter 15: Hybrid Bases\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0bcb"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 348,
  "content": "./origami_dataset_dev/Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li/page348_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0bcc"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 73,
  "content": "                                                                     inversion\n\n\n            Figure 4.6. \n            Family tree of the standard bases.\n\n            their crease patterns. In these four bases, the same funda-\n            mental pattern appears in multiples of two, four, eight, and \n            sixteen.\n                This reappearing shape is an isosceles right triangle \n            with two creases in it; Figure 4.7 shows how it appears in \n            each base in successively smaller sizes. Although the crease \n            directions (mountain versus valley) may vary, the locations \n            of the two creases within each triangle are the same. I have \n\n\n            (a)              (b)                 (c)                 (d)                (e)\n            Figure 4.7. \n            (a) The basic triangle. (b) Kite Base. (c) Fish Base. (d) Bird Base. \n            (e) Frog Base.\n\n                                                                                                      61\n                                                                Chapter 4: Traditional Bases\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0bcd"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 67,
  "content": "                                                                       Figure 4.1. \n                                                                       Crease pattern, base, and a \n                                                                       representative model for (top to \n                                                                       bottom): Kite Base; Fish Base; \n                                                                       Bird Base; Frog Base.\n\n            Fish, Bird, and Frog Bases have, respectively, one, two, four, \n            and ﬁve large ﬂaps and one, two, one, and four smaller ﬂaps. \n            To fold an animal, you usually need to start with a base that \n            has the same number of ﬂaps as the animal has appendages. \n            A simple ﬁsh has two large ﬂaps (head and tail) and two \n            small ones (pectoral ﬁns), which is why the Fish Base is so \n            appropriate and so named. The average land-dwelling verte-\n            brate has ﬁve major appendages (four legs and a head), which \n            suggests the use of the Frog Base, but only if there is no long \n            tail. The Frog Base does have ﬁve ﬂaps, but the ﬂap on the \n\n                                                                                                      55\n                                                                Chapter 4: Traditional Bases\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0bce"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 701,
  "content": "           Camel Spider\n\n\n           Mark the edges of a 58x58 square grid. Use the edge\n           markings to locate interior vertices. The corners of\n           the Pythagorean stretches are located roughly halfway\n           between grid lines.\n\n\n                                                                                           689\n                                                         CreaseChapter Patterns: 14: Polygon Camel Packing Spider \n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0bcf"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 729,
  "content": "                                                    Folding Instructions\n\n\n                                       African Elephant\n\n\n                                                                                           717\n                                                       ChapterChapter 15: Folding 15: Hybrid Instructions Bases\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0bd0"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 98,
  "content": "              34. Mountain-fold a bit of the tip                   35. Mountain-fold the wings away from you.\n              underneath to further lock the pleat.                Curve the far layers toward you and near layers\n              Crease the bottom point into sixths.                 away from you, forming two halves of a\n                                                                   cylinder. The next view is from the side.\n\n\n            36. Sink the belly to round it.      37. Sink 1/3 of the beak,        38. Round the leading edge of the\n            Crimp the head downward and          using the existing creases.      wing. Reverse-fold the wing tips.\n            crimp the point in and out to                                         Reverse-fold the corner of the head\n            form a beak.                                                          near the beak. Repeat behind.\n\n\n            39. Mountain-fold the edges of  40. Tuck the colored region up inside the 41. Finished Ruby-Throated\n            the beak underneath. Round the  head, crimping, if necessary; it should Hummingbird.\n            wing tips further with tiny     hook behind the inside of the beak. Shape\n            reverse folds.                  and round the body. Pleat the wings.\n\n      86\n                         Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0bd1"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 271,
  "content": "                                                                        Figure 8.24. \n                                                                        Left: crease pattern. \n                                                                        Right: folded form of the \n                                                                        resulting shape.\n\n            axis of symmetry can be oriented along the edge of the square \n            or along the diagonal. Packing the tiles in along the diagonal \n            is a bit more efﬁcient, but still leaves some unused paper at \n            the top and bottom of the square.\n                No problem: we can simply add more tiles (suitably deco-\n            rated by circles and/or rivers) to create more ﬂaps and consume \n            the rest of the paper in the square, as shown in Figure 8.25.\n                By enforcing circle matching, we ensure that the crease \n            pattern can be folded ﬂat (we will have to add some creases to \n            the two sliver triangles along the upper edges and assign crease \n            directions to the generic creases). Furthermore, by counting \n            circles and rivers, we can elucidate the structure of the resulting \n            base before we have even begun to fold. There are ﬁve circles \n            at the top of the pattern, all touching; these will give rise to \n            ﬁve ﬂaps. The topmost circle is larger than the other four; that \n\n\n            Figure 8.25. \n            Left: the shape ﬁt into a square. \n            Right: add a few more tiles to add more ﬂaps and consume the \n            remaining paper in the square.\n\n                                                                                                     259\n                                                                         Chapter 8: Tiling\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0bd2"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 517,
  "content": "                Some of them, though, will need to be converted from \n            vertical to horizontal; every edge, corner, or middle ﬂap is a \n            mixture of vertical and horizontal folds, along with a handful \n            of alternating diagonals. In fact, the diagonal folds typically \n            separate regions of vertical from regions of horizontal (we will \n            see more about this in the next chapter). When a group of ﬂaps \n            runs in a row along an edge, the diagonals from adjacent ﬂaps \n            create triangle “wedges” of paper whose crease directions must \n            be rotated.\n                Fortunately, this process can often be carried out one \n            wedge at a time. All pleats are ﬁrst formed running in the domi-\n            nant direction, say, the vertical direction. Then, by separating \n            particular pairs of pleats and stretching them apart, it is pos-\n            sible to add, one by one, the pleats that run in the horizontal \n            direction. This process is shown in Figure 12.48. \n\n\n            1. Pull a single layer out to 2. Fold down the top     3. Mountain-fold the\n            the left, stretching out the  edge, making diagonal    top edge behind.\n            pleat.                        creases at 45°.\n\n\n                           4. Pleat the edge          5. Finished Elias\n                           again and close            stretch. The pleat\n                           up the model.              has now been\n                                                      turned into a gap\n                                                      between two flaps.\n\n            Figure 12.48. \n            Folding sequence for an Elias stretch.\n\n                                                                                                     505\n                                                                  Chapter 12: Box Pleating\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0bd3"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 503,
  "content": "             Figure 12.33. \n             Box-pleated corner ﬂaps. Top to bottom: 1-unit ﬂap; white-up 2-unit \n             ﬂap; colored 2-unit ﬂap (the back side of the ﬂap is white); 3-unit \n             ﬂap.\n\n                                                                                                                 491\n                                                                          Chapter 12: Box Pleating\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0bd4"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 265,
  "content": "                                                                        Figure 8.14. \n                                                                        Generic form of the rectangular \n                                                                        tile and one possible arrangement \n                                                                        of ﬂaps.\n\n            possible orientations for the ﬂaps for one of the rectangular \n            tiles. The variation arises in the creases that run perpendicular \n            to an edge. We can recognize and treat the essential similar-\n            ity among all such variations by simply drawing the tiles in a \n            generic form, with undifferentiated creases perpendicular to \n            all edges as in Figure 8.14. When the tiles are assembled into \n            full crease patterns, some of those creases will get turned into \n            mountain and/or valley folds, but we can—and will—defer that \n            assignment until a later time.\n                Are there more possible tiles than these? Uncountably \n            more, as it turns out. In addition to triangles and rectangles \n            there are tiles from pentagons, hexagons, and octagons, both \n            regular and irregular. In later chapters, we will learn how to \n            construct new special-purpose tiles from arbitrary shapes; but \n            even these few shapes—triangles and rectangles—allow one to \n            construct new, custom-tailored bases.\n\n            8.4. Tile Assembly\n            Now, if a base can be constructed from tiles, we need some rules \n            for their assembly. Tile assembly is not as easy as it might seem, \n            because each tile contributes to several different ﬂaps. When \n            one is designing a ﬁgure, one naturally thinks in terms of ﬂaps, \n            and it would be very simple if any given tile corresponded to \n            a single ﬂap; but instead, each tile contains pieces of several \n            ﬂaps. So, when we assemble tiles, we need to make sure that \n            they go together in such a way as to create entire ﬂaps—in the \n            right sizes, and with the right connections.\n                Since these tiles are axial polygons, their boundaries are \n            all axial, and so when two tiles meet, they must join along an \n            axial fold. So the ﬁrst rule of assembly is simple: tiles mate along \n            their edges, and the result of the join is an axial fold. However, \n            there is more to consider: there are folds incident upon the edges \n            of each tile at right angles, and in order for the joined pair to \n            fold ﬂat, these folds must meet up with one another.\n                Keeping track of the correspondence between tiles and \n            ﬂaps is aided by decorating the tiles with circular arcs as shown \n            in Figure 8.15 for triangular, rectangular, and square tiles.\n\n                                                                                                     253\n                                                                         Chapter 8: Tiling\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0bd5"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 259,
  "content": "            tip. Consequently, we can always split any ﬂap along an axial \n            crease to insert a strip graft.\n                Observe that the network of axial creases divides the crease \n            pattern into a collection of distinct polygons whose boundaries \n            are entirely composed of either axial creases or the raw edge of \n            the paper. We will call these polygons axial polygons.\n\n            8.2. Splitting Along Axes\n            The axial polygons of the crease pattern have an interesting \n            property in their own right: in the folded base, the entire pe-\n            rimeter of each polygon comes together to lie along a common \n            line—the axis of the model. You can observe this property by \n            taking a base and cutting it along its axis. If you remove a \n            slight bit of paper from either side of the axis so that the cut \n            severs folded edges that lie along the axis, both the base and \n\n\n            Figure 8.6. \n            Dissected crease patterns for the Fish, Bird, and Frog Bases.\n\n                                                                                                     247\n                                                                         Chapter 8: Tiling\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0bd6"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 448,
  "content": "./origami_dataset_dev/Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li/page448_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0bd7"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 261,
  "content": "                Figure 8.7 illustrates the process of inserting a strip into \n            the middle of a Bird Base. We cut the base down the middle, \n            then insert a strip into the gap. The resulting shape has paired \n            points at the middle of the top and bottom where the original \n            base had only single points.\n                Now, let’s look at what we’ve accomplished. The Bird Base \n            that we started from had ﬁve ﬂaps: four long ones pointing down \n            and one short one pointing upward. Two of the long ﬂaps at the \n            bottom and the shorter ﬂap at the top have now been split into \n            a pair partway along their length. This is not entirely obvious \n            from the ﬁnal step in Figure 8.7, but if we rotate the layers so \n            that the inserted strip stands out from the rest of the base, the \n            gap becomes visible as shown in Figure 8.8.\n\n\n                                                                        Figure 8.8. \n                                                                        Strip-grafted Bird Base with \n                                                                        ﬂaps oriented so that the gap \n                                                                        is visible.\n\n                The interesting thing here is that after the inserted strip, \n            we still have a uniaxial base. And it is instructive to highlight \n            the axial creases of the new base and axial raw edges, as I’ve \n            done in Figure 8.9.\n\n\n            Figure 8.9. \n            Left: the crease pattern of the original Bird Base. Axial creases are \n            shown in green. \n            Right: the crease pattern of the strip-grafted version.\n\n                                                                                                     249\n                                                                         Chapter 8: Tiling\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0bd8"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 507,
  "content": "            Figure 12.37. \n            Left: crease pattern for Crane on a Plane. \n            Right: folded form.\n\n                I have used this technique to create the design shown in \n            Figure 12.37, titled “Crane on a Plane.” The plane is a horizontal \n            plane on which the crane is perched.\n                Remarkably, a single crane has a folding sequence, which, \n            however contains a lot of pleats, closed sinks, closed unsinks, \n            and various other nasty maneuvers, all of which seem like an \n            awful lot of work to fold something that is not too far off from \n            the ﬁrst origami most people ever learn! But this crane is \n            nothing more than a somewhat-more-complicated-than-usual \n            box-pleated middle ﬂap. Its pleats are all perpendicular to the \n            edges, so that the raw edges of the paper lie entirely along the \n            raw edges of the square on which the crane perches. And that \n            means this crane has a special property: it tiles.\n                And so, having built up the crane by tiling four middle \n            ﬂaps together, we could create an array of such cranes from a \n            single sheet of paper by tiling an array of these cranes together. \n            How many? As many as we want—limited only by our paper \n            size and folding fortitude. Figure 12.38 shows a progression of \n            the Crane on a Plane tiling.\n                Consider, for example, a 32 × 32 array of crane tiles. Each \n            tile requires a 28 × 28 grid of squares, so that the square of \n            paper required would be 896 × 896 squares. For a 1-centimeter \n            grid (which is a reasonably easily foldable size), the required \n\n                                                                                                     495\n                                                                  Chapter 12: Box Pleating\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0bd9"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 513,
  "content": "             5. Continue with the       6. This gives an        7. Sinking the vertical    8. Like this.\n             doubly pleated form.       array of sharp          edges transforms the\n             Reverse-fold the raw       points or scales.       array into a series of\n             edges between the pleats                           triangular teeth.\n             as far as possible. Valley-\n             fold on front and back\n             layers to match.\n             Figure 12.42. \n             Further transformations on the doubly pleated array.\n\n\n             5. Stretch the outside of            6. Grasp each pleat and pull          7. A curved doubly pleated\n             each pleat apart to create a         it apart with a twist; then           section.\n             curved array.                        move on to the next.\n             Figure 12.43. \n             Stretching a doubly pleated region to impart a curve.\n\n             stretch each pleat asymmetrically; this allows either positive \n             or negative curvature, as shown in Figure 12.43. \n                  One can also stretch an array of pleats in the opposite \n             direction to create a concave surface, or in both directions in \n             different places to create smoothly varying apparent curvature. \n             In both cases, you are reducing the size of each horizontal pleat \n             on one side or the other, changing each from a parallel-crease \n             pleat to an angled pleat. The maximum bend, and the limit \n             of stretching, occurs when one side or the other is entirely \n\n                                                                                                                 501\n                                                                          Chapter 12: Box Pleating\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0bda"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 275,
  "content": "                If you fold these two patterns, you will see that the differ-\n            ence again lies in the width of the ﬂap and the number of layers, \n            rather than the length or connectivity of the ﬂaps.\n                As a third example, recall that the Lizard base came in \n            two forms: one with wide ﬂaps, one with narrow ﬂaps. First, \n            let’s look at the wide-ﬂap (simpler) version of the crease pattern \n            and base. I have colored the outlines of the axial polygons and \n            have drawn in the circles and river on the tiles.\n                Observe that the river is meandering through the pattern \n            in a way that illustrates its name.\n                Now, look at the actual crease pattern for the Lizard and \n            its base. I have used the same outlines for the axial polygons.\n                The narrow form of the Lizard base uses the same tile \n            outlines, circles, and rivers, but there are many more creases \n            within each tile.\n\n            8.5. A Multiplicity of Tiles\n            Do we need to keep track of all possible crease patterns for \n            every possible tile? Fortunately not. The more complicated \n            crease patterns can often be derived from simpler patterns \n            by narrowing the ﬂaps of the folded form of the tile in one of \n            several different ways. The most common techniques for \n            narrowing take the form of sink folds (which accounts, in part, \n            for the prevalence of sink folds in complex origami designs). \n            A simple tile with wide ﬂaps can have its ﬂaps narrowed by \n            sinking one or more times. This sinking can give a much more \n            complex crease pattern, but it should not distract you from \n            understanding the essential simplicity of the underlying tile.\n\n\n               Simple tile crease 1. Open-sink the 2. Open-sink the 3. Narrowed folded tile\n               pattern        two flaps along remaining edge.    and its crease pattern.\n                              their angle\n                              bisectors.\n            Figure 8.32. \n            Procedure to narrow a tile using angled sink folds.\n\n                                                                                                     263\n                                                                         Chapter 8: Tiling\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0bdb"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 249,
  "content": "             4. Fold the top left corner over along 5. Fold the bottom edge up along a 6. Fold the right edge over along a\n             a crease connecting the pinch you horizontal fold that passes through a crease that passes through the crease\n             just made with the bottom left corner; crease intersection; make the crease intersection and unfold. Repeat with\n             make a pinch where it crosses the sharp only from the right edge about the top edge. Turn the paper over.\n             diagonal and unfold. Repeat with the half of the way across, then unfold.\n             bottom right corner.              Repeat with the left edge.\n\n\n             7. Fold up a bit of the lower right  8. Fold the corner up along the 9. Turn the paper over and rotate so\n             corner. The corner goes halfway to   diagonal. The fold hits the bottom that it is symmetric with a corner\n             the imaginary crease intersection    edge at an existing crease.     pointing down.\n             shown, but the exact amount isn’t\n             critical.\n\n\n                                                            11. Reverse-fold the side   12. Fold the corner at the\n                                                            corners and fold the        bottom from side to side.\n                                                            edges down inside.\n                  10. Fold a rabbit ear with the lower\n                  two edges using existing creases.\n\n     238\n                         Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0bdc"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 88,
  "content": "             Snail\n\n\n              1. Begin with a square, white side up.\n              Fold and unfold along one diagonal.\n\n\n                   2. Fold the edges to the       3. The Kite Base.   4. Fold the top flap down   5. Unfold.\n                   diagonal crease.               Turn the paper over. so that the left edges are\n                                                                      aligned and the crease goes\n                                                                      through the right corner.\n\n\n              6. Repeat steps 4–5     7. Fold the paper in    8. Fold the near edge along the 9. Fold and unfold\n              in the other direction. half while reverse-     angle bisector (the corner    along the angle bisector,\n                                      folding the top         touches the edge at an existing creasing lightly. Repeat\n                                      corner downward.        crease). Repeat behind.       behind.\n\n      76\n                         Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0bdd"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 705,
  "content": "           Scarab Beetle HP\n\n\n           Divide the vertical edges in 13ths and the horizontal\n           edges in 15ths; these serve as the references for the\n           primary grid, which is based on equilateral triangles.\n\n\n                                                                                           693\n                                                      CreaseChapter Patterns: 14: Scarab Polygon Beetle Packing HP \n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0bde"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 63,
  "content": "                                                                       Figure 3.9. \n                                                                       Two variations on the Elephant’s \n                                                                       Heads.\n\n                And now is as good a time as any to start. The elephants \n            in Figures 3.4 and 3.5 have colored tusks. Can you ﬁnd a way \n            to alter each model so that the tusks become white as shown \n            in Figure 3.9? (Hint: Turn a ﬂap inside-out.)\n                The ﬁrst stage of origami design is to modify someone \n            else’s work, as you can with the elephants. Origami design is, \n            in large part, built on the past. The origami designers of the \n            present have created new techniques, but in doing so, they \n            used techniques of those anonymous Japanese folders of his-\n            tory (as well as those of their contemporaries, of course). It \n            behooves us to spend some time studying how prior genera-\n            tions of folders designed their models.\n\n\n                                                                                                      51\n                                                                Chapter 3: Elephant Design\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0bdf"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 77,
  "content": "            Figure 4.10. \n            Crease pattern and ﬁnished model of Stealth Fighter, from a Windmill Base.\n\n            of the ﬂaps ﬂopped around; perhaps it will help to show just \n            the creases of the modiﬁed base (Figure 4.11).\n                When a model is folded from a base (whether one of the \n            Classic Bases, or a new special-purpose base designed just for \n            that model), if it has a linear, step-by-step folding sequence (as \n\n\n            Figure 4.11. \n            Crease pattern and folded form of the modiﬁed Windmill Base from \n            which the ﬁghter is constructed.\n\n                                                                                                      65\n                                                                Chapter 4: Traditional Bases\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0be0"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 711,
  "content": "                                                            15Hybrid Bases\n\n                          ox pleating is a specialization of the circle/river \n                          method of ﬂap generation and uniaxial bases, \n                          but as we saw in Chapter 12, it is also a way of \n                          extending them; it allows one to easily combine \n                          two-dimensional ﬂaps and three-dimensional \n            objects in the same model. It also illustrates a general principle \n            of origami design: that one can mix and match different styles \n            and techniques in the same model, using particular design ele-\n            ments where they are needed. Many—perhaps most—origami \n            designs are of this hybrid type. Circle packing, box pleating, \n            hex pleating, and polygon packing techniques are powerful, \n            but focusing solely on ﬂap generation can be limiting; there are \n            only so many subjects out there with 23 pairs of appendages. \n            Nearly all of the techniques I’ve shown so far are based on the \n            concept of a uniaxial base, but there are many potential origami \n            subjects that do not ﬁt into the stick-ﬁgure abstraction that is \n            part and parcel of the uniaxial base.\n                When faced with a subject that does not ﬁt into the uniaxial \n            mold, rather than starting over from scratch, one can often \n            adapt elements of uniaxial bases and combine them with other \n            folding techniques to form a hybrid base, one that provides \n            both a better representation of the chosen subject and a more \n            visually interesting physical structure.\n                The question then arises: In a hybrid structure, for what \n            should we use packing methods? All of these techniques are good \n            for generating ﬂaps, particularly long, skinny ones. A subject \n            that is composed primarily of long, skinny appendages is a per-\n            fect candidate for a pure circle/river- or polygon-packed  design. \n            But then the counter-question also arises: For what should \n            we NOT use packing? And the answer is, anything that isn’t \n            approximated reasonably well by a stick ﬁgure. Most notably, \n\n                                                                                                     699\n\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0be1"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 739,
  "content": "                                                                                 References\n\n\n             1. Introduction\n             While the number of origami elephants runs in the hundreds, there \n             are published folding instructions for only a fraction of them. Folding \n             instructions for the models in Figure 1.1 may be found in the follow-\n             ing publications: \n\n             Lionel Albertino, Safari Origami, Gieres, l’Atelier du Grésivaudan, \n             1999, p. 5 (Albertino’s Elephant).\n\n             Steve and Megumi Biddle, The New Origami, New York, St. Martin’s \n             Press, 1993, p.156 (Biddle’s Elephant).\n\n             Dave Brill, Brilliant Origami, Tokyo, Japan Publications, 1996, p.148 \n             (Brill’s Elephant).\n\n             Vicente Palacios, Fascinating Origami, New York, Dover Publications, \n             1996, pp. 53, 57, 144, 147 (Cerceda’s Elephants 1–4).\n\n             Paulo Mulatinho, Origami: 30 Fold-by-Fold Projects, Grange Books, \n             1995, p. 32 (Corrie’s Elephant).\n\n             Robert Harbin, Origami 4, London, Coronet Books, 1977, p. 81 (Elias’s \n             Elephant).\n\n             Peter Engel, Folding the Universe: Origami from Angelﬁsh to Zen, \n             New York, Vintage Books, 1989, p. 277 (Engel’s Elephant).\n\n             Rick Beech, Origami: The Complete Guide to the Art of Paperfolding, \n             London, Lorenz Books, 2001, p. 96 (Enomoto Elephant).\n\n             Thomas Hull, Russian Origami, New York, St. Martin’s Press, 1998, \n             p. 81 (Fridryh Elephant).\n\n             Isao Honda, The World of Origami, Tokyo, Japan Publications, 1965, \n             p. 168 (Honda Elephant).\n\n\n                                                                                                                 727\n\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0be2"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 449,
  "content": "./origami_dataset_dev/Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li/page449_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0be3"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 671,
  "content": "            bouncing contours rather than a nice, well-behaved rational \n            value. That means that we can’t just pick distances randomly; \n            we must make a conscious choice of ﬂap length, carefully \n            chosen to avoid dense bouncing.\n                And that is exactly what the use of a grid in uniaxial box \n            pleating accomplishes. By putting all of our polygon lines on \n            grid points, it insures that any contour line that enters a poly-\n            gon on a grid line will exit on a grid line. This clearly limits the \n            amount of bouncing, because once the contour lines have ﬁlled \n            up all possible grid lines, any new contour must terminate on \n            an existing contour or run off of the paper. Once you’ve tried a \n            few uniaxial box-pleated designs, you will ﬁnd that surprisingly \n            often, this is exactly what happens, and the bouncing axial con-\n            tours ﬁll up all available grid lines (which necessitates putting \n            the axial+1 contours at half-grid positions).\n                Inﬁnite bouncing contours don’t happen in circle-packed \n            designs because in a rigidly packed circle/river packing, the \n            axial creases in adjacent polygons are guaranteed to be aligned \n            collinearly with one another. But circle packings have irregu-\n            lar crease patterns. In polygon packing, we gain “niceness” \n            in the crease pattern, but we give up the guarantee of axial \n            crease alignments that prevent inﬁnite bouncing, and so we \n            must take special precautions to keep the contours ﬁnite.\n                And grids are one way to accomplish this control. Uniaxial \n            box pleating puts all lines, and all polygons, on a square grid. \n            This forces all hinges (and, as well, all axials and constant-\n            elevation creases) to run at multiples of 90°, which is another \n            “nice” feature. But a square grid is not the only grid that has \n            this elegant property, as we will now see.\n\n            14.7. Hex Pleating\n            Back at the beginning of Chapter 13 I introduced the term \n            “polygon packing,” and then moved fairly quickly to “uniaxial \n            box pleating” as an example of polygon packing. Why use two \n            different terms for the same thing? Because the concept of \n            polygon packing is much broader than uniaxial box pleating. \n            The basic idea of polygon packing is simply that we choose \n            “nice” hinge polygons from which to construct our uniaxial \n            base. But there are many different ways of creating “nice” \n            hinge polygons. Uniaxial box pleating chooses “nice” to mean, \n            “all edges run at multiples of 45°.” That gives nice, symmetri-\n            cal crease patterns and easy-to-precrease crease patterns. But \n            it’s not the only symmetry game in town.\n                Polygon packing and uniaxial box pleating are not syn-\n            onymous because it’s possible to use other angles in polygon \n\n                                                                                                     659\n                                                               Chapter 14: Polygon Packing \n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0be4"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 117,
  "content": "            ﬂapping action, so when you pull its head and legs like the \n            traditional ﬂapping bird, this Pteranodon ﬂaps its wings.\n\n            5.3. Splitting Edge and Middle Flaps\n            The folding sequence shown in Figure 5.12 works for a corner \n            ﬂap, a ﬂap formed from a corner of the square, which describes \n            the main ﬂaps of the four Classic Bases. In addition to four \n            corner ﬂaps, the Frog Base possesses a different type of ﬂap: \n            Its central point comes from the middle of the paper, a so-called \n            middle ﬂap. Furthermore, the smaller points on a Frog Base \n            come from the edge of the paper, an edge ﬂap. You might ask, \n            is it possible to split edge and middle ﬂaps?\n                Indeed it is, although the layers get thicker and less \n            manageable as you move from corner to edge to middle ﬂap. \n            The process is relatively straightforward for an edge ﬂap. \n            An edge ﬂap still has two raw edges, and so it can be treated \n            like a corner ﬂap and split into two points in the same way \n            as a corner point. In fact, the folding sequence illustrated in \n            Figure 5.12 may be used as well on an edge ﬂap.\n                However, a middle ﬂap has no raw edges, which played a \n            prominent role in the folding sequence of Figure 5.12. But we \n\n\n                    1. Assemble four corner split crease         2. …to obtain the crease pattern for\n                    patterns ...                                 a middle split.\n\n            Figure 5.15. \n            A middle ﬂap can be constructed by stitching together four corner \n            ﬂaps and their crease patterns along the raw edges.\n\n                                                                                                     105\n                                                                 Chapter 5: Splitting Points\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0be5"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 103,
  "content": "              41. Fold one narrow layer over     42. Fold the white layer up.         43. Fold up one more layer.\n              to the right; the top of the\n              model will not lie flat.\n\n\n                                  41–44\n\n\n              44. Close the left side up and    45. Crimp the head downward             46. Reverse-fold the\n              repeat steps 41–44 on the right.  in front and, symmetrically, in         corners of the head to\n                                                back; simultaneously push in            round it; repeat behind.\n                                                the top of the head to make it\n                                                three-dimensional.\n\n\n                  47. Pleat the hands             48. Fold the legs forward           49. Shape the feet with\n                  and fold them                   and squash-fold the feet.           mountain folds. Put your\n                  toward the front.                                                   finger up inside the model\n                                                                                      and round the body\n                                                                                      slightly. Position the arms.\n\n\n                 50. The finished Baby.\n\n                                                                                                                  91\n                                                                       ChapterFolding 4: Instructions: Traditional  BasesBaby\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0be6"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 665,
  "content": "                                                                       Figure 14.30. \n                                                                       Top: a set of axial and axial+1 \n                                                                       contours crossing a simple 1-unit \n                                                                       river. \n                                                                       Middle: the same contour pat-\n                                                                       tern crossing a meandered river. \n                                                                       Note that the elevations have \n                                                                       reversed. \n                                                                       Bottom: the fully crease-assigned \n                                                                       meandered river.\n\n\n                                                                       Figure 14.31. \n                                                                       A 3-unit-wide river, split into \n                                                                       three 1-unit-wide rivers with \n                                                                       meanders: one on the left, two \n                                                                       on the right.\n\n            Thus, we could take a 3-unit-wide river, split it into three \n            1-unit-wide rivers, and then selectively widen one or two of \n            those subrivers with meanders, as shown in Figure 14.31.\n                Occasionally, one might even wish to use half-unit-\n            width meanders. This might be puzzling at ﬁrst. As we saw \n            earlier, if we create patterns of ridge creases with vertices \n            at half-integral positions, this can lead to 1-unit spacing of \n            same-elevation contours, which then forces half-unit width \n            ﬂaps. So why would we intentionally introduce half-unit-width \n            meanders?\n                The reason is that sometimes one half-integral structure \n            can be used to cancel out half-integral contours created by \n            a different structure. An example is shown in Figure 14.32, \n            where a string of half-unit polygons is separated by a string \n            of half-unit rivers. This gives rise to a single ﬂap with a se-\n            ries of half-unit ﬂaps along its length; useful, for example, in \n            creating a segmented region of a body without wasting much \n            paper. If we want the ﬂap to be 1 unit wide, i.e., composed of \n            alternating axial and axial+1 contours, the half-unit-length \n\n                                                                                                     653\n                                                               Chapter 14: Polygon Packing \n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0be7"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 659,
  "content": "            Figure 14.23. \n            Top left: a representative Pythagorean stretch that has a gusset \n            sliver (highlighted). \n            Top right: we remove the creases that make up the gusset sliver \n            and lie between it and the corner. \n            Bottom left: a new axis-parallel crease is added at unit distance. \n            Bottom right: more creases are added that are the mirror image of \n            the main pattern.\n\n            from the apex of the ridges is equal to the unit of width. Last, \n            we create new creases that are the mirror image of those on the \n            opposite side of the new gusset crease. (These are the creases \n            that would have resulted if we folded the paper underneath on \n            the new crease, and then made all of the other folds through \n            all layers together.) As you can see from the dotted lines in \n            the two bottom subﬁgures, what we are doing is, effectively, \n            creating a perfect Pythagorean stretch in a somewhat larger \n            quadrilateral that extends outside of the original paper. Since \n            we are extending the quadrilateral of the stretch beyond the \n            boundaries of the paper, I call this variation an extended Py-\n            thagorean stretch. \n\n                                                                                                     647\n                                                               Chapter 14: Polygon Packing \n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0be8"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 498,
  "content": "                                             This structure deﬁnitely has the hallmarks of a graft: \n                                         there’s a bit of paper that is devoted to the new structure, the \n                                         ﬂap, and then a long, parallel-sided strip of excess paper that \n                                         doesn’t really contribute anything except thickness (usually \n                                         undesired, but an acceptable price to pay for the newly cre-\n                                         ated ﬂap). In Chapter 6, we encountered edge grafts, which \n                                         run along the boundary of the paper, and strip grafts, which \n                                         cut through the middle of the paper. This triangle ﬂap is, in \n                                         effect, a combination of the two. The vertical strip of excess \n                                         paper is an edge graft; the horizontal strip is a strip graft. The \n                                         combination of the two types of graft creates the excess paper \n                                         we need to realize this triangular ﬂap. We’ll call this a “T-graft” \n                                         (since the shape of the added paper is T-shaped, if you look at \n                                         it sideways).\n                                             That realization, then, sets the stage to generalize and \n                                         expand this concept. We know from graft theory that larger \n                                         grafts allow the creation of larger ﬂaps. That should be the \n                                         case here. If we double the width of each of the strips in the \n                                         T-graft, we should, in principle, be able to double the length \n                                         of the ﬂap that we’ve created. And that is, in fact, exactly the \n                                         situation, as illustrated in the crease pattern and folded form \n                                         for a 2-unit-long ﬂap shown in Figure 12.28.\n\n\n                                         Figure 12.28. \n                                         Crease pattern and folded form for a 2-unit-long ﬂap.\n\n                                             We have lengthened this ﬂap by one unit, at the expense \n                                         of adding another unit to the width of the vertical strip and two \n                                         to the height of the horizontal strip. As you might expect, we \n                                         could continue the process: a 3-unit ﬂap, resulting in the crease \n                                         pattern and folded form in Figure 12.29. Here, the horizontal \n                                         strip of the T-graft has nearly consumed the entire height of \n\n     486\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0be9"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 315,
  "content": "                                                                        Figure 9.11. \n                                                                        Make two L-shaped arms with \n                                                                        scales along their inner edges.\n\n            square and not a rectangle by making sure that the inside \n            edges always meet at the same points on the scale. Set the \n            frame down over your array of circles and shrink the square \n            by bringing the two pieces of the frame toward each other \n            as shown in Figure 9.12. The inside edges will catch on the \n            protruding thumbtacks, thus insuring that all of the circles \n            keep their centers inside the square. As you shrink the frame \n            and move the circles around, you will reach a condition in \n            which most or all of the circles are touching each other and the \n            two halves of the frame are held apart by a rigid network of \n            touching circles. This pattern corresponds to the optimum \n            circle packing for your particular model. By pressing a sheet of \n            paper down over the thumbtacks, you can transfer the centers \n            of all the circles to another sheet and can then, using compass \n            and straightedge, reconstruct the optimum circle pattern \n            for folding.\n\n\n                                                                        Figure 9.12. \n                                                                        Close the two L brackets toward \n                                                                        each other, trapping the thumb-\n                                                                        tacks in the middle.\n\n                                                                                                     303\n                                                                  Chapter 9: Circle Packing\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0bea"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 473,
  "content": "                But in Mooser’s design, things were different. First, he \n            started from a long rectangle; that alone was not a novelty, \n            as several traditional models begin with a rectangle. But in \n            contrast to most origami, the creases in Mooser’s Train formed \n            a grid of mostly evenly spaced parallel lines, occasionally bro-\n            ken by diagonals running at 45° to the edges of the paper. The \n            overall appearance of the crease pattern was wholly unlike the \n            patterns of conventional origami.\n                Fortunately for the curious, origami has by and large \n            fomented a culture of sharing of both results and how-to, and \n            it wasn’t long before a hardy folder, Raymond K. McLain, had \n            constructed and circulated an instruction sheet for the design. \n            In lieu of formal publication—origami books were few and far \n            between in the 1960s and 1970s—it was passed from person \n            to person, photocopied, and recopied (this at a time when copi-\n            ers were far from ubiquitous). Dauntingly, the instructions \n            consisted of a single page containing the crease pattern, no \n            step-by-step diagrams, and a smattering of tiny, handwritten \n            verbal instructions wrapped around the edges of the pattern. \n            I’ve redrawn McLain’s instructions in Figure 12.3 if you’d like \n            to give it a try yourself; for the adventurous soul who’d like \n            to experience folding from the original instructions, they are \n            reproduced in Figure 12.4.\n                The challenging diagrams and their lack of widespread \n            availability only added to the aura of mystery surrounding this \n            model, and soon after its appearance it became one of the test \n            pieces against which the origami-hopeful must apply his or her \n            folding skills. And any folded Mooser’s Train instantly became \n            a focal point for the origami gathering at which it appeared.\n                Mooser’s Train fulﬁlled a valuable role: Its folding provided \n            evidence that the folder had attained the pinnacle of the art. \n            That was itself a worthy role. But Mooser’s Train was not the \n            culmination of a new style; on the contrary, it was the road map, \n            leading the way to an entirely new approach to origami design \n            and a new class of origami subject matter—the man-made ob-\n            ject. It would inspire a small group of origami designers through \n            a decade of creative growth, of exploration, and of pushing the \n            boundaries of what was possible within the one sheet/no cuts \n            origami paradigm. Their innovations, in turn, by showing that \n            truly anything was possible with folding alone, would lead to the \n            near abandonment of multi-sheet, or composite, origami design. \n            And their work would go on to inspire an entire generation of \n            origami designers, including the author of this book.\n                The revolution that was initiated by Mooser’s model began \n            in earnest when its techniques were adopted and expanded \n            by another innovative folder. By the mid-1960s Neal Elias \n\n                                                                                                     461\n                                                                  Chapter 12: Box Pleating\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0beb"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 467,
  "content": "                        90. Fold one point to the right                   91. Valley-fold downward a\n                        in front as far as possible.                      point in front and behind.\n                        Repeat behind.\n\n\n                        92. Release some trapped                          93. Reverse-fold the hidden\n                        paper. Repeat behind.                             edge so that it lines up with\n                                                                          the left edge of the leg.\n\n\n                           94. Crimp the tail                             95. Mountain-fold the edge\n                           inside the body.                               inside the body. Repeat behind.\n\n\n                           96. Double-rabbit-ear                            97. Reverse-fold the\n                           the hind legs.                                   hind legs downward.\n\n     456\n                         Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0bec"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 301,
  "content": "               74. Reverse-fold the thinned     75. Repeat steps 73–74            76. Double-rabbit-ear both\n               point downward and flatten       behind. Note that the model is    hind legs. As with the front\n               firmly.                          rotated slightly from step 74.    legs, spread the layers on the\n                                                                                  right side of the point.\n\n\n                   77. Reverse-fold the             78. Reverse-fold the          79. Pleat the wings and curve\n                   legs downward.                   tips of the wings.            them out from the body.\n\n\n                    80. Pleat the tail.            81. Finished Pegasus.\n\n                                                                                                                 289\n                                                                       Folding Instructions:Chapter 8: Pegasus Tiling\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0bed"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 329,
  "content": "            9.8. Circles and Rivers\n            Thus far, we have considered bases derived from packing of \n            circles only. In a circle-packed base, all of the ﬂaps emanate \n            from a common point. But, you’ll recall, we were able to con-\n            struct bases from tiles that contained rivers, regions that \n            translated into segments separating groups of ﬂaps. It is also \n            possible to introduce rivers into a circle-packing in an analogous \n            fashion. That is, we introduce a river between groups of circles \n            that corresponds to a segment separating groups of ﬂaps. We \n            can still construct a full crease pattern by superimposing tiles \n            containing rivers on the pattern of axial polygons.\n                An example of this is illustrated in Figure 9.27, an insect \n            with the Latin name Acrocinus longimanus. It contains four \n            long ﬂaps (corresponding to the two long forelegs and antennae) \n            and eight shorter ﬂaps (legs, head, abdomen). We introduce \n            a river running around four of the legs, which introduces a \n            segment between the two groups of ﬂaps. We can, however, \n            still ﬁll in the axial polygons with tile crease patterns that \n            incorporate the rivers; the result is a base with the desired \n            ﬂap conﬁguration.\n\n\n            Figure 9.27. \n            Crease pattern, base, and folded model of the Acrocinus longimanus.\n\n            9.9. Mathematical Circle Packings\n            The circle method gives us a technique for designing a base that \n            has any combination of ﬂaps of different sizes by relating it to \n            a simple geometrical construction. Speciﬁcally, the problem of \n\n                                                                                                     317\n                                                                  Chapter 9: Circle Packing\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0bee"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 248,
  "content": "./origami_dataset_dev/Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li/page248_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0bef"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 328,
  "content": "                                             Figure 9.25. \n                                             Crease pattern, base, and folded model for the Flying Cicada.\n\n\n                                             Figure 9.26. \n                                             Crease pattern, base, and folded model for the Flying Ladybird \n                                             Beetle.\n\n     316\n                         Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0bf0"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 466,
  "content": "                                                                                                          35–83\n\n\n             80. Sink in and out.    81. Sink the      82. Fold a group     83. Fold the      84. Repeat behind.\n                                     corner.           of layers back to    group of points\n                                                       the right.           back up to the\n                                                                            top.\n\n\n             85. Fold a group of         86. Crimp the body                  87. Sink the long edge.\n             layers to the right in      to form two legs.\n             front and behind.\n\n\n                     88. Mountain-fold the edge                          89. Fold a rabbit ear from the\n                     underneath. Repeat behind.                          flap. Repeat behind.\n\n                                                                                                                 455\n                                                                  Folding Instructions:Chapter 11: Roosevelt Tree Theory Elk\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0bf1"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 300,
  "content": "                       65. Unfold.               66. Mountain-fold the            67. Double-reverse-fold the\n                                                 edges inside.                    point downward on the\n                                                                                  creases you made in step 63.\n\n\n                 68. Valley-fold one            69. Sink the white corner; at     70. Outside-reverse-fold the tip\n                 corner down in front and       the same time, sink the long      of the head.\n                 behind.                        edge upward to line up with\n                                                the top of the head.\n\n\n                  71. Reverse-fold the              72. Pleat to form          73. Double-rabbit-ear the foreleg.\n                  point underneath.                 ears.                      Note that you are spreading the layers\n                                                                               on the right side of the point. For the\n                                                                               cleanest results, you shouldn't flatten\n                                                                               the paper before doing step 74.\n\n     288\n                         Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0bf2"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 314,
  "content": "                                         is conﬁned to the square and whose radius is proportional to \n                                         the desired length of the point. Initially, the circles are much \n                                         smaller than the square, so that there is a lot of extra room \n                                         around each; they can rattle around in the square. But then \n                                         you start inﬂating each circle (or equivalently, shrinking the \n                                         square) so that the extra room gets slowly squeezed out and \n                                         the circles start bumping up against one another. Eventually, \n                                         all of the room is squeezed out and each circle is pinned into \n                                         place, at which point the basic structure of the crease pattern \n                                         is frozen. You then ﬁt tiles to the resulting pattern of circles, \n                                         ﬁtting tile boundaries along lines between touching circles.\n                                             You can ﬁnd the optimum circle pattern several ways. \n                                         The easiest is to simply draw a square, then start drawing in \n                                         circles; if you can ﬁt them all with room to spare, do the same \n                                         thing again, but this time use slightly bigger circles. Repeat \n                                         until all the circles you draw ﬁt snugly.\n                                             This approach, while the simplest and quickest, does re-\n                                         quire that you have a pretty good eye for size (and that you’re \n                                         able to draw an accurate circle). An easier technique is to use a \n                                         jig. To make the jig, cut out thick cardboard circles correspond-\n                                         ing to the sizes of each of the ﬂaps in your model. Then press a \n                                         thumbtack through each circle in the very center of the circle. \n                                         Turn the circles over (so the thumbtack points upward); you \n                                         can now slide the circles around until they touch and quickly \n                                         try out different arrangements of circles.\n\n\n                                         Figure 9.10. \n                                         To make a circle jig, push a thumbtack through a circle of the same \n                                         size as the desired ﬂap. Then you can slide the circles around.\n\n                                             But how do you insure that the centers all lie in a square? \n                                         The second part of the jig is the frame. Cut out two L-shaped \n                                         pieces of cardboard as shown in Figure 9.11 and mark a scale \n                                         along the inside of each arm of the L, starting where the two \n                                         arms touch.\n                                             Now you can overlap the edges of the two Ls so that their \n                                         inside edges form a square; you can insure that they form a \n\n     302\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0bf3"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 472,
  "content": "                                         Figure 12.1. \n                                         Mooser’s Train, folded by the author.\n\n                                         realize many different objects, the engine and cars of a complete \n                                         train! The result was so unbelievable that folders scrambled to \n                                         see how it was done.\n                                             Such a novel result was accomplished by an equally novel \n                                         approach. What set Mooser’s Train apart from the vast major-\n                                         ity of origami designs was the folding style and technique, as \n                                         well as the complexity of the resulting model. The difference \n                                         was immediately apparent to even a superﬁcial examination \n                                         of the crease pattern. In nearly all ancient and early modern \n                                         origami, the major creases were predominantly radial. They \n                                         emanated, star-like, from various points in the square: the \n                                         center, the corners, the midpoints of the edges, as shown in \n                                         Figure 12.2.\n\n\n                                         Figure 12.2. \n                                         Crease patterns of the Bird and Frog Bases, illustrating the radial \n                                         pattern of creases.\n\n     460\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0bf4"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 10,
  "content": "./origami_dataset_dev/Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li/page010_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0bf5"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 499,
  "content": "            Figure 12.29. \n            Crease pattern and folded form for a 3-unit-long ﬂap.\n\n            our 8 × 8 grid, so to go to longer and longer ﬂaps, we’d need to \n            go to a larger number of squares in our grid.\n                Even from these three examples, though, you can begin \n            to see the pattern: the region of the paper that goes into the \n            ﬂap is a 1:2 rectangle with alternating mountain/valley creases \n            emanating from the midpoint of one side to the opposite cor-\n            ners. The three sides of this rectangle that connect to the rest \n            of the paper do so with alternating pleats. These pleats are \n            very regular structures. You can see, I think, that it would be \n            relatively easy to connect these pleats to other ﬂaps or boxes \n            of the sort we created at the beginning of this chapter.\n                One other observation here is that with this pattern, in \n            which the ﬂap comes out on the white side of the paper, the \n            color of the ﬂap itself alternates with its length: odd-length ﬂaps \n            are colored, even-length ﬂaps are white. But this is not strictly \n            required; we can, in fact, change the even-length ﬂaps to col-\n            ored (or odd-length ﬂaps to white) simply by devoting another \n            vertical strip to the T-graft, as shown in Figure 12.30.\n                Now look at the top edge of the paper, starting from the left \n            side. For colored ﬂaps, no matter what their length is, the ﬁrst \n            vertical crease is a valley fold. The next is a mountain. And from \n            there, they alternate, mountain/valley, with the total number \n            of creases depending on the length of the individual ﬂaps.\n                Since the pleat creases are perpendicular to the edges of \n            the paper, this means that we could easily create two ﬂaps of \n            the same size along the edge of the paper by simply connecting \n            two T-grafts to each other so that the vertical creases of the \n            pleats match up, as illustrated in Figure 12.31.\n\n                                                                                                     487\n                                                                  Chapter 12: Box Pleating\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0bf6"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 658,
  "content": "                                             This is simple to evaluate, and for closely overlapping \n                                         circles, tends to give small, rational, easily constructed fractions \n                                         for the distance h. For the example shown in Figure 14.21, we \n\n                                         have s1 = 4, s2 = 6, d = 7, and thus h = 1/4.\n                                             I call this type of structure an offset Pythagorean stretch. \n                                         Like the ordinary stretch seen above, there is a particularly \n                                         elegant conﬁguration when the “gusset” runs from corner to \n                                         corner, which would be a perfect offset Pythagorean stretch. \n                                         It arises when\n\n                                                             2   2    2\n                                                   s1          + s2 = d +1,                  (14–6)\n\n                                         or just one off from the ordinary Pythagorean condition.\n                                             The construction  of the other creases in the offset Pythago-\n                                         rean stretch is a bit more involved, since the various creases \n                                         involved run at angles other than axis-parallel. I will leave \n                                         those as an exercise for the reader.\n                                             Pythagorean stretches provide a nice, efﬁcient compromise \n                                         between the pure regularity of polygon packing (which can be \n                                         inefﬁcient) and the maximal efﬁciency of circle/river packing \n                                         (which can be quite irregular). However, the regular (non-\n                                         offset) form sometimes exhibits a phenomenon I call gusset \n                                         slivers, when the axis-parallel folded contours are spaced very \n                                         closely to the gusset fold of the stretch. You can see examples \n                                         of both of these in the Longhorn Beetle of Figure 14.17 and the \n                                         Camel Spider of Figure 14.18. Gusset slivers are aesthetically \n                                         undesirable in the crease pattern, and they can be difﬁcult to \n                                         fold neatly. The unit of ﬂap width sets a natural minimum fea-\n                                         ture size for the crease pattern, since the vast majority of the \n                                         creases are spaced by this width. When one is folding a ﬁgure \n                                         from small paper (for small ﬁnished size), we would really like \n                                         to avoid having parallel creases spaced more closely than this \n                                         minimum feature size.\n                                             As you can see in the examples, though, the most common \n                                         place to ﬁnd Pythagorean stretches is near the corners of the \n                                         paper; the Pythagorean stretch is used to “cut the corner.” A \n                                         complete Pythagorean stretch mates cleanly to axial contours \n                                         on all four sides of its bounding rectangle, but if we don’t care \n                                         what happens on two of the sides, we can wipe out many of \n                                         the creases and replace them with a new set that respects our \n                                         desired minimum feature size, most straightforwardly by using \n                                         the procedure illustrated in Figure 14.23.\n                                             The process starts by erasing the problematic gusset \n                                         crease, and all creases between it and the corner of the paper, \n                                         and extending the two ridge creases to the edges of the paper. \n                                         Next, we add an axis-parallel crease, but one whose spacing \n\n     646\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0bf7"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 135,
  "content": "./origami_dataset_dev/Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li/page135_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0bf8"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 102,
  "content": "               32. Pull the loose edge as far      33. Mountain-fold the           34. Squash-fold each\n               down as possible on both the        edges underneath.               corner, making the valley\n               left and right flaps.                                               folds on existing creases.\n\n\n              35. Fold one flap from left to     36. Squash-fold the                37. Fold the point down.\n              right in front, and one from       corner. Repeat behind.             Repeat behind.\n              right to left behind.\n\n\n                                                39. Swing one flap from left           40. Reverse-fold\n              38. Sink the point up into the    to right in front and one              the two corners.\n              model. Repeat behind.             from right to left in back,\n                                                incorporating the reverse\n                                                fold shown on each side.\n\n      90\n                         Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0bf9"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 664,
  "content": "                                         river from each bank (perhaps we could call them docks?) that \n                                         limit the maximum width.\n                                             One can, of course, use the same technique to obtain \n                                         broader widenings, and in fact, once the total width is 3 units \n                                         or more, all sorts of complicated patterns become possible. \n                                         The two examples shown in Figure 14.29 merely hint at the \n                                         possibilities.\n\n\n            Figure 14.29. \n            Top: a 3-unit-wide broadening of \n            a river with meanders. \n            Bottom: an alternate broaden-\n            ing with a different set of me-\n            anders.\n\n                                             By introducing meanders into the hinge rivers, we can \n                                         selectively widen parts of them and so use rivers to “soak up” \n                                         extra paper in the crease pattern. Why might we want to do \n                                         this? At ﬁrst blush, this might seem to be a needless complica-\n                                         tion. It is certainly clear that introducing tight meanders of this \n                                         sort creates a lot of new 45° ridge creases; they can signiﬁcantly \n                                         add to the complexity of a crease pattern.\n                                             But they have a side effect that could be very useful: me-\n                                         anders allow you to change elevation from one side of the river \n                                         to the other. If we have alternating axial and axial+1 contours, \n                                         when they hit an ordinary river, they proceed across the river \n                                         banks without stopping or changing, as shown in the top sub-\n                                         ﬁgure of Figure 14.30.\n                                             If, however, we introduce a 1-unit-wide pattern of mean-\n                                         dering into our river, then when the contour lines hit the top of \n                                         the river, they bounce off of the ridge creases, and when they \n                                         come out the bottom, the positions of the axial and axial+1 \n                                         contours have been reversed. So, in effect, meanders can act \n                                         as a form of level shifter, but with nice 45° ridges and vertices \n                                         on grid points.\n                                             Everything I’ve shown thus far has been with 1-unit wide \n                                         rivers, but rivers come in all widths. Certainly a 2- or 3-unit \n                                         wide river could be meandered in exactly the same way, but we \n                                         have an additional degree of freedom with these wider rivers \n                                         because every river can be viewed as a set of parallel 1-unit-\n                                         wide rivers that all “ﬂow” in the same direction and pattern. \n\n     652\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0bfa"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 670,
  "content": "                                             Here the “mod 1” indicates the “modulo” function; basi-\n                                         cally, we add or subtract integers to/from (a – x) until the result \n                                         lies between 0 and 1. The function g(x) is plotted in the bottom \n                                         right subﬁgure of Figure 14.36.\n                                             The horizontal position of a contour after it has made one \n                                         complete circuit through both top and bottom halves is the \n                                         result of applying g(x) followed by f(x), which works out to be\n\n                                                     h(x)   ≡  f (g(x)) = ()x − a mod    1  . (14–13)\n\n                                             After two circuits, it will be at position\n\n                                                    h(h(x))  = ()x − 2a mod  1 .           (14–14)\n\n                                             And, in general, after n circuits, it will be at position\n\n                                                    hn   (x) = ()x − na mod 1 .            (14–15)\n\n                                             So the question of when, or if, the contour ever closes on \n                                         itself is equivalent to the question of when or if the value of (x – \n                                         na) mod 1 ever comes back to the value x. This, in turn, happens \n                                         when (x – na) differs from the value of x by some integer k, so \n                                         that the modulo function takes it back to its starting position. \n                                         And that only happens if the distance a takes on the value k/n, \n                                         i.e., some rational number. If a = k/n for some integers (k,n), \n                                         then the contour will close on itself after n circuits through \n                                         both top and bottom. Note, though, that there is no value x for \n                                         which the bouncing runs off the page, so it must either close on \n                                         itself, or keep going, which means the following: if the distance \n                                         a is irrational, the bouncing contour never closes on itself nor \n                                         runs off the page.\n                                             If the bouncing never stops, it means that there is an in-\n                                         ﬁnite number of contours that are inﬁnitely close together, so \n                                         that the ﬂap, if we could fold it, would be inﬁnitely thin, but \n                                         with an inﬁnite number of layers—which would be a serious \n                                         problem. The contours, in this case, are said to be dense on \n                                         the paper.\n                                             This concept of dense contours was discovered by Erik \n                                         Demaine in the course of his solution of the one-cut problem; \n                                         there, too, there were creases (exactly analogous to the contour \n                                         lines in polygon packing) that never settled down, but bounced \n                                         around forever. \n                                             It is a well-known fact of mathematics that there are in-\n                                         ﬁnitely more irrational than rational numbers, so that if you \n                                         were to pick the dimension a at random, the odds are inﬁnitely \n                                         higher that you would have picked a value that gave inﬁnite \n\n     658\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0bfb"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 116,
  "content": "                                                     Figure 5.13. \n                                                     Crease pattern, base, and folded model for a Pteranodon.\n\n\n                    1. Top: crease pattern for a corner   2. Top: crease pattern for an edge    3. Top: crease pattern for a middle\n                    flap. Bottom: the folded flap.        flap. Bottom: the folded flap.        flap. Bottom: the folded flap.\n                                                     Figure 5.14. \n                                                     Crease pattern (upper row) and folded ﬂap (lower row) for three types \n                                                     of points: (left) corner ﬂap, (middle) edge ﬂap, (right) middle ﬂap.\n\n       104\n                              Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0bfc"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 738,
  "content": "",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0bfd"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 76,
  "content": "                                         25 circles or circular segments—and of course there were 25 \n                                         ﬂaps as well.) Clearly, there is some relationship here between \n                                         circles and ﬂaps. But why circles? And what about the paper \n                                         that is not part of any circle? Circles seem rather innocuous, \n                                         but by drawing them onto a crease pattern, we have touched \n                                         on a connection to the underlying structure of origami, which \n                                         we will soon explore.\n\n                                         4.4. Designing with Bases\n                                         The Japanese designers of the past—and most of their \n                                         modern successors—did not worry about units and circles, \n                                         of course. For most of the history of folding, the Classic \n                                         Bases were nothing more than starting points for origami de-\n                                         sign; you picked the base that had the right number of ﬂaps. \n                                         For a bird with folded wings, use the Bird Base. A human ﬁgure, \n                                         with two arms, two legs, and a head, uses the Frog Base. But \n                                         what about more complex ﬁgures? Insects and arthropods, with \n                                         six, eight, ten, or more legs, wings, horns, pincers, and other \n                                         appendages, became an enormous challenge. As early as the \n                                         1950s, far-sighted origami designers made forays into these \n                                         more complex bases. Yoshizawa, using a multiply blintzed base, \n                                         produced his remarkable Crab with 12 appendages, while the \n                                         sculptor George Rhoads exploited the blintzed Bird Base for \n                                         several distinctive animals, including his famous Elephant. \n                                         But these were the exceptions.\n                                             And so, the early days of origami design saw the use of \n                                         the same bases over and over, to the point that they began to \n                                         seem worn out. There are only so many treatments that can be \n                                         applied to this small number of basic shapes. A few designers—\n                                         notably Neal Elias and Fred Rohm—developed innovative \n                                         manipulations of the Classic Bases that opened up rich new \n                                         veins of origami source material. For the most part, however, \n                                         the Classic Bases are pretty well picked over.\n                                             Still, one occasionally ﬁnds a shiny nugget of originality \n                                         among the tailings of the Classic Bases. Sometimes, a model’s \n                                         structure simply calls for the ﬂaps and proportions of a Classic \n                                         Base, as in the designs shown in Figures 4.10–4.15, which are \n                                         folded from the Windmill, Kite, Bird, and Frog Bases. Take, for \n                                         example, the Stealth Fighter shown in Figure 4.10 as crease \n                                         pattern and folded model. It is folded from the Windmill Base, \n                                         which can be seen in its crease pattern.\n                                             Or can it? The crease pattern, which typically shows the \n                                         major creases of the model, contains more creases than just \n                                         those of the base. But if you focus on the longer creases, you \n                                         can probably pick out the creases of a Windmill Base with some \n\n      64\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0bfe"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 710,
  "content": "",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0bff"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 704,
  "content": "             Cicada Nymph\n\n\n             Mark the edges of a 19×19 square grid; then use the\n             edge markings to locate interior vertices. Note that\n             here the “axial” contours are not located on the center\n             line; this gives the base one extra unit of width. The\n             extra creases near the top should be precreased before\n             the collapse.\n\n\n     692\n                         Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c00"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 62,
  "content": "                                                                                                                    D\n\n\n                                                                                                                    B\n\n\n                                                                                                                  A   C\n\n\n                Figure 3.7.                             1. Divide the square in half vertically and          2. The Bird Base.\n                                                        horizontally with creases. Crease all angle\n                Compact sequence for folding a          bisectors at the corners, then assemble using the\n                Bird Base.                              creases shown.\n\n\n                                                                                                                     D\n\n\n                                                                                  B                                  B\n\n\n                                                                                                                   A   C\n\n                                                                   A                             C\n\n\n                                                                                  D\n                       1. Begin with a square with creased           2. Petal-fold front and back.             3. The Bird Base.\n                       diagonals. Bring the four corners\n                       together at the bottom and flatten.\n                                                     Figure 3.8. \n                                                     Intermediate sequence for folding a Bird Base.\n\n                                                           Origami design runs along a continuous scale ranging from \n                                                     minor modiﬁcation of an existing design to the “ground-up” \n                                                     creation of an entirely new model. Just as a beginning folder \n                                                     should begin to fold simple models from diagrams, the begin-\n                                                     ning designer should choose simple shapes to design.\n\n        50\n                              Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c01"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 89,
  "content": "                                       1/4\n\n\n                  10. Rotate the model         11. Valley-fold the right corner in half 12. Valley-fold the near flap\n                  clockwise slightly more      while reverse-folding all of the excess upward. Repeat behind.\n                  than a quarter turn.         paper up as high as possible. Repeat\n                                               behind.\n\n\n                13. Mountain-fold the colored  14. Mountain-fold the edge of the   15. Pleat the colored flap.\n                corner behind. Repeat behind.  near flap behind. Repeat behind.\n\n\n                    16. Tuck the pleat         17. Mountain-fold the colored flap   18. Mountain-fold the\n                    under the white layer.     behind and then bring it in front of colored flap around again.\n                                               the white point at the lower left.\n\n\n                 19. Mountain-fold two more       20. Mountain-fold the bottom        21. Finished Snail.\n                 times in the same way.           edges. Valley-fold the\n                                                  antennae out to the sides.\n\n                                                                                                                  77\n                                                                       ChapterFolding 4: Instructions: Traditional  BasesSnail\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c02"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 248,
  "content": "             Koi\n\n\n             1. Begin with a square, white side up. 2. Fold the left side over to the right, 3. Fold the top left corner over to the\n             Fold and unfold along the diagonals, making pinches along the top and pinch you just made; pinch along the\n             but on the downward diagonal, only bottom edges.                    top edge and unfold. Repeat with the\n             make the crease sharp about 1/3 of                                  bottom right corner.\n             the way in from each corner.\n\n\n                                                                                                                 237\n                                                                        ChapterFolding 7: Instructions:Pattern Grafting Koi\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c03"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 512,
  "content": "                                         horizontal edges adds texture and visual structure to the set \n                                         of pleats, as shown in Figure 12.41. (Use an 8 × 8 grid folded \n                                         as in Figure 12.23 to practice with.)\n                                             As simple as this is, it offers room for variation within the \n                                         existing folds, by altering the spacing of both the mountain and \n                                         valley pleats. It also allows for further variation by adding folds. \n                                         For example, one can reverse-fold the edges between each of \n                                         the vertical ribs, as shown in Figure 12.42.\n                                             This technique of pleating and then reverse-folding be-\n                                         tween the pleats has been used by several origami artists, \n                                         including John Richardson (for his “Hedgehog”) and David \n                                         Petty (for his “Cactus”). You’ll see an example of it in one of the \n                                         ﬁgures in the folding instructions for this chapter.\n                                             It is also possible to change the direction of such pleats; \n                                         they don’t need to stay straight. A simple and straightforward \n                                         approach is to start with a straight section of pleats, then \n\n\n                             1. Begin with the colored side up. Form   2. Repeat with two more pleats.\n                             a mountain fold on the topmost crease,\n                             then pleat it down to align with the next\n                             crease.\n\n\n                             3. Pleat vertically on the existing creases. 4. A simple pleated texture.\n\n                                         Figure 12.41. \n                                         Folding sequence for a simple doubly pleated texture.\n\n     500\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c04"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 274,
  "content": "                                             Figure 8.30. \n                                             Left: crease pattern with axial polygons outlined and circles and \n                                             rivers drawn. \n                                             Right: base for the Lizard with axis superimposed.\n\n\n                                             Figure 8.31. \n                                             Left: Lizard crease pattern with tile outlines, circles, and rivers. \n                                             Middle: base. \n                                             Right: ﬁnished Lizard.\n\n     262\n                         Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c05"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 260,
  "content": "                                                     the crease pattern will fall apart into distinct pieces, as shown \n                                                     in Figure 8.6 for the Fish, Bird, and Frog Bases.\n                                                          One or more strips can be inserted along any of the gaps \n                                                     to split or multiply ﬂaps. Let’s look at an example.\n\n\n                     1. Cut the square in half along the diagonal.                   2. Insert a strip of paper along the cut edges.\n                                                                                     The exact width of the strip isn’t critical.\n\n\n                        3. Mountain-fold the      4. Dent the top of the model    5. Reverse-fold               6. Finished\n                        corner underneath.        and push the sides together so  the bottom corner.            grafted shape.\n                                                  that the edges of the strip align. Repeat behind.\n\n\n                Figure 8.7. \n                Folding sequence and crease \n                pattern to form a strip graft \n                within a Bird Base.                           7. Crease pattern.\n\n\n       248\n                              Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c06"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 506,
  "content": "                                         Scaled Koi, one could use this technique to make a dense array \n                                         of arbitrarily long ﬂaps. Overlapping feathers, perhaps?\n                                             This technique of creating middle ﬂaps essentially takes \n                                         a ﬂat sheet and “embeds” a ﬂap, or several, at a ﬁxed position \n                                         within that ﬂat sheet. One could then take that sheet and \n                                         embed the created structure within yet another ﬂap, creating \n                                         a hierarchy of branched, tree-like structures. As long as the \n                                         crease pattern keeps pleats perpendicular to the edges of its \n                                         bounding rectangle, the result will be tileable, which leads to \n                                         some interesting possibilities.\n                                             In most of the examples shown so far, there has been a \n                                         gap between each ﬂap and its neighbors. That makes it easy \n                                         to visualize and easy to keep the pleats resulting from each \n                                         ﬂap separate, but including gaps certainly isn’t necessary. One \n                                         could butt several ﬂaps up against one another, as shown in \n                                         Figure 12.36, which shows the pleats of four contiguous middle \n                                         ﬂaps. \n\n\n            Figure 12.36. \n            Tiling four 5-unit middle ﬂaps \n            with no gaps between them.\n\n                                             The crease assignment shown here is not perfectly correct; \n                                         because all of the ﬂaps are superimposed with one another, \n                                         some of them must be wrapped around the others, which will \n                                         change the parity of some of the creases. Once we have the basic \n                                         structure, though, we can start to modify it in other ways. In \n                                         the folded form, the edges of the central square line up with \n                                         each other in the same way that the edges of a Bird Base do; \n                                         we can replace that central square with the creases of a Bird \n                                         Base to realize what is, essentially, a Bird Base extruded from \n                                         the middle of the paper.\n\n     494\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c07"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 289,
  "content": "            Figure 8.52. \n            Crease pattern, base, and folded model of the Periodical Cicada with \n            a tiled crease pattern.\n\n            combinations of ﬂaps beyond those in the standard reper-\n            toire. While this approach can be used for many origami \n            subjects, it is particularly effective with insects, whose many \n            appendages, often of varying lengths, have historically \n            provided great challenge to the origami designer. By \n            building up bases from tiles, it is possible to achieve quite \n            complex combinations of long and short flaps. In the \n            Periodical Cicada shown in Figure 8.52, six isosceles right \n            triangle tiles, four isosceles triangles and four scalene \n            triangles come together to produce six legs, two long wings, a \n            head, thorax, and abdomen.\n\n            8.8. From New Tile to New Base\n            There are many possible tiles. You can search through the ori-\n            gami literature and catalog them, then combine existing tiles \n            in new ways to realize new bases. Or, you can seek to construct \n            new tiles directly. A new type of tile can inspire a new design. \n            Squares, rectangles, and triangles are not the only possible \n            tiles. It’s possible to construct circles and rivers inside a paral-\n            lelogram as well, as shown in Figure 8.53.\n                Like a rectangle, a parallelogram can be stretched arbitrari-\n            ly; in this tile, stretching along the long direction can be taken \n            up by increasing the width of the river running vertically.\n\n                                                                                                     277\n                                                                         Chapter 8: Tiling\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c08"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 276,
  "content": "                                             For example, let’s take the isosceles triangle tile. There \n                                         are several ways of narrowing the ﬂaps. Two of the more  \n                                         common are shown in Figures 8.32 and 8.33. One keeps the \n                                         ﬂaps triangular while making them more acute; the other turns \n                                         them into quadrilaterals.\n\n\n            Figure 8.33. \n            Procedure to narrow a tile using \n            sink folds parallel to the axis of Simple tile crease 1. Open-sink the 2. Narrowed folded tile\n            the folded tile.                 pattern        side corner of the and its crease pattern.\n                                                            folded shape.\n\n                                             Which of the two you use is primarily a matter of taste. \n                                         The sequence in Figure 8.32 gives ﬂaps that taper evenly, but \n                                         it is difﬁcult to form the closely spaced creases as they converge \n                                         on the tip of the ﬂap. The sequence in Figure 8.33 distributes \n                                         the layers more evenly but doesn’t taper smoothly to its tip. \n                                         And there are many more possibilities than these: You can \n                                         sink some ﬂaps and not others, and perform double, triple, \n                                         and more complex sinks. The important thing is, this narrow-\n                                         ing can be performed after the base is folded, so you can do all \n                                         your design using the simplest possible tiles, then go back and \n                                         narrow them if desired.\n                                             You might have noticed that when we narrow a tile as in \n                                         Figures 8.32 and 8.33, some of the creases created within the \n                                         tiles end up lying along the axis in the folded form; that is, they \n                                         are also axial creases. For example, the isosceles triangle tile \n                                         narrowed with angular sinks has several new creases that lie \n                                         along the axis in the folded form, as shown in Figure 8.34.\n\n\n            Figure 8.34. \n            The narrowed isosceles tile \n            with all axial creases colored \n            green. It can be considered to \n            be composed of three triangular \n            tiles and their circles.\n\n     264\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c09"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 510,
  "content": "                                         Figure 12.39. \n                                         A plate from Giegher’s Trattato delle piegature (1639). Image courtesy \n                                         of Joan Sallas. \n\n                                         to parallel-pleated cloth. We can identify, develop, and apply \n                                         these techniques to paper as well. But, going further, we can \n                                         integrate them into the collection of other structures that we \n                                         have already identiﬁed as part of box pleating.\n                                             Pleats, by themselves, can create texture and repeating \n                                         patterns. A set of alternating mountain and valley folds cre-\n                                         ates parallel lines in visual perception. By stretching out one \n                                         side of a set of pleats, one can create radial lines as well—and \n                                         a smooth curve, or a reasonable approximation thereof, along \n                                         the stretched out edge, as illustrated in a simple example in \n                                         Figure 12.40.\n                                             Nearly everyone has done something like this: the per-\n                                         son is rare who has not folded up a sheet of paper to make an \n                                         impromptu fan. To turn this into an origami design problem \n                                         (and to keep up your skills), you might ponder the following \n                                         problems, one analytic, one practical.\n\n     498\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c0a"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 504,
  "content": "                                             The easiest way to join two ﬂaps so that both the crease \n                                         pattern and the folded form lie ﬂat is to look for ﬂap conﬁgura-\n                                         tions where the raw edges that are to be joined lie along a single \n                                         line. Looking through our menagerie of edge ﬂaps, you can see \n                                         that the white-up 2-unit ﬂap of Figure 12.28 has exactly that \n                                         property. The raw edges to be joined lie along the vertical left \n                                         side of the ﬂap; and so we can join this ﬂap and its mirror im-\n                                         age to create a single middle ﬂap. Joining the crease patterns \n                                         in the same way gives the crease pattern for the corresponding \n                                         middle ﬂap. This process is shown in Figure 12.34.\n\n\n                                         Figure 12.34. \n                                         Left: two edge ﬂaps, about to be joined: folded form (top) and crease \n                                         pattern (bottom). \n                                         Right: A single middle ﬂap, in folded form (top) and crease pattern \n                                         (bottom).\n\n                                             By grafting pairs of longer edge ﬂaps, one can create lon-\n                                         ger middle ﬂaps, and by grafting strips in between the edge \n                                         ﬂaps, one can create wider ﬂaps as well. Not only that: there \n                                         are further variations possible in which the layers are stacked \n                                         differently, which one can construct by folding an example ﬂap \n                                         and then turning various of the pleats inside-out and/or by \n                                         ﬂipping them from side to side.\n\n     492\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c0b"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 262,
  "content": "                                             Note that in the process of adding a vertical strip, we also \n                                         created new horizontal axial creases. The Bird Base was com-\n                                         posed of four axial polygons, which are four identical triangles. \n                                         But our inserted strip graft is similarly composed of polygons \n                                         whose boundaries are axial creases (or the raw edge of the \n                                         paper): In addition to the four triangles of the Bird Base, we \n                                         have added two rectangles and two triangles.\n                                             We can now view grafts in a new light. While we have previ-\n                                         ously distinguished between the original base and the strip or \n                                         border graft that we’ve added to the pattern, they are really not \n                                         so different. Both the base and the graft are composed of the same \n                                         fundamental elements, which are the axial polygons. The cre-\n                                         ation of a graft simply divides the initial crease pattern—itself \n                                         a collection of axial polygons—along its axial folds, then inserts \n                                         additional axial polygons into the opening as the graft.\n                                             This uniﬁcation allows us to approach design in a new \n                                         way. In the past, we have almost always started with a base \n                                         and then wrought variations upon it. But since bases are all \n                                         composed of axial polygons, we can dispense with the idea of \n                                         starting from a base and adding grafts; instead, we can actually \n                                         build a base from scratch—maybe grafted, maybe not—simply \n                                         by assembling axial polygons into a crease pattern. If we think \n                                         of each axial polygon as a tile of creases, then the problem of \n                                         design becomes a problem in ﬁtting tiles together in such a way \n                                         that we obtain all the desired ﬂaps in our base, and the tiles \n                                         ﬁt together to make a square.\n\n                                         8.3. Tiles of Creases\n                                         We have already encountered several possible tiles in the Clas-\n                                         sic Bases and the grafted variants seen so far. Let’s enumerate \n                                         them.\n\n\n                                     (a)                        (b)                         (c)\n                                         Figure 8.10. \n                                         Crease pattern and folded form for three orientations of the triangular \n                                         tile that makes up the Classic Bases.\n\n     250\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c0c"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 705,
  "content": "./origami_dataset_dev/Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li/page705_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c0d"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 538,
  "content": "           45. Lift up one layer. The model will not lie flat. 46. Fold the near edge down to the bottom. The crease\n                                                         doesn’t run all the way across the model so the paper\n                                                         does not lie completely flat.\n\n\n           47. Fold and unfold through a single layer.   48. Fold one layer over to the right and simultaneously\n                                                         fold the bottom left corner up along a diagonal crease.\n\n\n           49. Mountain-fold the edge on the existing crease, 50. Close up the two open layers.\n           making a small squash fold at its bottom.\n\n                             45–50\n\n\n           51. Repeat behind.                            52. Crimp the right side of the T downward, crimping\n                                                         each pleat individually so that no two pleats are trapped\n                                                         together.\n\n\n                                 53. Crimp the left side of the T upward, weaving the pleated\n                                 layers between each other so that no two pleats are trapped\n                                 together.\n\n     526\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c0e"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 712,
  "content": "                                         large, ﬂat regions are not usually produced by a circle- or \n                                         polygon-packed base, because the process of maximizing the \n                                         length of a ﬂap often minimizes its width. Additionally, large, \n                                         bulbous, three-dimensional shapes do not typically arise from \n                                         circle packing, ﬁrst because uniaxial bases lie ﬂat by design, \n                                         and second because (again) the process of optimizing the length \n                                         of ﬂaps tends to cut down on their width. With subjects that \n                                         have large, two-dimensional expanses of surface, other tech-\n                                         niques must be employed. Attempting to design such a subject \n                                         using packing is akin to using a pair of pliers to pound nails: it \n                                         can be done, but the results are often unsatisfactory.\n                                             However, packing can have a place in such a design, if \n                                         you use it when it’s appropriate. In a design that combines \n                                         large, ﬂat expanses with many narrow ﬂaps, you can allocate \n                                         polygons of paper for the ﬂat regions and then tie them all \n                                         together with regions of circle or polygon packing to generate \n                                         the required ﬂaps.\n\n                                         15.1. Flats and Flaps\n                                         Here is an example of this hybrid approach. While circle packing \n                                         is ideal for the design of insects and other arthropods (as you \n                                         might expect from the many arthropodic examples I’ve shown), \n                                         it does not work particularly well for a butterﬂy or moth. In the \n                                         members of the order Lepidoptera, the wings are the dominant \n                                         structure in the model; indeed, for many years, the only origami \n                                         butterﬂies consisted of wings only, plus, perhaps, a few crimps \n                                         and/or blunt points to suggest a body. Legs and antennae were \n                                         not even considered.\n                                             As the new geometric design techniques were discovered \n                                         during the early 1980s, however, several folders cast their eye \n                                         on the butterﬂy for its unique challenge: how to create large \n                                         wings, plus small body, legs, and antennae (and, in some cases, \n                                         even faceted eyes and proboscis!). Artist and architect Peter \n                                         Engel devised the ﬁrst (and still perhaps the best in terms of \n                                         its usage of the paper); by the end of the 20th century, several \n                                         other folders, including myself, had followed in his path.\n                                             The problem of combining large ﬂat wings with small legs \n                                         and features provides a nice challenge. Both butterﬂies and \n                                         moths have four large wings, but since the fore and hind wings \n                                         inevitably overlap, one always has the choice of representing \n                                         the pair by one or two distinct panels of paper.\n                                             The observation that all four of a butterﬂy’s wings are \n                                         roughly triangular suggests one approach: Create each wing \n                                         ﬂap from a folded-in-half square region, as shown in Figure 15.1. \n                                         We will allocate four such squares (one for each wing) at each \n\n     700\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c0f"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 74,
  "content": "                                         shown all creases as generic creases in the ﬁgure to emphasize \n                                         this commonality.\n                                             Two of these isosceles triangles can be assembled into a \n                                         square, yielding the Kite Base. Four give the Fish Base. Eight \n                                         give the Bird Base. Sixteen give the Frog Base. The pattern \n                                         is clear. We could easily go to 32, in which case we would end \n                                         up with the blintzed Bird Base. There’s no need to stop there, \n                                         and origami designers haven’t. In the mid-20th century Akira \n                                         Yoshizawa devised a Crab based on the blintzed Frog Base, with \n                                         64 copies of the triangle; more recently, the crease pattern for \n                                         my own Sea Urchin (Figure 4.8), which incorporates 128 copies \n                                         of this triangle, creates a base with 25 equal-length ﬂaps.\n\n\n            Figure 4.8. \n            Crease pattern and folded form \n            of Sea Urchin.\n\n\n                                             The repeating pattern of triangles—ﬁrst observed by Eric \n                                         Kenneway in his column in British Origami magazine, “The \n                                         ABCs of Origami”—is more than a geometrical curiosity. As we \n                                         increase the number of triangles, we also increase the number \n                                         of long ﬂaps in the resulting base. The ﬁrst three crease pat-\n                                         terns suggest a simple relationship between the numbers of \n                                         triangles and long ﬂaps: \n\n                                                     Base        Triangles        Flaps\n                                                      Kite           2              1\n                                                      Fish           4              2\n                                                      Bird           8              4\n\n                                         These three crease patterns suggest that the number of long \n                                         ﬂaps is half the number of triangles in the base. But small \n                                         numbers can be deceiving. A small number of examples can \n                                         masquerade as many possible sequences—for the very next \n                                         base breaks the pattern: \n\n\n      62\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c10"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 702,
  "content": "./origami_dataset_dev/Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li/page702_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c11"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 60,
  "content": "                                         but illustrate some basic principles of origami design that are \n                                         worth identifying: \n\n                                               Generally, the more long points a model has, the \n                                               more complex its folding sequence must be.\n\n                                               Generally, the more long points a model has, the \n                                               smaller the ﬁnal model will be relative to the size \n                                               of the square.\n\n                                             These principles were widely known in the origami world \n                                         of the 1960s and 1970s, but it was not until the 1980s and \n                                         1990s that they could be quantiﬁed. Those two decades saw \n                                         the appearance of a new type of origami, the “technical fold.” \n                                         It is hard to deﬁne precisely what constitutes technical fold-\n                                         ing; technical folding tends to be fairly complex and detailed, \n                                         encompassing insects, crustaceans, and other point-ridden \n                                         animals. It is often geometric, as in box-pleated models and \n                                         polyhedra. The early practitioners of what we call technical \n                                         folding—Neal Elias, Max Hulme, Kosho Uchiyama, and a \n                                         handful of others—were joined by a host of other folders—\n                                         Montroll, Engel, and myself in the U.S., Fujimoto, Maekawa, \n                                         Kawahata, Yoshino, Kamiya, Meguro, and many others in \n                                         Japan—an expansion of the art that continues today. In fact, tech-\n                                         nical folding has its own name in Japan: origami sekkei. It is difﬁ-\n                                         cult to pin down a unique characteristic of a model that deﬁnes it \n                                         as origami sekkei, but I have a candidate criterion: A fold is a tech-\n                                         nical fold when its underlying structure shows clear evidence of \n                                         intentional design.\n                                             The ﬁrst steps of design, however, do not require use of \n                                         any specialized techniques or mathematical theorems. Anyone \n                                         who can fold origami can design origami. In fact, if you folded \n                                         one of the three elephant designs, you were calling upon your \n                                         design skill. A sequence of folding diagrams—no matter how \n                                         detailed—can still only provide a set of samples of what is a \n                                         continuous process. In following a folding sequence, the reader \n                                         must interpolate; he must connect the steps in his mind to form \n                                         a continuous process. Depending on the amount of detail into \n                                         which the steps are broken down, this process can be easy, as \n                                         in Figure 3.6, or it can be difﬁcult, as in Figure 3.7.\n                                             A good origami diagrammer, balancing the needs of \n                                         brevity and clarity, strives to match the level of detail to the \n                                         complexity of the fold and to the intended audience. In this \n                                         book, I have aimed for a middle ground, along the lines of \n                                         Figure 3.8.\n                                             When you begin following diagrams, you require each \n                                         instruction to be broken down into the smallest possible steps. \n\n      48\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c12"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 706,
  "content": "             Cyclomatus metallifer\n\n\n             Divide the top edge into 50ths and then mark the odd-\n             numbered divisions. Use these marks as the basis of\n             a 30° grid, working from the top downward; the\n             bottom of the paper won’t line up with the grid. Then\n             use these marks as references to precrease the folds.\n\n\n     694\n                         Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c13"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 48,
  "content": "                                      1. A double sink is  2. Always pre-crease 3. Form both the mountain\n                                      indicated by parallel all lines of a multiple and valley folds running all\n                                      mountain and valley  sink before opening. the way around the flattened\n                                      creases with a push                      polygon.\n                                      arrow.\n\n\n                                           4. Finished double sink.\n\n                                         Figure 2.44. \n                                         A double sink, how to make it, and its crease pattern.\n\n                                             Sinks were recognized as distinct origami steps in the \n                                         late 1950s and early 1960s. However, it took until the 1980s \n                                         for a new variant to become common, the closed sink (whose \n                                         recognition forced the division of sinks into “open” and “closed” \n                                         varieties). A closed sink is also an inversion of a point, but in \n                                         such a way that it is not possible to open the point ﬂat while \n                                         performing the maneuver. This makes closed sinks extremely \n                                         hard to perform. In fact, from a strictly mathematical viewpoint, \n                                         it is impossible to perform a closed sink using a ﬁnite number \n                                         of folds (and what is impossible in mathematics is usually \n                                         pretty hard in reality). That we can make closed sinks at all is \n                                         due to the ability to “roll” a crease through one or more folded \n                                         layers of paper.\n                                             Superﬁcially, a closed sink is diagrammed the same way \n                                         as an open sink: a push arrow and a mountain fold. However, \n                                         in the closed sink, instead of forming the mountain fold all the \n                                         way around every layer, some of the layers are held together, \n                                         forming a cone, and the point is inverted through the cone \n\n      36\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c14"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 699,
  "content": "           Salt Creek Tiger \n           Beetle\n\n\n           Mark the edges of a 24×24 square grid; then use the\n           edge markings to locate the interior vertices. The two\n           flaps that form the jaws are middle points, and so\n           will be a bit more of a challenge to collapse. You\n           should precrease the angled creases near the tips of\n           several points before the collapse for the best precision.\n\n\n                                                                                           687\n                                                  Crease Patterns:Chapter Salt 14: Creek Polygon Tiger Packing Beetle \n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c15"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 293,
  "content": "./origami_dataset_dev/Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li/page293_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c16"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 666,
  "content": "                                         ﬂaps mess up the contour spacing along the sides. However, \n                                         by introducing half-unit-wide meanders at selected places, we \n                                         can straighten out the contour elevations, limiting the axial+1/2 \n                                         folded contours to just a few hidden locations.\n\n\n                                              ?\n\n\n                                              ?\n            Figure 14.32. \n            A packing of rivers and rect-\n            angles that gives rise to a seg-\n            mented ﬂap like the one on the    ?\n            right. Rivers are highlighted. \n            On the left, the pattern of ridge \n            creases breaks the alternation of \n            elevations. On the right, selected \n            meanders ﬁx the problem.\n\n                                             The left side of the packing in Figure 14.32 shows a \n                                         straightforward packing of 1-unit-tall rectangles and simple \n                                         rivers. (I have highlighted the hinges and rivers to help distin-\n                                         guish them.) If we come in from the top with alternating axial \n                                         and axial+1 contours, though, the pattern of ridges forces pairs \n                                         of same-elevation creases to be one unit apart; furthermore, \n                                         there is no way to assign the creases marked with “?” without \n                                         creating further elevation errors. On the right side, however, \n                                         by selectively introducing half-unit meanders into three of the \n                                         rivers, we can compensate for this problem so that the creases \n                                         running down the side similarly alternate axial/axial+1. \n                                             There’s often more than one way to solve a design prob-\n                                         lem, and sometimes very slight changes in the design can be \n                                         met by very different solutions. Shifting all of the 1-unit ﬂaps \n                                         downward by 1/2 unit barely changes the crease pattern and \n                                         doesn’t alter the underlying problem of forced contours at the \n                                         same elevation. However, with this shift, an elegant application \n                                         of level shifters reveals itself; although one could, in principle, \n                                         use the symmetric level shifters of Figure 14.7, the asymmetric \n                                         version of Figure 14.9 permits a particularly simple and elegant \n                                         solution to getting alternating elevation down the sides, as in \n                                         Figure 14.33.\n                                             I have used both of these techniques in several designs to \n                                         realize segmented body portions. One example is illustrated \n\n     654\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c17"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 100,
  "content": "              8. Fold it back to the left along a    9. Unfold to step 6.         10. Reverse-fold the flap in\n              vertical crease that lines up with                                  and back out, using the creases\n              the center line of the model.                                       you made in steps 6–8.\n\n\n                                   7–10\n\n\n                  11. Repeat steps 7–10            12. Turn the paper over.    13. Fold the bottom edge up to the left\n                  on the right.                                                diagonal, crease only as far as shown,\n                                                                               and unfold. Repeat on the right.\n\n\n                   14. Fold the bottom          15. Fold the left flap over along 16. Fold it back to the left along a\n                   edge up and unfold.          a vertical crease that lines up vertical crease that lines up with\n                                                with the edge behind it.        the center line. The flap also lines\n                                                                                up with the flap behind it.\n\n\n                                  15–17\n                                                                                         B\n\n\n                                                                                   A\n\n               17. Unfold to step 15, and          18. Fold and unfold              19. Make a crease that\n               repeat steps 15–17 on the right.    along an angle bisector.         connects points A and B.\n\n      88\n                         Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c18"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 114,
  "content": "            Figure 5.10. \n            The ﬁnished point pair compared \n            to the original ﬂap length.\n\n\n            Figure 5.11. \n            The ideal split is about 50% \n            longer than the Yoshizawa split \n            for the same starting ﬂap.\n\n                                             The ideal split takes more folds to perform if you fold it \n                                         as shown in Figure 5.9, but that sequence was designed to \n                                         illustrate the connection between the paths and crease pat-\n                                         tern. That’s not necessarily the most straightforward way to \n                                         fold. Once you’ve worked out the crease pattern for a model or \n                                         technique, it’s worthwhile going back and experimenting with \n                                         different ways of folding. There are many ways of performing \n                                         an ideal split on a standard ﬂap. The sequence in Figure 5.12, \n                                         which was developed by John Montroll, is one of the most \n                                         elegant.\n                                             There are numerous variations, both in arrangements of \n                                         layers (note that this sequence has a slightly different arrange-\n                                         ment of the layers) and in the folding sequence that gets you \n                                         to the ﬁnish.\n                                             Point-splitting can be used to breathe new life into old \n                                         structures. For example, few shapes are as picked-over as the \n                                         venerable Bird Base, possessed of four large ﬂaps, correspond-\n                                         ing to head, tail, and two wings. But by splitting the tail point, \n                                         we can create two legs instead of a tail; by splitting the head \n                                         point, we can create a head with an open beak, a head with a \n                                         crest, or quite another ﬂying beast altogether: a Pteranodon.\n                                             You will ﬁnd folding instructions for this ﬁgure at the end \n                                         of this chapter. It includes both ideal and Yoshizawa splits. \n\n     102\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c19"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 672,
  "content": "                                         packing. There is an entirely new family of polygon packing out \n                                         there that, unlike box pleating, has not been widely exploited. I \n                                         call it uniaxial hex pleating, or just hex pleating for short. Hex \n                                         pleating, too, is a form of polygon packing, but it uses different \n                                         polygons and rivers, with all edges running at multiples of 30°, \n                                         not 45°. Instead of leading naturally to patterns of squares, hex \n                                         pleating leads naturally to various combinations of equilateral \n                                         triangles and/or hexagons.\n                                             Like box pleating, hex pleating is most easily carried out on \n                                         a grid, both for simplicity of drawing, and to avoid the problem \n                                         of inﬁnite bouncing. But instead of using square grid patterns, \n                                         we will use a grid of equilateral triangles. The centers of the \n                                         packing circles will be at vertices of the grid; the edges of the \n                                         hinge polygons will run along these grid lines. Some examples \n                                         of hinge polygons and polygonal rivers on such a triangular \n                                         grid are illustrated in Figure 14.37.\n\n\n            Figure 14.37. \n            Hinge polygons for hex pleating. \n            Top row: 1-unit ﬂaps. \n            Middle and bottom: 1-unit rivers \n            and 2-unit ﬂaps.\n\n                                             As with uniaxial box pleating, the hinge creases run along \n                                         grid lines. Since there are three possible directions for hinge \n                                         lines rather than two, there is a much wider variety of shapes \n                                         that hex pleating hinge polygons take on. Also as with box \n                                         pleating, the minimum-size polygon for a given length ﬂap is \n                                         the minimum polygon that encloses a circle whose radius is the \n                                         length of the ﬂap. That means that the minimum-size polygon \n                                         is a hexagon; two examples are shown in Figure 14.37. Since \n                                         a hexagon is a better ﬁt to a circle than a square, this means \n                                         that hex-pleated ﬂaps can be slightly more efﬁcient than box-\n                                         pleated ﬂaps. (The difference is, however, small.)\n                                             One noticeable difference between hex pleating and box \n                                         pleating is that in the former, there is a deﬁnite distinction \n\n     660\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c1a"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 128,
  "content": "                                         Figure 5.29. \n                                         Crease pattern, base, and folded model of the Grasshopper.\n\n                                         without shortening it. For that, one must ﬁnd a way to add \n                                         paper to the model while preserving its basic structure. We’ll \n                                         ﬁnd out how in the next chapter.\n\n\n     116\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c1b"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 294,
  "content": "./origami_dataset_dev/Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li/page294_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c1c"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 302,
  "content": "",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c1d"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 464,
  "content": "             56. Fold the excess paper 57. Unfold to step 54.    58. Sink in and out.       59. Sink the corner.\n             back to the right.\n\n\n               60. Fold one flap to  61. Fold the corner back to 62. Fold the corner back to 63. Unfold to step 61.\n               the left.             the right; the crease lines up the left; the crease lines up\n                                     with the edges behind it. with the center line.\n\n\n               64. Sink the corner       65. Open-sink the         66. Fold the            67. Fold the group of\n               in and out.               corners.                  point up.               points downward.\n\n                                                                                                                 453\n                                                                  Folding Instructions:Chapter 11: Roosevelt Tree Theory Elk\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c1e"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 173,
  "content": "./origami_dataset_dev/Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li/page173_image005.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c1f"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 470,
  "content": "",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c20"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 316,
  "content": "                                             A third approach is to set the problem up mathematically \n                                         and use a computer to solve numerically for the optimum ar-\n                                         rangement. I will describe a numerical solution to the circle \n                                         packing problem in the section on tree theory later in this \n                                         book.\n                                             For small numbers of ﬂaps, you can usually ﬁnd the solution \n                                         by doodling; for large numbers of ﬂaps, the frame-and-circle jig \n                                         works well. While the number of models with more than eight \n                                         equal-sized ﬂaps dwindles rapidly with increasing numbers of \n                                         ﬂaps, it is interesting to ponder the question: What are the limits \n                                         on the sizes and types of ﬂaps? One can show that as the number \n                                         of ﬂaps N becomes very large, the length r of a ﬂap in the most \n                                         efﬁcient crease pattern approaches a value of\n                                                                     1\n                                                              r=         .                   (9–3)\n                                                                     N  32\n                                             For 1000 ﬂaps, this limit takes the value r = 0.017; for a \n                                         25-cm square, this would imply you could make a base with \n                                         1000 ﬂaps, each of which is 0.42 cm long. Within this base, there \n                                         will be at most four corner ﬂaps; there will be (4/r), or 235 edge \n                                         ﬂaps, give or take a few, and the remaining 761 ﬂaps will be \n                                         middle ﬂaps. The folding method for the base—as well as the \n                                         choice of subject—is left as an exercise for the reader.\n\n                                         9.6. Symmetry\n                                         Circle packing allows one to go directly from a description of \n                                         the ﬂap conﬁguration to the base. Each ﬂap is represented \n                                         by a circle; by packing the circles into a square and overlay-\n                                         ing tiles, we can construct a crease pattern that folds into the \n                                         desired base.\n                                             There is an important consideration, however, that we \n                                         have thus far neglected: the symmetry of the subject. Not only \n                                         must we match the number of appendages to the number of ﬂaps \n                                         in the base and the number of circles in the circle pattern; we \n                                         must also match the symmetry of the subject to the symmetry \n                                         of the base and to the symmetry of the circle pattern.\n                                             Consider, for example, a ten-appendaged subject, such as \n                                         a tarantula. (A tarantula, being a spider, has eight legs; it also \n                                         has two prominent appendages at the head, called pedipalps, \n                                         which are technically mouth parts, but that appear to be a tenth \n                                         pair of legs.) The legs of a tarantula come in pairs, one on the \n                                         right side, one on the left. Therefore, when we fold a base, all \n                                         of its ﬂaps must also come in matched pairs.\n                                             Tarantulas, like most animals, are bilaterally symmetric, \n                                         which is to say that the left side of a tarantula is the mirror \n\n     304\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c21"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 458,
  "content": "                                         24.21\n                                      26.28 20.56 11.01  0.00\n                                                            0.00\n                                                            5.24\n                                                            7.97\n\n\n                                                            22.91\n\n                                                            32.47\n\n\n             3. Repeat on the right. Turn the paper over.         4. Using the marks for reference, add the creases shown,\n                                                                  forming a grid of assorted triangles. Turn the paper\n                                                                  over again.\n\n\n             5. Crease the angle bisectors of each of the triangles. 6. If you are wet-folding, now is a good time to dampen\n                                                                  the paper. Fold on the creases shown. The result will\n                                                                  not lie flat.\n\n                                                                                                                 447\n                                                                  Folding Instructions:Chapter 11: Roosevelt Tree Theory Elk\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c22"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 99,
  "content": "./origami_dataset_dev/Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li/page099_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c23"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 459,
  "content": "                 7. Pleat on the creases shown. Don’t make any new        8. Pinch the sides on the existing creases and\n                 creases. The model will still not lie flat.              swing the top right corner down. The model\n                                                                          will still not lie flat.\n\n\n             9. Squash the base of the edge over 10. Reverse-fold the corner in and 11. Reverse-fold the corner on the\n             to the left, again using only existing mountain-fold the edge on the existing creases. The model will\n             creases. Repeat behind. The model  existing crease. The model will still still not lie flat.\n             will still not lie flat.           not lie flat.\n\n\n             12. Turn the top right flap      13. Fold the small downward-pointing flap 14. Fold a rabbit ear using the\n             inside-out and incorporate the   upward and straighten out all the layers. existing creases. Repeat behind.\n             pleats shown.                    The points will all align and the layers will\n                                              now, finally, lie flat. Crease firmly.\n\n     448\n                         Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c24"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 471,
  "content": "                                                            12Box Pleating\n\n                         ne of the characteristics of many artistic endeav-\n                         ors—as well as science and engineering, which \n                         also possess a signiﬁcant artistic component—is \n                         the presence of creative bursts. Origami is no ex-\n                         ception. The progress of origami design through \n            the 20th century was one of steady, incremental advance punc-\n            tuated by occasional episodes of remarkable creativity. This is \n            a universal phenomenon: It is as if some threshold is reached, \n            that a truly new approach to design is discovered, then the \n            technique or techniques are so rapidly explored and exploited \n            that a jaw-dropping new ﬁeld appears as if from thin air. Usu-\n            ally after the fact, historians can tease out the antecedents of \n            a particular revolution, but in the days and years leading up \n            to the critical event, no one saw it coming. This phenomenon \n            happens in many ﬁelds of endeavor: Quantum theory revo-\n            lutionized physics in the early 20th century; Impressionism \n            changed the world of painting forever. In origami, the most \n            outstanding example of a creative burst was the mid-1960s \n            appearance of Dr. Emmanuel Mooser’s Train, which ushered in \n            an era of multiple subjects from a single sheet and of origami \n            representing man-made articles, along with the collection of \n            techniques that has come to be known as box pleating.\n\n            12.1. Mooser’s Train\n            In the small, loosely knit world of Western origami, Mooser’s \n            Train, shown in Figure 12.1, was something of a bombshell. \n            While many folders had grown comfortable with the notion of \n            using multiple sheets of paper to realize a single subject—head \n            and forelegs from this square, hind legs and tail from that—here \n            was the far opposite extreme: use of a single sheet of paper to \n\n                                                                                                     459\n\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c25"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 317,
  "content": "            image of the right side. If we draw a line down the middle of a \n            tarantula (or any bilaterally symmetric animal), legs and other \n            appendages that come in pairs will lie wholly on one side or the \n            other of this line, which we call the line of mirror symmetry \n            of the model. On the other hand, most appendages that come \n            singly—such as the head or abdomen—will be made from ﬂaps \n            that lie directly upon the line of symmetry.\n                The ﬂaps of the base must show the same symmetry as \n            the tarantula. The base should have a line of mirror symmetry; \n            ﬂaps that become legs should lie wholly on one side of the line of \n            symmetry or the other. Flaps that become a head or tail should \n            lie directly on the line of symmetry. These relationships are \n            illustrated in Figure 9.13.\n\n                                 paired appendages      paired flaps\n\n\n                                                                        Figure 9.13. \n                                                                        Left: a tarantula and its line of \n                                                                        symmetry. \n                                                                        Right: a hypothetical tarantula \n                                 appendage on           flap on\n                                 symmetry line          symmetry line   base and its line of symmetry.\n\n                If the subject has bilateral symmetry, then the base should \n            have bilateral symmetry. And if the base has bilateral symme-\n            try, then the crease pattern must also have the same type of \n            symmetry. Since each ﬂap can be identiﬁed with a particular \n            circle in the crease pattern, we can’t use just any crease pattern \n            with the right number of ﬂaps; we have to use a crease pattern \n            in which each circle has the same relationship to the line of \n            symmetry as does its corresponding ﬂap in the base.\n                If the crease pattern has a line of symmetry, then (usually) \n            that line of symmetry must be one of the lines of symmetry \n            of the unmarked square. A square has a total of four mirror \n            lines of symmetry, which are illustrated in Figure 9.14. But in \n            fact, there are only two different types of symmetry possible \n            in a crease pattern. It can be symmetric about a line between \n            the middle of the two sides, which we call book symmetry; or \n\n                                                                                                     305\n                                                                  Chapter 9: Circle Packing\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c26"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 303,
  "content": "                                                               Circle 9Packing\n\n                         n the last chapter, we saw how new bases can \n                         be constructed by assembling tiles composed of \n                         crease patterns in ways that allow the individual \n                         tiles to fold ﬂat. By decorating the individual \n                         tiles with circles and rivers, we created matching \n            rules for the tiles; if two tiles mate so that their circles and riv-\n            ers line up, then the union of the two tiles can fold ﬂat without \n            creating any new creases.\n                Furthermore, we are able to use the pattern of circles and \n            rivers to divine the structure of the resulting base: how many \n            ﬂaps there are, how long they are, how they are connected to \n            one another. While a given polygon may give rise to tiles with \n            different crease patterns that have different widths of ﬂaps, any \n            two tiles with the same pattern of circles and rivers necessarily \n            gives rise to the same ﬂap conﬁguration. We can represent this \n            common conﬁguration by a stick ﬁgure, in which each segment \n            corresponds to a distinct ﬂap.\n                When we have built a valid tiled crease pattern, the circu-\n            lar arcs of mating tiles align, creating partial or full circles. A \n            contiguous segment of a circle in the tiled pattern corresponds \n            to a distinct ﬂap in the folded base. Why, you might wonder, is \n            this so? Why use circles? The choice of circles to create match-\n            ing rules is not arbitrary; there is a deep geometric connection \n            between ﬂaps and circles. The use of circles to represent ﬂaps \n            is a powerful tool within origami, and so we shall investigate \n            it a bit further.\n\n            9.1. Three Types of Flap\n            As we have already seen, in origami there are three different \n            types of ﬂaps: corner ﬂaps, edge ﬂaps, and middle ﬂaps. These \n\n                                                                                                     291\n\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c27"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 173,
  "content": "./origami_dataset_dev/Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li/page173_image004.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c28"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 465,
  "content": "              68. Fold one flap to  69. Valley-fold the corner in. 70. Fold another flap      71. Fold the corner\n              the right.            The crease lines up with the   to the left.               to the right.\n                                    edges behind it.\n\n\n              72. Fold the tip back      73. Unfold to step        74. Sink in and out.      75. Sink the corner.\n              to the left.               71.\n\n\n             76. Fold the flap over 77. Fold the flap back to the  78. Fold the tip of       79. Unfold to step 76.\n             to the left.           right. The crease lines up with the corner back to\n                                    the center line.               the left.\n\n     454\n                         Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c29"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 129,
  "content": "                                                    Folding Instructions\n\n\n                                       Pteranodon\n\n\n                                       Goatfish\n\n\n                                                                                           117\n                                                        ChapterChapter 5: Folding 5: Splitting Instructions Points\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c2a"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 115,
  "content": "                 1. Fold the top of the flap down.      2. Fold the flap up so that its right  3. Pull out the loose edge as far as\n                                                        edge is aligned with the layer         possible.\n                                                        underneath.\n\n\n                 4. Squash-fold the edge and swing      5. Pull up the loose edge as far as    6. Outside-reverse-fold the white\n                 the flap over to the left on a vertical possible, releasing the trapped paper point.\n                 fold.                                  under the flap.\n\n\n                 7. Reverse-fold the flap through the   8. Reverse-fold the flap back to the         9. Finished ideal split.\n                 model. Turn the model over.            center line.\n                Figure 5.12. \n                Folding sequence for the ideal split, after Montroll.\n                Splits can be used for more than point multiplication; as an \n                auxiliary beneﬁt, by splitting the large central point with a \n                Yoshizawa split, we can reduce its height while preserving the \n\n                                                                                                                                  103\n                                                                                     Chapter 5: Splitting Points\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c2b"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 673,
  "content": "            between “up and down” and “side to side” directions. In box \n            pleating, any hinge polygon or river that ﬁt on the grid would \n            work equally well if it were rotated by 90°. But this is not the \n            case with hex pleating. Observe that in Figure 14.37, there \n            are hinges that run horizontally, but none that run vertically. \n            The same goes for the underlying grid, of course. If we were to \n            ﬂip our grid by 90°, we could still carry out hex pleating, but \n            we would have to use a different set of hexagons and rivers, \n            ones that were ﬂipped by 90° from what is shown here.\n                As with box pleating, the ridge creases are given by the \n            straight skeleton of any polygon. That is, they propagate in-\n            ward from every corner, traveling along the angle bisectors. \n            The ridge creases for the hinge polygons of Figure 14.37 are \n            shown in Figure 14.38. The construction process is exactly \n            the same as described earlier for more complicated hinge \n            polygons.\n\n\n                                                                       Figure 14.38. \n                                                                       Ridge creases in hex-pleating \n                                                                       hinge polygons.\n\n                Hinge creases can run in any of three different directions, \n            but ridge creases can run in any of six. There are no vertical \n            hinge creases (for this orientation of the grid), but there are \n            both horizontal and vertical ridge creases, and we can see ex-\n            amples of them all here. We can also see that rivers can bend \n            at two distinct angles: 60° and, more sharply, at 120°.\n                Once one completes a packing, one constructs the axis-\n            parallel creases, beginning, typically, with the axials. If we \n            assume that all of the ﬂaps in Figures 14.37 and 14.38 are \n            axial ﬂaps (i.e., their tips are axial points), then we can con-\n            struct all of the forced axial creases—which, you may recall, \n            propagate from the tip toward any and all accessible hinge \n            creases. Figure 14.39 shows the polygons with axials added.\n\n                                                                                                     661\n                                                               Chapter 14: Polygon Packing \n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c2c"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 667,
  "content": "                       ?\n\n\n                       ?\n\n                                                                       Figure 14.33. \n                                                                       A similar packing with a solu-\n                                                                       tion via level shifters that give \n                                                                       alternating elevations down the \n                                                                       right side.\n\n            by the Cicada Nymph shown in Figure 14.34, which uses the \n            level-shifting technique of Figure 14.33 but widens the body by \n            shifting all of the elevation creases by one-half unit, effectively \n            adding a 1-unit strip down the middle of the base. \n                There are two ways to look at this contour map and base. \n            One is to think of it as an ordinary uniaxial base with a strip \n            graft down the center (and that is the way that I have illus-\n            trated it), so that the contours are at elevations 0, 1/2, 1, and 2. \n\n\n                                                             201       012\n\n\n            Figure 14.34. \n            Contour map, base with elevations marked, and folded model for \n            the Cicada Nymph.\n\n                                                                                                     655\n                                                               Chapter 14: Polygon Packing \n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c2d"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 101,
  "content": "                                                                                                        18–22\n\n\n               20. Begin to fold the left edge 21. Squash-fold the edge to the           22. Unfold to step\n               over along the existing crease, right. The mountain fold and the          18 and repeat steps\n               but don't make the crease sharp hidden valley fold (indicated by an       18–22 on the right.\n               at the bottom.                  X-ray line) are on existing creases;\n                                               the visible valley fold forms when\n                                               you flatten the model.\n\n\n                23. Fold the bottom edge up.    24. Crimp the flap using the        25. Repeat step 24 on the right.\n                                                existing creases and incorporating\n                                                the small pleat along the diagonal.\n\n\n                26. Fold a single layer of the        27. Squash-fold the            28. Reverse-fold the corner.\n                bottom edge up, but don't             exposed corner.\n                flatten the paper.\n\n\n                                                                       27–29\n\n\n                29. Reverse-fold the corner         30. Repeat steps 27–29               31. Fold the bottom\n                up inside the model.                on the right.                        edge back down.\n\n                                                                                                                  89\n                                                                       ChapterFolding 4: Instructions: Traditional  BasesBaby\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c2e"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 698,
  "content": "             Flying Walking Stick\n\n\n             Mark the edges of a 74×74 square grid. Use the edge\n             markings to locate the interior vertices. All axis-\n             parallel creases are either axial or axial+1, but the\n             middle points (that form the wing covers) make the\n             collapse a bit challenging.\n\n\n     686\n                         Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c2f"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 698,
  "content": "./origami_dataset_dev/Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li/page698_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c30"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 49,
  "content": "            without opening it out. Closed sinks are useful for locking \n            layers together, as the edges of the pocket formed by a closed \n            sink, unlike those of an open sink, cannot usually be opened \n            up. The ﬁnished result can be distinguished by the presence \n            of pleated layers inside the pocket of an open sink versus few \n            or none in a closed sink.\n\n\n                                                        Closed sink          Open sink\n\n\n            1. A closed sink is also 2. Open the point into 3. Flatten when fully 4. In an open sink, all\n            indicated by a push  a cone; starting at one inverted. In a closed sink, edges are visible at the\n            arrow, but is formed side, start inverting some edges are trapped at top of the sink.\n            differently.         the cone.           the top of the sink.\n\n            Figure 2.45. \n            Formation of a closed sink. Right: the edges of an open sink for \n            comparison.\n\n                In general, the more acute the point of a closed sink, \n            the harder it is to carry out; anything narrower than a right \n            angle is usually so difﬁcult that it’s more efﬁcient to do it in \n            two steps, as shown in Figure 2.46. First, fold the point into \n            a rabbit ear, closed-sink the top of the rabbit ear, then once \n            the sink is started, fully invert the rabbit ear back into the \n            shape of the original point.\n\n\n            1. Another way to make 2. Bring two layers of 3. Push down inside the 4. Finished closed sink.\n            a closed sink is to fold paper in front of the pocket, opening the point\n            down the point and fold rabbit ear.      back up.\n            a rabbit ear from it.\n\n            Figure 2.46. \n            How to make a closed sink from a sharp point.\n\n                                                                                                      37\n                                                                 Chapter 2: Building Blocks \n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c31"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 61,
  "content": "              1. Begin with the colored side    2. Fold and unfold.          3. Bring the four corners\n              up. Fold and unfold along the                                  together at the bottom to\n              diagonals. Turn the paper over.                                make a Preliminary Fold.\n\n                                                                                      D\n\n\n                        B                              B                              B\n\n\n                                                                                    A  C\n\n            A                      C       A                      C\n\n\n                        D                              D\n             4. Fold edges AD and CD in to   5. Petal-fold front and back to     6. The Bird Base.\n             the center line and unfold.     make a Bird Base.\n             Then fold point B down and\n             unfold.\n            Figure 3.6. \n            Detailed sequence for folding a Bird Base.\n\n            As you gain experience in following diagrams, the jumps be-\n            tween steps become larger. Instead of seeing every individual \n            crease, the creases start to come in groups of two or three. As \n            we have seen, the most common groups of creases have been \n            given names: reverse folds, rabbit-ear folds, petal folds. More \n            advanced folds may have groups of 10 or 20 creases that must \n            be all brought together at once, or several different folds must \n            occur simultaneously, or not all creases may be visible in the \n            diagram. Following such a sequence is even more a process \n            of design. Following a folding sequence is, in effect, resolving \n            a series of small design problems going from one conﬁguration \n            of the paper to the next. Designing an entirely new model is \n            the same task, merely scaled up.\n\n                                                                                                      49\n                                                                Chapter 3: Elephant Design\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c32"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 707,
  "content": "             Scorpion HP\n\n\n             Divide the side edges into 58 equal divisions. Then,\n             starting from the middle, measure off 24 divisions in\n             each direction, each horizontal division 1.155× larger\n             than the vertical divisions. There will be a little paper\n             left over at each edge; this gets folded inside. Use the\n             divisions as the basis of a 30° grid for the creases.\n\n\n                                                                                                                 695\n                                                                       CreaseChapter Patterns: 14: Polygon Scorpion Packing HP \n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c33"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 713,
  "content": "            Figure 15.1. \n            The four wings of a butterﬂy are roughly triangular; each can be \n            folded from a square region of paper.\n\n            of the four corners of the square as in Figure 15.2. The rest of \n            the paper between the four wing ﬂaps is then available to create \n            head, thorax, abdomen, antennae, and legs.\n\n\n                         wing                        wing\n\n\n                                     unassigned\n\n\n                                                                        Figure 15.2. \n                                                                        The four wings can be obtained \n                         wing                        wing               by placing the four wing-squares \n                                                                        in the four corners of the pa-\n                                                                        per.\n\n                Now, having assigned the four corner regions to become \n            wings, what to do with the rest of the paper? We will need \n            ﬂaps, of course; but just as important, we need gaps. The four \n            triangular wings of a butterﬂy are joined to each other only at \n\n                                                                                                     701\n                                                                  Chapter 15: Hybrid Bases\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c34"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 75,
  "content": "                        Base        Triangles       Flaps\n                        Frog           16             5\n\n                So the Frog has ﬁve, rather than eight, ﬂaps, as the simple \n            pattern would suggest. And the Sea Urchin really messes \n            things up: \n\n                        Base        Triangles       Flaps\n                       Urchin         128            25\n\n                You might ﬁnd it an interesting experiment to fold the \n            crease patterns that lie between the Frog and Sea Urchin \n            into bases and count the number of long ﬂaps in each (Hint: \n            start with a blintzed Bird Base and blintzed Frog Base, but \n            you will have to perform some additional manipulations to \n            free the ﬂaps).\n                So, there isn’t a simple relationship between the number \n            of triangles and the number of ﬂaps. But there is a relationship \n            nonetheless. Let us draw an arc of a circle in the triangular \n            unit; then draw each arc in the unit as it appears in the crease \n            pattern of the base.\n\n\n            (a)              (b)                 (c)                 (d)                (e)\n            Figure 4.9. \n            (a) The triangle unit, with inscribed circle. (b) Kite Base. (c) Fish \n            Base. (d) Bird Base. (e) Frog Base.\n\n                The basic triangle unit contains 1/8 of a circle. When the \n            units are combined, however, the circular arcs combine with \n            each other to form quarter-, half-, and whole circles. If we \n            count the number of distinct circular pieces, we get in the Kite \n            Base, one quarter-circle; in the Fish Base, two quarter-circles; \n            in the Bird Base, four quarter-circles; and in the Frog Base, \n            four quarter-circles plus one whole circle, making ﬁve sections \n            in all. One, two, four, and ﬁve circles—these are the same \n            numbers as the number of long ﬂaps in each of the Classic \n            Bases. (If we do the same to the Urchin pattern, we will ﬁnd \n\n                                                                                                      63\n                                                                Chapter 4: Traditional Bases\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c35"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 539,
  "content": "                      54. Fold a rabbit ear from the near  55. Crimp the arms upward.        56. Reverse-fold the tips of\n                      vertical flap. Repeat behind.                                          the flaps.\n\n\n                      57. Slightly squash-fold the hands. 58. Double-rabbit-ear the           59. Reverse-fold the point\n                                                          top point.                          to the left.\n\n\n                      60. Open out the top flap and squash it 61. Reverse-fold the foot.     62. Reverse-fold the toe and\n                      down over the back of the head, leaving Repeat behind.                 narrow the foot with mountain\n                      it rounded and three-dimensional.                                      folds. Repeat behind.\n\n\n                                                                                                                                  527\n                                                                                 FoldingChapter Instructions: 12: Box  OrganistPleating\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c36"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 505,
  "content": "                It is illustrative to consider how different patterns scale \n            with large numbers. Suppose, for example, that you wanted \n            to make a shape with 100 ﬂaps (a centipede or sea urchin, \n            perhaps). The centipede would be doable from a long rectangle; \n            you’d just keep adding to the length to add each pair of legs. \n            But suppose you wanted to make your ﬁgure from a square? \n            In that case, although you could keep adding edge ﬂaps to \n            make the square larger and larger, all of those pleats crossing \n            in the center would be effectively unused, wasted paper. But \n            middle ﬂaps constructed by box pleating are tileable, like the \n            pattern grafts of scales that we explored in Chapter 7. One \n            could, for example, create a two-dimensional array of such \n            ﬂaps, joining them edge-to-edge, as in the 2 × 2 array shown \n            in Figure 12.35. \n\n\n            Figure 12.35. \n            Left: crease pattern for a 2 × 2 array of 2-unit-long ﬂaps. \n            Right: the folded form.\n\n                With middle ﬂaps, one can tile them into arbitrarily \n            large arrays. Folding such arrays, however, can be quite the \n            challenge! In general, there is no simple folding sequence for \n            arrays of middle ﬂaps, as the intermediate stages of each ﬂap \n            require the paper around it to become highly convoluted, so \n            that the convolutions of the layers from one ﬂap interfere with \n            those of its surroundings. Still, one can imagine possibilities; \n            instead of simply making shallow, overlapping scales as in the \n\n                                                                                                     493\n                                                                  Chapter 12: Box Pleating\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c37"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 263,
  "content": "                First of all, there is the triangular tile that makes up the \n            four Classic Bases. It comes in three distinct forms, depending \n            on the orientation of the ﬂaps (see Figure 8.10).\n                These three forms are only distinguished from one \n            another by the location of the mountain fold in the crease \n            pattern and the positions of the ﬂaps in the folded form. In \n            the crease pattern within each triangle there are four folds—\n            one mountain fold and three valley folds—extending from the \n            crease intersection to the corners and edges. Note that in all \n            three cases, all edges of the triangle lie along a single line; the \n            polygonal tile is uniaxial.\n                The Lizard and Turtle bases are also composed of triangles, \n            but different ones: an isosceles triangle from the Lizard, and an \n            equilateral triangle from the Turtle, as shown in Figure 8.11. \n            These, too, are uniaxial.\n\n\n            Figure 8.11. \n            Left: the triangle tile from the Lizard base, crease pattern and folded \n            form. \n            Right: the equilateral triangle tile from the Turtle base.\n\n                Every such triangular tile has three possible folded forms, \n            just like the isosceles right triangle tile shown in Figure 8.10. \n            The creases within each tile are the three angle bisectors from \n            each corner (which always meet at a common point) as valley \n            folds, and a mountain fold that extends from the intersection \n            point perpendicularly to one of the three edges. Since there are \n            three edges, there are three possible choices for the mountain \n            fold. When we enumerate tiles, it’s not necessary to show all \n            three forms for every triangle; you should keep in mind that \n            for any triangle, all three ﬂap arrangements are possible. The \n            three tiles shown here are not the only possible triangular tiles, \n            either. In fact, it can be shown that every triangle can be turned \n            into such a tile by constructing the three angle bisectors as \n            valley folds and dropping a perpendicular mountain fold from \n            their intersection to an adjacent edge.\n                Are the only such tiles triangles? Clearly not; look again \n            at the grafted crease pattern in Figure 8.9. The strip graft is \n\n                                                                                                     251\n                                                                         Chapter 8: Tiling\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c38"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 277,
  "content": "                This example illustrates that a tile can sometimes be sub-\n            divided into smaller tiles; the isosceles triangle tile in Figure \n            8.34 can be decomposed into three more triangle tiles, each with \n            three circular arcs; and as the ﬁgure shows, the point where \n            the three tiles come together can give rise to a tiny fourth ﬂap. \n            If you fold an example and carefully examine the folded form, \n            you will ﬁnd that fourth ﬂap buried within the layers in the \n            interior of the shape.\n                Rectangular tiles can also be narrowed. A long, skinny \n            rectangular tile can be narrowed with angled sinks as shown \n            in Figure 8.35.\n\n\n                                                                        Figure 8.35. \n                                                                        A simple rectangular tile, \n                                                                        narrowed with sinks, becomes \n                                                                        a more complex tile.\n\n                As with the narrowed triangle tile, some of the creases in \n            the narrowed tile will lie along the axis of the folded form. But \n            rather than dissecting the tile into smaller tiles, it’s better to \n            think of this one as a simple tile with a few extra creases.\n                In a rectangle of high aspect ratio, the two angled sinks don’t \n            interact. But if the rectangle is shortened relative to its length, \n            the sink folds connect and introduce some new horizontal creases. \n            For the so-called silver rectangle, whose width-to-length ratio is \n            1 × √2 (this is the same proportion as European A4 letter paper, \n            210 × 297 mm), the narrowed form of the tile has a particularly \n            elegant crease pattern, shown in Figure 8.36.\n                The square, too, has a narrowed form. The simple tile for \n            a square is, as we saw, the Waterbomb Base. The narrowed \n\n\n                                                                        Figure 8.36. \n                                                                        Left: simple tile for a silver \n                                                                        rectangle. \n                                                                        Right: narrowed form of the \n                                                                        same tile.\n\n                                                                                                     265\n                                                                         Chapter 8: Tiling\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c39"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 511,
  "content": "            1. Begin with a rectangle, creased in half the long way. 2. Pinch in the middle and fan out the\n            Fold a series of equal pleats along its length. edges.\n\n\n                                                                        Figure 12.40. \n                                                                        Folding sequence for a pleated \n                                 3. The result is a near circle.        circular coaster.\n\n                First: what is the minimum length rectangle needed for the \n            ends to reach one another, i.e., to complete the circle? There are \n            two levels of answer: a quick, simple approximation (for which \n            you should ﬁnd a value close to 1:1.57); and then, a more ac-\n            curate answer that takes into account the height of the central \n            region (and therefore, the number of pleat pairs).\n                Second: if you include a bit of excess length in the rect-\n            angle, can you ﬁnd an elegant way of joining the ends after \n            you make the circle? There is no single answer to this, but it’s \n            worth pursuing; when folded from paper money, this circular \n            fan makes both a good coaster at a bar, and (depending on the \n            denomination) a good tip after you’ve ﬁnished your drink. \n                And what might one use this structure for in origami? \n            Besides the examples shown in Trattato delle piegature and \n            subsequent napkin-folding, a fan-fold shows up in Yoshizawa’s \n            peacock and many others’ origami renditions of this and similar \n            subjects. You will see it in one of my own designs in the folding \n            instructions at the end of this chapter.\n                Simple straight pleats are only the beginning, though. \n            The possibilities really begin to explode when we start adding \n            creases that run across the pleats.\n                We can add cross folds efﬁciently by making the cross folds \n            ﬁrst and then pleating. Merely the presence of the additional \n\n                                                                                                     499\n                                                                  Chapter 12: Box Pleating\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c3a"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 288,
  "content": "                                                                 1\n                                                             c =  ()Y + Z − X ,                           (8–4)\n                                                                 2\n\n                                                                 1\n                                                             c =  ()Y + Z − X ,                            (8–5)\n                                                                 2\n                                                                 1\n                                                             c =  ()Y + Z − X .                            (8–6)\n                                                                 2\n                                             In the rectangle tile, because of symmetry, there are fewer \n                                         variables: The circles all have the same radius, as shown in \n                                         Figure 8.51. If the circles have radius a and the river has width \n                                         b, then the sides of the rectangle are given by\n\n                                                                 X = 2a + b,                                (8–7)\n\n                                                                 Y = 2a.                                     (8–8)\n\n                                                                      X\n                                                          aab\n\n\n                                                   a                                     a\n\n                                                Y\n\n\n                                                    a                                    a\n            Figure 8.51. \n            A rectangular tile with a river.              aab\n\n                                             Consequently, for a given rectangle, the dimensions of the \n                                         circles and river are simply\n                                                                     1\n                                                                  a =  Y ,                                   (8–9)\n                                                                     2\n                                                                  b = X – Y.                               (8–10)\n                                              \n\n                                             For rectangles or triangles to which we have added rivers, \n                                         the radius of the circle is quite obviously reduced by the width \n                                         of the added river.\n                                             These relationships can be used to construct com-\n                                         binations of tiles that give rise to new bases with new \n\n\n     276\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c3b"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 589,
  "content": "                These are the basic geometric elements of polygon pack-\n            ing, of the uniaxial box pleating persuasion.\n                And why make a distinction between polygon packing \n            and uniaxial box pleating? Why are these not the same thing? \n            Because it’s possible to use other angles for the boundary con-\n            straints. There is an entirely new family of polygon packing \n            out there that, unlike box pleating, has not been exploited for \n            40 years, which I call “hex pleating,” that uses a different set \n            of angular constraints. We will encounter it shortly, but for \n            now, let’s continue down the path of uniaxial box pleating as \n            our exemplar of polygon packing.\n                The rules of polygon packing are simple and similar to \n            circle packing:\n\n                1. All polygons must pack without overlaps.\n                2. The centers of the minimum-size polygons (or equiva-\n                   lently, the enclosed circle) must lie within the hinge \n                   polygon.\n                3. Polygons can be expanded to ﬁll unused space; rivers \n                   may not.* \n\n            And there is one very important difference from circle packing:\n\n                4. All empty space must eventually be absorbed into \n                   some polygon; there can be no unused space.\n\n                This last rule has a straightforward explanation. In circle \n            packing, circles represent minimum usage, and empty space \n            is allowed. But in polygon packing, the polygons represent \n            actual usage, and at the end of the day, all paper must end up \n            in some ﬂap. For that reason, we are fortunate that L-shaped \n            and T-shaped and other complex shaped polygons are allowed; \n            they may very well be necessary to ﬁll all space.\n                Let’s now set up an example to illustrate the packing \n            technique. Figure 13.12 shows a simple example of a stick \n            ﬁgure with ﬁve leaf ﬂaps and one branch ﬂap and its as-\n            sociated hinge polygons—ﬁve squares (corresponding to the \n            ﬁve leaf ﬂaps) and one hinge river (corresponding to the one \n            branch ﬂap).\n                These polygons must now be packed into a square subject \n            to the four polygon packing rules above. As with circle packing, \n            we seek a rigid packing, which we can obtain by scaling up \n            the individual polygons in a uniform fashion or by enlarging/\n            shrinking the enclosing square until the elements are rigidly \n\n            * This requirement is not strictly true; we will shortly learn a technique \n            that allows rivers to be (apparently) expanded.\n\n                                                                                                     577\n                                                           Chapter 13: Uniaxial Box Pleating\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c3c"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 238,
  "content": "                                                                  0          11                             39\n\n\n                                                                  0                       45          67    78\n              13. Divide each of the gaps along the bottom edge  14. The top is divided into 39ths; the bottom is divided\n              in half.                                           into 78ths. Number the divisions from the left. Make 12\n                                                                 creases that connect top-0 with bottom-45, top-1 with\n                                                                 bottom-47, and so forth, up to top-11 with bottom-67.\n\n              0                            28          39\n\n\n              0    11          33                      78\n              15. Do the same thing going the other direction.    16. Fold each top corner down so that its edge lies\n                                                                  along one of the creases and unfold.\n\n\n                                                                                                                 227\n                                                           Folding Instructions:Chapter Western 7: Pattern Pond Grafting Turtle\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c3d"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 210,
  "content": "                                         Figure 7.1. \n                                         Crease pattern, base, and folded model of the Turtle.\n\n                                         correspondences between features of the crease pattern and \n                                         features of the model, using the base as an intermediate posi-\n                                         tion.\n                                             In this case, the base isn’t one of the Classic Bases, but \n                                         one can apply grafting to any preexisting base. An important \n                                         observation here is that the underlying structure of this base \n                                         is actually a rectangle rather than a square. The strip of paper \n                                         along the top of the crease pattern really isn’t necessary to the \n                                         base, something you can easily verify by cutting off the strip \n                                         and re-folding the base, which still has all of its ﬂaps.\n                                             If we examine the base of the Turtle and its crease pattern, \n                                         we see that the ﬂat diamond shape in the middle of the crease \n                                         pattern gives rise to the shell (as well as the head and tail). It \n                                         would be a fairly simple task to decorate it with lines to outline \n                                         the plates of a real turtle’s shell, as in Figure 7.2.\n\n\n            Figure 7.2. \n            The Turtle shell with a plate \n            pattern overlaid upon it.\n\n     198\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c3e"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 94,
  "content": "./origami_dataset_dev/Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li/page094_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c3f"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 576,
  "content": "                                         the widest possible ﬂap—and thus, the most width to work with. \n                                         And even if a ﬂap is not wide enough initially, techniques such \n                                         as strip grafting can be used to make a ﬂap wider.\n                                             Third, the vertices are at arbitrary locations, and creases \n                                         run at arbitrary angles. This is, perhaps, the most signiﬁcant \n                                         drawback of “pure” circle packing. There is no easy way to \n                                         transfer an irregular crease pattern onto the paper to be folded. \n                                         There is a strong aesthetic within origami to ﬁnd all refer-\n                                         ence points by folding alone (no measuring and marking), and \n                                         there is a substantial ﬁeld of origami-mathematics devoted to \n                                         ﬁnding both exact and approximate methods for locating refer-\n                                         ence points. But even with a tool such as my ReferenceFinder \n                                         (which can give a pure folding sequence for any point or line \n                                         in a small number of folds; see the References), a circle-packed \n                                         design can be overwhelming, with tens or hundreds of points \n                                         to be located. Even if you fall back on measure-and-mark, the \n                                         process of transferring key vertices to the square is mind-\n                                         numbingly tedious.\n                                             Circle-river packing is not the only game in town, however. \n                                         We have seen that with box pleating, all of the creases fall on \n                                         regular grids and run at just a few angles. We can introduce \n                                         ideas from box pleating into circle packing to realize techniques \n                                         closely related to circle packing that produce much more easily \n                                         foldable bases that are far more geometrically regular, with \n                                         only a slight penalty in efﬁciency. These regular patterns are \n                                         not only more easily folded; they are more easily designed, \n                                         and in fact usually require nothing more than a pencil and \n                                         grid paper to construct. Before going into them, however, I \n                                         would like to work through a real example design problem, \n                                         which will illustrate some of the problems associated with \n                                         circle packing and will also introduce some concepts essential \n                                         to their resolution.\n\n                                         13.2. A Circle-Packed Beetle\n                                         Let me start with a real problem, of the sort that inspired much \n                                         of the development of circle packing: an insect. To be speciﬁc, \n                                         I will design a beetle—a rather generic beetle, with just the \n                                         basic appendages: three sets of legs and antennae, spaced out \n                                         along a three-segment body (head, thorax, abdomen). The ﬁrst \n                                         step in the creation of this beetle is to create the tree graph, \n                                         the stick ﬁgure, and to assign lengths to all the ﬂaps. These \n                                         parts are shown in Figure 13.1.\n                                             The absolute lengths that one assigns to a ﬂap are entirely \n                                         arbitrary; what matters is their length relative to one another. \n                                         To make this simple, I have chosen all of the ﬂap lengths to \n\n     564\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c40"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 562,
  "content": "                                                  122. Fold the sides in\n                                                  and the bottom up.\n\n              121. Swing the clock face behind and                                123. Turn the model over.\n              fold the smaller bundle of flaps upward\n              in front.\n\n\n                                                  125. Fold the side over and\n                                                  incorporate the reverse fold\n                                                  shown.\n                 124. Fold a single layer down.                                126. Bring a layer to the front.\n\n     550\n                         Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c41"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 204,
  "content": "                                                                        31–33                31–33\n\n\n           32. Closed-sink the  33. Closed-sink the    34. Repeat on the next 35. Repeat on the next\n           layer back upward.   layer one last time.   farthest layer.      layer.\n\n\n                         31–33\n\n                                                    28–36\n\n\n                                                                               39. The next few steps\n                                                                               will focus on the foot.\n\n           36. Repeat on the       37. Fold the flap   38. Repeat on the left.\n           remaining layer.        to the right.\n\n\n     192\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c42"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 695,
  "content": "./origami_dataset_dev/Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li/page695_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c43"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 748,
  "content": "                                             Robert J. Lang, “The tree method of origami design,” Origami Science \n                                             & Art: Proceedings of the Second International Meeting of Origami \n                                             Science and Scientiﬁc Origami, op. cit., pp. 73–82.\n\n                                             A more complete and more formal treatment may be found in:\n\n                                             Robert J. Lang, “A computational algorithm for origami design,” Com-\n                                             putational Geometry: 12th Annual ACM Symposium, Philadelphia, \n                                             Pennsylvania, May 24–26, 1996, pp. 98–105.\n\n                                             Robert J. Lang and Erik Demaine, “Facet ordering and crease as-\n                                             signment in uniaxial bases,” in Origami4, Natick, Massachusetts, \n                                             A K Peters, 2009, pp. 189–206.\n\n                                             A full folding sequence for the Scorpion of Figure 11.35 may be \n                                             found in:\n\n                                             Robert J. Lang, Origami Insects II, op. cit., pp. 76–85.\n\n                                             A full folding sequence for the Flying Grasshopper of Figure 11.36 \n                                             may be found in:\n\n                                             Robert J. Lang, Origami Insects II, ibid., pp. 141–153.\n\n                                             The properties of distorted Bird Base crease patterns and associated \n                                             quadrilaterals are summarized in:\n\n                                             Toshikazu Kawasaki, “The geometry of orizuru,” in Origami3, op. \n                                             cit., pp. 61–73.\n\n                                             Fumiaki Kawahata’s string-of beads method and the associated mol-\n                                             ecules are described in:\n\n                                             Fumiaki Kawahata, “The technique to fold free ﬂaps of formative art \n                                             ‘origami,’” in Koryo Miura (ed.), Origami Science & Art: Proceedings \n                                             of the Second International Meeting of Origami Science and Scientiﬁc \n                                             Origami, op. cit., pp. 63–71.\n\n                                             Fumiaki Kawahata, Fantasy Origami, Tokyo, Gallery Origami House, \n                                             1995, pp. 174–179.\n\n                                             Additional papers on the underlying mathematics of origami include \n                                             the following: \n\n                                             Esther M. Arkin, Michael A. Bender, Erik D. Demaine, Martin L. \n                                             Demaine, Joseph S. B. Mitchell, Saurabh Sethia, and Steven S. \n                                             Skiena, “When can you fold a map?,” Proceedings of the 7th Workshop \n                                             on Algorithms and Data Structures, edited by F. Dehne, J.–R. Sack, \n                                             and R. Tamassia, Lecture Notes in Computer Science, volume 2125, \n                                             Providence, Rhode Island, August 2001, pp. 401–413.\n\n                                             Hideki Azuma, “Some mathematical observations on ﬂat foldings \n                                             (abstract),” Abstracts for the Second International Meeting of Origami \n                                             Science and Scientiﬁc Origami, Otsu, Japan, 1994, pp. 45–46.\n\n\n     736\n                         Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c44"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 12,
  "content": "            statement of the tree theorem in Chapter 11 and that helped \n            crystallize many of the concepts of polygon packing.\n                I would like to thank my editors, Heather Holcombe (ﬁrst \n            edition) and Charlotte Henderson (second edition), for helpful \n            suggestions, corrections, and especially patience.\n                Last, but most important, I must thank my wife, Diane, \n            for her constant support and encouragement.\n\n\n                                                                                                      xi\n                                                                       Acknowledgements\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c45"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 6,
  "content": "                                                 Table of Contents\n\n\n           Acknowledgements                                                                         ix\n           1. Introduction                                                                1\n           2. Building Blocks                                                          11\n           3. Elephant Design                                                         41\n           4. Traditional Bases                                                       53\n              Folding Instructions                                                             \n                 Stealth Fighter                                                                 74\n                 Snail                                                                                76\n                 Valentine                                                                         78\n                 Ruby-Throated Hummingbird                                           82\n                 Baby                                                                                87\n           5. Splitting Points                                                          93\n              Folding Instructions\n                 Pteranodon                                                                   118\n                 Goatfish                                                                        123\n           6. Grafting                                                                  129\n              Folding Instructions\n                 Songbird 1                                                                    162\n                 KNL Dragon                                                                  168\n                 Lizard                                                                            174\n                 Tree Frog                                                                       179\n                 Dancing Crane                                                               188\n\n\n                                                                                             v\n\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c46"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 760,
  "content": "                                                     O\n                                                     Offset base (page 68): a modiﬁed base formed by shifting the entire crease \n                                                     pattern on the square while preserving angles between creases, so that extra \n                                                     paper is created in some locations while others lose paper.\n                                                     Open sink fold (page 34): a sink fold in which the point to be sunk can be \n                                                     entirely ﬂattened during the course of the sink.\n                                                     Origami (page 1): the art of folding paper into decorative shapes, usually \n                                                     from uncut squares.\n                                                     Origami sekkei: see Technical folding.\n                                                     Outside reverse fold (page 23): a method of changing the direction of a \n                                                     ﬂap, wherein the moving layers are inverted and wrapped around the sta-\n                                                     tionary layers.\n\n                                                     P\n                                                     Parity: see Crease assignment.\n                                                     Path (page 408): a line between two leaf vertices in the crease pattern.\n                                                     Path conditions (page 411): the set of all inequalities relating the coordi-\n                                                     nates of the leaf vertices, the distances between their corresponding nodes, \n                                                     and a scale factor. The distance between any two vertices must be greater \n                                                     than or equal to the scaled distance between their corresponding nodes as \n                                                     measured along the tree.\n                                                     Petal fold (page 28): a combination of two squash folds in which a corner \n                                                     is lengthened and narrowed.\n                                                     Plane of projection (page 402): a plane containing the axis of the base \n                                                     and the axial edges of all ﬂaps, and that is perpendicular to the layers of \n                                                     the base.\n                                                     Plan view (page 313): a model is folded in plan view if, when it lies ﬂat, \n                                                     you are looking at the top of the subject.\n                                                     Pleat fold (page 31): a fold formed by two parallel or nearly parallel moun-\n                                                     tain and valley folds formed through all layers of a ﬂap.\n                                                     Pleat grafting (page 203): adding one or more pleats that run across a \n                                                     crease pattern in order to add features or textures formed by the intersec-\n                                                     tions of the pleats.\n                                                     Polygon packing (page 625): a design technique for creating uniaxial bases \n                                                     in which polygons represent each of the leaf ﬂaps and polygonal rivers repre-\n                                                     sent each of the branch ﬂaps in the base. Uniaxial box pleating and uniaxial \n                                                     hex pleating are both examples of polygon packing techniques.\n                                                     Precreasing (page 12): folding and unfolding to create the creases required \n                                                     for a (usually complex) step.\n                                                     Point-splitting (page 93): any of a variety of techniques for folding a single \n                                                     ﬂap so that it turns into two or more smaller ﬂaps.\n                                                     Preliminary Fold (page 56): a traditional base formed by bringing the four \n                                                     corners of the square together.\n                                                     Pythagorean stretch (page 640): a structure in uniaxial box pleated \n                                                     bases that allows ﬂap centers to be closer to each other than their polygons \n                                                     allow.\n                                                     Pythagorean stretch, extended (page 647): a variation of a Pythagorean \n                                                     stretch in which a larger perfect Pythagorean stretch overlaps a corner of \n                                                     the paper to give evenly spaced contours around the gusset.\n\n       748\n                              Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c47"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 199,
  "content": "               92. Mountain-fold the     93. Reverse-fold the      94. Turn the        95. Reverse-fold the two\n               corners at the bottoms    knees and narrow the      model over.         bottom flaps up and then out\n               of the legs.              legs on both near and                         to the sides (it’s easier to do\n                                         far sides.                                    both reverse folds on each leg\n                                                                                       before flattening). Divide the\n                                                                                       layers asymmetrically, with\n                                                                                       one layer on the near side and\n                                                                                       three on the far side.\n\n\n              96. Fold the one near edge           97. Narrow the body with           98. Crimp the forefeet,\n              of each leg flap down and            mountain and valley folds          spreading the layers\n              the three far edges behind.          that line up with the edges        symmetrically. Turn the\n                                                   behind.                            model over.\n\n\n             99. Crimp the forelegs and             100. Spread the toes.                101. Finished Tree Frog.\n             bend them downward.                    Mountain-fold the back.\n             Crimp the feet so that they            Shape the body.\n             point slightly forward.\n\n                                                                                                                 187\n                                                                      Folding Instructions:Chapter 6: Tree Grafting Frog\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c48"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 521,
  "content": "./origami_dataset_dev/Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li/page521_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c49"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 351,
  "content": "./origami_dataset_dev/Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li/page351_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c4a"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 628,
  "content": "                     19. Petal-fold the edge in front         20. Reverse-fold two edges 21. Open-sink in and out.\n                     and behind on the existing creases.      on existing creases.      Repeat behind.\n\n\n             22. Open-sink in and out again.     23. Open-sink the edge in and       24. Fan the edges of the pleated\n             Repeat behind.                      out (and in and out, and in and     layers out to the sides. The next\n                                                 out!) on the existing creases.      step will be a side view.\n                                                 Repeat behind.\n\n\n                    25. Reverse-fold four corners; the            26. Mountain-fold part of the edge\n                    diagonal creases already exist.               underneath using the existing creases.\n\n                                                                                                                 617\n                                                                  ChapterFolding 13: Instructions: Uniaxial Box Bull Pleating Moose\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c4b"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 600,
  "content": "            Figure 13.20. \n            The circle-packed beetle base, \n            with axials and gusset creases \n            highlighted.\n\n                                         angles, but in uniaxial box-pleated bases, the hinge creases are \n                                         constrained to multiples of 90°. This means that axial creases, \n                                         being perpendicular to the hinge creases, are also constrained \n                                         to run at angles that are multiples of 90°. This leads to an \n                                         interesting phenomenon, which was ﬁrst observed by   Erik \n                                         Demaine in his solution to the one-cut problem, a phenomenon \n                                         that we call “bouncing creases.” In circle-packed bases, axial \n                                         creases always propagate outward from circle centers, and so \n                                         in uniaxial box-pleated bases, it is equally tempting (and often \n                                         justiﬁed) to launch axial creases from the centers of the packed \n                                         squares or rectangles and propagate them outward toward the \n                                         edges of the hinge polygons.\n                                             Before embarking on this “March of the Axials,” however, \n                                         let us pause to address the question: What, exactly, is an “axial \n                                         crease”? It is, fundamentally, a fold that, in the folded form, \n                                         lies on the axis of the uniaxial base. We can characterize every \n                                         fold whose image in the base is parallel to the axis by its per-\n                                         pendicular distance from that axis; axial folds have distance \n                                         zero—they lie right on the axis, hence their name—while gusset \n                                         folds, for example, typically are displaced from the axis by some \n                                         distance. We call this offset distance the elevation of the fold.\n                                             The term “elevation” comes from the same intuitive physi-\n                                         cal picture of a molecule that gives the name to “ridge folds.” \n\n     588\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c4c"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 475,
  "content": "./origami_dataset_dev/Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li/page475_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c4d"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 166,
  "content": "                                             The images in Figure 6.26 illustrate the cut-and-insert \n                                         process. However, one problem arises: It’s not possible to get \n                                         all of the strips to line up. As you see in the right image, only \n                                         three out of the four rectangular strips can be aligned to the \n                                         pieces of the crease pattern.\n                                             This problem is ﬁxable, however, by making one more \n                                         cut and adding a strip down the middle of the tail. We don’t \n                                         need to divide the tail (forked tails being relatively rare among \n                                         lizards), but in this case, the strip is necessary to make the \n                                         entire graft work out.\n\n\n                                                                                ?\n\n\n                                         Figure 6.27. \n                                         Left: the dissected pattern with an additional strip down the tail. \n                                         Right: starting to draw in the strip creases.\n\n                                             In the image on the right in Figure 6.27, I’ve added creases \n                                         that create only two toes for simplicity, but you could have \n                                         easily used strip patterns for three, four, or ﬁve toes if you \n                                         so desired. (And since we don’t need to split the tail, I have \n                                         left it as a pleat.) An open question is: What happens in the \n                                         very center of the pattern when all the creases come together? \n                                         Obviously, all of the pleats that we’re making from the strips \n                                         have to terminate at each other somehow. In this case, the \n                                         easiest thing to do is to cut out the crease pattern, make the \n                                         folds that we know the location of, and then extend them \n                                         toward the center, forcing the layers to lie ﬂat as you go. The \n                                         result is shown in Figure 6.28.\n                                             Finally, to get back to a square starting shape, we em-\n                                         bed this unusual polygon into a square, which results in the \n                                         pattern on the right in Figure 6.28. I will leave the folding of \n\n     154\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c4e"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 172,
  "content": "                                         nothing more than a Preliminary Fold with crossed grafts for \n                                         the wing feathers and toes; the excess paper in the middle cre-\n                                         ated by the crossing of the two grafts is then enough to realize \n                                         a long neck and head.\n                                             Now if you have worked your way through this chapter \n                                         so far, you may quite likely feel that the concept of toes has \n                                         been thoroughly pummeled into submission. And it is true, \n                                         there is only a ﬁnite number of designs that can beneﬁt from \n                                         the addition of clusters of small points to preexisting ﬂaps. \n                                         Toes, claws, hands, feathers, and horns all have a place, but \n                                         leave the great majority of origami subject material untouched. \n                                         But by working through these speciﬁc examples, you’ve now \n                                         seen the basic concepts behind the much larger world of grafted \n                                         bases.\n                                             Cutting and gluing is not generally used in origami, but \n                                         grafting effectively allows one to achieve the same results as \n                                         cutting and gluing in an origami-acceptable way. But it does \n                                         more: To make use of grafting, one needs to start looking at \n                                         crease patterns and pieces of crease patterns as distinct enti-\n                                         ties that bring a particular function to the origami model: a \n                                         ﬂap, a set of ﬂaps, an open space. By cutting and assembling \n                                         pieces of existing bases into new bases, you can break out of \n                                         the rigid hierarchy of the traditional bases and realize entirely \n                                         new custom bases; in addition, you can selectively add patterns \n                                         and textures to all or part of a model. We will learn techniques \n                                         for both of these in the next section.\n\n\n     160\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c4f"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 614,
  "content": "                                             We begin with the same tree graph, circles, and rivers for the \n                                         left half of the crease pattern; but in anticipation of box pleating, \n                                         I have placed them on a grid, as shown in Figure 13.32.\n                                             The packing starts by turning the rivers into rectilinear \n                                         hinge rivers and wrapping the circles in the minimum-size \n                                         squares whose hinges run along grid lines. These are then \n                                         packed into the paper square, as shown in Figure 13.33. The \n                                         three squares that lie on the center line have some extra space \n                                         alongside, and so we will expand these three squares into \n                                         rectangles.\n\n\n                                                                                   4 1\n\n                                                                                   1\n                                                                                 4 1  1\n                                                                                   1\n                                                                                6  1  1\n\n                                                                                8  2\n\n                                                                                   4\n\n\n            Figure 13.33. \n            Packing of the hinge polygons \n            (squares and rectilinear rivers) \n            into the paper square (left side \n            only).\n\n                                             We can soak up some of the extra space by expanding ﬂaps \n                                         sideways. However, along the center line, we want to have an \n                                         axial crease running all the way down the model in order to be \n                                         able to unfold it into plan view. To do this, I add two more circles \n                                         (one near the head, one below the abdomen), which insures that \n                                         there is an unbroken stretch of packed circles and rivers from \n                                         the top to the bottom of the square along its symmetry line, as \n                                         shown in Figure 13.34.\n                                             Next, we add the ridges. In each polygon, the ridge is the \n                                         straight skeleton. This is a relatively simple structure, so all \n                                         of the closed hinge polygons are squares or rectangles; no L-\n                                         shaped or T-shaped ﬁgures, which keeps the pattern of ridges \n                                         relatively simple, as shown in Figure 13.35.\n\n     602\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c50"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 303,
  "content": "./origami_dataset_dev/Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li/page303_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c51"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 358,
  "content": "                                         be treated on its own. A highly complex base with numerous \n                                         points can be broken up into a collection of relatively simple \n                                         polygons, each analyzed individually; and when you have the \n                                         crease patterns for the individual polygons, you can put them \n                                         together to realize the crease pattern for the full square.\n\n                                         10.1. Tangent Points\n                                         Let us examine again some existing bases for common features \n                                         of the crease pattern that we can relate to its underlying circle \n                                         pattern. Figures 10.1 through 10.5 show the crease and circle \n                                         pattern for bases with one through ﬁve equal-sized points. \n                                         These crease patterns cover ﬁve different bases, but share sev-\n                                         eral interesting features. In each crease pattern, I’ve labeled \n                                         with a dot the point where adjacent circles touch.\n                                             Figure 10.1 shows the crease and circle pattern for the \n                                         Kite Base. The Kite Base appears to be a single ﬂap, but we can \n                                         also think of it as a base with one long ﬂap joined to one short \n                                         ﬂap; both ﬂaps are represented by circles in Figure 10.1. If we \n                                         recognize that the horizontal crease on the right in Figure 10.1 \n                                         is the boundary between the two ﬂaps, then we see that each \n                                         ﬂap is deﬁned by a circle; that the two circles touch at a point, \n                                         that is, they are tangent circles; and that there are two creases \n                                         that run through the tangent point, marked with a dot in the \n                                         ﬁgure. The crease that connects the centers of the two circles \n                                         is of a type that we have already met; it is an axial crease. The \n                                         other is perpendicular to the axial crease and is tangent to both \n                                         circles.\n\n\n            Figure 10.1. \n            Left: crease and circle pattern \n            for the one-flap Kite Base. \n            Right: the folded Kite Base.\n\n                                             Now look at Figure 10.2, which shows the crease and circle \n                                         pattern for the Fish Base. The Fish Base has two long ﬂaps and \n                                         two short ﬂaps. All four ﬂaps are represented by circles, and \n                                         adjacent circles touch. As with the Kite Base, there is an axial \n                                         crease (or raw edge) between the centers of touching circles, \n                                         and at each point of tangency, there is a crease perpendicular \n                                         to the crease between centers.\n\n     346\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c52"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 364,
  "content": "                                         that must be satisﬁed by the crease pattern within an axial \n                                         polygon: \n\n                                             • Its edges, which are all axial folds, must be brought \n                                             to lie along a single line.\n                                             • The tangent points along its boundary for each \n                                             circle must be brought together at a single point.\n\n                                             The ﬁrst part of this, the problem of collapsing a polygon so \n                                         that its edges lie on a single line, is well known in both origami \n                                         and mathematics. In mathematics, it is related to a famous prob-\n                                         lem known as the one-cut problem: How do you fold a sheet of \n                                         paper so that with a single cut, you cut out an arbitrary polygon \n                                         or collection of polygons? The one-cut problem was solved by \n                                         Erik Demaine and coworkers  (see References), using a struc-\n                                         ture from computational geometry called the straight skeleton \n                                         (which we will meet again in Chapter 13). However, the second \n                                         requirement—alignment of the tangent points—is unique to \n                                         origami and leads to new and specialized crease patterns.\n                                             Within the world of origami, I and several other artists \n                                         and scientists—notably Koji Husimi, Jun Maekawa, Toshiyuki \n                                         Meguro, Fumiaki Kawahata, and Toshikazu Kawasaki—have \n                                         studied crease patterns that allow various polygons to be col-\n                                         lapsed with their edges falling onto a single line. It turns out \n                                         that a relatively small set of crease patterns can be assembled \n                                         into very large and complex tiles, indeed, into entire crease \n                                         patterns; both those derived from circle packings, as well as \n                                         proto-patterns derived by other methods (such as the tree \n                                         method, which we will shortly encounter).\n                                             All origami uniaxial bases can be constructed from a small \n                                         set of minimal tiles. The situation is analogous to that of life \n                                         itself, wherein a small number of amino acid molecules can be \n                                         assembled into all the proteins that make life possible and that \n                                         make up the diversity of the natural kingdom. Because of this \n                                         analogy, Meguro, a biochemist, has dubbed these fundamental \n                                         tile patterns bun-shi, or molecules. In the next section, we will \n                                         explore origami molecules. By enumerating and identifying \n                                         the molecules of origami, we will develop the building blocks \n                                         of origami life.\n\n                                         10.2. Triangle Molecules\n                                         Finding a set of creases for folding a polygon so that all of its \n                                         edges fall on a line is actually quite easy. However, there can \n                                         be more than one such set of creases. Choosing the set that gets \n                                         all of the tangent points to come together can be rather difﬁcult. \n\n     352\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c53"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 472,
  "content": "./origami_dataset_dev/Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li/page472_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c54"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 402,
  "content": "             Silverfish\n\n\n             1. Begin with a square, color up.\n             Fold and unfold all the way along\n             one diagonal and only the outer\n             thirds of the other.\n\n\n             2. Fold and unfold, making a pinch\n             halfway along the right edge.\n\n\n              3. Fold the bottom left corner to 4. Fold the bottom left corner to 5. Fold and unfold two corners.\n              the mark you just made and make   the mark you just made and make   Each corner touches a crease while\n              a pinch along the bottom edge.    a pinch along the bottom edge.    the fold line goes through the mark\n                                                                                  you just made.\n\n     390\n                         Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c55"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 416,
  "content": "                                         and their connections. In particular, a tree graph does not \n                                         specify whether all of the ﬂaps in its corresponding base can \n                                         be spread apart as in Figure 11.2 or some are wrapped around \n                                         others as in Figure 11.3.\n                                             The tree graph is a schematic form that captures some of \n                                         the essential characteristics of a base: the number of ﬂaps, the \n                                         length of the ﬂaps, how they are connected to one another. It \n                                         does not capture, however, the width of the ﬂaps, nor which \n                                         ﬂaps, if any, are wrapped around others. Nevertheless, in \n                                         many cases, it is sufﬁcient for a successful origami design to \n                                         have a base with the same attributes as those conveyed by \n                                         the tree graph.\n\n                                         11.2. Paths\n                                         Suppose that we have a uniaxial base folded from a square \n                                         and that we construct its tree graph. If we unfold the base, \n                                         we get a square with a crease pattern that uniquely deﬁnes \n                                         the base. The act of projecting the base into a plane—casting \n                                         a shadow—can be thought of as deﬁning a mapping between \n                                         points on the square and points on the tree. In the language \n                                         of mathematics, it is a surjective or onto mapping—that is, for \n                                         every point on the square there is a corresponding point on the \n                                         tree, but more than one point on the square can map to the \n                                         same point on the tree.\n                                             That the mapping is not one-to-one is clear from Figure 11.3; \n                                         wherever you have vertical layers of paper, there are many points \n                                         on the base that map to the same point on the tree. However, if \n                                         the ﬂaps come to sharp points, then at the leaf nodes of the tree, \n                                         there is exactly one point on the square that maps to the node. \n                                         Thus, for each ﬂap of the base, we can identify a unique point \n                                         on the square that becomes the tip of the ﬂap.\n                                             A sharp point must be formed by several creases that come \n                                         together at the point. Thus, there is a vertex in the crease pat-\n                                         tern at this point. Such a vertex maps one-to-one to a leaf node \n                                         of the tree; we therefore call it a leaf vertex.\n                                             Let us resurrect the shy bookworm from Chapter 5; recall \n                                         that this bookworm travels entirely within a sheet of paper \n                                         between the two surfaces, never leaving one sheet or crossing \n                                         from one sheet to another. Suppose the bookworm were sitting \n                                         at the tip of one of the legs of the base and wished to travel to \n                                         another part of the base—say, the tail—without leaving the \n                                         paper, as shown in Figure 11.4. It would have to crawl down the \n                                         foreleg to the body, down the body, and back out the tail. The \n                                         distance it traveled would be (length of the foreleg) + (length \n                                         of the body) + (length of the tail).\n\n     404\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c56"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 370,
  "content": "                                                                         Four tangent\n                                                                         points come\n                                                                         together\n\n\n            Figure 10.17. \n            Top: for one set of circles, the four \n            tangent points come together. \n            Bottom: for all other sets of \n            circles, the tangent points do \n            not align.                                                    Four points    tangent point\n                                                                          come together\n\n\n            Figure 10.18.\n            Waterbomb molecule crease \n            pattern within a four-circle \n            rhombus. Note that the perpen-\n            diculars do not hit the tangent \n            points.\n\n                                         10.5. Arrowhead Molecule\n                                         Although the Waterbomb molecule doesn’t always bring the \n                                         tangent points together, there are other crease patterns that \n                                         do. One that is quite simple to construct and fold is shown in \n                                         Figure 10.19. This pattern, described by Meguro and Maekawa, \n                                         will always bring the four tangent points together. We call it \n                                         the arrowhead molecule.\n                                             There is usually more than one arrowhead molecule that \n                                         can be constructed from a given quadrilateral. In Figure 10.19, \n                                         we started from the lower left corner; however, we could have \n                                         as easily started from the upper right corner and derived the \n                                         molecule whose crease pattern is shown in Figure 10.20.\n                                             A nice feature of the arrowhead molecule is that all of \n                                         the creases are easily constructed either by computation or \n\n     358\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c57"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 417,
  "content": "                                                                        Figure 11.4. \n                                                                        A bookworm wishes to go from a \n                                                                        foreleg to the tail along the base. \n                                                                        It can take several different \n                                                                        paths, but the most direct path \n                                                                        is the path that lies in the plane \n                                                                        of projection.\n\n                Now, let’s think about what the path of the bookworm would \n            look like on the unfolded square, as shown in Figure 11.5 (you can \n            imagine dipping the bookworm into ink so that it leaves a trail \n            soaking through the paper as it crawled). Clearly, it starts and \n            ends at a leaf vertex. On the square, the path might go directly \n            from one leaf vertex to the other, or it might meander around \n            a bit, or it might even backtrack. If it travels via the shortest \n            route, then the path length on the square is equal to the length \n            as measured along the bottom of the base. Any meandering \n            or backtracking will make the path longer. Thus, the distance \n            traveled on the unfolded square must be at least as long as the \n            minimum distance traveled along the base.\n\n\n                    leaf vertex\n                     (foreleg)\n\n\n                                                                        Figure 11.5. \n                                               leaf vertex\n                                               (tail)                   The trail of the bookworm.\n\n                This illustrates an extremely important property of any \n            mapping from a square to a base: Although our example went \n            from one leaf vertex to another, the property is general: The \n            distance between any two points on the square must be greater \n            than or equal to the distance between the two corresponding \n            points on the base.\n\n                                                                                                     405\n                                                                   Chapter 11: Tree Theory\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c58"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 371,
  "content": "                1. Begin with the four angle bisectors. 2. Draw lines from the intersection back 3. Draw two more lines each from the\n                Draw lines from two adjacent tangent   out to two diagonally opposite corners. corners making equal pairs of angles at\n                points perpendicular to the edges until                                       the two corners.\n                they meet at the bisector.\n\n\n                4. Bisect the remaining paper at each of 5. Add a crease connecting two crease 6. Add two creases emanating from the\n                the diagonal corners.                  intersections.                         intersection and perpendicular to the two\n                                                                                              creases shown.\n\n\n                7. Connect the crease intersections with 8. Assign creases to complete the crease 9. Using these creases, collapse the shape.\n                the tangent points.                    pattern.\n\n\n                                                       10. Finished arrowhead molecule. Note\n                                                       that now all four tangent points come\n                                                       together.\n                Figure 10.19. \n                Construction of the arrowhead molecule.\n\n                by folding. A drawback of the arrowhead molecule is that \n                when folded, more edges than just the outer edges lie along \n                the axis of the base. In fact, the creases marked in green on \n                the left in Figure 10.21 also lie along the axis as well as the \n\n                                                                                                                                  359\n                                                                                         Chapter 10: Molecules\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c59"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 86,
  "content": "./origami_dataset_dev/Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li/page086_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c5a"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 365,
  "content": "            Figure 10.10. \n            The rabbit-ear fold brings together all edges of a triangle so that they \n            lie on a line. Furthermore, the tangent points are all brought together \n            to meet at a point. \n            Left: crease pattern. \n            Middle: folding sequence. \n            Right: the folded form.\n\n            Meeting this second condition gets harder the more tangent \n            points there are to align simultaneously, and since there is one \n            tangent point for each edge of the polygon, smaller polygons \n            are easier to ﬁnd creases for than larger ones. Thus, let us start \n            with the smallest nontrivial polygon—a triangle—and work out \n            a crease pattern that meets the two conditions above.\n                Figure 10.10 shows an arbitrary triangle formed by three \n            touching circles. If you have been folding origami for any \n            length of time, you have already encountered a technique for \n            collapsing all of the edges of a triangle onto a line: the humble \n            rabbit-ear fold. The rabbit ear is formed by folding all three \n            corners of the triangle along the angle bisectors (which meet \n            at a point); one of the points is swung over to one side and the \n            entire structure ﬂattened. That any arbitrary triangle can be \n            folded into a rabbit ear was noted by Justin, Husimi and Ka-\n            wasaki; however, the geometric relations underlying the rabbit \n            ear (that the angle bisectors meet at a point and that adjacent \n            triangles formed by dropping lines from the bisector intersec-\n            tion to all three sides are congruent) were originally proven by \n            Euclid over 2000 years ago. Thus, the seeds of origami design \n            were sown in antiquity.\n                For origami purposes, however, we need to satisfy both \n            alignment conditions. It is not enough simply that the edges of \n            the triangle all fall on a line. It is also essential that the tangent \n            points all come together. Fortunately, it is not difﬁcult to prove \n            mathematically that for any triangle formed by connecting the \n            centers of three touching circles, the rabbit-ear crease pattern \n            brings together the tangent points as well.\n                Therefore, we now have a construction for ﬁnding the \n            crease patterns for any triangular polygon; just fold a rabbit \n            ear. Or, to construct the creases without folding, construct the \n\n                                                                                                     353\n                                                                    Chapter 10: Molecules\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c5b"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 403,
  "content": "              6. Add two more folds on the other 7. Fold and unfold along four angle 8. Fold and unfold.\n              two corners. Turn the paper over. bisectors. Turn the paper back over.\n\n\n             9. Fold and unfold.                10. Fold the corner up, making the 11. Mountain-fold the model in\n                                                fold sharp only between the       half.\n                                                indicated crease intersections.\n\n\n             12. Fold and unfold.  13. Squash-fold.      14. Petal-fold.   15. Fold and unfold. 16. Unfold to step\n                                                                                               12.\n\n                                                                                                                 391\n                                                                      FoldingChapter Instructions: 10: Molecules Silverfish\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c5c"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 708,
  "content": "./origami_dataset_dev/Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li/page708_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c5d"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 359,
  "content": "                                                                        Figure 10.2. \n                                                                        Left: crease and circle pattern \n                                                                        for the two-flap Fish Base. \n                                                                        Right: the folded Fish Base.\n\n                There’s a second interesting phenomenon as well. Observe \n            that there are 5 points where adjacent circles touch each other, \n            called tangent points; I’ve labeled them all with a dot. In the \n            folded base, which is shown on the right, all of the tangent \n            points lie either side-by-side or one atop the other; if you poked \n            a pin through one of them, the pin would hit every tangent \n            point in the model.\n                Now let’s look at another base. Figure 10.3 shows creases \n            and circles for a base with three equal ﬂaps. Again, we have \n            axial creases between touching circles and a second set of \n            creases perpendicular to the ﬁrst set that cross at the point of \n            tangency. There are three tangent points, and in the base, all \n            three tangent points lie on top of one another.\n\n\n                                                                        Figure 10.3. \n                                                                        Left: crease and circle pattern \n                                                                        for the three-ﬂap base. \n                                                                        Right: the folded base.\n\n                The ﬁrst three circle bases had only edge and corner ﬂaps. \n            Do the patterns we observed hold for middle ﬂaps? Indeed they \n            do. Figure 10.4 shows the Bird Base, which has four long ﬂaps \n            and one short one, which is a middle ﬂap. Again, circle centers \n            are connected by axial creases, and creases emanate from the \n            points where circles touch that are perpendicular to the axial \n\n\n                                                                        Figure 10.4. \n                                                                        Left: crease and circle pattern \n                                                                        for the five-flap Bird Base. \n                                                                        Right: the folded base.\n\n                                                                                                     347\n                                                                    Chapter 10: Molecules\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c5e"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 173,
  "content": "                                                    Folding Instructions\n\n\n                                       Songbird 1\n\n\n                                       KNL Dragon\n\n\n                                       Lizard\n\n\n                                       Tree Frog\n\n\n                                       Dancing Crane\n\n\n                                                                                           161\n                                                        Chapter 6: ChapterFolding  Instructions6: Grafting\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c5f"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 615,
  "content": "                                                            4 1\n\n                                                             1\n                                                           4 1  1\n                                                             1\n                                                          6  1  1\n\n                                                         8   2\n\n                                                             4\n\n\n                                                                               Figure 13.34. \n                                                                               Packing with squares expanded \n                                                                               into rectangles and extra squares \n                                                                               added to “soak up” extra space.\n\n\n                                                            4 1\n\n                                                             1\n                                                           4 1  1\n                                                             1\n                                                          6  1  1\n\n                                                         8   2\n\n                                                             4\n\n\n                                                                               Figure 13.35. \n                                                                               Ridges added to all polygons and \n                                                                               rivers.\n\n                                                                                                                 603\n                                                                  Chapter 13: Uniaxial Box Pleating\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c60"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 601,
  "content": "            If we set a molecule on a ﬂat surface, it looks a little bit like \n            a mountain range and the ridge folds do indeed resemble the \n            ridgelines of the mountains. If we deﬁne the plane on which \n            the molecule sits as “sea level,” or zero elevation, then gus-\n            set folds (and any other folds that are parallel to the axis) \n            have a constant, but nonzero, elevation, as illustrated in \n            Figure 13.21.\n\n\n                                              elevation\n\n                                                   axis\n                                                   (ground)\n\n\n            Figure 13.21. \n            Left: a base with the axis oriented to be “sea level.” The elevation \n            of an axis-parallel fold is its distance above sea level.\n\n                Continuing this analogy, we can assign an elevation to \n            every point within the molecule and can describe this mapping \n            in several ways. The usual way of describing real mountain \n            ranges is with a contour map—drawing lines of constant ele-\n            vation—and this is also the natural way to describe elevation \n            within a molecule, or within any part of a uniaxial base. The \n            axial folds, then, are contour lines within the crease pattern, \n            lines of constant elevation: speciﬁcally, they are the lines of \n            zero elevation. In a properly oriented uniaxial base, every \n            contour line of zero elevation is an axial fold. \n                Axial folds are usually mountain folds (when viewed from \n            the white side of the paper), but can be valley folds, so the \n            fold direction is not an inherent property of axial folds. What \n            makes an “axial fold” really signiﬁcant is not so much that it \n            is a “fold,” but rather, its “axial-ness”—speciﬁcally, that its \n            elevation is zero.\n                Gusset folds, also highlighted in Figure 13.20, are also \n            folds of constant elevation, which means that any gusset fold \n\n                                                                                                     589\n                                                           Chapter 13: Uniaxial Box Pleating\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c61"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 167,
  "content": "            Figure 6.28. \n            Left: crease pattern with the strip creases extended to the center. \n            Right: resulting pattern, embedded within a square.\n\n            this pattern into a toed base as an exercise for you. One more \n            exercise you might enjoy is working out how the strip crease \n            patterns for larger numbers of points meet where they come \n            together.\n                As we found with the Tree Frog, the place where the \n            pleats come together creates several small middle ﬂaps; these \n            could easily be turned into eyes or other facial features. In \n            fact, the middle ﬂaps don’t have to be just a byproduct; you \n            can create middle ﬂaps intentionally by adding strip grafts \n            to a crease pattern.\n                And this isn’t the only way to add strip grafts. A weakness \n            in this crease pattern is that while all of the points at the end \n            of the forelegs lie on the raw edge of the square, some of the \n            points on the hind legs are middle ﬂaps—they come from the \n            interior of the paper, which means they are twice as thick as the \n            others. If we use a strip graft along an edge to get a collection \n            of points, the strip must be perpendicular to the edge (as it is \n            in the forelegs) to keep all the points on the edge.\n                Well, there’s nothing that says we have to cut along ex-\n            isting creases to insert a strip graft. It’s perfectly acceptable \n            to cut across creases, form the pleats of the strip creases, \n            and then fold the original model, as illustrated in the crease \n            pattern in Figure 6.29.\n                But this is more wasteful than it needs to be. A pleated \n            strip, once started, has to keep propagating in the same \n            direction until it hits something else; you can’t change the \n\n                                                                                                     155\n                                                                       Chapter 6: Grafting\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c62"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 629,
  "content": "                27. Reverse-fold the edge inward,                                28. Pleat the edge underneath as\n                again using the existing creases.                                you did in steps 26–27, but making\n                                                                                 the dented region deeper (again,\n                                                                                 follow the existing creases).\n\n\n                                              29. Close up the model.\n\n\n             30. Fold one flap down in       31. Fold half the layers on the right 32. Bring the near flaps to the right\n             front and one down behind.      toward the left in front, and half and the far flaps to the left, stretching\n                                             of the layers on the left behind,  out the model. The next view will be\n                                             spreading the layers symmetrically. a side view.\n\n\n     618\n                         Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c63"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 198,
  "content": "             81. Fold down two layers                82. Pull out the layers and         83. Blunt the nose.\n             from the front and two layers           spread each point into a\n             from the rear of each of the            smooth bulging eye.\n             two small points.\n\n\n             84. Fold and      85. Fold the small      86. Fold a           87. Sink the           88. Fold the\n             unfold through    point upward.           single layer in      corners on the         small point\n             the near layers.                          on each side.        existing creases.      back down.\n\n\n               89. Fold the near pair             90. Reverse-fold the               91. Mountain-fold the sides of\n               of flaps out and slightly          legs downward and                  the body and swivel the lower\n               upward.                            toward each other.                 edges of the legs upward. Repeat\n                                                                                     on the far side of the legs.\n\n     186\n                         Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c64"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 7,
  "content": "                                     7. Pattern Grafting                                                      197\n                                        Folding Instructions\n                                           Turtle                                                                            222\n                                           Western Pond Turtle                                                      225\n                                           Koi                                                                                237\n                                     8. Tiling                                                                     241\n                                        Folding Instructions \n                                           Pegasus                                                                         282\n                                     9. Circle Packing                                                         291\n                                        Folding Instructions\n                                           Emu                                                                              336\n                                           Songbird 2                                                                    339\n                                     10. Molecules                                                              345\n                                        Folding Instructions\n                                           Orchid Blossom                                                             386\n                                           Silverfish                                                                        390\n                                     11. Tree Theory                                                          401\n                                        Folding Instructions\n                                           Alamo Stallion                                                                438\n                                           Roosevelt Elk                                                                  446\n                                     12. Box Pleating                                                         459\n                                        Folding Instructions\n                                           Organist                                                                        510\n                                           Black Forest Cuckoo Clock                                            530\n                                     13. Uniaxial Box Pleating                                            561\n                                        Folding Instructions\n                                           Bull Moose                                                                     612\n                                     14. Polygon Packing                                                    625\n                                        Crease Patterns\n                                           Flying Walking Stick                                                       686\n                                           Salt Creek Tiger Beetle                                                   687\n                                           Longhorn Beetle                                                             688\n\n\n      vi\n                     Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c65"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 761,
  "content": "                Pythagorean stretch, offset (page 646): a variation of a Pythagorean \n                stretch in which the vertices at opposite ends of the stretch lie at different \n                elevations.\n                Pythagorean stretch, perfect (page 642): a version of a Pythagorean \n                stretch in which the vertices of the gusset lie at the vertices of its bounding \n                rectangle.\n\n                R\n                Rabbit-ear fold (page 25): a combination fold that turns a triangular cor-\n                ner into a ﬂap by folding along all three angle bisectors of the triangle and \n                gathering the excess paper into a ﬂap.\n                Rabbit-ear molecule (page 354): the pattern of creases within a triangle \n                that collapses its edges to lie on a single line.\n                Raw edge (page 15): the original edge of the paper, as opposed to an edge \n                created by folding.\n                Reduced path (page 425): a path between two inset vertices created during \n                the construction of the universal molecule.\n                Reduced path inequality (page 425): an inequality condition analogous \n                to the path condition that applies to inset vertices and paths in the universal \n                molecule.\n                Ridge crease (page 349): a crease within a molecule that propagates inward \n                from the corners of the molecule. Ridge creases are always valley folds when \n                viewed from the interior of a molecule. In polygon packing, ridge creases fol-\n                low the straight skeleton and can be either mountain or valley.\n                River (page 257): an annular segment or rectangular region in a tile or crease \n                pattern that creates a segment between groups of ﬂaps in the folded form.\n\n                S\n                Sawhorse molecule (page 365): a crease pattern within a quadrilateral \n                similar to the Waterbomb molecule, but with a segment separating the two \n                pairs of ﬂaps. Also known as the Maekawa molecule.\n                Scale (page 298): a quantitative measure of efﬁciency. The scale of a crease \n                pattern is the ratio between the length of a folded ﬂap and the length of its \n                corresponding edge in the tree graph.\n                Side view (page 313): a model is folded in side view if when the model lies \n                ﬂat you are looking at the side of the subject.\n                Sink fold (page 33): inversion of a point. Sink folds come in several differ-\n                ent types.\n                Splitting points: see point-splitting.\n                Spread sink fold (page 33): a sink fold in which the edges of the point are \n                spread and the point ﬂattened. Similar to a squash fold.\n                Squash fold (page 27): a fold in which the edges of a ﬂap are spread, usu-\n                ally symmetrically, and the edges ﬂattened.\n                Standard bases (page 56): the most common origami bases, usually taken \n                to include the Classic Bases plus the Windmill Base, Cupboard Base, Pre-\n                liminary Fold, and Waterbomb Base.\n                Straight skeleton (page 584): a tree graph within a polygon, created by \n                translating the edges inward at a constant velocity and tracing the traveling \n\n\n                                                                                                                                  749\n                                                                                                        Glossary\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c66"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 13,
  "content": "                                                                   Introduction1\n\n                         n 1988, a French artist named Alain Georgeot \n                         prepared an exhibition of 88 elephants. They \n                         were made of folded paper, each different, and \n                         each one an example of origami, the Japanese \n                         art of paper folding. An art exhibition de-\n            voted entirely to origami is rare; one devoted to elephants is \n            extremely unusual; and one devoted entirely to origami \n            elephants was entirely unprecedented.\n                A display of 88 paper elephants illustrates both the \n            remarkable attraction origami has for some people—after all, \n            how many people would take the time to fold 88 versions of \n            the same thing?—and the remarkable versatility of the art. \n            Georgeot’s collection of elephants represented only the tiniest \n            fraction of the modern origami repertoire. Tens of thousands \n            of paper designs exist for animals, plants, and objects, a \n            regular abecedarium of subject matter. There are antelopes, \n            birds, cars, dogs, elephants (of course), ﬂowers and gorillas; \n            horses, ibexes, jays, and kangaroos; lions, monkeys, nautiluses, \n            octopi, parrots, quetzalcoatls, roses, sharks, trains, ukuleles, \n            violinists, whelks, xylophones, yaks, and zebras, the last \n             complete with stripes.\n                Innumerable innovations have been wrought upon the \n            basic theme of folded paper. There are action ﬁgures: birds \n            that ﬂap their wings, violinists who bow their violins, in -\n            ﬂatable boxes, clapping monkeys, snapping jaws. There are \n            paper airplanes that ﬂy—one won an international contest—\n            and airplanes that don’t fly, but are replicas of famous \n            aircraft: the space shuttle, the SR-71 Blackbird, and the \n            venerable Sopwith Camel. In some models, a single piece of \n            paper is folded into several ﬁgures (a bull, bullﬁghter, and \n            cape, for example) and in others, many identical pieces of \n\n                                                                                                      1\n\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c67"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 749,
  "content": "             Marshall Bern and Barry Hayes, “On the complexity of ﬂat origami,” \n             Proceedings of the 7th ACM-SIAM Symposium on Discrete Algorithms, \n             Atlanta, Georgia, 1996, pp. 175–183.\n\n             Marshall Bern, Erik Demaine, David Eppstein, and Barry Hayes, \n             “A disk-packing algorithm for an origami magic trick,” in Origami3, \n             op. cit., pp. 17–28.\n\n             Marshall Bern, Erik Demaine, David Eppstein, and Barry Hayes, “A \n             disk–packing algorithm for an origami magic trick,” Proceedings of \n             the International Conference on Fun with Algorithms, Isola d’Elba, \n             Italy, June 1998, pp. 32–42.\n\n             Therese C. Biedl, Erik D. Demaine, Martin L. Demaine, Anna Lubiw, \n             and Godfried T. Toussaint, “Hiding disks in folded polygons,” Proceed-\n             ings of the 10th Canadian Conference on Computational Geometry, \n             Montreal, Quebec, Canada, August 1998.\n\n             Chandler Davis, “The set of non-linearity of a convex piecewise-linear \n             function,” Scripta Mathematica, vol. 24, 1959, pp. 219–228.\n\n             Erik D. Demaine and Martin L. Demaine, “Folding and unfolding \n             linkages, paper, and polyhedra,” Proceedings of the Japan Conference \n             on Discrete and Computational Geometry: Lecture Notes in Computer \n             Science, Tokyo, Japan, November 2000.\n\n             Erik D. Demaine, Martin L. Demaine, “Planar drawings of origami \n             polyhedra,” Proceedings of the 6th Symposium on Graph Drawing, \n             Lecture Notes in Computer Science, volume 1547, Montreal, Quebec, \n             Canada, August 1998, pp. 438–440.\n\n             Erik D. Demaine, Martin L. Demaine, and Anna Lubiw, “The CCCG \n             2001 Logo,” Proceedings of the 13th Canadian Conference on Com-\n             putational Geometry, Waterloo, Ontario, Canada, August 2001, pp. \n             iv–v.\n\n             Erik D. Demaine and Joseph S. B. Mitchell, “Reaching folded states \n             of a rectangular piece of paper,” Proceedings of the 13th Canadian \n             Conference on Computational Geometry, Waterloo, Ontario, Canada, \n             August 2001, pp. 73–75.\n\n             Erik D. Demaine, Martin L. Demaine, and Joseph S. B. Mitchell, \n             “Folding ﬂat silhouettes and wrapping polyhedral packages: new \n             results in computational origami,” Computational Geometry: Theory \n             and Applications, 16 1, : 3–21, 2000. Preliminary versions in Pro-\n             ceedings of the 15th Annual ACM Symposium on Computational \n             Geometry 1999, 105–114 and Proceedings of the 3rd CGC Workshop \n             on Computational Geometry 1998.\n\n             Erik D. Demaine, “Folding and unfolding linkages, paper, and poly-\n             hedra,” Revised Papers from the Japan Conference on Discrete and \n             Computational Geometry JCDCG 2000,, edited by Jin Akiyama, Mikio \n             Kano, and Masatsugu Urabe, Lecture Notes in Computer Science, \n             volume 2098, Tokyo, Japan, November 2000, pp. 113–124.\n\n\n                                                                                                                 737\n                                                                                        References\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c68"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 510,
  "content": "./origami_dataset_dev/Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li/page510_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c69"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 563,
  "content": "                   127. Repeat steps 125–126\n                   on the right.\n\n                                                    128. Bring the clock\n                                                    face to the front and\n                                                    swing it down.\n                                                                                 129. Turn the model over.\n\n\n               130. Pleat the sides of the top and       131. Squeeze the top of the        132. Side view. Fold\n               fold the top in half. At the same         model together and smooth          two layers over to\n               time, pull the sides of the clock         out the layers along the roof.     the left and release\n               body out to stand at right angles                                            the trapped paper at\n               to the clock back.                                                           the top.\n\n                                                                                                                 551\n                                                        Folding Instructions:Chapter Black  Forest12: Box Cuckoo Pleating Clock\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c6a"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 205,
  "content": "               40. Elias-stretch the                41. Fold the flap up.                 42. Close the flap.\n               pleated section.\n\n\n               43. Reverse-fold two                 44. Reverse-fold the                  45. Sink the remaining\n               corners.                             near and far edges.                   pair of corners. All the\n                                                                                          folded edges should be\n                                                                                          aligned.\n\n\n                                                 40–45\n\n\n                   46. Like this.                    47. Repeat on the left.                48. Fold the flap down\n                                                                                            so that its edge lies\n                                                                                            along the center line.\n\n                                                                                                                 193\n                                                                Folding Instructions:Chapter Dancing 6: Grafting Crane\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c6b"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 211,
  "content": "                We can use grafts to replicate the pattern of lines by run-\n            ning pleats composed of strips of paper along each of the lines; \n            the folded edges of the pleats will then produce the shell pat-\n            tern. But where should the pleats go in the crease pattern? A \n            reasonable way to proceed with the design is to fold the simple \n            turtle, draw the plate pattern on the back, and then unfold the \n            shell to see where the pattern winds up on the unfolded square. \n            The result is shown in Figure 7.3.\n\n\n             foreleg                                          foreleg\n\n\n                                      head\n\n\n            hind leg                                          hind leg  Figure 7.3. \n                                                                        The unfolded shell with the \n                                                                        plate pattern placed on the \n                                                                        region that becomes the shell. \n                                                                        Note that the colored wedges \n                                                                        are concealed by pleats in the \n                                       tail                             folded model.\n\n                Now, we could, in principle, precisely replicate this pat-\n            tern of lines with pleats, but in striking a balance between \n            exact reproduction and elegance of line, it’s usually desirable \n            to simplify the pattern, focusing attention on a smaller number \n            of distinctive lines rather than overwhelming the viewer with a \n            clutter of lines. It is visually pleasing and gives cleaner folding \n            patterns to make the pattern fairly symmetric. Since the crease \n            pattern itself has a strong 60° angle symmetry throughout, it \n            is not unreasonable to adopt that symmetry for the pattern of \n            plates as well. I therefore chose a simpliﬁed pleat pattern as \n            shown in Figure 7.4.\n                The simpliﬁcations are twofold: First, I force all lines to \n            lie at multiples of 60°, which makes them match up with the \n            lines in the rest of the model; I also eliminate the oval of lines \n            going all the way around, ﬁguring that I can create this line \n            by folding up the edge of the shell in the ﬁnished shape. That \n            leaves just three wide hexagons, plus ten pleats radiating away \n            from them. The decision to force lines to run at multiples of \n\n                                                                                                     199\n                                                                Chapter 7: Pattern Grafting\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c6c"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 577,
  "content": "                                                           4 1\n\n                                                           1\n                                                        4  1    1\n                                                           1\n                                                       6   1    1\n\n                                                     8     2\n\n                                                            4\n\n            Figure 13.1. \n            Left: a generic beetle to design. \n            Right: its stick ﬁgure.\n\n            be integral multiples of the smallest distance that appears \n            in the stick ﬁgure—which is assigned a length of 1 unit. The \n            rest of the ﬂaps follow: legs are graduated in length, with the \n            back legs being longest at 8 units, followed by the center legs \n            (6 units) and front legs (4 units).\n                There are a few extra ﬂaps in this stick ﬁgure: one at \n            the top of the head and two along the body. These ﬂaps serve \n            to create “extra paper” at strategic places in the design. The \n            1-unit ﬂap at the top will allow the design to be opened ﬂat \n            in plan view (viewed from above, as in the drawing); without \n            it there would not be a complete hinge allowing the two sides \n            to be spread apart. The other two 1-unit ﬂaps along the body \n            create excess paper that will allow a distinct line between the \n            head, thorax, and abdomen, to be created.\n                Next, we create the packing shapes, as shown in Fig-\n            ure 13.2.\n                It is fairly common that an origami model exhibits left/\n            right mirror symmetry. When that is the case, I commonly \n            design only half of the model, as shown in Figure 13.2 (the \n            left half). Flaps that lie on the line of symmetry of the subject \n            must usually have their circles lie on the line of symmetry of \n            the base, and this is the case in Figure 13.2.\n                And now it’s time for the circle/river packing. With this \n            many objects, ﬁnding an optimum packing by hand is fairly \n            hard, even with the use of physical manipulatives (cardboard \n            circles and spacers for the rivers). With this packing, it’s \n            fairly easy to see that most of the circles and rivers will be \n            arrayed around the outside of the square, and one can set \n            up an algebraic set of equations for the coordinates of all the \n\n                                                                                                     565\n                                                           Chapter 13: Uniaxial Box Pleating\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c6d"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 239,
  "content": "              0                 35  43                 78\n              17. Add a crease connecting bottom divisions 35 and    18. Make a crease that runs horizontally through\n              43 with the points where the creases you just made     the middle of the “X” formed by the creases.\n              hit the side edges.\n\n\n              19. Add five creases above and five below the crease   20. Add two more short creases above and below\n              you just made, all going through intersections of      the hexagonal grid; also make two horizontal creases\n              the grid.                                              at the top of the model.\n\n\n     228\n                         Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c6e"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 233,
  "content": "./origami_dataset_dev/Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li/page233_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c6f"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 542,
  "content": "./origami_dataset_dev/Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li/page542_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c70"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 588,
  "content": "                                         Figure 13.10. \n                                         Valid hinge polygons for uniaxial box pleating for a given ﬂap length \n                                         (circle size).\n\n                                         corresponding circle. For uniaxial box pleating, this polygon \n                                         is the square that circumscribes the minimum-size circle. The \n                                         actual hinge polygon can be larger. In Figure 13.10 and the \n                                         ﬁgures that follow, I will identify the minimum-size square by \n                                         a light blue line, while the actual hinge polygon will be drawn \n                                         in a darker shade.\n                                             So, in the transition from circle/river packing to uniaxial \n                                         box pleating and polygon packing, circles, which correspond \n                                         to leaf ﬂaps, are replaced by hinge polygons that enclose their \n                                         corresponding circles. In the same way, the curvilinear rivers \n                                         of circle/river packing are replaced by hinge rivers—straight-\n                                         line strips of constant width that only change direction at ﬁxed \n                                         angles. In box pleating, those hinge rivers form right angle \n                                         bends, as shown in Figure 13.11.\n\n\n            Figure 13.11. \n            Examples of several hinge rivers \n            of constant width.\n\n     576\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c71"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 549,
  "content": "                               23–24, 2×\n\n\n                                                              23–24\n\n\n             25. Repeat steps 23–24      26. Fold the thick narrow   27. Repeat steps 23–24.\n             twice, then step 23 once    flap up from behind.\n             more.\n\n\n                   28. Pleat.         29. Squash-fold the lower         30. Pleat again.\n                                      corners; simultaneously fold the\n                                      top down and the sides above the\n                                      squash folds inward.\n\n                                                                                           537\n                                              Folding Instructions:Chapter Black  Forest12: Box Cuckoo Pleating Clock\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c72"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 207,
  "content": "                 58. Spread the tips of the      59. Reverse-fold the corner.       60. Reverse-fold the corner.\n                 wings, forming pleats\n                 internally to take up the excess\n                 paper.\n\n\n                 59–60, 4×                                       59–60, 5×\n\n\n               61. Repeat in four places.        62. Repeat on the right side.      63. Turn the model over.\n\n\n               64. Fold two layers together      65. Fold one layer up on each      66. Fold the next layer up as\n               on each side.                     side.                              far as possible.\n\n                                                                                                                 195\n                                                                Folding Instructions:Chapter Dancing 6: Grafting Crane\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c73"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 561,
  "content": "              114. Push in the sides; on   115. Pull out a single   116. Fold two layers     117. Push the sides\n              each side, fold two of the   layer from the top and   upward and one           in as you pull paper\n              edges upward, one            bottom of each side.     downward on each side.   out from the top and\n              downward.                                             The box-like region      push down the\n                                                                    becomes taller and       bottom of the box.\n                                                                    deeper.                  Flatten the model\n                                                                                             completely.\n\n\n                    118. Reverse-fold the\n                    top two points\n                    downward.\n\n\n                                                   119. Fold the small\n                                                   points down into the\n                                                   pockets.\n\n\n                                                                                   120. Swing the clock\n                                                                                   face upward.\n\n                                                                                                                 549\n                                                        Folding Instructions:Chapter Black  Forest12: Box Cuckoo Pleating Clock\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c74"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 575,
  "content": "            easily implemented, uniaxial box pleating can be a powerful \n            way to design extraordinarily complicated bases.\n                Uniaxial box pleating, though it has historical roots that \n            predate the development of circle packing, can be viewed as \n            an extension and generalization of circle packing and works \n            in essentially the same way. \n\n            13.1. Limitations of Circle Packing\n            Circle/river packing creates the most efﬁcient uniaxial base for \n            a given tree and sheet of paper, and it is guaranteed to give \n            you every ﬂap of the appropriate length that you specify. That \n            makes it an extremely powerful tool in the origami designer’s \n            arsenal. However, as with any tool, it is essential that one be \n            aware of its limitations, of which there are several.\n                First, there is no guarantee for the existence of a fold-\n            ing sequence. Circle packing and many other origami design \n            techniques create a valid folded form (“valid” meaning it is ﬂat \n            foldable without self-intersection), but in general, there may \n            not be a sequential series of small steps that leads from the \n            square to the ﬁnished shape. Traditionally, origami designs \n            were discovered as the end result of a series of step-by-step \n            explorations; not too surprisingly, then, such models could be \n            constructed by a step-by-step sequence. But in the vast world \n            of possible origami designs, step-by-step models are actually \n            in the minority; most models cannot be broken up into a set of \n            independent folds; they are “irreducibly complex .”* This leads \n            to a base construction procedure that could be described as, \n            “precrease forever, then collapse,” at which point all of the folds \n            of the base are brought together at once. Or, as my colleague \n            Brian Chan once described one of his designs, “fold this model \n            in three easy steps: precrease, collapse, shape.” (Each of the \n            “three easy steps” took several hours.) Such “three-step mod-\n            els” are becoming the norm in complex designed origami.\n                Second, in circle/river packing, there is little control over \n            ﬂap width. Length, yes: length is speciﬁed in the algorithm. \n            But when it comes to ﬂap width, you get what you get; you \n            don’t get to specify ﬂap width as part of the design process. \n            Now, it is often possible to employ sink folds (and multiple \n            nested sink folds) to make a wide ﬂap narrower. But it is not \n            always possible—and you can’t easily have a narrow ﬂap con-\n            nected to a wide ﬂap (at least, not without sacriﬁcing some \n            length). As it turns out, the universal molecule appears to give \n\n            * The term “irreducible complexity” regrettably has another usage, in the \n            pseudoscientiﬁc doctrine known as “Intelligent Design.” I hope it is clear \n            that the term’s usage in origami has nothing to do with such other usage.\n\n                                                                                                     563\n                                                           Chapter 13: Uniaxial Box Pleating\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c75"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 213,
  "content": "                To form the pleat lines, we need to give the pleats ﬁnite \n            width, which we do by (effectively) cutting the crease pattern \n            apart on the crease lines and inserting ﬁnite-width strips of \n            paper as shown in Figure 7.6.\n\n\n             foreleg                                          foreleg\n\n\n                                      head\n\n\n            hind leg                                          hind leg\n\n\n                                                                        Figure 7.6. \n                                                                        The crease pattern with paper \n                                                                        inserted for pleats.\n                                       tail\n\n                Because some of the pleats hit the edge of the paper at an \n            angle, when we insert ﬁnite-width pleats, the paper becomes no \n            longer square. We’ll ﬁx that up in a minute. But ﬁrst, let’s see \n            if we can do anything more with these pleats. Observe that one \n            pleat already hits the edge of the paper at one of the appendages \n            (the hind legs). This will allow us to use the paper in the pleat \n            to make a fancier hind foot (with toes, for example); this paper \n            comes for free. If we’re going to add paper to the hind feet, we \n            might as well do the same for the front feet, and so I add another \n            pleat near the top of the square that comes out at the front feet, \n            as shown in Figure 7.7.\n                Having added pleats to decorate the shell and produce \n            more complex feet, the paper’s overall dimensions have become \n            roughly rectangular. To get it back to a square, we could add \n            more paper along the sides, or we could cut some off the top or \n            bottom. Looking back at the original crease pattern, recall that \n            the small strip running along the top of the square wasn’t used \n            for anything in the original base. So we could cut it off without \n            losing anything from the base; we could have folded the original \n            turtle from a rectangle that is shorter in height than width.\n\n                                                                                                     201\n                                                                Chapter 7: Pattern Grafting\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c76"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 695,
  "content": "./origami_dataset_dev/Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li/page695_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c77"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 39,
  "content": "                                                                       Figure 2.27. \n                                                                       A double rabbit ear.\n\n            bit ear is a combination of a rabbit ear with its mirror image \n            also on another layer.\n                The next combination fold commonly encountered is the \n            squash fold. In a squash fold, the layers of a ﬂap are spread \n            to the sides and the folded edge ﬂattened.\n\n\n                                                                       Figure 2.28. \n                                                                       The squash fold.\n\n                The squash fold is quite easy to perform (and sometimes \n            very satisfying). It is nearly always formed symmetrically, \n            that is, making equal angles on both the left and right. In the \n            symmetric form, the crease that used to be the folded edge \n            will be lined up with one or more raw edges underneath, as \n            in Figure 2.28. It is also possible to squash-fold a point, as \n            shown in Figure 2.29. Squash-folded points are harder to keep \n            symmetric, because the point covers up the layers underneath, \n            but you can make them symmetric by turning the paper over \n            and checking the alignment on the other side before you make \n            the creases sharp.\n                There are four creases involved in a squash fold: two val-\n            leys on each side of two mountains (usually, only one of each \n\n\n                                                                       Figure 2.29. \n                                                                       Another version of a squash \n                                                                       fold.\n\n                                                                                                      27\n                                                                 Chapter 2: Building Blocks \n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c78"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 763,
  "content": "                Uniaxial box pleating (page 561):  a subset of box pleating in which the \n                90° symmetries of box pleating are used to create uniaxial bases or portions \n                thereof.\n                Unit (page 634): the shortest distance of length and/or width in a polygon-\n                packed base; most ﬂaps’ dimensions (length and/or width) will be an integer \n                multiple of the unit.\n                Universal molecule (page 424): a generalization of the gusset molecule \n                that can be applied to every valid axial polygon.\n                Unsink (page 39): removing a sink fold, or turning a closed sink from con-\n                cave to convex.\n\n                V\n                Valley fold (page 18): a crease that is concave upward. Usually indicated \n                by a dashed line (solid colored line in crease patterns).\n                Vertex: see leaf vertex, branch vertex.\n\n                W\n                Windmill Base (page 56): a traditional base that looks like a windmill.\n                Waterbomb Base (page 56): a traditional base formed by bringing the \n                midpoints of the four edges of a square together.\n                Waterbomb condition (page 355): a quadrilateral satisﬁes the Waterbomb \n                condition if and only if the sums of opposite sides are equal. A quadrilateral \n                that satisﬁes this condition can be folded into an analog of the traditional \n                Waterbomb Base.\n                Waterbomb molecule (page 355): a crease pattern within a quadrilat-\n                eral that resembles the traditional Waterbomb. Also called the Husimi \n                molecule.\n\n                Y\n                Yoshizawa split (page 94): a technique for splitting a Kite Base ﬂap, in \n                which the point is ﬁrst sunken, followed by two spread sinks.\n\n\n                                                                                                                                  751\n                                                                                                        Glossary\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c79"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 5,
  "content": "           First edition published by A K Peters, Ltd., in 2003.\n\n\n           CRC Press\n           Taylor & Francis Group\n           6000 Broken Sound Parkway NW, Suite 300\n           Boca Raton, FL 33487-2742\n           © 2012 by Taylor & Francis Group, LLC\n           CRC Press is an imprint of Taylor & Francis Group, an Informa business\n\n           No claim to original U.S. Government works\n           Version Date: 20110613\n\n           International Standard Book Number-13: 978-1-4398-6774-7 (eBook - PDF)\n\n           This book contains information obtained from authentic and highly regarded sources. Reasonable efforts have been made to publish reliable data and \n           information, but the author and publisher cannot assume responsibility for the validity of all materials or the consequences of their use. The authors and \n           publishers have attempted to trace the copyright holders of all material reproduced in this publication and apologize to copyright holders if permission \n           to publish in this form has not been obtained. If any copyright material has not been acknowledged please write and let us know so we may rectify in any \n           future reprint.\n\n           Except as permitted under U.S. Copyright Law, no part of this book may be reprinted, reproduced, transmitted, or utilized in any form by any electronic, \n           mechanical, or other means, now known or hereafter invented, including photocopying, microfilming, and recording, or in any information storage or \n           retrieval system, without written permission from the publishers.\n\n           For permission to photocopy or use material electronically from this work, please access www.copyright.com (http://www.copyright.com/) or contact \n           the Copyright Clearance Center, Inc. (CCC), 222 Rosewood Drive, Danvers, MA 01923, 978-750-8400. CCC is a not-for-profit organization that provides \n           licenses and registration for a variety of users. For organizations that have been granted a photocopy license by the CCC, a separate system of payment \n           has been arranged.\n\n           Trademark Notice: Product or corporate names may be trademarks or registered trademarks, and are used only for identification and explanation \n           without intent to infringe.\n           Visit the Taylor & Francis Web site at\n           http://www.taylorandfrancis.com\n           and the CRC Press Web site at\n           http://www.crcpress.com\n\n\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c7a"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 11,
  "content": "                                         respect to origami history; and Joan Sallas, for information on \n                                         early napkin-folding and for providing one of the ﬁgures.\n                                             Toshiyuki Meguro, Jun Maekawa, and Fumiaki Kawahata, \n                                         who developed circle and tree methods in Japan and who all \n                                         provided crucial insights to my own work along the way.\n                                             Marshall Bern, who encouraged me to write my ﬁrst ori-\n                                         gami computer science technical paper.\n                                             Barry Hayes, who, with Marshall, proved mathematically \n                                         that origami is really, really hard (lest there be any doubt).\n                                             Erik and Martin Demaine, who have been friends and \n                                         collaborators in computational origami; in particular, the \n                                         mathematical theory that led to Chapters 12–14 is as much \n                                         theirs as mine.\n                                             Thomas Hull, who, as the focal point of origami math, has \n                                         done more to bring origamists and mathematicians together \n                                         than anyone else.\n                                             Koshiro Hatori, who provided translations of several of \n                                         the references.\n                                             Dave Mitchell, for his One-Crease Elephant.\n                                             Dr. Emmanuel Mooser, for his Train.\n                                             Raymond W. McLain and Raymond K. McLain, for their \n                                         generous permission to reproduce the latter’s Train diagrams \n                                         and Raymond K.’s recollections of the early days of American \n                                         origami.\n                                             In addition to the above, numerous other insights, en-\n                                         couragement, ideas, concepts, and criticisms came from Peter \n                                         Engel, Robert Geretschläger, Chris Palmer, Paulo Barreto, \n                                         Helena Verrill, Alex Bateman, Brian Ewins, Jeremy Shafer, \n                                         Issei Yoshino, Satoshi Kamiya, Jason Ku, Brian Chan, Hideo \n                                         Komatsu, Masao Okamura, and Makoto Yamaguchi. A particu-\n                                         lar thank you goes to Toshi Aoyagi who for many years acted \n                                         as matchmaker and translator between me and many of my \n                                         Japanese colleagues and to Koshiro Hatori, Koichi Tateishi, \n                                         Marcio Noguchi, and Anne LaVin, who have all helped with \n                                         translation and advice.\n                                             I am particularly indebted to Peter Engel, Marc Kirschen-\n                                         baum, and Diane Lang for proofreading the text and the \n                                         diagrams and making numerous suggestions for corrections \n                                         and improvements (and Diane did so twice, for both editions). \n                                         Needless to say, any errors that remain are entirely my own. \n                                         There are fewer errors in this printing than in the ﬁrst edition, \n                                         however, and I am most grateful for the eagle eyes of Yu Lin \n                                         Yang, Roberto Gretter, Gadi Vishne, and Tom Hull in identify-\n                                         ing a few elusive typos; also for fruitful discussions with Erik \n                                         and Marty Demaine that allowed me to make a more precise \n\n\n       x\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c7b"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 521,
  "content": "./origami_dataset_dev/Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li/page521_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c7c"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 159,
  "content": "            the appendages. But for sake of illustration, let’s assume that \n            we wanted to add some paper to the four legs to obtain feet.\n\n\n            Figure 6.19. \n            Crease pattern, base, and folded model for the lizard.\n\n                Now, before we dive into slicing and dicing this or any \n            crease pattern, let me point out that the simpler the crease \n            pattern is, the easier it is to visualize the structure of the \n            resulting base. It is therefore worthwhile to eliminate as \n            many unnecessary creases as possible from the pattern you \n            start with. The pattern in Figure 6.19 (as is the case with all \n            crease patterns I show) doesn’t show every single crease in the \n            model, which would be far too cluttered, but only the creases \n            used to fold the base (which, in the case of the lizard, is step \n            36 of the folding sequence).\n                The base is obviously not an entire lizard, but it has all \n            of the essential features: the head, tail, body, and four legs. \n            Even so, the crease pattern is still quite busy with creases, \n            which is because by step 36, we have made all the points fairly \n            narrow and introduced a lot of creases in the process.\n                If we look even earlier in the folding sequence, we see \n            another version of the base that still captures all of the es-\n            sential elements (it has the same number and length of ﬂaps \n            as the skinny version) but has a much simpler crease pattern, \n            shown in Figure 6.20.\n                One other thing I’ve done in simplifying the crease pat-\n            tern is to ignore those parts of the square that aren’t essential \n\n                                                                                                     147\n                                                                       Chapter 6: Grafting\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c7d"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 617,
  "content": "                                                     4 1\n\n                                                      1\n                                                    4 1   1\n                                                      1\n                                                   6  1   1\n\n                                                  8   2\n\n                                                      4\n\n\n                                                                       Figure 13.37. \n                                                                       The crease pattern with both axial \n                                                                       and axial+1 contours in place.\n\n            will be two units wide. The ﬁnished set of contours is shown \n            in Figure 13.37.\n                Crease assignment for the axis-parallel contours is fairly \n            easy. As viewed from the white side, the axials are (mostly) \n            mountain folds; the exceptions are the unfolded axials down \n            the middle of the pattern. The axial+1s are all valley folds. \n\n\n                                                                       Figure 13.38. \n                                                                       The structural coloring of the \n                                                                       fully assigned crease pattern.\n\n                                                                                                     605\n                                                           Chapter 13: Uniaxial Box Pleating\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c7e"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 171,
  "content": "             Figure 6.33. \n             Crease pattern, base, and folded model of the Japanese Horned \n             Beetle.\n\n\n             Figure 6.34. \n             Crease pattern, base, and folded model of the Dancing Crane.\n\n\n                                                                                                                 159\n                                                                               Chapter 6: Grafting\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c7f"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 165,
  "content": "            example, we can do the same. If we split a ﬂap along a crease, \n            then there is a very simple construction of creases to impose on \n            the inserted strip that is easily generalizable to any number \n            of ﬂaps, which is shown in Figure 6.25. Each strip is divided \n            into parallel pleats, one for each gap between toes. The ends \n            of the pleats are then reverse-folded to separate the individual \n            toes.\n\n\n            1. Cut the flap along its 2. Insert the strip as a rectangle 3. Crease pattern for two 4. Crease pattern for three\n            central mountain fold. whose short side connects the points.      points.\n                               tips of the two halves.\n            Figure 6.25. \n            Cut and insert a strip of paper to split the ﬂap into two or three \n            smaller pieces.\n\n                So, all we need to do is cut along the mountain folds in \n            each ﬂap and insert rectangular strips, which will be subdi-\n            vided into as many points as we want toes.\n\n\n            Figure 6.26. \n            Left: the lizard base, cut along mountain folds. \n            Right: with strips inserted.\n\n                                                                                                     153\n                                                                       Chapter 6: Grafting\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c80"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 603,
  "content": "            from the colored side of the paper, a contour line that indicates \n            a valley in the folded form is, in fact, a valley fold; a contour \n            line that indicates a level mountain ridge is, in fact, a moun-\n            tain fold. Ridge lines can be either mountain or valley folds, as \n            they could indicate either a sloped ridge or a sloped valley, and \n            gussets, in our geographical analogy, are level hanging valleys, \n            and thus, become valley folds. This correspondence is illustrated \n            in Figure 13.22. In this ﬁgure, I’ve drawn a molecule with one \n            gusset fold. (Can you identify the ridges, gussets, and hinges in \n            the crease pattern?) I’ve also added a set of contour lines to the \n            crease pattern and, just to emphasize the topographical relief, \n            have added arrows that point “uphill” in each polygon of the \n            contour map and on the folded form.\n\n\n            Figure 13.22. \n            Left: a contour map of a crease pattern for a molecule. \n            Right: the folded form. Arrows point “uphill” in both.\n\n                Here you can see clearly how to identify mountain and \n            valley folds from the contour map for axis-parallel contours \n            and ridge lines. If the arrows on either side of a line both point \n            toward the line (or even partially toward the line), then it’s \n            a mountain fold. If the two arrows both point away from the \n            line, it’s a valley fold. And one points toward and the other \n            points away, it’s a “slope” line, i.e., there is no fold there (and \n            I didn’t really need to draw the contour line there at all).\n                The choice of the two contour lines in Figure 13.22 was \n            somewhat arbitrary; there is, of course, an inﬁnite set of \n            contour lines between the lowest-elevation point (“sea level”) \n            and the two peaks of the molecule. But most of the contour \n            lines will be “slope” lines, lines with higher elevation on one \n            side and lower elevation on the other, and therefore, they will \n            be unfolded. So all we really need to pay attention to are the \n            lines that are potential fold lines, i.e., contour lines where \n            the paper might change direction from one side of the line to \n            the other.\n\n                                                                                                     591\n                                                           Chapter 13: Uniaxial Box Pleating\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c81"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 398,
  "content": "             Orchid Blossom\n\n\n              1. Begin with a square, colored side\n              up. Fold and unfold in half vertically\n              and horizontally.\n\n\n              2. Fold the bottom edge up to touch\n              the midpoint of the right edge; the\n              crease hits the midpoint of the left\n              edge, but don’t make it sharp in the\n              left half of the model.\n\n\n                                                                             2–4                            2–4\n\n\n                                                                             2–4\n\n\n                 3. Fold and unfold.          4. Unfold.                       5. Repeat steps 2–4 on the other three\n                                                                               corners. Turn the paper over.\n\n     386\n                         Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c82"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 429,
  "content": "                               a       b                     a           b\n                                                                   e\n\n                              d        c                     d          c\n\n                                 four-star                      sawhorse\n\n\n               Waterbomb molecule           sawhorse molecule              gusset molecule\n            Figure 11.16. \n            The two topologically distinct four-leaf-node trees and the simple \n            molecules that can be used to fold them.\n\n            quadrilateral, whether the underlying tree is a four-star or \n            sawhorse, let’s go through its numerical construction.\n                In the previous chapter, I showed how to construct the \n            gusset molecule by folding; here, I will show its construction \n            by computation. Given a quadrilateral ABCD as shown in \n            Figure 11.17, construct a smaller quadrilateral inside whose \n            sides are parallel to the sides of the original quadrilateral \n            but are shifted inward a distance h (the value of h is not yet \n            determined). \n                Denote the corners of the new quadrilateral by A′, B′, \n            C′, and D′. Drop perpendiculars from these four corners to \n            the sides of the original quadrilateral. Label their points of \n\n            intersection AAB where the line from A′ hits side AB, BAB where \n            the line from B′ hits AB, and so forth.\n\n                Now we need some distances from the tree graph. Let lAC \n\n            be the distance from node A to node C on the tree and lBD be \n            the distance from node B to node D. In most cases (see below \n            for the exceptions), there is a unique solution for the distance \n            h for which one of these two equations holds: \n\n\n                           AAAB + A′C′ + CCBC = lAC , or                  (11–4)\n                 \n\n                           BBBBBCBC +  +B B′D′D′ +′  +DD DDADAD =  =lBD lBD .  .                    (11–5)\n\n                                                                                                     417\n                                                                   Chapter 11: Tree Theory\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c83"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 373,
  "content": "                                                                        Figure 10.22. \n                                                                        Crease pattern and folded form \n                                                                        of the arrowhead molecule in a \n                                                                        four-circle rhombus.\n\n                For symmetric circle patterns such as the six-circle pack-\n            ing, using an asymmetric molecule in a symmetric polygon will \n            result in an asymmetric base. This may be undesirable for a \n            symmetric subject.\n\n            10.6. Gusset Molecule\n            The arrowhead molecule is not the last molecule for quadrilat-\n            erals, however. The crease pattern shown in Figure 10.23 is a \n            valid crease pattern for a molecule I call the gusset molecule \n            that can be oriented to preserve the underlying symmetry.\n\n\n                                                                        Figure 10.23. \n                                                                        Crease pattern and folded form \n                                                                        for the gusset molecule. The \n                                                                        folded molecule can have its \n                                                                        ﬂaps oriented to be mirror-sym-\n                                                                        metric about either symmetry of \n                                                                        the underlying polygon.\n\n                Like the arrowhead molecule, the gusset molecule can \n            be constructed for any four-circle quadrilateral, but the gus-\n            set molecule has a couple of advantages over the arrowhead \n            molecule. There are no interior creases that lie along the axis \n            when it is folded, so it is a simple molecule. Simple molecules \n            lead to bases that have fewer layers along the axis of the \n            model.\n                The gusset molecule also has the advantage that it is \n            symmetric when the underlying circle pattern is symmetric. \n            For example, in the arrowhead molecule in Figure 10.22, the \n            circle pattern has left-right symmetry, but the molecule does \n            not have this symmetry. The gusset molecule in Figure 10.23 \n            has the same left-right symmetry as the quadrilateral.\n                The disadvantage is that the gusset molecule is a bit \n            harder to construct than the arrowhead molecule. However, \n\n                                                                                                     361\n                                                                    Chapter 10: Molecules\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c84"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 415,
  "content": "                                          F\n                       A\n\n\n                     E             B\n\n                                                                        Figure 11.2. \n                                              C\n                                                         H              Schematic of a hypothetical \n                                                                        uniaxial base for an animal with \n                                                           D            four legs, a head, body, and tail. \n                                       G                                It’s a uniaxial base if it can be \n                                                                        manipulated so that all of the \n                                                                        ﬂaps lie in a common plane and \n                                                                        all of the layers are perpendicu-\n                                                                        lar to the plane. The shadow of \n                                                                        the base consists entirely of \n                                                                        lines.\n\n            to the layers of the base, as shown in Figure 11.2. This analogy \n            can only be pushed so far, however. In many uniaxial bases—\n            even one as simple as the Bird Base—some ﬂaps are wrapped \n            around others in such a way that the shadows of individual \n            ﬂaps are unavoidably overlapping. The true shadow would \n            show fewer segments than the number of edges possessed by \n            the actual tree. To avoid such ambiguities, I will always show \n            a tree with edges (and nodes) distinctly separated, as shown \n            in Figure 11.3.\n                This point emphasizes another ambiguity about trees: \n            There is no particular signiﬁcance to the orientation of the \n            edges of the tree graph. All that matters are the edge weights \n\n\n              B                                          B\n\n\n            A                                          A\n\n                             C                                          C      D\n                                    D\n\n                                               F                                          F\n                                              E                                         E\n            Figure 11.3. \n            Left: shadow cast by a Bird Base. The shadows of wrapped ﬂaps are \n            superimposed. \n            Right: base and schematic tree. The shadow is perturbed to distinguish \n            ﬂaps that are wrapped around one another.\n\n                                                                                                     403\n                                                                   Chapter 11: Tree Theory\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c85"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 401,
  "content": "                                                             1/2\n\n\n              30. Pleat the edges to   31. Fold the model in  32. Reverse-fold three    33. Pull out four loose\n              take up the excess       half (except for the top, flaps together as one. corners completely.\n              paper, press the layers  which stays rounded).\n              of the tip together, and Rotate 1/2 turn.\n              round it into a bowl.\n\n\n                   34. Fold the corners           35. Squash-fold five flaps           36. Narrow the stem with\n                   over and over on               (all but the middle flap) to         mountain folds.\n                   existing creases.              stand out perpendicularly to\n                                                  the other layers.\n\n\n                 37. Pinch the stem to narrow     38. Reverse-fold the tips of         39. Finished Orchid\n                 it further. Spread the small     the five flat petals. Shape          Blossom.\n                 flaps in front to the sides.     the flower.\n\n                                                                                                                 389\n                                                                Folding Instructions:Chapter Orchid 10: Molecules Blossom\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c86"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 367,
  "content": "            tern satisﬁed the tangent point condition—the tangent points all \n            come together automatically. With a quadrilateral, the situation \n            is a bit more complicated. For any quadrilateral that is formed \n            by connecting the centers of four touching circles, the bisectors \n            of the four angles all meet at a point as shown in Figure 10.12, \n            which suggests one way of collapsing a quadrilateral.\n\n\n            Figure 10.12. \n            The bisectors of a quadrilateral deﬁned by four touching circles meet \n            at a point, which permits the quadrilateral to be folded so that all of \n            its edges lie on a single line.\n\n                We call this pattern the Waterbomb molecule, because the \n            folded shape and the topology of the creases are those of the \n            traditional Waterbomb.\n                Note, however, that not all quadrilaterals can be folded \n            into a Waterbomb molecule; in fact, only those formed by four \n            touching circles—called a four-circle quadrilateral—can be so \n            folded. This property is fairly easy to demonstrate. As shown \n            in Figure 10.13, if the four circles have radii a, b, c, and d, \n            then the sides of the quadrilateral are, respectively, (a + b), \n            (b + c), (c + d), and (d + a). The sum of the lengths of opposite \n            sides are (a + b + c + d) for both pairs of sides. We call this \n            relationship the Waterbomb condition: In a four-circle quadri-\n            lateral, the sums of opposite sides are equal.\n\n\n                                    b       c\n                                                 c\n                              b\n\n\n                                                    d\n                           a                                            Figure 10.13. \n                                                                        For a four-circle quadrilateral, \n                                                                        the sums of the lengths of \n                                a            d                          opposite sides are equal.\n\n                                                                                                     355\n                                                                    Chapter 10: Molecules\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c87"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 400,
  "content": "                                                                                                          15–18\n                                                                                         15–18\n                                                                                                          15–18\n\n\n               15. Fold and     16. Fold the corner   17. Fold and      18. Open-sink         19. Swing the flap to\n               unfold.          to the crease you just unfold.          in and out.           the side and repeat\n                                made and unfold.                                              steps 15–18 on the\n                                                                                              right. Repeat on both\n                                                                                              sides behind.\n\n\n              20. Fold the corner 21. Fold the corner 22. Fold the corner  23. Unfold to       24. Reverse-fold the\n              down along a crease back up so that the over along the       step 20.            corner in and out on\n              aligned with the    raw edges line up   center line of the                       the existing creases.\n              edges behind.       with the crease you model.\n                                  just made.\n\n\n                          20–24\n\n\n              25. Repeat       26. Fold two layers to 27. Reverse-fold the   28. Open out the 29. Stretch the\n              steps 20–24      the right in front and two hidden corners out two flaps to     middle pair of edges\n              behind.          two to the left behind, to the sides. (There are form small    on each side apart\n                               spreading the layers  three layers in each; it cups.           slightly; the model\n                               symmetrically.        doesn’t matter how you                   will not lie flat.\n                                                     divide the layers, but\n                                                     divide them both the\n                                                     same way.)\n\n     388\n                         Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c88"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 366,
  "content": "                                         bisectors of each angle of the triangle, which meet at a point. \n                                         Then draw a line from the tangent point on each side to the \n                                         intersection of the bisectors. We will call this crease pattern \n                                         the rabbit-ear molecule.\n\n                                         10.3. Quadrilateral Molecules\n                                         It is heartening that the triangle was so easy. It is further heart-\n                                         ening that the most common polygon one encounters in circle-\n                                         method bases is a triangle, and in fact, for the two- through \n                                         ﬁve-ﬂap bases seen in the previous chapter, all of the polygons \n                                         were triangles. Thus, using the rabbit-ear molecule, we could \n                                         ﬁnd the full crease pattern for each of these bases. Wouldn’t it \n                                         be nice if when we diced up any circle pattern along its bound-\n                                         ary creases, the polygons always turned out to be triangles? \n                                         Alas, such is not the case. For the very next circle pattern, the \n                                         pattern for six equal points shown in Figure 10.11, we ﬁnd that \n                                         a four-sided polygon crops up.\n\n\n            Figure 10.11. \n            Circle pattern for a six-pointed \n            base.\n\n                                             The crease pattern for Figure 10.11 does contain several \n                                         triangles. Note that the two triangles in the upper corners \n                                         of the square have only two circles inside each triangle. Any \n                                         polygon with fewer than three circles in it is essentially unused \n                                         paper and can be ignored. At the bottom of the model are three \n                                         triangles, which can be ﬁlled with rabbit-ear molecules.\n                                             But look at the polygon in the upper middle of the paper: \n                                         the polygon is not a triangle—it is a four-sided diamond. So here \n                                         we have a concrete demonstration that we will have to deal with \n                                         polygons with more than three sides. Sometimes there will be \n                                         four sides. So let us look at the problem of collapsing quadrilat-\n                                         erals so that all of their edges lie on a single line.\n\n                                         10.4. Waterbomb Molecule\n                                         With a triangle, there was exactly one crease pattern that put all \n                                         of its edges onto a single line. Fortunately, this one crease pat-\n\n     354\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c89"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 372,
  "content": "                                                                                        tangent point\n\n                                         Figure 10.20. \n                                         An alternate arrowhead molecule for the quadrilateral shown in \n                                         Figure 10.19.\n\n\n            Figure 10.21. \n            The arrowhead molecule can be \n            separated along axial creases \n            into a Waterbomb molecule and \n            an extra piece that lengthens \n            one of the points.\n\n\n                                         edges when the molecule is folded up. We saw that in the full \n                                         crease pattern, lines that lie along the axis of the model are \n                                         axial creases, creases that connect the centers of touching \n                                         circles. As shown on the right in Figure 10.21, we can think \n                                         of the arrowhead molecule as a combination of a Waterbomb \n                                         molecule formed from four touching circles, three out of four \n                                         of them the right length, with the extra chevron-shaped piece \n                                         added to bring the fourth point up to the proper length.\n                                             Any molecule that has interior creases that line up with \n                                         the raw edges when the molecule is folded is called a composite \n                                         molecule. A molecule with no interior creases is a simple mol-\n                                         ecule. The arrowhead molecule is a composite molecule.\n                                             Another disadvantage of the arrowhead molecule is that \n                                         it can be asymmetric even when the underlying polygon and \n                                         circle pattern is symmetric. Figure 10.22 shows the arrowhead \n                                         molecule constructed within the diamond from the 6-circle \n                                         pattern of Figure 10.11. Although the diamond and its circles \n                                         have left-right symmetry—the right side is the mirror image \n                                         of the left—the arrowhead molecule crease pattern (and the \n                                         folded molecule) do not.\n\n     360\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c8a"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 609,
  "content": "./origami_dataset_dev/Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li/page609_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c8b"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 414,
  "content": "                                         the number of ﬂaps, their lengths, and how they are connected \n                                         to each other. Using a term from graph theory, we will call such \n                                         a stick ﬁgure the tree graph for a given (or postulated) uniaxial \n                                         base, or just tree for short. A tree graph consists of edges (line \n                                         segments) and nodes (ends of line segments).\n                                             We will also divide the nodes into two types: leaf nodes \n                                         are nodes that come at the end of a single edge. Leaf nodes \n                                         correspond to the tips of legs, wings, and other appendages. \n                                         Nodes formed where two or more edges come together are called \n                                         branch nodes. Similarly, a leaf edge is an edge that ends in at \n                                         least one leaf node; a branch edge is an edge that ends in two \n                                         branch nodes. These are illustrated in Figure 11.1.\n\n                                                             F                  H\n                                             leaf node                                branch node\n                                                                1            1\n\n                                                       A    1                    1    D\n                                                                  B    1   C\n\n                                                                1            1        edge\n\n                                                             E                  G\n            Figure 11.1.                     leaf edge                         branch edge\n            Parts of a tree graph.\n                                                                      weight\n\n                                             In the stick ﬁgure we drew in previous sections, the length \n                                         of each segment was equal to the length of the ﬂap or connector \n                                         that it corresponded to. In a tree, we will label each edge by a \n                                         weight, which is the numerical length of the corresponding ﬂap. \n                                         It is helpful to draw the tree with each edge length proportional \n                                         to its weight, and so I will continue to do so. Thus, in the tree \n                                         in Figure 11.1, each of the edges has weight 1, meaning that \n                                         each corresponds to a ﬂap or connector of unit length.\n                                             Now, the deﬁnition of a uniaxial base was a base that \n                                         could be oriented so that (a) all ﬂaps lie along a common line \n                                         (the axis), and (b) the hinges between ﬂaps were perpendicular \n                                         to the axis. The perpendicularity of the hinges is an important \n                                         property; it allows the ﬂaps to be manipulated in three di-\n                                         mensions so that the edges of all ﬂaps lie in a common plane, \n                                         as shown for a hypothetical base in Figure 11.2. We refer to \n                                         this plane as the plane of projection. Put formally, the plane \n                                         of projection of a base is a plane that contains the axis of the \n                                         base and the axial edges of all ﬂaps, and that is perpendicular \n                                         to the layers of the base.\n                                             This property allows another interpretation of the tree \n                                         graph: It is the shadow cast by the base in a plane perpendicular \n\n     402\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c8c"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 428,
  "content": "                                                        A\n                                                    a      a\n                                                 D                                      E\n            Figure 11.15.                                    D\n                                              b         E                                        C\n            Left: crease pattern for a triangle                  c                           c\n            when side BC is not an active \n                                                                        B       b\n            path.                                                                        a\n            Right: resulting subbase.    B       bcC                                            A\n\n                                         is necessary to address this situation. Figure 11.15 shows the \n                                         crease pattern and subbase when side BC is slightly too long.\n                                             The vertical crease emanating from point E is a new type \n                                         of crease. Like hinge creases, it will be perpendicular to the axis \n                                         and is perpendicular to the axial creases. However, it is not a \n                                         boundary of a ﬂap. For this reason we call this type of crease a \n                                         pseudohinge crease and give it its own color (dark teal).\n                                             If the triangle has two sides that aren’t active paths, a \n                                         similar modiﬁcation will still collapse it appropriately.\n                                             Another case that we should consider is a triangle tree \n                                         that has one or more branch vertices along its sides resulting \n                                         from a branch node in the subtree. For example, the two side \n                                         subtrees in Figure 11.8 each have three leaf nodes, but in each \n                                         tree, one of the edges has a branch node because the subtree \n                                         has a kink at that point. This situation corresponds to the \n                                         presence of both circles and rivers within the triangle. We can \n                                         still use the rabbit-ear molecule to provide most of the creases, \n                                         but wherever we have a branch vertex along an axial path, we \n                                         need a hinge crease propagating inward from the branch node \n                                         to the ridge crease and back down to the adjacent side.\n\n                                         11.6. Quadrilaterals\n                                         As we saw in the last chapter, there were two classes of quad-\n                                         rilateral molecules: those with no rivers or rivers connecting \n                                         adjacent edges, and those with rivers running across the quad-\n                                         rilateral. These two classes correspond to the two topologically \n                                         distinct tree graphs with four leaf nodes, which are shown in \n                                         Figure 11.16.\n                                             We will call the two tree graphs the four-star and the \n                                         sawhorse. Below them you see the three simple molecules that \n                                         can be used to fold them: the Waterbomb, sawhorse, and gusset \n                                         molecules. The four-star graph can be thought of as a degener-\n                                         ate form of the sawhorse graph, the limiting case as the central \n                                         segment (e) goes to zero length. Both the Waterbomb molecule \n                                         and the sawhorse molecule can be considered special cases of \n                                         the gusset molecule. Since the gusset molecule serves for any \n\n     416\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c8d"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 399,
  "content": "             6. Fold each corner inward along a 7. Make two more creases that       8. Fold four corners inward.\n             diagonal crease that connects two connect pairs of crease intersections.\n             crease/edge intersections; make each\n             crease sharp only where shown.\n\n\n             9. Fold a Waterbomb Base, but only 10. Squeeze the sides inward, gather  11. Reverse-fold the corner\n             make the creases sharp in the middle the excess paper in the middle and swing inside.\n             of the paper.                      it over to the right. Repeat behind.\n\n\n                                                                                      11–13               11–13\n\n\n                                                                                                          11–13\n\n\n             12. Reverse-fold the inside            13. Swing one flap over to         14. Repeat steps 11–13 on\n             edge along the center line.            the left.                          the right and on both sides\n                                                                                       behind.\n\n                                                                                                                 387\n                                                                Folding Instructions:Chapter Orchid 10: Molecules Blossom\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c8e"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 164,
  "content": "            Figure 6.23. \n            Embedded crease pattern for \n            a border graft using four Fish \n            Base points.\n\n                                         ﬂaps don’t have quite the same left-right symmetry, but in the \n                                         essential crease pattern (the central light pentagon), each ﬂap \n                                         has the same general structure as the ﬂap of the Tree Frog, as \n                                         shown in Figure 6.24.\n                                             Each ﬂap is composed of four facets separated by al  -\n                                         ternating mountain and valley folds. In the Tree Frog, we \n                                         split each ﬂap along its central mountain fold. In our lizard \n\n\n                                         Figure 6.24. \n                                         Left: crease pattern for the lizard base. \n                                         Right: crease pattern for the Frog Base. Observe that the ﬂap in each \n                                         case is composed of four wedges.\n\n     152\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c8f"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 602,
  "content": "                                         runs along a contour line. But, unlike axial folds, where every \n                                         zero-elevation contour line ends up as an axial fold, any given \n                                         gusset fold is typically only a portion of the set of contour lines \n                                         at that elevation, which raises an interesting way of identify-\n                                         ing gusset folds in a uniaxial base. In the universal molecule \n                                         construction described in Chapter 11, a gusset fold arose from \n                                         a rather complicated calculation involving “paths” and “reduced \n                                         paths” and other concepts involving distances between pairs of \n                                         points. But there is a much simpler interpretation that arises \n                                         from consideration of the contour lines. If we create a contour \n                                         map of a molecule or a uniaxial base, most contour lines lie \n                                         somewhere “along the slope of the mountain”—the elevation \n                                         on one side of the contour line is higher and the elevation on \n                                         the other side is lower. The gusset folds are those few unique \n                                         segments of contour line where the elevation is higher on both \n                                         sides of the contour line.\n                                             This interpretation raises a question, then. Are there situ-\n                                         ations where the elevation is lower on both sides of a contour \n                                         line? This situation doesn’t arise in classical circle-packing \n                                         design using the molecules described in Chapters 10 and 11, \n                                         but it is very easy to construct molecules in which this situa-\n                                         tion arises. In fact, you can open-sink any molecule or region \n                                         of a uniaxial base along any contour line and in doing so can \n                                         change an unfolded contour line to a folded contour line or (in \n                                         some cases) vice versa.\n                                             So, as in the case of axial folds, the fold direction of a gus-\n                                         set fold is not really a fundamental characteristic of the fold. \n                                         Rather, it is almost an incidental property of certain contour \n                                         lines: For every contour line, the question of whether it is folded \n                                         or unfolded is answered by the elevation of the paper on either \n                                         side of the contour.\n                                             So, a simple way to identify axial and gusset-like folds in \n                                         any uniaxial base would be to draw all of the contour lines (as \n                                         densely spaced as we care to draw); identify (or assign) eleva-\n                                         tion to each line; and then determine which of them is folded, \n                                         and their fold direction, based on the elevation of the paper on \n                                         either side of each line.\n                                             Up to this point, I have adopted the standard of drawing \n                                         crease patterns on the white side of the paper, for two reasons. \n                                         First, the lighter side offers better contrast with the lines. \n                                         Second, if one draws the crease patterns on the white side of \n                                         the paper and folds along the lines, they will be mostly hidden \n                                         in the folded model (unless you’ve included color changes, of \n                                         course). But for a moment, I would like to reverse this conven-\n                                         tion, in order to cement the analogy between crease patterns \n                                         as contour maps and the direction of fold lines. When viewed \n\n     590\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c90"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 616,
  "content": "                                             Now, it’s time for the axials. If we want to unfold the \n                                         base to lie ﬂat in plan view, then we need an axial contour \n                                         running down the symmetry line of the model (the center of \n                                         the square in our design). Since every point along that line \n                                         is axial, that means that at each intersection of ridges along \n                                         the center line, an axial contour must propagate outward \n                                         (leftward) from the intersection. We propagate these contours \n                                         outward until they hit a ridge; they bounce at the ridges and \n                                         keep going until they close on themselves or run off of the \n                                         paper, as in Figure 13.36.\n\n\n                                                                                   4 1\n\n                                                                                    1\n                                                                                 4  1  1\n                                                                                    1\n                                                                                6   1  1\n\n                                                                               8    2\n\n                                                                                    4\n\n\n            Figure 13.36. \n            The ﬁrst round of axial creases.\n\n                                             The axial contours drawn in Figure 13.36 are the ones that \n                                         are forced by the crease pattern (speciﬁcally, they are forced by \n                                         the requirement of having an axial crease down the symmetry \n                                         line of the model). But they also establish a natural scale for \n                                         the remaining contours of elevation. Observe that the closest \n                                         two parallel axial contours come to one another is two grid \n                                         squares’ worth. There must be a nonzero contour of constant \n                                         elevation between them, that is, one grid square, which means \n                                         that the natural width of the ﬂaps will be one grid square’s \n                                         worth. I will call this contour the “axial+1” contour, since its \n                                         elevation is one grid square above the axial contour. And so, \n                                         we add those forced axial+1 contours, and then continue add-\n                                         ing contours at alternating elevations so that all contours are \n                                         either axial or axial+1. This means that the leg ﬂaps will all be \n                                         one unit wide and the body (after opening out into plan view) \n\n     604\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c91"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 170,
  "content": "                                             Strip grafts can get fairly complicated and can actually \n                                         comprise most of the paper in the model. The crease pattern \n                                         in Figure 6.32 shows the base for a treehopper, a type of \n                                         insect; this strip graft is used to create three points from one \n                                         ﬂap at each end (note the resemblance of the crease pattern to \n                                         that of an ideal split). I have highlighted the strip graft in the \n                                         crease pattern. If you cut out the strip and butt the two halves \n                                         of the remainder together, you will observe the underlying base: \n                                         a simple modiﬁcation of the stretched Bird Base.\n\n\n                                         Figure 6.32. \n                                         Crease pattern, base, and folded model of the Treehopper.\n\n                                             Figure 6.33 incorporates two strip grafts into a shape \n                                         otherwise composed of half of a blintzed Waterbomb Base and \n                                         half of a blintzed Frog Base. The transformation from base \n                                         to folded model is more complex than most, but you should \n                                         have no trouble in going from the crease pattern to the base. \n                                         The extra paper in the split gets used to form the split in the \n                                         wings, the pronotum (the triangle in the middle of the back), \n                                         and both the pair of horns on the thorax and four horns on the \n                                         head (yes, they really look like that. These beetles are popular \n                                         as pets in Japan).\n                                             Grafts can get rather complicated, but their apparent \n                                         complexity may mask an underlying simplicity. The Dancing \n                                         Crane shown in Figure 6.34 is mostly graft, but in fact, it is \n\n\n     158\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c92"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 158,
  "content": "                                         eliminating folds composed of many layers, it allows the layers \n                                         to stack neatly, giving a cleaner folded model.\n                                             When you are designing, it’s both reasonable and com-\n                                         mon to fold many layers together in order to put creases into \n                                         the right place. Once you know where the creases are, you \n                                         can search for alternate folding sequences that permit a more \n                                         sequential assembly; such a sequence for the Tree Frog of \n                                         Figure 6.18 is shown at the end of the chapter.\n\n                                         6.3. More Complicated Grafts\n                                         Thus far we’ve used grafting to add paper to one or more corners \n                                         of a square. We can do this in two ways: by adding a border graft \n                                         (a strip of paper running all or partway around the square), \n                                         or by adding a strip graft (a strip of paper cutting across the \n                                         crease pattern). The strip graft necessitates that we cut the \n                                         crease pattern into two or more pieces to insert the strip. It may \n                                         seem vaguely disquieting to cut up the origami square, but you \n                                         should get used to the idea: more complicated cuts, instigated \n                                         by more complicated grafts, are shortly to come.\n                                             In any event, all we’ve looked at so far is adding features \n                                         to the corners of a square, but since there are only four corners \n                                         on a square, it’s pretty easy to enumerate all possible ways of \n                                         using border and strip grafts to augment corners. However, \n                                         it’s also possible to use grafting to add paper in the middle of \n                                         an edge.\n                                             Why might we want to do this? Well, for one thing, not all \n                                         models derive their ﬂaps from the corners of the paper. One \n                                         of the most straightforward applications of grafting is to add \n                                         extra paper to the end of a ﬂap, as we’ve done for toes, for ex-\n                                         ample. If the tip of the ﬂap in question comes from the edge of \n                                         the paper, rather than the middle, then we should add paper \n                                         in the middle of the edge.\n                                             There is much more variety in adding paper to a spot \n                                         along the edge of the square, since there are an inﬁnite num-\n                                         ber of locations along the square where we might perform our \n                                         surgery. And it will be surgery of the strip-grafting sort; as we \n                                         will see, border grafts are far more limiting than strip grafts \n                                         when it comes to adding paper along edges of preexisting crease \n                                         patterns.\n                                             As a concrete example and to have something to work with, \n                                         let’s take the simple lizard shown in Figure 6.19 (and whose \n                                         folding sequence is given at the end of the chapter). This model \n                                         ﬁts together quite neatly; it’s questionable whether one should \n                                         even try to add feet. What you give up in aesthetics may very \n                                         well not be compensated by what one gains in adding paper to \n\n     146\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c93"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 180,
  "content": "./origami_dataset_dev/Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li/page180_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c94"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 10,
  "content": "                                                  Acknowledgements\n\n\n                         his book was a labor of many years. It is both my \n                         earliest book and my latest book; I began writ-\n                         ing up my ideas on how to design when I began \n                         what became my ﬁrst published book in the early \n                         1980s, but not until recently have I developed the \n            framework for those ideas. Over the years, I have been inﬂu-\n            enced by many scientists and artists, both inside and outside \n            of origami, all of whom contributed, one way or another, to the \n            present tome. It is impossible for me to identify everyone who \n            has contributed to my work, but some of the larger pieces come \n            from the following, who I thank: \n                Neal Elias, for his encouragement and for introducing me \n            to the magic of box pleating and the realization that anything \n            was possible in origami.\n                Lillian Oppenheimer and Alice Gray, for introducing me \n            to the wide, wild world of origami fanatics.\n                Akira Yoshizawa, who started it all, then showed that there \n            was more to origami art than just clever designs.\n                Dave Brill, who showed that you could have both clever \n            design and high art in the same model.\n                John Montroll, who took origami design to an unequaled \n            level and who has been a constant source of inspiration and \n            friendship.\n                Michael LaFosse, who took origami art to an unequaled \n            level and Richard Alexander; both have been equally great \n            friends.\n                John Smith, James Sakoda, and especially David Lister for \n            sharing a wealth of information about the history of origami, \n            both privately and on the origami-L mailing list; David Lister, \n            as well for numerous private comments and corrections with \n\n\n                                                                                                      ix\n\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c95"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 762,
  "content": "                                                     points of intersection between pairs of edges. Each line segment in the straight \n                                                     skeleton is the angle bisector between two edges of the polygon.\n                                                     Stretched Bird Base (page 57): a form of the Bird Base in which two op-\n                                                     posite corners are pulled apart to straighten out the diagonal that connects \n                                                     them.\n                                                     Strip graft (page 141): modifying a crease pattern as if you spliced in \n                                                     one or more strips of paper running across a crease pattern in order to add \n                                                     features to the base.\n                                                     Structural coloring (page 349): a representation of a crease pattern in \n                                                     which lines are color-coded according to their structural role and elevation.\n                                                     Stub (page 423): a new edge added to the tree graph attached to a new \n                                                     node introduced into the middle of an existing edge and associated creases \n                                                     added to the crease pattern. Adding a stub allows four path conditions to be \n                                                     simultaneously satisﬁed as equalities.\n                                                     Subbase (page 411): a portion of a base, usually consisting of a single axial \n                                                     polygon.\n                                                     Subtree (page 411): the tree graph that is the projection of a subbase.\n                                                     Swivel fold (page 28): an asymmetric version of a squash fold in which the \n                                                     two valley folds are not collinear.\n\n                                                     T\n                                                     Tangent points (page 347): points along axial polygons where circles (or \n                                                     rivers) touch each other and are tangent to the hinge creases.\n                                                     Technical folding (page 48): origami designs that are heavily based on \n                                                     geometric and mathematical principles.\n                                                     T-graft (page 486):  a type of graft used in box pleating that creates a ﬂap \n                                                     at a designated spot along the edge of the paper.\n                                                     Tile (page 250): a portion of a crease pattern, usually consisting of one or \n                                                     more axial polygons and decorated by circles and rivers, that can be assembled \n                                                     into crease patterns by matching circle and river boundaries.\n                                                     Tree (page 402): short for tree graph.\n                                                     Tree graph (page 402): a stick ﬁgure that represents a uniaxial base, \n                                                     in which each edge of the tree represents a unique ﬂap or connection  \n                                                     between ﬂaps.\n                                                     Tree theory (page 401): the body of knowledge that describes the quan-\n                                                     titative construction of crease patterns for uniaxial bases based on a cor-\n                                                     respondence between features of a tree graph and features in the crease \n                                                     pattern.\n                                                     Tree theorem (page 407): the theorem that establishes that satisfying \n                                                     the path conditions is both necessary and sufﬁcient for the construction of a \n                                                     crease pattern for a given tree graph.\n                                                     Triangulation (page 423): the process of decomposing high-order axial \n                                                     polygons in a crease pattern into smaller polygons that are all order-3, i.e., \n                                                     triangles.\n\n                                                     U\n                                                     Unfold (page 11): removing a valley or mountain fold, leaving behind a \n                                                     crease.\n                                                     Uniaxial base (page 244): a base in which all ﬂaps lie along a single axis \n                                                     and all hinges are perpendicular to the axis.\n\n       750\n                              Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c96"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 4,
  "content": "                 Origami Design Secrets\n                                  Second Edition\n\n                         Mathematical Methods for an Ancient Art\n\n                                      Robert J. Lang\n                                      \n\n\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c97"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 38,
  "content": "            Figure 2.25. \n            The rabbit ear can be folded \n            from any triangle. \n            Top: equilateral. \n            Middle: isosceles. \n            Bottom: scalene.\n\n                                         detail and many guises as we delve more deeply into system-\n                                         atic design.\n                                             In addition to the simple, straightforward rabbit ear, \n                                         there are two variations that are regularly encountered. \n                                         Figure 2.26 shows a variation in which the edges do not lie on \n                                         a common line.\n\n\n            Figure 2.26. \n            A variation of a rabbit ear.\n\n\n                                             Figure 2.27 shows a combination of two rabbit ears made \n                                         from the near and far layers of a two-layered ﬂap. Known, \n                                         appropriately, as a double rabbit ear, it is typically formed by \n                                         pinching the near and far layers of the ﬂap into rabbit ears and \n                                         then swinging the tip over to the side.\n                                             Just as the reverse fold is a combination of a valley fold \n                                         with its mirror image on another layer of a ﬂap, the double rab-\n\n      26\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c98"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 695,
  "content": "./origami_dataset_dev/Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li/page695_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c99"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 574,
  "content": "                                         ﬁnd folding sequences to locate individual folds or lines, but \n                                         this is an incredibly tedious process with a circle-packed design \n                                         if there are tens of points and/or lines to be found.\n                                             It is not surprising, then, that artists have found variations \n                                         on circle packing that lead to far more tractable (and therefore \n                                         foldable) designs. One of the most powerful and versatile is also, \n                                         surprisingly, one of the oldest toolkits of technical design: box \n                                         pleating, which we met in the previous chapter.\n                                             The term “box pleating,” as it is used now, actually takes \n                                         in two distinct sets of techniques. In one form of box pleating, \n                                         one creates three-dimensional structures in which the walls \n                                         meet at right angles to form boxes and partial boxes (hence the \n                                         ﬁrst part of the name). This form of box pleating is inherently \n                                         three-dimensional; examples are to be found in Mooser’s Train \n                                         and in the 3D works of Max Hulme and Neal Elias, such as the \n                                         former’s “Stephenson Rocket” and the latter’s “Dump Truck.” \n                                             The other form of box pleating results in ﬂat shapes with \n                                         arbitrary ﬂap combinations, often incorporating the design \n                                         pattern we now call the “Elias stretch.”  Both styles of folding \n                                         have most major folds running at multiples of 90° and lying on \n                                         a grid, with secondary creases at multiples of 45°, and it is in \n                                         fact difﬁcult to distinguish from a crease pattern whether the \n                                         model is 3D or ﬂat without careful examination or even trial \n                                         folding. For this reason, it has become common to call any fold \n                                         in which most creases lie on a square grid a “box-pleated fold.” \n                                         Many of the designs from the “golden age of box pleating” in the \n                                         late 1960s and 1970s used both 3D and ﬂat box-pleated forms \n                                         as part of their structure.\n                                             Since I have already written about box formation, I’ll focus \n                                         now on the subset of box pleating in which the major creases lie \n                                         on a square grid, the secondary creases run at multiples of 45°, \n                                         and the base folds entirely ﬂat. This subset of box pleating can \n                                         be further subdivided into uniaxial bases—bases in which all \n                                         ﬂaps lie along a common line and all hinges are perpendicular \n                                         to the line—and, shall we say, everything else (which takes \n                                         in a lot). Despite it being only a subset of the broader world \n                                         of box pleating, the set of box-pleated structures that are also \n                                         uniaxial bases is broad and useful. I call this subset uniaxial \n                                         box pleating.\n                                             Within the world of uniaxial box pleating, one can design \n                                         bases using a process very much like circle packing, with one \n                                         big difference: while a complex circle-packed design can be \n                                         extremely irregular and practically impossible to construct \n                                         without a computational device, even the most complex and \n                                         ornate uniaxial box-pleated base can be constructed with no \n                                         more tools than a pencil and square-grid paper. Because it is so \n\n     562\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c9a"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 212,
  "content": "                                           foreleg                                          foreleg\n\n\n                                                                    head\n\n\n                                          hind leg                                          hind leg\n\n            Figure 7.4. \n            The desired pattern of pleat \n            lines on the shell.                                      tail\n\n                                         60° is aesthetic; it moves the lines away from the more evenly \n                                         distributed lines of nature, but by keeping to the natural sym-\n                                         metry of the underlying crease pattern, we create the possibility \n                                         of fortuitous alignments of the creases, leading (we hope) to a \n                                         relatively elegant folding method.\n                                             The pleats are only needed on the shell, but pleats have \n                                         to propagate all the way to an edge (or terminate at a junction \n                                         of other pleats), so I extend the pleat lines all the way to the \n                                         edge of the paper as shown in Figure 7.5.\n\n\n                                          foreleg                                           foreleg\n\n\n                                                                    head\n\n\n                                          hind leg                                          hind leg\n\n            Figure 7.5. \n            The shell pattern with pleats \n            extended to the edges of the \n            paper.\n                                                                     tail\n\n     200\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c9b"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 206,
  "content": "                49. Turn the model over.           50. Fold the wings up\n                                                   and out to the sides.            51. Fold the left wing over to\n                                                                                    the right, swivel-folding at its\n                                                                                    base.\n\n\n             52. Slide a group of layers         53. Fold a raw edge over to        54. Fold the wing back to the\n             downward as far as possible.        the left as far as possible.       left.\n\n\n                                 51–54\n\n\n             55. Repeat on the right.            56. Fold one layer over to the     57. Bring the left side to the\n                                                 right, threading it through the    front.\n                                                 gap between the sides.\n\n     194\n                         Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c9c"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 560,
  "content": "             108. Same thing again; one layer       109. Wrap one layer            110. Fold down four edges and\n             goes to the left, two to the right.    from front to back.            flatten the model completely.\n\n\n                            111. Finally, the model will lie flat; this is what it\n                            looks like in its entirety. Turn it over.\n\n\n                                                112. The clock face is not shown in this step. Fold\n                                                the horizontal edges upward and downward; at the\n                                                same time, swing the clock face around as necessary\n                                                and fold one layer at the right toward the right.\n\n\n                            113. Fold upward at right angles on existing creases\n                            and turn the model over (so that the clock face and\n                            body—the two ends—are pointing downward).\n\n     548\n                         Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c9d"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 548,
  "content": "                                                                               19–20, 2×\n\n\n              19. The precreasing is finished;    20. Fold the sides in as you       21. Continue narrowing\n              now we begin folding in earnest.    fold the flap upward.              the flap by repeating step\n              Beginning at the top and using                                         19–20 twice, then step 19\n              the existing creases, fold the                                         once more.\n              sides in as you fold the top of the\n              rectangle down.\n\n\n             22. Swing the narrow flap (which    23. Simultaneously fold the      24. Simultaneously fold the sides\n             will be the pendulum) upward.       sides in and pleat horizontally  back as you swing a layer down\n                                                 on existing creases.             (above) and up (below).\n\n     536\n                         Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c9e"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 398,
  "content": "./origami_dataset_dev/Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li/page398_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0c9f"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 564,
  "content": "                133. Close up again.      134. Closed-sink         135. Pull out a      136. Mountain-fold the\n                                          the edge.                single layer.        white layer inside.\n\n\n               137. Unwrap the white    138. Reverse-fold the 139. Reverse-fold the top     140. Fold the\n               hood and reverse-fold    corner.               corner and mountain-fold      point down.\n               the bottom corner.                             the edge inside.\n\n\n                                                                  132–142\n\n\n             141. Fold the left edge over 142. Fold the small    143. Repeat steps   144. Mountain-fold the white\n             to the right and pull up the colored point upward.  132–142 on the far  strip (which connects the\n             loose paper at the top to                           side.               clock face to the deer head)\n             make a hood.                                                            behind. (The back of the\n                                                                                     clock will interfere with this,\n                                                                                     but don’t worry about that.)\n\n     552\n                         Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ca0"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 202,
  "content": "           16. Fold and unfold.     17. Fold and unfold.  18. Fold and unfold.   19. Close up the flap,\n                                                                                 incorporating the\n                                                                                 creases shown.\n\n\n                                                                                   15–21\n\n\n           20. Reverse-fold the     21. Reverse-fold three 22. Fold one flap to the 23. Repeat on the left.\n           corner.                  corners.             right.\n\n\n     190\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ca1"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 216,
  "content": "                                         the ﬁgure, or (better yet) incorporate the folds that create the \n                                         texture into the folds that create the rest of the model.\n\n                                         7.2. Pleated Textures\n                                         The concept of origami texture as art in itself was widely \n                                         explored by French artist and folder Jean-Claude Correia in \n                                         the 1980s. Correia adopted the technique of creating crossing \n                                         grids of pleats, then manipulated the excess paper created at \n                                         the pleat intersections. While Correia’s work was primarily \n                                         abstract, the technique has been adopted by several artists \n                                         to combine textures with representational origami; an early \n                                         hedgehog by John Richardson  used crossed pleats to make a \n                                         grid of short spines on a three-dimensional body. The technique \n                                         perhaps reached its zenith in animal subjects in Eric Joisel’s \n                                         Pangolin, in which crossed pleats of varying sizes created the \n                                         scaled body of a primitive anteater.\n                                             The basic concept of a pattern graft is to create a regular \n                                         pattern of creases that emulates some regular pattern present \n                                         in the subject. The simplest possible pattern is formed by mak-\n                                         ing a row of parallel pleats in one direction, then again at 90° \n                                         to the ﬁrst; this creates a grid of squares (or, depending on your \n                                         orientation, diamonds). The resulting pattern resembles scales, \n                                         which is perhaps why most patterned subjects have tended to be \n                                         scaly: snakes, dragons, scaled anteaters, and the like.\n\n\n                                         Figure 7.10. \n                                         Left: crossed pleats. \n                                         Middle: the folded structure. \n                                         Right: crossed pleats at 45° create a grid of diamonds.\n\n                                             There is nothing that says one can’t use other patterns, \n                                         however; it is possible to take many regular tiling patterns \n                                         and create pleated origami representations of them. Building \n                                         on work by Fujimoto and Momotani, origami artist Chris K. \n\n     204\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ca2"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 570,
  "content": "                                                     203. Push in the side of the top\n                                                     point and hook it around the\n                                                     uppermost leaf-flap, between\n                                                     the layers of the roof. The right\n                                                     side is shown completed.\n\n\n             202. Place the clock face over the\n             opening in the body. Tuck the four tabs\n             along the sides into the slots in the\n             clock face and hook them over the\n             edges inside the clock face. This will\n             lock the face securely to the body.\n\n\n                                                                                     204. This shows the entire\n                                                                                     model thus far. Now, we will\n                                                                                     work on the deer’s head.\n\n\n             205. Squash-fold the    206. Push in the back of       207. Fold a rabbit ear 208. Mountain-fold the\n             top of the head,        the ear (which is quite        from the top of the    point behind.\n             wrapping the excess     thick) and slightly squash-    white flap (which will\n             paper around the        and petal-fold it, leaving     become an antler).\n             thicknesses below the   it three-dimensional.\n             ears. Repeat behind.    Repeat behind.\n\n     558\n                         Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ca3"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 558,
  "content": "                   90. Fold the edge             91. Fold the edge up again and    92. Swing the rest of the\n                   back down.                    tuck paper inside at the left.    model over to the left.\n\n\n                                       88–91\n\n\n                  93. Repeat steps             94. Sink the bottom edge (this        95. Fold the flap to the left.\n                  88–91 on this side.          connects with creases on the rest of\n                                               the model, too).\n\n\n                                                                                 95–97\n\n\n                96. Closed-sink the flap.         97. Swing the rest of the             98. Repeat steps 95–97.\n                                                  model over to the right.\n\n     546\n                         Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ca4"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 766,
  "content": "                Butterﬂy                              Crawﬁsh                               Dragonﬂy\n                 crease pattern, base, and folded      crease pattern, base, and folded      crease pattern, base, and folded \n                      model  703                            model  157                            model  705\n                                                      Crawford, Patricia  713               Dragon, Robert Neale’s  139\n                C                                     crease assignment  21, 22, 744,       Dump Truck  562\n                                                                  748\n                Camel Spider                           around a vertex  371                 E\n                 contour map and folded model          within molecules  368\n                      641                             crease patterns  7, 744               edge ﬂap  105, 291, 745\n                Centipede  677                         lines used in  22                      splitting of  105\n                 crease pattern, base, and folded     creases  744                          edges  402, 745\n                      model  278                       axial  409                             branch  402\n                Cerambycid Beetle  641                 axis-paralell  574                     folded  745\n                 crease pattern, base, and folded      deﬁnition of  11                       leaf  402, 747\n                      model  606                       gusset 369                             raw  749\n                Cerceda, Adolfo  713                   hinge  348                           edge weight  402, 745\n                Chan, Brian  563                       pseudohinge  416, 581                efﬁciency  745\n                Cicada Nymph  676                      ridge  349, 749                        in pleated textures  211\n                 contour map, base, and folded        creativity, nature of  5                of a circle packing  299\n                      model  655                      crimp fold  31, 744                     of middle ﬂaps  321\n                circle method  298                     in a gusset molecule  362            elegance  43\n                circle packings  7, 291, 296, 299,     stretching  32                       elephant\n                   352, 364, 378, 401, 702, 744       Crow                                    African Elephant  42, 713\n                 bases from equal circle               folding sequence for  130              Elephant’s Head  44\n                         packings  322                crystallization  308, 310, 744          Elephant’s Head with longer \n                 equivalence to mathematical          Cupboard Base  57,  745                     tusks  45\n                         circle packing  317          Cyclomatus metallifer                   Elephant’s Head with tusks  44\n                 limitations of  699                   contour map, base, and folded          Elephant’s Head with white \n                 limits for large numbers of                model  669                            tusks  51\n                         ﬂaps  304                                                            exhibition of  1\n                 optimal packings, 110 circles  318   D                                       going to see  713\n                 three regular  301                                                           One-Crease Elephant  41\n                circle/river method  7, 368, 744      decreeping  145, 745                  elevation  588\n                circle/river packings  474            degenerate vertices  426              Elias, Neal  48, 64, 461, 480, 562, \n                 molecules for  364                   degrees of freedom  421                  680, 713\n                circle/river patterns  269            Demaine, Erik  584,  588, 596, 658    Elias stretch  562, 745\n                circles                               dense bouncing  656                   Emu\n                 connection to tiles  297             dense contours  656                     crease pattern, base, and folded \n                 in circle/river packings  412        design, basic principles  48                model  322\n                 in Classic Base triangle  63         detail folds  53, 745                 Engel, Peter  42, 48, 587, 700\n                 minimum boundary of a ﬂap  293       diagonal diagonal symmetry  306       Euclid  353\n                 overlap, impermissibility  295       diagonal symmetry  745                Eupatorus gracilicornis\n                Classic Bases  54, 744                diagramming symbols and terms           crease pattern, base, and folded \n                closed sink fold  36, 744                   13                                    model  383\n                Cockroach                             diagrams, level of detail in  48      Euthysanius Beetle\n                 crease pattern, base, and folded     difﬁculty, scale of  28                 contour map and folded \n                      model  378                      dihedral angle  469, 745                         model  678\n                colliding squares  637                distance                              extended Pythagorean stretch  647\n                comb  676                              in folded form versus crease \n                complexity  42                                  pattern  151                F\n                composite molecules  360, 380, 744    distorted base  69, 745\n                contour lines  589                    Dog Base  244                         families of creases  349\n                 bouncing  596                        double-blintzed Frog Base  326        ﬁlaments\n                 inﬁnite bouncing  596                double-blintzing  326, 745              in comb  676\n                corner ﬂap  105, 291, 744             Double-Boat Base  57                  Fish Base  54, 151, 242, 248, \n                Correia, Jean-Claude, crossing        double rabbit-ear fold  26, 745          346, 711, 745\n                      pleats  204                     double sink fold  35, 745               constructed from two tiles  255\n\n\n       754\n                              Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ca5"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 14,
  "content": "                      Albertino              Biddle                 Brill                 Cerceda 1              Cerceda 2\n\n\n                                 Cerceda 3               Cerceda 4             Corrie               Elias\n\n\n                       Engel                Enomoto                Fridryh                Honda                  Kasahara\n\n\n                                 Kawai                   Kobayashi             Lang               Montroll 1\n\n\n                     Montroll 2             Montroll 3            Montroll 4             Montroll 5              Montroll 6\n\n\n                                Montroll 7               Neale 1              Neale 2              Neale 3\n\n\n                      Noble                  Rhoads                Rojas              Ward & Hatchett             Weiss\n\n                                                     Figure 1.1. \n                                                     A herd of origami elephants.\n\n\n         2\n                              Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ca6"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 709,
  "content": "./origami_dataset_dev/Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li/page709_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ca7"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 28,
  "content": "                                             Actions are indicated by arrows that show the motion of \n                                         the paper as a fold is made and sometimes show manipulations \n                                         of the entire model. An open hollow arrow is used to show the \n                                         application of pressure (usually in connection with a reverse or \n                                         sink fold). See Figures 2.21–2.23 and 2.40–2.47 for examples.\n\n            Figure 2.5. \n            A hollow arrow indicates to          PushPush  herehere.\n            “push here.”\n\n                                             An arrow that incorporates a loop indicates to turn the \n                                         paper over—either from side to side (like turning the pages of a \n                                         book) or from top to bottom (like ﬂipping forward or backward \n                                         on a wall calendar), with the direction speciﬁed by the orienta-\n                                         tion of the arrow.\n\n\n                                                  TurnTurn the the paper paper over over from \n                                                  sidefrom to side.side to side\n\n\n            Figure 2.6. \n                                                  TurnTurn the the paper paper over over from \n            A looped arrow indicates to           top to bottom.\n            turn the paper over.                   from top to bottom\n\n\n                                             If the model is to be rotated in the plane of the page, that \n                                         is indicated by a fraction enclosed in two arrows showing the \n                                         direction of rotation. The number inside the arrows is the frac-\n                                         tion of a circle through which the rotation takes place. “1/2” \n                                         is a half turn, i.e., the top becomes the bottom and vice-versa; \n                                         “1/4” indicates a quarter-turn. Sometimes the amount of rota-\n                                         tion is not a simple fraction; rather than putting something \n                                         unwieldy like “21/34” in the arrows, I’ll usually round it to the \n                                         nearest quarter-turn and you can use the subsequent diagram \n                                         to pin down the orientation precisely.\n            Figure 2.7. \n            A fraction inside a circle            Rotate the paper.\n            formed from two arrows              Rotate the paper          1/4     1/4\n            indicates to rotate the paper.\n\n                                             Most origami is folded ﬂat at every step. When a model \n                                         becomes three-dimensional, however, either because the ﬁnal \n                                         model is 3-D or one or more intermediate steps are 3-D, it \n\n      16\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ca8"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 232,
  "content": "./origami_dataset_dev/Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li/page232_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ca9"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 174,
  "content": "             Songbird 1\n\n\n             1. Begin with a square, colored side 2. Fold and unfold in half vertically 3. Fold the sides in to the middle and\n             up. Fold and unfold along the     and horizontally.                make pinches along the top and\n             diagonals, then turn the paper over.                               bottom edges; unfold.\n\n\n     162\n                         Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0caa"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 612,
  "content": "                 elevation   0111111111112 002220                         2     000\n\n\n                unassigned\n\n\n                  assigned\n\n\n                   axial+2\n                   axial+1\n                     axial\n                                         Figure 13.31. \n                                         Crease assignment. Given a set of elevation lines (top), the fold angle \n                                         (mountain/valley/crease) of axis-parallel folds can be determined by \n                                         the elevation of the creases on either side of the given fold.\n\n                                         yet speciﬁed (although if there is only one family of off-axial \n                                         contour folds, they are uniformly valley folds; the ridge folds \n                                         alternate fold direction). In general, however, this informa-\n                                         tion is enough to perform the collapse of the crease pattern; \n                                         the as-yet-unlabeled crease directions become obvious as you \n                                         perform the collapse.\n                                             If we draw the crease pattern on a square grid with hinge \n                                         polygon vertices always landing on grid points, then we can \n                                         talk about ﬂap lengths in terms of “units,” where one unit is \n                                         one grid square. The shortest possible ﬂap is therefore one unit \n                                         long. What about ﬂap width? In the densest crease patterns, \n                                         we have axial fold lines on parallel grid lines, and so we will \n                                         have off-axial fold lines on the half-integral grid lines. The \n                                         spacing between axial and off-axial folds sets the width of the \n                                         associated ﬂap; so the minimum width of any ﬂap is one-half \n                                         unit. For insect legs, narrow ﬂaps are desirable, but for crea-\n                                         tures with reasonably large bodies, it’s desirable to have the \n                                         body ﬂaps somewhat wider. It is often possible to adjust the \n                                         positions of rivers and the sizes of the “stretched” polygons to \n                                         shift the axial contours so that the axial contours get no closer \n                                         to each other than two or more units. This gives a base that is \n                                         proportionately wider relative to the lengths of its ﬂaps.\n\n     600\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0cab"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 606,
  "content": "                                             We can see what must happen in the crease pattern by \n                                         considering what must happen in the folded form, as shown \n                                         in Figure 13.25.\n\n\n                                         Figure 13.25. \n                                         Left: a folded form around a ridge with two contour lines shown. \n                                         Right: the conﬁguration of the two contour lines around the ridge \n                                         crease. The contour line enters and leaves the ridge crease at the \n                                         same angle, i.e., it reﬂects across the ridge crease.\n\n                                             As the ﬁgure shows, when an axial contour line hits a \n                                         ridge crease, it reﬂects across the crease and keeps going until \n                                         it joins a collinear axial contour, runs off the paper, or hits yet \n                                         another ridge crease, in which case, the process continues fur-\n                                         ther. Thus, at each ridge crease, there is a net change in angle \n                                         of propagation, which is twice the angle between the contour \n                                         line and the ridge crease. If a propagating contour hits the \n                                         ridge crease at 45°, it departs at 45° to that same ridge crease, \n                                         with the net result that it takes a 90° turn at the ridge crease \n                                         relative to its original direction.\n                                             What if it hits a ridge crease at 90°? It should still reﬂect \n                                         across the crease, but reﬂecting across a 90° line results in a \n                                         continuation of the contour line. So a contour line that hits a \n                                         ridge at 90° just keeps going straight.\n                                             And, as you can see in Figure 13.24, other conﬁgurations \n                                         can occur. A contour line can hit a junction of two ridge creases. \n                                         We can ﬁgure out what happens there by considering what \n                                         happens if the contour line slightly misses the junction. In that \n                                         case, it reﬂects across both ridge creases, which, for uniaxial \n                                         box pleating, has the effect of sending the contour line back \n                                         the way it came. Since we’ve already drawn the contour line \n                                         in “the way it came,” we can simply allow the contour line to \n                                         terminate on such a junction.\n                                             All three of these conﬁgurations are illustrated in Fig -\n                                         ure 13.26.\n                                             There is one other situation to consider, which is visible \n                                         in the lower left portion of Figure 13.24. What happens when \n\n     594\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0cac"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 160,
  "content": "                                                foreleg\n\n\n                                                                                   head\n                     hind leg                                belly\n\n\n                                                                               belly\n                                                                      foreleg\n                                               head\n                                                                              forelegs\n\n                                                                              hind legs\n\n\n                                                                                tail\n\n\n                        tail                             hind leg\n\n                                         Figure 6.20. \n                                         Crease pattern and folded example of the simpliﬁed lizard base.\n\n                                         to the base, by coloring them in and not drawing any creases in \n                                         them. In this case, three of the four corners go unused.\n                                             What do we mean by “not essential to the base”? A simple \n                                         deﬁnition of nonessential would be that you can cut away the \n                                         paper without losing or shortening any ﬂaps. In the lizard, \n                                         the pair of scalene triangles at upper left and lower right in \n                                         Figure 6.20 clearly ﬁts this deﬁnition (which you can verify by \n                                         direct experimentation: Fold the base, cut off the corners, and \n                                         refold it). The upper right corner is questionable; it creates the \n                                         white underbelly of the lizard, and the raw corner can be used \n                                         to make a lower jaw and/or tongue for the lizard (try it), but if \n                                         we take the major features of the base to be head, body, legs, \n                                         and tail, we can assuredly cut away the corner and still obtain \n                                         these features in the same sizes and locations.\n                                             Of course, such nonessential corners, even if they create \n                                         no new ﬂaps, still add to the thickness of the existing ﬂaps. \n                                         This can be either a feature or a bug in the design, depending \n                                         on whether the extra paper adds necessary stiffness to the \n                                         ﬂap (feature) or causes the ﬂap to split, splay apart, or unfold \n                                         (bug).\n                                             In the crease pattern, I’ve also added labels that show which \n                                         parts of the crease form which features of the base. We use these \n                                         to deﬁne where we wish to add extra paper to create the toes.\n\n     148\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0cad"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 148,
  "content": "              1. Begin with a square with the diagonals 2. Fold a Preliminary Fold. 3. Petal-fold to form a Bird Base.\n              creased. Mountain-fold a bit of the edge behind\n              all the way around.\n\n\n            4. Unwrap the loose    5. Pop the corner inside- 6. Pleat the sides 7. The small square at\n            paper from the top near out so that it becomes downward and squash- the top is one of the\n            flap.                  concave upward.       fold the top.          squares we added at the\n                                                                                corners.\n                                         Figure 6.7. \n                                         Folding sequence for a Bird Base with two small squares at opposite \n                                         corners.\n\n                                         powerful technique for adding both large and small features \n                                         to an origami model.\n                                             However, grafting carries with it a risk: inefﬁciency. All we \n                                         really needed to add to this model were the two small squares \n                                         in the corners. But now, we’ve added a wide border all the way \n                                         around the square; most of this extra paper will go unused, \n                                         adding to the thickness of the model without adding anything \n                                         to the design.\n                                             Thus, there is a bit of an art to using grafting in design; \n                                         while the graft may have been inspired by the desire to add \n                                         a small bit of paper in one or two places, the challenge is to \n\n     136\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0cae"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 389,
  "content": "            Figure 10.42. \n            Left: circle/river pattern for an ant. \n            Right: pattern with axial creases added.\n\n                There is no particular symmetry that would favor the \n            gusset molecule, and the arrowhead molecule allows us to shift \n            some extra paper toward the ﬂap that eventually becomes the \n            abdomen, so I chose the arrowhead molecule in my own design. \n            (You might wish to try both yourself and see which you prefer.) \n            The generic form crease pattern, resulting base, and a model \n            folded from this base, are shown in Figure 10.43.\n\n\n            Figure 10.43. \n            Generic form crease pattern, base, and folded model of the Ant.\n\n                                                                                                     377\n                                                                    Chapter 10: Molecules\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0caf"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 410,
  "content": "            100. Reverse-fold the top 101. Narrow the legs     102. Turn the   103. Narrow the antennae\n            four points out to the sides; with mountain and    model over.     with mountain folds.\n            mountain-fold the bottom  valley folds.                            Narrow the bottom point.\n            pair out to the sides.\n\n\n                                                           106. Spread-sink the  107. Pleat the head\n                                                           point, pleating an upper downward. Fold the tip\n                                                           layer to take up the slack. of a flap underneath.\n\n\n             104. Fold two small points 105. Fold a flap up\n             at the top out to the sides. at the top and a flap\n             Narrow two long points at down at the bottom.\n             the bottom.\n\n\n     398\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0cb0"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 376,
  "content": "                                             Numerous other variations are also possible. My conjecture \n                                         is that for a given quadrilateral with a speciﬁed set of tangent \n                                         points, the basic gusset molecule is the molecule with the mini-\n                                         mum total crease length, but this has not yet been proven.\n                                             The gusset molecule is quite versatile. If you reexamine \n                                         some of the crease patterns from the previous chapter, you will \n                                         see a few gusset molecule patterns along with rabbit-ear and \n                                         Waterbomb molecules.\n\n                                         10.7. Molecules with Rivers\n                                         When we built crease patterns from preexisting tiles, we kept \n                                         track of ﬂaps and connections between ﬂaps by decorating the \n                                         tiles with circles and rivers. Similarly, when building up a \n                                         crease pattern via circle packing, we can insert segments into \n                                         the base by inserting rivers into the circle packing. Breaking \n                                         such a pattern down into molecules means that some of the \n                                         molecules must contain rivers. The molecules we have seen \n                                         thus far—rabbit-ear, Waterbomb, arrowhead, and gusset—have \n                                         not contained rivers; thus, there must be additional molecules \n                                         that apply to circle/river packings.\n                                             And there are, but most can be derived from the pure circle-\n                                         packed molecules. Let’s start with the three-circle rabbit-ear \n                                         molecule and add a single river. The river must enter along one \n                                         edge and exit along an adjacent edge. With no loss of generality, \n                                         we can represent the situation as in Figure 10.27.\n                                             In Figure 10.27, the triangle is deﬁned by three circles of \n                                         radius a, b, and c, plus a river of width d. But viewed in isola-\n                                         tion, this is simply equivalent to a three-circle triangle, as the \n\n\n                      c\n                               c\n\n\n                   d\n                                   b\n             a\n                       d\n                a              b\n\n                                                                                        tangent points\n\n                                         Figure 10.27. \n                                         Left: a triangle deﬁned by three circles plus a river. \n                                         Middle: crease pattern. \n                                         Right: folded molecule with two sets of tangent points.\n\n     364\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0cb1"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 362,
  "content": "                           folded form                 axial creases\n\n\n                              circles                crease and circle pattern      ridge creases\n\n\n                                                        hinge creases\n\n                                         Figure 10.6. \n                                         The three families of creases that make up a crease pattern designed \n                                         using the circle method.\n\n                                         one of these polygons in the crease pattern and seeing where \n                                         it winds up in the folded base. Several examples are shown in \n                                         Figures 10.7 through 10.9. In each case, the colored polygon \n                                         provides all of the layers of exactly one ﬂap. Furthermore, all of \n                                         the hinge creases end up collinear; they become the boundary \n                                         between the ﬂap and “everything else.”\n\n     350\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0cb2"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 404,
  "content": "             17. Fold and unfold.        18. Unfold completely.            19. Fold and unfold. Turn the paper\n                                                                           over.\n\n\n             20. Crease four angle bisectors.  21. Turn the paper over.         22. Collapse the paper on the\n             Fold the two side corners in.                                      creases shown.\n\n\n             23. Spread the layers and      24. Squash-fold.       25. Reverse-fold the   26. Squash-fold.\n             flatten the paper.                                    edge.\n\n     392\n                         Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0cb3"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 438,
  "content": "                                         for which the reduced path inequality becomes an equality is, \n                                         in analogy with active paths between nodes, called an active \n                                         reduced path.\n                                             So for any distance h, we have a unique reduced polygon \n                                         and a set of reduced path inequalities, each of which cor-\n                                         responds to one of the original path inequalities. We have \n                                         already assumed that all of the original path inequalities are \n                                         satisﬁed; thus, we know that all of the reduced path inequali-\n                                         ties are satisﬁed for the h = 0 case (no inset distance). It can \n                                         also be shown that there is always some inﬁnitesimally small \n                                         but positive value of h for which the reduced path inequalities \n                                         are also satisﬁed. On the other hand, as we increase the inset \n                                         distance, there comes a point beyond which one or more of the \n                                         reduced path constraints is violated.\n                                             Suppose we increase h to the largest possible value for \n                                         which every reduced path inequality remains true. At the \n                                         maximum value of h, one or both of the following conditions \n                                         will hold: \n\n                                             • For two adjacent corners, the reduced path length \n                                             has fallen to zero and the two inset corners are de-\n                                             generate; or\n\n                                             • For two nonadjacent corners, a path between inset \n                                             corners has become an active reduced path.\n\n                                             These two situations are illustrated in Figure 11.30.\n                                             Again, one or the other (or both) of these situations must \n                                         apply; it is possible that paths corresponding to both adjacent \n\n\n                                                                 A    α\n                                                                   i   i\n                                                                    α      ′\n                                                                     i    Ai\n                                                ′− ′ =                             ′  ′   ′\n                                       A′   ′  Ai Aj  0                           A − A = ml\n                                        i  Aj                                      i  j   ij\n\n\n                                                                                            ′\n                                         h                                                 Aj\n                            α\n                             i                     α                              h           α\n                               α                 α  j                                       α  j\n                                i                 j                                          j\n                                                     A                                          A\n                           Ai                         j                                          j\n                                         Figure 11.30. \n                                         Left: two corners are inset to the same point, which is the intersection \n                                         of the angle bisectors. \n                                         Right: two nonadjacent corners inset to the point where the reduced \n                                         path between the inset corners becomes active.\n\n     426\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0cb4"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 439,
  "content": "            and nonadjacent corners have become active simultaneously or \n            that multiple reduced paths have become active for the same \n            value of h (this happens surprisingly often). In either case, the \n            reduced polygon can be simpliﬁed, thus reducing the complex-\n            ity of the problem.\n                In a reduced polygon, if two or more adjacent corners have \n            coalesced into a single point, then the reduced polygon has \n            fewer sides (and paths) than the original axial polygon. And if a \n            path between nonadjacent corners has become active, then the \n            reduced polygon can be split into separate polygons along the \n            active reduced paths, each with fewer sides than the original \n            polygon (just as in the polygon network, an active path across \n            an axial polygon splits it into two smaller polygons).\n                The gusset molecule is an example of a reduced path \n            becoming active. In the gusset molecule the reduced quadrilat-\n            eral is inset until one of its diagonals becomes an active path; \n            the reduced quad is then split along the diagonal into two \n            triangles. In fact, what we have been calling a gusset crease is \n            really nothing more than a reduced active path crease, but we \n            will continue to draw them as gusset creases.\n                In either situation, you are left with one or more polygons \n            that have fewer sides than the original. The process of insetting \n            and subdivision is then applied to each of the interior polygons \n            anew, and the process repeated as necessary.\n                If a polygon (active or reduced) has three sides, then there \n            are no nonadjacent reduced paths. The three bisectors intersect \n            at a point, and the polygon’s reduced polygon evaporates to a \n            point, leaving a rabbit-ear molecule behind composed of the \n            bisectors.\n                Four-sided polygons can have the four corners inset to a \n            single point or to a line, in which case no further insetting is \n            required, or to one or two triangles, which are then inset to a \n            point. Higher-order polygons are subdivided into lower-order \n            ones by direct analogy.\n                Since each stage of the process absolutely reduces the \n            number of sides of the reduced polygons created (although \n            possibly at the expense of creating more of them), the process \n            must necessarily terminate. Since each polygon (a) can fold ﬂat, \n            and (b) satisﬁes the tree theorem, then the entire collection \n            of nested polygons must also satisfy the tree theorem. Conse-\n            quently, any axial polygon that satisﬁes the tree theorem—no \n            matter how many sides—can be ﬁlled with a crease pattern \n            using the procedure outlined above and collapsed into a base \n            on the resulting creases.\n                Thus, for example, the ﬁve-ﬂap pentagon that I used to \n            illustrate adding circles and stubs could also be turned into a \n\n                                                                                                     427\n                                                                   Chapter 11: Tree Theory\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0cb5"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 363,
  "content": "                                                                        Figure 10.7. \n                                                                        A hinge polygon, outlined by \n                                                                        hinge creases, becomes a single \n                                                                        flap of the base. This figure \n                                                                        shows a polygon that becomes \n                                                                        a corner ﬂap.\n\n\n                                                                        Figure 10.8. \n                                                                        A hinge polygon that becomes \n                                                                        an edge ﬂap.\n\n\n                                                                        Figure 10.9. \n                                                                        A hinge polygon that becomes a \n                                                                        middle ﬂap.\n\n                While the hinge creases are most easily related to the \n            original base and circle pattern, the axial creases—the lines \n            between circle centers—are just as important, but in an entirely \n            different way. They, too, delineate distinct polygons, which we \n            will call axial polygons.\n                When we collapse an axial polygon, all of its edges wind \n            up collinear, because its edges must lie along the axis of the \n            base. But in addition to this, all of the tangent points must \n            come together at a single point. Thus, there are two properties \n\n                                                                                                     351\n                                                                    Chapter 10: Molecules\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0cb6"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 405,
  "content": "              27. Fold the point down   28. Reverse-fold the    29. Bring some layers      30. Fold the flap\n              and spread-sink the corner. point upward.         to the front.              down.\n\n\n                                                               24–30\n\n\n              31. Turn the paper over.  32. Fold a flap to the left. 33. Repeat steps      34. Fold one layer to\n                                                                24–30 on this side.        the left in front and one\n                                                                                           to the right behind.\n\n\n             35. Open out the pocket.     36. Spread the     37. Pop the inner corner upward; 38. Turn the paper over.\n             Watch the marked spot        interior layers    squeeze the excess paper and\n             through the next few steps.  symmetrically.     swing it over to the left.\n\n\n               39. Fold and unfold.   40. Spread-sink the flap 41. Spread the top layers  42. Squeeze the sides and\n                                      symmetrically.           symmetrically.             the flap and swing the\n                                                                                          excess paper to the left.\n\n                                                                                                                 393\n                                                                      FoldingChapter Instructions: 10: Molecules Silverfish\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0cb7"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 411,
  "content": "              108. Flatten a point,    109. Sink two corners.   110. Pleat the body. Adjust 111. Round and taper\n              pleating the upper layer. Mountain-fold a flap    the pleat widths so that the the body. Dent the neck\n                                       underneath.              visible segments after     on each side.\n                                                                pleating taper slightly in\n                                                                width toward the tail.\n\n\n             112. Thin and spread all 113. Pinch the legs to      114. Shape the legs.    115. Finished Silverfish.\n             the antennae and feelers: narrow them further.\n             four at the top, five at the\n             bottom.\n\n\n                                                                                                                 399\n                                                                      FoldingChapter Instructions: 10: Molecules Silverfish\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0cb8"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 377,
  "content": "            river can (temporarily) be absorbed into one of the circles. The \n            crease pattern is the same as that for the three-circle triangle: \n            the creases of a rabbit ear. The only difference is that because \n            of the boundary between the river and circle, we have an extra \n            set of tangent points along the ﬂap and a set of hinge creases \n            that denote the boundary in the folded molecule.\n                The situation is much the same in a quadrilateral when the \n            river connects two adjacent edges, as in Figure 10.28. Just as \n            in the triangle, the river can be absorbed into the circle it cuts \n            off, and the crease pattern that collapses the quad is exactly \n            the same as the pattern for the pure circle-packed version of \n            the quadrilateral, with the addition of hinge creases to denote \n            the boundary of the river.\n\n\n                                                                                        tangent points\n            Figure 10.28. \n            Left: a quadrilateral deﬁned by four circles plus a river between \n            adjacent edges. \n            Middle: crease pattern for a gusset molecule. \n            Right: folded form with two sets of tangent points.\n\n                I leave it as an exercise for the reader to construct the \n            arrowhead molecule for this quadrilateral.\n                The situation is entirely new, however, if the river cuts \n            across the quadrilateral, connecting two opposite sides, because \n            now the river cannot be absorbed into a single circle. In fact, a \n            new crease pattern arises.\n                The simplest pattern, shown in Figure 10.29, occurs when \n            the quadrilateral and its circles satisfy some special condi-\n            tions.\n                This pattern, which we will call the sawhorse molecule, \n            was described by Meguro and Maekawa; it can be folded from \n            any quadrilateral quite simply, as shown in the sequence in \n            Figure 10.30.\n                The Waterbomb molecule can be considered a special case \n            of the sawhorse molecule—the limit when the central river \n            goes to zero width.\n\n                                                                                                     365\n                                                                    Chapter 10: Molecules\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0cb9"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 388,
  "content": "                                         Figure 10.40. \n                                         Crease pattern, base, and folded model of the Orchid.\n\n\n            Figure 10.41. \n            A stick ﬁgure of an ant.\n\n                                         between the legs and head, two smaller circles for the antennae, \n                                         and an even smaller circle for the rest of the head.\n                                             Again, there are many possible conﬁgurations, depending \n                                         on the speciﬁc sizes of the circles and rivers and their relative \n                                         arrangements, but a fairly straightforward conﬁguration is \n                                         shown in Figure 10.42. Connecting the centers of touching \n                                         circles with axial creases deﬁnes the polygons that we will ﬁll \n                                         in with molecules.\n                                             This pattern gives four triangles and two quadrilaterals. \n                                         This time all four of the corners of the square go unused (a not \n                                         uncommon occurrence with circle-packed designs). In the tri-\n                                         angles, we have no choice: They receive rabbit-ear molecules. In \n                                         the quadrilaterals, this time they don’t satisfy the conditions for \n                                         the Waterbomb molecule, so we can use either the arrowhead \n                                         or gusset molecule.\n\n     376\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0cba"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 149,
  "content": "                8. Continuing on (from         9. Form a Preliminary Fold     10. Petal-fold the top corner.\n                Figure 6.7). Mountain-fold     with the near layers.\n                the flap behind with the\n                crease running from corner\n                to corner and unfold.\n\n\n               11. Petal-fold the two points  12. Fold the two points back   13. Pull the corner out\n               together with the trapped      down.                          completely.\n               corner inside.\n\n\n                14. Like this. The flap is     15. Use the existing creases   16. The finished four-\n                now a Bird-Base-creased        to collapse the corner into    pointed Bird Base at the tip\n                square, folded in half along   a Bird Base.                   of the larger Bird Base.\n                the diagonal.\n\n             Figure 6.8. \n             Folding sequence for making the smaller square into a Bird Base.\n\n                                                                                                                 137\n                                                                               Chapter 6: Grafting\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0cbb"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 607,
  "content": "            Figure 13.26. \n            What happens when a contour line hits a ridge crease depends on \n            the angle. Left: a 45° incidence results in a 90° turn. Middle: hit-\n            ting a junction of two creases reﬂects the contour line back the way \n            it came, but offset. Right: hitting a junction of two ridge creases \n            directly terminates the contour line at the junction.\n\n            a contour line crosses a Y junction of ridge creases? Which \n            line does it reﬂect across? In fact, it must reﬂect across every \n            possible line at the junction, which means that although one \n            contour line comes into the junction, two contour lines come \n            out, as illustrated in Figure 13.27.\n\n\n                                                                       Figure 13.27. \n                                                                       If a contour line hits a Y junction \n                                                                       of ridge lines, it reﬂects across all \n                                                                       of the lines at the junction, and so \n                                                                       can emit more contour lines than \n                                                                       the one that entered.\n\n                Once we launch a set of axial contour lines, we must follow \n            them wherever they go, as they propagate across the crease \n            pattern, reﬂect across ridge lines, split at junctions, and in \n            general, keep going. For any given strand of contour line, if \n            we follow it along, it will eventually do one of three things:\n\n                • run off the edge of the paper (in which case, it can \n                be considered to have terminated);\n\n                • reﬂect back on itself (also a termination); or\n\n                • keep going forever. (This would be bad.)\n\n                                                                                                     595\n                                                           Chapter 13: Uniaxial Box Pleating\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0cbc"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 161,
  "content": "                Now, as we’ve seen, there are several different ways to \n            add toes to this lizard. We could split the leg points, albeit \n            at a cost in length. We could do it with a border graft. And \n            we could do it with a strip graft, in more than one way, as \n            it turns out. But let’s ﬁrst look at trying a border graft, not \n            because it works best, but because it doesn’t work very well at \n            all. In origami design, understanding why a design technique \n            doesn’t work can sometimes be more valuable than folding \n            one that works.\n                Proceeding as with the bird’s feet of the previous section, \n            let’s try adding a small Bird Base to the tip of each of the four \n            legs as shown in Figure 6.21, which, reasoning by analogy, \n            should give us four toes on each foot.\n\n\n            Figure 6.21. \n            Left: adding four small bird bases to the feet of the lizard base. Right: \n            the shape embedded in a larger square.\n\n                The ﬁrst thing that stands out from this construction is \n            that we’ve added a whopping great quantity of nonessential \n            paper to the pattern (in addition to the nonessential paper that \n            was already there at three of the four corners). Basically, all of \n            the colored region on the right in Figure 6.21 is nonessential. \n            The second thing of importance—which doesn’t stand out, \n            but can be ascertained from examination of the pattern—is \n            that it turns out to be impossible to add creases to the colored \n            region in any way that allows the four “toes” (the tips of the \n            bird base) to come together.\n\n                                                                                                     149\n                                                                       Chapter 6: Grafting\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0cbd"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 175,
  "content": "             4. Fold the left edge along a fold 5. Repeat step 4, using the bottom 6. Valley-fold two diagonally opposite\n             connecting the top corner with the corners and top pinch marks.    corners to the crease intersections in\n             bottom pinch mark; make a pinch                                    front; mountain-fold the other two\n             where the fold crosses the diagonal                                corners to the crease intersections\n             and unfold. Repeat on the right.                                   behind.\n\n\n                                                                             1/8\n\n\n                7. Mountain-fold the edges    8. Form a Preliminary Fold. Then     9. Petal-fold both front and\n                behind all the way around.    rotate 1/8 turn clockwise to put the rear to form a Bird Base.\n                                              four corners at the bottom.\n\n\n             10. Release the    11. Release some more   12. Turn the    13. Release some paper 14. Squash-\n             loose layers of    paper from the interior model over.     from the interior and  fold the flap\n             paper on both the  and spread the edges as                 swing all the excess   symmetrically.\n             front and rear flaps. far apart as possible. Do            over to the left.\n                                not repeat behind.\n\n                                                                                                                 163\n                                                                    Folding Instructions:Chapter 6:Songbird Grafting 1\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0cbe"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 613,
  "content": "                One of the great advantages of designing with uniaxial \n            box pleating is that the tools needed are minimal; an entire \n            base can be designed with nothing more than a pencil and \n            graph paper (or unlined paper, if you are a good artist). For \n            myself, I usually do my designs using a computer drawing \n            program—not because the computer is inherently needed, but \n            because it’s faster, in the same way that a computer word pro-\n            cessor is faster than longhand writing. In recent years, most \n            of my own complex designs have been based on box pleating, \n            because it’s fast, it gets the job done of creating ﬂaps, and I \n            can put my creative energies into the artistic aspects of the \n            folded work, rather than the mundane work of getting the \n            right number of ﬂaps.\n                In this section, I’ve used simple structures and a simple, \n            contrived problem to illustrate all the concepts of uniaxial box \n            pleating. But now it’s time to put things to the test, and try \n            out a real example.\n\n            13.6. A Box-Pleated Beetle\n            So far, everything I’ve described has been purely theoretical. \n            I would now like to show polygon packing and uniaxial box \n            pleating in action. I will take as my example the same generic \n            beetle that I used to illustrate circle packing at the beginning \n            of this chapter.\n\n\n                                                      4 1\n\n                                                      1\n                                                    4 1  1\n                                                      1\n                                                    6 1  1\n\n                                                   8  2\n\n                                                      4\n\n\n                                                                      Figure 13.32. \n                                                                      The stick figure and packing \n                                                                      circles for a box-pleated base.\n\n                                                                                                     601\n                                                           Chapter 13: Uniaxial Box Pleating\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0cbf"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 29,
  "content": "            frequently becomes necessary to show multiple views of the \n            model to fully convey what is going on. In such cases, a small \n            stylized eye indicates the vantage point from which a subse-\n            quent view is taken.\n                                                                       Figure 2.8. \n                                                                       An eye with a dotted line \n              View Viewfrom  fromthis  vantagethis vantage point point. indicates the sightline used to \n                                                                       specify a new point of view.\n\n                The next symbol indicates one of the most dreaded \n            instructions in all of origami: repetition. You have worked \n            through a long, tortuous sequence of folds, you think you’re \n            coming to the end, and there it is: “repeat steps 120–846 on \n            the other 7 ﬂaps.” The bad news is usually conveyed in words, \n            but for those who fold from the diagrams alone, repetition \n            is conveyed by a symbol as well. Harbin, the great Western \n            popularizer of origami, devised an arrow with hash marks to \n            indicate repetition; however, this symbol is unnecessarily am-\n            biguous, and I have preferred to use a boxed leader enclosing \n            the range of steps to be repeated, as shown in Figure 2.9.\n                                                                       Figure 2.9. \n                                                                       A range of steps to be repeated \n                    Repeat a range of steps.        23–24\n                 Repeat a range of steps                               is indicated by a boxed sequence \n                                                                       of the numbered steps to be \n                                                                       repeated.\n\n                Lastly, it frequently arises that a fold is to be made at \n            90° to another fold or to a folded edge. When this takes place \n            and it is not obvious that the fold is at 90°, I will indicate it \n            by a small right-angle symbol next to (and aligned with) the \n            relevant intersection.\n                                                                       Figure 2.10. \n                                                                       A right angle is indicated by \n                    Right angle\n                  Right angle                                          the geometer’s symbol of a \n                                                                       right angle located next to the \n                                                                       relevant corner.\n            2.2. Basic Folding Steps\n            Now we turn to the basic folds of origami—single folds, or \n            combinations of a few folds that occur over and over in ori-\n            gami ﬁgures. Most of these combinations date back hundreds \n            of years in Spain and Japan as concepts, if not as recognized \n            steps. These are, however, the building blocks from which \n            nearly all origami models arise. The names are of much \n            more recent vintage and vary from country to country, but in \n            English-speaking countries, the names given here are widely \n            accepted.\n\n                                                                                                      17\n                                                                 Chapter 2: Building Blocks \n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0cc0"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 357,
  "content": "./origami_dataset_dev/Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li/page357_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0cc1"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 15,
  "content": "            paper are assembled into enormous multifaceted polyhe-\n            dra. If you can think of an object either natural or man- \n            made, someone, somewhere, has probably folded an origami \n            version.\n                The art of origami was originally Japanese, but the 88 \n            elephants and the tens of thousands of other designs come \n            from all over the world. Many ﬁgures originated in Japan, of \n            course, but the U.S.A., England, France, Germany, Belgium, \n            Argentina, Singapore, Australia, and Italy are major centers \n            of origami activity. The designs range from simple ﬁgures \n            consisting of only two or three folds to incredibly complex “test \n            pieces” requiring hours to fold. Most of these thousands of \n            designs have one thing in common, however: Nearly all were \n            invented in the last 50 years.\n                Thus, origami is both an old art and a young art. Its youth \n            is somewhat surprising. After all, folded paper has been an art \n            form for some 15 centuries. It is ancient; one would not expect \n            98 percent of the innovation to come in the last 2 percent of the \n            art’s existence! Yet it has. Fifty years ago, all of the different \n            origami designs in the world could have been catalogued on \n            a single typed sheet of paper, had anyone had the inclination \n            to do so. No model would have run over about 20 or 30 steps. \n            Most could be folded in a few minutes, even by a novice. This \n            is no longer the case. Today, in books, journals, and personal \n            archives, the number of recorded origami designs runs well into \n            the thousands; the most sophisticated designs have hundreds \n            of steps and take several hours for an experienced folder to \n            produce. The past 60 years in Japan, and 40 years worldwide, \n            have seen a renaissance in the world of origami and an accel-\n            eration of its evolution.\n                And this has happened in the face of stringent barriers. \n            The traditional rules of origami—one sheet of paper, no cuts—\n            are daunting. It would appear that only the simplest abstract \n            shapes are feasible with such rules. Yet over hundreds of years, \n            by trial and error, two to three hundred designs were devel-\n            oped. These early designs were for the most part simple and \n            stylized. Complexity and realism—insects with legs, wings, and \n            antennae—were not possible until the development of special-\n            ized design methods in the latter part of the 20th century.\n                Although there are now many thousands of origami \n            designs, there are not thousands of origami designers. In fact, \n            there is only a handful of designers who have gone beyond \n            basics, only a handful who can and do design sophisticated \n            models. Although there is far more exchange of completed \n            designs now than there used to be, there is not a similar \n            exchange of design techniques.\n\n                                                                                                      3\n                                                                    Chapter 1: Introduction\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0cc2"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 1,
  "content": "",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0cc3"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 767,
  "content": "                Five-Sided Square, Montroll’s  300    G                                     hex pleating  660\n                ﬁve-star graph  420                                                         hinge creases  348, 357, 746\n                ﬂap  745                              gadget                                  crease assignment  369\n                 corner  744                           level-shifting  629                    in molecules with rivers  416\n                 deﬁnition of  54                      level-shifting for box pleating      hinge polygons  349, 571\n                 edge  745                                  630                             hinge rivers  572, 651\n                 middle  747                          gaps                                  hinges  244, 746\n                Floderer, Vincent  714                 allocation of paper in splitting       in uniaxial bases  402\n                Flying Cicada                               points  99                      Honda, Isao\n                 crease pattern, base, and folded      delineation by circles  702            diagramming symbols  13\n                      model  315                       in multiple-point splits  110          use of cuts  94\n                Flying Grasshopper                    generic form  369, 746                Hulme, Max  48,   480, 562\n                 crease pattern, base, and folded      of a tile  253                       Husimi, Koji  352, 353, 357, 424\n                      model  433                      Georgeot, Alain  41                   hybrid base  699, 746\n                Flying Ladybird Beetle                 exhibition  1                        hybrid reverse fold  25, 746\n                 crease pattern, base, and folded     gestalt  465\n                      model  315                      Goldberg, Michael  329                I\n                Flying Walking Stick                  grafted Kite Base  708, 746\n                 contour map and folded model  625    grafting  7, 130, 746                 ideal split  100, 747\n                fold                                   along edges  146                       Montroll’s sequence for folding  \n                 3 types of  11                        border  135                                 102\n                 and unfold, symbols for  20           comparison of strip and border       inﬂation  302, 380, 580, 747\n                 closed sink  36                            142                               in tree theory  420\n                 crimp  31                             in box pleating  472                   of circles  310\n                 double rabbit-ear  26                 pleat  748                             selective  308\n                 double sink  35                       strip  141, 702, 750                 inscribed circle\n                 hybrid reverse  25                    strip, to create texture  197          in Waterbomb molecules  357\n                 inside reverse  23                   graph                                 insects  700\n                 mixed sink  38                        ﬁve-star  420                        inset distance\n                 mountain  747                         four-star  416                         in universal molecule  426\n                 mountain, symbols for  18             sawhorse  416                        inside reverse fold  23, 747\n                 multiple sink  35                    grasshopper                           instructions, verbal  14\n                 open sink  34                         choice of circles in design  307     irreducible complexity  563, 681\n                 outside reverse  23                  Grasshopper\n                 petal  28, 748                        crease pattern, base, and folded     J\n                 pleat  31, 748                             model  115\n                 rabbit-ear  25, 749                  gusset                                Japanese Horned Beetle\n                 reverse, crease patterns for  25      in a stretched pleat or crimp  32      crease pattern, base, and folded \n                 sharpness of  12                     gusset creases                               model  158\n                 sink  33, 749                         crease assignment  369               jig\n                 spread sink  33, 749                 gusset molecule  361, 413, 416,         for circle packing  302, 374\n                 squash  27,  749                        427, 746                           Joisel, Eric  714\n                 swivel  28, 750                       in polygon packing  674                Pangolin  204\n                 unfolding, symbols for  19           gusset slivers  646                   Justin, Jacques  353, 357, 371, \n                 unsink  39                                                                    424\n                 valley  751                          H\n                 valley, symbols for  18                                                    K\n                fold angle                            Harbin, Robert  713\n                 deﬁnition of  12                      diagramming symbols  13              Kamiya, Satoshi  48,  631\n                folded edge  15, 745                   naming of Preliminary Fold  57       Kasahara, Kunihiko\n                folded form  7, 21, 151, 209, 255,     symbol for repeated steps  17          Dragon  139\n                      349                              versions of stretched Bird Base      Kasahara-Neale Dragon  139\n                four-circle quadrilateral  355, 746         57                              Kawahata, Fumiaki  48,   352, 430\n                four-star graph  416                  Hayes, Barry  21                      Kawasaki, Toshikazu  352,  353, 424\n                Frog Base  54, 105, 142, 158,         Hedgehog, John Richardson’s  204      Kenneway, Eric  62\n                   242, 248, 292, 300, 323, 328,      Hercules Beetle                       Kite Base  54, 94, 111, 205, 242, \n                   348, 349, 465, 707, 746             crease pattern, base, and folded        346, 747\n                 in Hummingbird  67                         model  275                        grafted  708\n                Fujimoto, Shuzo  48, 204\n\n                                                                                                                                  755\n                                                                                                           Index\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0cc4"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 559,
  "content": "            99. Fold the middle pair of edges out     100. Turn the paper        101. Squash-fold the top points\n            to the sides (two layers together at the  over.                      and fold the edges outward (the\n            top). Simultaneously, squash-fold the                                vertical creases line up with the\n            top two points and the bottom point.                                 edges underneath).\n\n\n                                               103. Fold and unfold.            104. Closed-sink the edges (it\n                                                                                is important that the sinks be\n                                                                                closed, not open).\n            102. Unwrap the two top\n            points. Mountain-fold the top\n            of the clock face. Closed-sink\n            the bottom point.\n\n\n                                                                                                      6 edges\n                                                                                2 edges\n\n\n            105. Turn the model over.     106. Squash-fold in two places and swing 107. Fold the vertical edges\n                                          the rest of the model around to the right. out to the side and swing the\n                                          The leftmost valley fold occurs on an    rest of the model upward.\n                                          existing crease. In the squash fold, two Two edges go to the left; four\n                                          layers go to the left and six go to the right. edges go to the right.\n\n                                                                                                                 547\n                                                        Folding Instructions:Chapter Black  Forest12: Box Cuckoo Pleating Clock\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0cc5"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 217,
  "content": "            Palmer launched an entire genre of origami by doing exactly \n            that. For representational origami, however, the patterns one \n            can create are restricted to those that resemble some subject, \n            which tends to favor fairly simple patterns. Grids of squares or \n            diamonds are straightforward: Make crossing sets of pleats. It’s \n            also possible to make grids of triangles and/or hexagons (you \n            saw a small piece of the latter in the turtle shell), but these \n            are somewhat harder to fold as they require three different \n            directions of pleats to interact.\n                The pattern, or texture, grafted into a model is generally \n            going to be dictated by the pattern in the subject. One subject \n            that seems natural for texturizing is a ﬁsh: Like the previously \n            done snakes and dragons, a ﬁsh has prominent scales. We’ll use \n            a particular ﬁsh model—a Koi, or Japanese carp—to illustrate \n            the process of adding texture to a model and some of the design \n            considerations that ensue.\n                The simplest way to create texture in a model is to select \n            a simple version of the model foldable from a square, then add \n            texture to the square in such a way that it remains square \n            and the pattern ends up in the appropriate part of the square \n            exposed in the folded model. We did this in the Turtle; we can \n            apply the same approach to a Koi. The process begins with a \n            model, of course: We’ll use the Koi illustrated in Figure 7.11, \n            which is folded from a square. (This Koi was created by putting \n            a border graft onto a modiﬁed Kite Base to create longer ﬁns \n            and tail; can you identify the original base and graft?).\n\n\n            Figure 7.11. \n            Crease pattern, base, and folded model of the Koi.\n\n                                                                                                     205\n                                                                Chapter 7: Pattern Grafting\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0cc6"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 571,
  "content": "            209. Fold another         210. Mountain-fold the      211. Fold another     212. Push in the front of\n            rabbit ear.               rabbit ear to the rear.     rabbit ear.           the antler (at the left) by\n                                                                                        making a partial rabbit\n                                                                                        ear. At the same time, lift\n                                                                                        up the points in back (at\n                         207–212                                                        the right) and spread them\n                                                                                        out. They will be three-\n                                                                                        dimensional.\n\n\n            213. Repeat steps\n            207–212 on the other\n            antler.\n\n\n                                            214. Squash-fold each of the flaps\n                                            downward (they will be the leaves).\n                                            Offset each squash fold, so the leaves\n                                            alternate and overlap each other.\n\n\n            215. Crimp and swivel-fold each                                216. Finished Black Forest Cuckoo Clock.\n            leaf as you did in steps 180–182.\n\n                                                                                                                 559\n                                                        Folding Instructions:Chapter Black  Forest12: Box Cuckoo Pleating Clock\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0cc7"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 565,
  "content": "               145. Outside reverse-\n               fold the white strip.\n\n\n                                                                                 147. Fold the flap down.\n\n                                        146. Swing the clock face around and\n                                        flatten the strip; everything from the\n                                        clock face to just below the deer’s head\n                                        will lie flat.\n\n\n               148. Swing the paired flaps upward and  149. Fold the clock face        150. Bring the vertical\n               swing the rest of the model down between up to the right, swinging      strip in front of the clock\n               the paired flaps and the clock face.    it around from behind.          face.\n\n\n                 151. Flip the clock           152. Again bring the      153. Fold the connection between the clock\n                 face around its center        vertical strip in front of face and deer head around and behind; at the\n                 axis.                         the clock face.           same time, fold the paired flaps down\n                                                                         through the opening in the clock face. At this\n                                                                         point, the clock face no longer interferes\n                                                                         with the clock body, but should sit more or\n                                                                         less within the clock body.\n\n\n                                                                                                                 553\n                                                        Folding Instructions:Chapter Black  Forest12: Box Cuckoo Pleating Clock\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0cc8"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 203,
  "content": "            24. Bring two corners    25. Turn the model   26. Unfold a layer.     27. Fold and unfold\n            to the front.            over.                                        through all layers of the\n                                                                                  near flap.\n\n\n            28. Fold the flap to the 29. Fold the flap down 30. Fold and unfold   31. Closed-sink the\n            top of the model.        and out to the right. through all thicknesses farthest layer on the\n                                                           of the flap.           existing creases.\n\n\n                                                                                                     191\n                                                         Folding Instructions:Chapter Dancing 6: Grafting Crane\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0cc9"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 598,
  "content": "                                         angle bisector is indeed the boundary between the regions clos-\n                                         est to one or the other edges on either side of the bisector.\n                                             Before they get too far, though, some pair of angle bisec-\n                                         tors will collide. What happens then gets interesting. Let’s \n                                         label each bisector by the two edges whose angle it bisects. If \n                                         we have three consecutive edges, call them A, B, and C, then \n                                         eventually angle bisector AB collides with angle bisector BC, \n                                         as shown in Figure 13.18. What happens then?\n\n\n                                                                    A C\n\n                                                          A                     C\n\n            Figure 13.18.                                       A B\n            Schematic of three consecutive                                B C\n            edges and their angle bisec-\n            tors.                                                    B\n\n                                             Well, the points on the left side of bisector AB are closer to \n                                         side A; the points on the right side are closer to side B. Similarly, \n                                         the points on the left side of bisector BC are closer to side B, \n                                         while the points on the right are closer to side C; so the points \n                                         inside the triangle are all of the points closer to side B, while \n                                         the points on the outside are closer to side A or C. There must \n                                         be a new boundary line between the points closer to side A and \n                                         C; and this line is, in fact, the bisector between sides A and C. \n                                         So from the intersection of bisectors AB and BC we launch a \n                                         new line, which is a segment of bisector AC—the bisector of \n                                         the angle between two nonadjacent sides. In the process, we’ve \n                                         “cut off” side B; it will play no further role in the construction \n                                         of the straight skeleton.\n                                             And then we continue this procedure. We continue extend-\n                                         ing bisectors, keeping track of which two edge regions each \n                                         bisector divides. When two adjacent bisectors collide, we drop \n                                         the excluded edge region and continue with the bisector be-\n                                         tween the two remaining regions. Eventually, this process must \n                                         terminate, and at that point, we will be left with the straight \n                                         skeleton. A more complicated straight skeleton constructed by \n                                         this process is illustrated in Figure 13.19.\n                                             For uniaxial box pleating, this process is relatively simple, \n                                         because all bisectors run at multiples of 45°. For squares, this \n                                         algorithm will give the two crossing diagonals as previously \n                                         noted. For rectangles, this algorithm gives the two diagonal \n\n     586\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0cca"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 573,
  "content": "                                             Uniaxial13 Box Pleating\n\n                         ircle packing, molecules, and tree theory had \n                         the potential to change the world of origami \n                         when they began to be widely used in the mid-\n                         1990s and going forward, but they quickly \n            C            ran up against a barrier: although one could, \n            in principle, design arbitrarily complex tree-like structures \n            of theoretically perfect efﬁciency, in practice, the resulting \n            crease patterns were both highly irregular, making them \n            difﬁcult to precrease, and all of the folds in the pattern were \n            highly coupled to one another, making them difﬁcult to break \n            down into a simple step-by-step folding sequence. The latter \n            property is, unfortunately, often unavoidable. The vast major-\n            ity of theoretically possible ﬂat-foldable folding patterns are \n            in this category; it is, in some sense, an accident of history \n            that most published origami works have had step-by-step \n            folding sequences, because they were discovered almost en-\n            tirely through a step-by-step process of exploration. But the \n            irregularity is not necessarily something that we, as origami \n            designers, must live with.\n                Circle/river packing often leads to irregularity, even if the \n            circles themselves come in only one or a few sizes. My software \n            tool, TreeMaker, constructs a circle-packed solution for any \n            user-speciﬁed stick ﬁgure, but even when you have the complete \n            crease pattern, the problem still remains: how do you transfer \n            the pattern to the folded paper? With a computer program, \n            you could perhaps print out the pattern, but then you have to \n            contend with printed lines on the ﬁnished form. If you want to \n            fold the pattern with no visible printed lines, then there may be \n            tens, or even hundreds, of vertices with no easily constructible \n            method. I developed another tool, ReferenceFinder, which can \n\n                                                                                                     561\n\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ccb"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 215,
  "content": "                Now, we can form the pleats to create the shell and use \n            the excess paper where the pleats hit the edges to make more \n            detailed feet; the result takes a simple model to a new level.\n\n\n            Figure 7.9. \n            Crease pattern, base, and folded model of the Western Pond Turtle.\n\n                I call this use of multiple intersecting pleated strips \n            pleat grafting. While you can use pleat grafts on any model to \n            add more detail here and there, there is always an aesthetic \n            balancing act to such surgery: Are the added complexity and \n            extra layers of paper justiﬁed by the appearance of the ﬁnished \n            result? This balance is, ultimately, a matter of personal taste. \n            However, as you become more accustomed to folding complex \n            structures and/or ﬁne detail, the perceived burden of added \n            complexity diminishes over time with your folding experience. \n            And if you can use the added pleats for multiple purposes (as \n            we did to create both shell pattern and more detailed feet) or to \n            eliminate an inefﬁciency in the original base (which we also did \n            in this example), then the balance will, more and more often, \n            tip in the direction of detail.\n                Most applications of grafting serve to create distinct ﬂaps \n            or appendages, but the turtle shell is a bit different. Here we \n            are not creating ﬂaps; we are creating a patterned surface. \n            This opens up a large range of possibilities: incorporation of \n            patterns into origami models to represent subjects that have \n            a strong textural visual impact. As we did with the Turtle, we \n            can create a texture and overlay it onto the paper before folding \n\n                                                                                                     203\n                                                                Chapter 7: Pattern Grafting\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ccc"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 201,
  "content": "                                                                                                           1/8\n\n\n             6. Fold and unfold.              7. Add three more creases through 8. Form a Preliminary Fold. Rotate\n                                              the indicated intersections. Turn 1/8 turn.\n                                              the paper over.\n\n\n             9. Divide into fourths with vertical 10. Fold and unfold. Repeat    11. Reverse-fold. Repeat behind.\n             creases. Repeat behind.          behind.\n\n\n                12. Reverse-fold in and out 13. Spread-sink eight 14. Fold and unfold      15. Elias-stretch the flap\n                on the existing creases.   corners.               only through the near    and open it out.\n                Repeat behind.                                    pair of flaps.\n\n                                                                                                                 189\n                                                                Folding Instructions:Chapter Dancing 6: Grafting Crane\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ccd"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 567,
  "content": "                          159. Fold and unfold.                               160. Fold and unfold.\n\n\n                         161. Fold and unfold.                          162. Pleat. Each mountain fold lies 1/4\n                                                                        of the way between the two adjacent\n                                                                        valley folds.\n\n\n            163. Refold the pleats you\n            undid in step 157 and turn\n            the model over again.\n\n                                                    164. Pinch the pleated          165. Spread the sides of the\n                                                    flaps at their base and         pleated flaps apart. They will\n                                                    fold them downward.             become the pine cone weights.\n\n\n            166. Reverse-fold each 167. Squeeze  168. Mountain-fold\n            horizontal pleat upward the bottom of the corners at the\n            between the vertical   the pine cone bottom of the pine   169. Adjust the        170. Squash-fold\n            pleats. There are 18   together.     cone to lock it.     position of the pine   the bottom point\n            such folds on each of                Repeat on the other  cone weights so that   symmetrically. The\n            the two pine cones.                  pine cone.           they hang straight.    valley fold lies on\n                                                                                             an existing crease.\n\n                                                                                                                 555\n                                                        Folding Instructions:Chapter Black  Forest12: Box Cuckoo Pleating Clock\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0cce"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 229,
  "content": "                                           d0\n\n                                              d1            d2\n\n            Figure 7.31. \n            Close-up of the edge of the pattern, showing how the individual scale \n            tiles map to the crease pattern. The hidden region of paper in each \n            tile maps to one of the lines in our schematic.\n\n                To make things concrete: if we choose to make 1-cm scales \n            (a nice size), then the pleats should be 1.207 cm and 0.207 cm \n            apart, respectively (which, in practice, one can round to 1.2 \n            and 0.2 cm for easy measurement).\n                And how do we actually go about folding the individual \n            scales? One factor that should be apparent is that the overall \n            structure of each scale is two crossing pleats, with some “extra \n            stuff” at the crossing. That suggests a method of folding each \n            scale. We could fold the two pleats separately, then stretch \n            the crossing apart and refold the “extra stuff,” as shown in \n            Figure 7.32.\n                This two-step method of folding the scale allows one to \n            more easily fold the entire array. One can fold all of the pleats \n            in one direction, then all of the pleats in the other direction, \n            then, one at a time, go through and at each crossing, stretch the \n            crossing and refold the creases at the junction, then ﬂatten. In \n            this way, the folded paper may be kept ﬂat between each of the \n            folding steps. (As a practical note, I ﬁnd that precreasing the \n            pleats and the two concentric squares at each crossing before \n            folding anything facilitates keeping the stretch maneuvers \n            crisp and precise.)\n\n                                                                                                     217\n                                                                Chapter 7: Pattern Grafting\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ccf"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 695,
  "content": "./origami_dataset_dev/Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li/page695_image004.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0cd0"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 17,
  "content": "            now simple, codiﬁed mathematical and geometric techniques \n            for developing a desired structure.\n                This book is a collection of those techniques. It is not a step-\n            by-step recipe book for design. Origami is, ﬁrst and foremost, \n            an art form, an expression of creativity, and it is the nature \n            of creativity that it cannot be taught directly. It can, however, \n            be developed through example and practice. As in other art \n            forms, you can learn techniques that serve as a springboard \n            for creativity.\n                The techniques of origami design that are described in \n            this book are analogous to a rainbow of colors on an artist’s \n            palette. You don’t need a broad spectrum, but while one can \n            paint beautiful pictures using only black and white, the intro-\n            duction of other colors immeasurably broadens the scope of \n            what is possible. And yet, the introduction of color itself does \n            not make a painting more artistic; indeed, quite the opposite \n            can happen. So it is with origami design. The use of sophisti-\n            cated design techniques—sometimes called “technical folding,” \n            or origami sekkei—makes the resulting model neither artistic \n            nor unartistic. But having a richer palette of techniques from \n            which to choose can allow the origami artist to more fully \n            express his or her artistic vision. That vision could include \n            elements of the folding sequence: Does it ﬂow naturally? Is \n            the revelation of the ﬁnished form predictable or surpris -\n            ing? It could include elements of the ﬁnished form: Are the \n            lines harmonious or jarring? Does the use of folded edges \n            contribute to or detract from the appearance? Does the ﬁgure \n            use paper efﬁciently or waste it? The aesthetic criteria to be \n            addressed are chosen by the artist. Any given technique may \n            contribute to some criteria (and perhaps degrade others). By \n            learning a variety of design techniques, the origami artist can \n            pick and choose to apply those techniques that best contribute \n            to the desired effect.\n                These techniques are not always strict; they are sometimes \n            more than suggestions, but less than commandments. In some \n            cases, they are vague rules of thumb: “Beyond eight ﬂaps, it \n            is more efﬁcient to use a middle ﬂap.” But they can also be as \n            precise as a mathematical equation. In recent years, origami \n            has attracted the attention of scientists and mathematicians, \n            who have begun mapping the “laws of nature” that underlie \n            origami, and converting words, concepts, and images into math-\n            ematical expression. The scientiﬁc ﬁelds of computer science, \n            number theory, and computational geometry support and il-\n            luminate the art of origami; even more, they provide still more \n            powerful techniques for origami design that have resulted in \n            further advances of the art in recent years. Many design rules \n\n                                                                                                      5\n                                                                    Chapter 1: Introduction\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0cd1"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 765,
  "content": "                                                                                                              Index\n\n\n                                                      axial polygons  247, 250, 252,        Bern, Marshall  21\n                A                                        263, 297, 317, 334, 349, 351,      Bird Base  54, 242, 248, 323, \n                                                                                               329, 347, 403, 464, 474, 743\n                A bases, Uchiyama’s  58                  368, 382, 401, 411, 420, 424,\n                                                         743                                  as narrowed Waterbomb \n                ABCs of Origami, The  62                                                              molecule  266\n                Acrocinus longimanus                  axis  743\n                                                      axis-parallel creases  574              blintzed  57, 62, 326, 328\n                 crease pattern, base, and folded                                             equivalence to stub-divided quad  \n                      model  317                                                                  423\n                action ﬁgures  1                      B                                       in Valentine  67\n                active path  408, 411, 415, 424,                                              stretched  57, 750\n                                                      base  7, 743\n                   426, 427, 428, 743                                                         strip grafting  249\n                                                       Bird Base  54\n                active reduced path  426, 743                                                 with squares added to corners  135\n                                                       blintzed  743\n                African Elephant                                                            blintz  58\n                                                       Cupboard Base  57\n                 crease pattern, base, and folded                                           blintzed Bird Base  326, 328\n                                                       deﬁnition of  53\n                      model  713                                                            blintzing  743\n                                                       distorted  69, 745\n                Alamo Stallion                                                              body between ﬂaps  257\n                                                       Fish Base  54\n                 crease pattern, base, and folded                                           book symmetry  305,  744\n                                                       Frog Base  54\n                      model  434                                                            bookworm\n                                                       hybrid  8, 699, 746\n                angle bisectors                                                               in splitting points  98\n                                                       Kite Base  54\n                      25, 251, 356, 415, 749                                                  in tree theory  404\n                                                       Lizard  242\n                Ant                                                                         border graft  135, 744\n                                                       Montrolls Dog Base  244\n                 crease pattern, base, and folded                                           bouncing contours  596\n                                                       multiaxial  705\n                      model  377                                                            box\n                                                       offset  68, 748\n                Arnold, Vladimir  329                                                         from rectangle  470\n                                                       Preliminary Fold  56\n                arrowhead molecule 358,  413,                                                 traditional  467\n                                                       Turtle  242\n                   423, 743                                                                 box pleating  8, 459, 562, 744\n                                                       uniaxial  750\n                arrows                                                                        uniaxial  562, 573\n                                                       Waterbomb Base  56\n                 fold and unfold  20                                                        branch edges  402, 744\n                                                       Windmill Base  57\n                 mountain fold  18                                                          branch ﬂap   575\n                                                      baseline of a ﬂap  95\n                 push here  16                                                              branch nodes  402, 409,  413, 416, \n                                                      bases\n                 rotate the paper  16                                                          420, 744\n                                                       relationship between standard  \n                 turn over  16                                                              branch vertices  409, 413, 416, \n                                                            58\n                 unfold  19                                                                    744\n                                                       Uchiyama’s A and B  58\n                 valley fold  18                                                            British Origami  62\n                                                      basic folds  6\n                arthropods  700                                                             Bug\n                                                      Bat, Rhoads’s  57\n                axial+1  604                                                                  Rhoads, George  326\n                                                      B bases, Uchiyama’s  58\n                axial+2  628                                                                Bug Wars  383\n                                                      beetle\n                axial contour  604                                                          Bull Moose\n                                                       box-pleated  601\n                axial creases                                                                 crease pattern, base, and folded \n                                                       circle-packed  564\n                      246, 346, 348, 409, 743                                                     model  609\n\n                                                                                                                                  753\n\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0cd2"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 3,
  "content": "© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0cd3"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 186,
  "content": "./origami_dataset_dev/Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li/page186_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0cd4"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 759,
  "content": "                I\n                Ideal split (page 100): a technique for splitting a Kite Base ﬂap, which \n                gives the longest possible pair of ﬂaps.\n                Inﬂation (page 308): the process of adding circles to a crease pattern (cor-\n                responding to adding ﬂaps to a base) and expanding the circle (lengthening \n                the ﬂap) until it touches three or more others. In box pleating, inﬂation \n                enlarges hinge polygons without necessarily making their corresponding \n                ﬂaps longer.\n                Inside reverse fold (page 23): a method of changing the direction of a ﬂap, \n                wherein the moving layers are inverted and tucked between the stationary \n                layers.\n\n                K\n                Kite Base (page 54): the simplest of the Classic Bases, formed by folding \n                two adjacent edges of a square to the same diagonal.\n\n                L\n                Leaf edge (page 402): in a tree graph, an edge connected to at least one \n                leaf node.\n                Leaf ﬂap (page 575): a ﬂap in a uniaxial base that is connected to the base \n                at one end and is free at the other end. Leaf ﬂaps are represented by leaf \n                edges in the tree graph.\n                Leaf node (page 402): in a tree graph, a node connected to only a single \n                edge.\n                Leaf vertex (page 404): a point in the crease pattern that corresponds to \n                a leaf node on the tree graph.\n                Level shifter (page 626): a pattern of creases in a uniaxial polygon-packed \n                design that replaces one or more segments of ridge crease in order to shift the \n                elevation of a crease on one side of the ridge relative to that of the other.\n\n                M\n                Meander (page 651): a pattern within a river in which one bank of the \n                river contacts itself, so that the river appears to be wider than its designated \n                width.\n                Middle ﬂap (page 105):    a ﬂap whose tip comes from the interior of the \n                square. A middle ﬂap has twice as many layers as a same-sized edge ﬂap \n                and four times as many as a corner ﬂap.\n                Mixed sink fold (page 38): a sink fold containing aspects of both open and \n                closed sinks.\n                Molecule (page 352): a crease pattern which, when folded ﬂat, has its \n                perimeter lie along a common line and for which speciﬁed points along the \n                perimeter (the tangent points) become coincident in the folded form.\n                Mountain fold (page 18): a crease that is concave downward. Usually \n                indicated by a dot-dot-dash line (black line in crease patterns).\n\n                N\n                Node (page 402): in a tree graph, an endpoint of a line segment. See leaf \n                node, branch node.\n\n\n                                                                                                                                  747\n                                                                                                        Glossary\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0cd5"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 232,
  "content": "./origami_dataset_dev/Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li/page232_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0cd6"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 188,
  "content": "                15. Reverse-fold the next           16. Reverse-fold the              17. Fold two layers\n                pair of edges.                      remaining pair of edges.          to the right in front\n                                                                                      and one to the left\n                                                                                      behind.\n\n\n              18. Fold the edge        19. Fold the point up         20. Fold the left edge    21. Fold the left edge\n              over to the vertical     to the top of the             over to the crease        over to the crease\n              crease.                  model.                        and unfold.               you just made and\n                                                                                               unfold.\n\n\n                  22. Open-sink the                     23. Fold the                     24. Fold one\n                  corner in and out on                  point down.                      flap to the left.\n                  the existing creases.\n\n     176\n                         Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0cd7"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 163,
  "content": "                If we’ve assumed that all the hind-leg toes are together \n            at point A in the folded base, then the toe marked A* in the \n            crease pattern must be one of them. So it, too, must be sepa-\n            rated from the tail point C by the same distance x—in the \n            folded form.\n                Now let’s look back at the crease pattern. It’s clear that \n            point A* is somewhat closer to point C in the crease pattern \n            than point A. So in the crease pattern, the distance from A* to \n            C is less than x. In the folded form, it’s equal to x. So whatever \n            the crease pattern in the colored region is, it has to increase \n            the separation between points A* and C.\n                But this is impossible. Short of stretching or cutting, there \n            is no way to fold a sheet of paper that increases the distance \n            between two points. Folding can only reduce this distance. The \n            goal is impossible to attain; there is no set of creases added to \n            the border graft that allows all four bird base points to come \n            together at the tip of the leg ﬂaps.\n                So, while border grafts allow a Bird Base to be added to \n            one or more corners of a square, they don’t allow one to be \n            added to the edge in the same way.\n                More importantly, we have touched on a very deep con-\n            cept in origami design: the relationship between distances in \n            the folded and unfolded forms. As we saw in point-splitting, \n            where it was key to the design of the ideal split, examining \n            distances in the folded base and on the unfolded pattern can \n            show what is possible and impossible and provides guidance \n            for the location of important creases. And as we will see in \n            later chapters, this relationship forms the underpinning of a \n            full mathematical theory of efﬁcient origami design.\n                In the example described above, the point marked A* was \n            the one that caused the problem. What if we only wanted two \n            toes? Then could we use a border graft that incorporated the \n            two-ﬂap Fish Base? The embedded crease pattern is shown \n            in Figure 6.23.\n                This pattern does not incorporate any contradictory as-\n            sumptions, unlike the previous example, and if you draw it \n            out, you will ﬁnd that you can add creases to realize a lizard \n            base with two ﬂaps at the tip of each foot.\n                But as noted earlier, the border graft is fairly inefﬁcient \n            anyhow, and we have one other possible way of performing \n            a graft: the strip graft. We can graft a strip into a model by \n            cutting it apart and inserting the strip(s) between the cut \n            edges.\n                In the strip graft that we used in the Tree Frog, we cut \n            each ﬂap down the middle—more speciﬁcally, along an obvious \n            line of symmetry. Where should we cut this pattern? The lizard \n\n                                                                                                     151\n                                                                       Chapter 6: Grafting\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0cd8"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 605,
  "content": "                Each axial line starts at a circle center and propagates \n            toward a hinge polygon boundary, perpendicular to the bound-\n            ary. And what does each do then? Why, it keeps going—in a \n            straight line. Unless a contour line encounters some other fold, \n            it must keep going, and so the axial contour lines from one \n            hinge polygon will extend out of the polygon, across any inter-\n            vening rivers, and will extend into adjacent hinge polygons. \n                In the polygon packing of a circle-packed base, the “magic” \n            of circle packing ensures that the axial contours shooting out of \n            one ﬂap polygon are perfectly aligned with the axial contours \n            shooting out of the adjacent ﬂap polygon (because these axial \n            contours are in fact the boundaries of the generating mol-\n            ecules). However, in what is perhaps the ﬁrst indication that \n            general polygon packing is not quite so clean and simple, in \n            uniaxial box pleating (and its generalization, polygon packing), \n            the axial contours from a hinge polygon often do NOT line up \n            with the axial contours from the neighboring polygon.\n                So what do we do with such axial contours? We just keep \n            going. Any axial contour line will keep propagating until it \n            joins a collinear axial contour, it runs off the paper, or it hits \n            a ridge crease. This last case happens rather often, and in fact \n            this situation ends up generating a lot of the characteristic \n            appearance of uniaxial box-pleated bases. \n\n\n                                                                       Figure 13.24. \n                                                                       Crease pattern with axial lines \n                                                                       extended across polygon boundar-\n                                                                       ies until they hit a ridge crease.\n\n                Note that an axial contour can run along the edges of \n            the paper, in which case it is not a fold, obviously. If an axial \n            contour hits the edge of the paper perpendicularly, then it \n            simply stops. Life gets interesting, though, when an axial \n            contour line hits a ridge crease; it changes direction.\n\n                                                                                                     593\n                                                           Chapter 13: Uniaxial Box Pleating\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0cd9"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 611,
  "content": "            tion) or it runs off the paper. But eventually, this process, too, \n            will terminate. If we create new contour lines between every \n            pair of contour lines that have the same elevation, eventually \n            the process of contour line creation, propagation, and bounc-\n            ing will terminate. And we will now have all of the potential \n            crease lines of the base: hinges, ridges, axial contours, and \n            off-axial contours.\n\n                                                   nonzero elevation\n\n                                                   zero elevation (axial)\n\n\n                                                                       Figure 13.30. \n                                                                       Construction of a nonzero-ele-\n                                                                       vation contour line between two \n                                                                       equal-elevation lines.\n\n                In many cases, there are only two sets of contour lines \n            needed: axial contours, at zero elevation, and a second set at \n            some nonzero elevation. The spacing between parallel contour \n            lines ends up setting the width of the ﬂaps of the base. It is \n            possible to create multiple sets of contour lines at multiple \n            elevations, yielding ﬂaps with multiple widths (and so, for \n            example, giving a beetle a wide body but narrow legs). The \n            possible elevation assignments then grow rapidly. But no \n            matter how you assign the elevations, it is possible to unam-\n            biguously determine which ones are folded, and, for many of \n            them, determine the fold direction by the simple rule that if a \n            contour line is surrounded by higher elevations, it is a valley \n            fold; if it is surrounded by lower elevations, it is a mountain \n            fold; and if the elevation is higher on one side and lower on \n            the other, then it is unfolded, as shown in Figure 13.31.\n                (As with the generic form crease assignment seen earlier, \n            this rule will assign all axials to be mountain, which is only \n            an approximation; for some middle ﬂaps, axial creases will \n            turn out to be valley.)\n                And that completes the basic algorithm for uniaxial box \n            pleating. You now have all of the folds: the hinges between the \n            ﬂaps; the ridges (diagonals, mostly); and axial and off-axial \n            contour folds (the latter of which are now the analogs of gus-\n            set creases in circle-packed bases). The fold directions are not \n\n                                                                                                     599\n                                                           Chapter 13: Uniaxial Box Pleating\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0cda"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 177,
  "content": "                25. Turn the paper over             26. Squash-fold the flap           27. Mountain-fold the top\n                and rotate so that axis of          symmetrically.                     half of the small square\n                the leg is up-and-down.                                                behind and unfold.\n\n\n                28. Fold a tiny                     29. Petal-fold the near           30. Petal-fold the remaining\n                Preliminary Fold from               point.                            pair of flaps, including the\n                the square.                                                           trapped point along with them.\n\n\n                31. Fold the three points           32. Carefully release                33. Squash-fold the flap.\n                back down.                          and pull out the trapped\n                                                    corner.\n\n\n             34. Pinch the flap in half and         35. Squash-fold the flap.            36. Petal-fold the flap.\n             swing it up to the left, using the\n             existing creases.\n\n                                                                                                                 165\n                                                                    Folding Instructions:Chapter 6:Songbird Grafting 1\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0cdb"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 639,
  "content": "                                              axial+1\n\n\n                                       ?\n\n                                                                       Figure 14.2. \n                                                                       Two colliding contours at differ-\n                                                                       ent levels.\n                         axial\n\n            Figuratively, we have a head-on train wreck. What we need \n            is a way to get the two trains onto parallel tracks.\n                And we will ﬁnd a solution lurking within a very simple \n            structure, shown in Figure 14.3. This is simple to fold: take \n            a Waterbomb Base; sink the point; crease the result through \n            all layers; then spread-sink two corners as you fold the near \n            edge downward. Then closed-sink the ﬂap into the interior of \n            the model.\n\n\n                                                                       Figure 14.3. \n                                                                       A level-shifting test structure.\n\n                                                                                                     627\n                                                               Chapter 14: Polygon Packing \n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0cdc"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 407,
  "content": "               59. Reverse-fold the      60. Pull out some         61. Squash-fold the      62. Petal-fold the\n               edge.                     paper to make the         flap.                    flap.\n                                         layers symmetric.\n\n\n               63. Fold the flap         64. Fold the flap up.     65. Release some         66. Squash-fold the\n               back down.                                          paper.                   flap over to the left.\n\n\n               67. Pull out some         68. Open out the          69. Fold the corner      70. Bring the\n               loose paper.              flap.                     underneath.              corners together.\n\n\n               71. Squash-fold the       72. Inside petal-fold     73. Fold and unfold.     74. Sink the edges.\n               edge.                     the edge.\n\n                                                                                                                 395\n                                                                      FoldingChapter Instructions: 10: Molecules Silverfish\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0cdd"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 361,
  "content": "                In the search for underlying principles, one looks for un-\n            usual coincidences. Here, we have ﬁve different bases in which \n            the crease patterns display the same set of behaviors. They are \n            not just coincidences; they are general principles of the circle \n            method of design.\n                We can use these concepts to ﬁll in the creases that go \n            with an arbitrary circle-packing. There are three distinct sets \n            of creases.\n                First, for any two circles that touch, there is an axial crease \n            that runs between their centers. When the crease pattern is \n            folded into a base, the axial creases are collinear—they  lie on \n            top of each other. Additionally, the tangent points—the points \n            where circles touch—all lie on top of each other along the axis \n            in the folded base.\n                Second, there are hinge creases perpendicular to the axial \n            creases, which emanate from the points of tangency.\n                Then there is a third set, which are creases that propagate \n            inward from the corners of the axial polygons. In the folded \n            form, these creases form the ridges of the folded shape. We’ll \n            call them the ridge creases. The ridge creases bisect each of the \n            angles at the corners of an axial polygon.\n                These three families are illustrated in Figure 10.6 for the \n            Frog Base, with the three families of creases color-coded (red \n            = ridge, green = axial, blue = hinge). Also shown is the folded \n            form. All of the (green) axial creases run vertically and lie on \n            the axis; all of the (blue) hinge creases run horizontally and so \n            are perpendicular to the axis; the (red) ridge creases outline \n            each of the ﬂaps off-axis.\n                In most origami instruction, the only information associat-\n            ed with a crease is its fold angle: mountain, valley, or unfolded. \n            But here we see that we can associate a new bit of information \n            with each crease: its structural role within the base. That new \n            information is independent of the fold angle—you can see both \n            folded and unfolded axial and hinge creases in the example of \n            Figure 10.6. If we want to convey both the crease assignment \n            and structural role graphically, we need to distinguish lines in \n            some way other than weight (unfolded versus folded) or dash \n            pattern (valley versus mountain). Color provides a convenient \n            new dimension (with apologies to my color-blind readers). We \n            will call this a structural coloring of the crease pattern.\n                The three families of creases shown in Figure 10.6 are \n            closely related to the circles themselves. The hinge creases are \n            conceptually the easiest to understand: They outline polygons \n            that approximate the circles. So each polygon outlined by hinge \n            creases, which we will call a hinge polygon, delineates the \n            boundary of a single ﬂap of the base. We can see this by coloring \n\n                                                                                                     349\n                                                                    Chapter 10: Molecules\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0cde"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 375,
  "content": "             Figure 10.25. \n             Top: crease pattern and folded form of a basic gusset molecule with \n             the gusset horizontal (i.e., parallel to the axis). \n             Middle, bottom: two variations with tilted gussets.\n\n\n             Figure 10.26. \n             Crease pattern and folded form of another variant of the quadrilateral \n             gusset molecule.\n\n                                                                                                                 363\n                                                                             Chapter 10: Molecules\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0cdf"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 413,
  "content": "                                                              11Tree Theory\n\n                         his section describes the mathematical ideas that \n                         underlie the tree method of origami design, which \n                         is a mathematical formulation of the geometric \n                         concepts that I have introduced somewhat ad hoc \n                         over the last few chapters, culminating in the \n            circle/river/molecule method for designing uniaxial bases. The \n            tree method does exactly the same thing—and indeed, utilizes \n            molecules for the generation of the ﬁnal crease pattern—but \n            casts the problem in a form that is a bit less intuitive, perhaps, \n            but is both more rigorous and is more amenable to numerical \n            solution.\n                In the circle/river method, we represent ﬂaps and connec-\n            tions between ﬂaps by circles and rivers on a square of paper; \n            we then connect the centers of touching circles to create axial \n            polygons, which, in turn, are ﬁlled in with molecules or are \n            subdivided by adding new circles and then ﬁlled in. The process \n            gives a generic-form crease pattern for a base with the appro-\n            priate number, size, and conﬁguration of ﬂaps.\n                The weak point in this process was the original packing of \n            circles and rivers; circle packings are relatively straightforward, \n            but when we start adding rivers, the problem can get very com-\n            plicated due to the many ways that rivers can meander among \n            the circles. In tree theory, we avoid this problem by dispensing \n            with circles and rivers entirely. Instead, we build a connection \n            directly from a stick ﬁgure representation of the desired base \n            to the crease pattern itself.\n\n            11.1. The Tree\n            We have already introduced the idea of using a small stick ﬁgure \n            as a shorthand way of describing a base. The stick ﬁgure captures \n\n                                                                                                     401\n\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ce0"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 349,
  "content": "                                                                                          A\n                                                                                1/4\n\n                                                        A\n\n                                                                          B\n                                                    7. Rotate the model 1/4 turn\n                                                                                         B\n                                                    clockwise, so that edge AB\n                      6. Fold the lower left        runs vertically.                 8. Squash-fold the top point\n                      point up to lie along an                                       down to corner B.\n                      existing crease.\n\n\n                9. Petal-fold.             10. Fold the point down.                   11. Turn the model over.\n\n\n              12. Fold the left flap up to the         13. Unfold.          14. Lift up the near corner at the bottom\n              right so that the two creases in                              and squash-fold the left point over to the\n              the middle line up.                                           right, using the creases you just made.\n\n\n              15. Fold the corner back to 16. Tuck the white        17. Fold and unfold. 18. Fold a rabbit ear using\n              the left.                   flaps inside the model.                       the creases you just made.\n\n                                                                                                                 337\n                                                                          ChapterFolding  Instructions:9: Circle Packing Emu\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ce1"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 348,
  "content": "             Emu\n\n\n             1. Begin with the white side\n             up. Fold and unfold along a\n             diagonal.\n\n\n             2. Fold pinch marks at the\n             midpoints of two adjacent\n             sides.\n\n\n             3. Fold two edges so that their  4. Fold and unfold through           5. Fold the model in half.\n             corners touch the pinch marks.   all layers.\n\n     336\n                         Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ce2"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 374,
  "content": "                                         it can be constructed by folding, using the prescription shown \n                                         in Figure 10.24. It can also be constructed numerically, by \n                                         using analytic geometry to compute the creases shown in \n                                         Figure 10.24, or as we will see in the next chapter, using the \n                                         algorithms of tree theory.\n                                             In the basic gusset molecule, the baseline of the gusset \n                                         (indicated by the hidden line in the ﬁnal step of Figure 10.24) \n                                         is parallel to the axis. However, you can vary this angle by tip-\n                                         ping the gusset one way or the other. Several variations are \n                                         also shown in Figure 10.25.\n                                             There is, as well, a version in which the gusset extends \n                                         to both corners by addition of a crimp in its middle, as shown \n                                         in Figure 10.26.\n\n\n            1. Begin with the four angle bisectors. 2. Connect the two points of intersection 3. Fold the crease you just made to lie\n            Draw lines from all four tangent points with a crease.     along two of the perpendiculars; crease\n            perpendicular to the edges until the pairs                 and unfold.\n            of perpendiculars adjacent to diagonally\n            opposite corners meet.\n\n\n            4. Repeat for the other two perpendiculars. 5. The finished crease pattern. 6. Collapse on the creases shown.\n\n\n                                         7. The finished gusset molecule.\n\n                                         Figure 10.24. \n                                         Construction method for the gusset molecule.\n\n     362\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ce3"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 412,
  "content": "",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ce4"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 406,
  "content": "               43. Fold the flap to the   44. Reverse-fold the     45. Pull out some         46. Squash-fold.\n               right.                     edge.                    paper, making the\n                                                                   layers symmetric.\n\n\n              47. Squash-fold.           48. Reverse-fold the      49. Fold one layer        50. Fold up one\n                                         edges.                    to the right.             flap.\n\n\n              51. Spread-sink the        52. Fold the flap         53. Fold the flap         54. Fold the flap\n              corner.                    back to the right.        down, stretching out      back to the left.\n                                                                   a pocket.\n\n\n                            49–53                   47–55\n\n\n               55. Repeat steps       56. Repeat steps       57. Turn the model               58. Fold the flap\n               49–53.                 47–55.                 over.                            over to the right.\n\n     394\n                         Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ce5"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 360,
  "content": "                                         creases. There are eight tangent points in the crease pattern; \n                                         in the folded base, all eight lie on top of one another.\n                                             And the pattern continues for the Frog Base shown in \n                                         Figure 10.5: axial creases between the centers of touching \n                                         circles, perpendicular creases emanating from the points of \n                                         tangency, and all tangent points (this time, 16 of them) lie on \n                                         top of each other.\n\n\n            Figure 10.5. \n            Left: crease and circle pattern \n            for the ﬁve-long-ﬂap Frog Base. \n            Right: the folded base.\n\n                                             Five examples don’t prove universality, but they do sug-\n                                         gest that there are features common to all circle pattern bases. \n                                         In fact, there are several common attributes of circle method \n                                         crease patterns: \n\n                                             • Where two circles touch, there is always a crease \n                                             that connects the centers of the two circles. We’ve al-\n                                             ready encountered these; they are the axial creases.\n\n                                             • When you fold the crease pattern into the base, all \n                                             of the creases between touching circles—the axial \n                                             creases—wind up lying on top of each other, i.e., along \n                                             a single line, which is the axis of the base.\n\n                                             • Where two circles touch, there are also creases that \n                                             are tangent to the two circles and perpendicular to the \n                                             crease between their centers. These creases appear as \n                                             horizontal lines in the bases in Figures 10.1 through \n                                             10.5. We’ll call them hinge creases. The hinge creases \n                                             form the hinges between ﬂaps.\n\n                                             • In the crease pattern, the hinge creases connect \n                                             to each other to make a continuous path that either \n                                             starts and stops on an edge or runs all the way around \n                                             each circle.\n\n                                             • All of the tangent points—the points where two \n                                             circles touch (which are labeled with dots in the \n                                             ﬁgures)—lie at the intersections of axial creases and \n                                             hinge creases. In the folded form, they wind up lying \n                                             precisely on top of each other in the folded base.\n\n     348\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ce6"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 638,
  "content": "                                         Figure 14.1. \n                                         Contour map and folded model of the Flying Walking Stick.\n\n                                         of uniaxial box pleating and will, eventually, arrive at the full-\n                                         up technique of generalized polygon packing.\n\n                                         14.1. Level Shifting\n                                         One drawback of box pleating relative to circle packing is the \n                                         issue of width—or rather, lack of width. It is not uncommon \n                                         for the axial creases to be separated by two or even only one \n                                         grid square, which means that the resulting ﬂaps will be only \n                                         one or one-half grid square wide. This may not be a problem \n                                         for insect legs, but it can deﬁnitely be a problem for the \n                                         (typically wider) body. It would be nice to have a technique \n                                         for selectively widening parts of the base in an elegant and \n                                         straightforward way. \n                                             A more serious issue can also arise: what happens if, in the \n                                         process of bouncing, two contour lines at different elevations \n                                         turn out to meet head-on, as shown in Figure 14.2?\n                                             Now, one’s ﬁrst reaction might be that this can’t happen. \n                                         But we might have made decisions in several places about el-\n                                         evation (for example, forcing axial contours along the symmetry \n                                         line of the model) that would result in this situation somewhere \n                                         else in the model.\n                                             It can’t really happen, of course; we can’t possibly allow \n                                         two contour lines of different elevations to run into one another. \n\n     626\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ce7"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 610,
  "content": "                                         at least: we make every distance in the stick ﬁgure an integral \n                                         number, or equivalently, we put the vertices of all of our packing \n                                         squares and rectilinear rivers on a square grid. We will shortly \n                                         see that if we do that, no matter how irregular the hinge poly-\n                                         gons become, so long as all of their sides run along gridlines, all \n                                         of the axial contours will also run along grid lines. This insures \n                                         that axial contours can’t bounce forever because there are only a \n                                         ﬁnite number of grid lines. But it is not uncommon to ﬁnd that \n                                         when you’ve propagated all of the axial contours through all of \n                                         their bounces, they completely ﬁll up the crease pattern with \n                                         either a horizontal or vertical axial contour (or both) through \n                                         nearly every grid point—as Figure 13.29 vividly shows.\n                                             We have been constructing axial contours, not necessarily \n                                         axial folds; but folds they are indeed. If the minimum elevation \n                                         in the base is zero (which has been an unspoken assumption so \n                                         far, though is not strictly required), then every point not on an \n                                         axial contour has a nonzero elevation. Since the paper on each \n                                         side of an axial contour has a higher elevation than the axial \n                                         contour, the axial contour must actually be folded, and so all \n                                         axial contours are fold lines; they are, in fact, axial folds.\n                                             But what can we say about the paper that lies between \n                                         two axial contours? It must lie at some higher elevation, of \n                                         course. But more germane, if we travel from one axial contour \n                                         to a nearby axial contour in the folded form of the base, as we \n                                         depart the contour, we must be heading uphill to higher eleva-\n                                         tion. When we get to the other contour, we must be traveling \n                                         downhill. So somewhere between going uphill and going down-\n                                         hill, we had to have reached a high point where we changed \n                                         elevation directions.\n                                             That hypothetical high point deﬁnes a nonzero elevation, \n                                         and at least in the vicinity of our path from one axial contour \n                                         to the next, the paper on both sides of that high point has lower \n                                         elevation than the high point. So there must be a folded line \n                                         that runs through the high point, parallel to the axial contours. \n                                         And it is fairly easy to show that this folded line must be exactly \n                                         halfway between the two axial contours, parallel to both, and \n                                         that it is, in fact, part of another set of contour lines.\n                                             So there is at least one new fold that for at least part of its \n                                         length runs along a new contour line. At this point, we should \n                                         construct the new contour. This ﬁrst elevation contour can be \n                                         initiated at any point that lies halfway between two parallel \n                                         axial contours, but then we propagate it in both directions as \n                                         shown in Figure 13.30. Like the axial contours, this new con-\n                                         tour, too, will bounce at ridge creases (reﬂect across the ridge) \n                                         and will continue propagating and bouncing until it terminates \n                                         by connecting with a preexisting contour line (of the same eleva-\n\n     598\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ce8"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 176,
  "content": "             15. Petal-fold the   16. Fold the   17. Turn the model   18. Fold the two    19. Reverse-fold\n             tip of the flap.     flap down.     over from side to side. points upward and two points out to\n                                                                      flatten firmly.     the sides.\n\n\n                 20. Wrap two layers from          21. Wrap two layers from            22. Pull the white corners\n                 inside to outside on each         inside to outside again on          as far out to the sides as\n                 leg.                              each leg.                           possible.\n\n\n                                 23. Open each leg,                         24. Steps 25–46 will\n                                 spreading the layers                       focus on the left leg.\n                                 symmetrically.\n\n\n     164\n                         Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ce9"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 162,
  "content": "                                             How, you may ask, can one be so sure of impossibility? By \n                                         a small thought experiment: an imaginary manipulation of the \n                                         base, as if such a base actually existed. If we had such a base \n                                         (the same as the lizard base, but with all four toes together at \n                                         the tip of the feet) then we would be able to manipulate the \n                                         ﬂaps in the same way as the ﬂaps of the original lizard base. \n                                         In particular, we should be able to manipulate the ﬂaps into \n                                         the same arrangement as step 19 of the folding sequence for \n                                         the Lizard. This arrangement is shown in Figure 6.22.\n\n\n                                                             A\n                               hind leg     A,A  A*\n\n                                                          A*\n\n                                      B                            B\n\n\n                                            C\n                                tail                        C\n\n\n                                         Figure 6.22. \n                                         Left: a conﬁguration of the ﬂaps of the lizard base. \n                                         Right: a possible partial crease pattern.\n\n                                             Now, the image on the left in Figure 6.22 shows one pos-\n                                         sible arrangement of the base, with one of the triangles in the \n                                         crease pattern indicated by its corners A, B, and C. The base \n                                         might not look exactly like this, of course; the extra paper we’ve \n                                         added might create more layers that cover up or conceal the \n                                         original lizard base ﬂaps, but somewhere inside the extended \n                                         base, we’d have the original lizard base. And in this folded \n                                         conﬁguration, triangle ABC, which is part of the original base, \n                                         is ﬂat.\n                                             Let’s ask a question: How far is it from point C (the tail) \n                                         to point A (tip of the leg/one of the toes)? The answer is evident \n                                         from the ﬁgure; since triangle ABC is ﬂat in both the crease \n                                         pattern and the folded base, the distance is equal to the length \n                                         of line segment AC. Call this distance x.\n\n     150\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0cea"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 604,
  "content": "                                             With the notion of elevation now ﬁrmly in mind, let us \n                                         now turn our attention back to the axial lines of a uniaxial \n                                         box-pleated base.\n                                             In a uniaxial base, the axial creases are the lines of zero \n                                         elevation, and in uniaxial box pleating they are the next stage \n                                         in the construction of the crease pattern after the hinge creases \n                                         (boundaries of hinge polygons and rivers) and the ridge creases \n                                         (the straight skeleton of the hinge polygons and rivers). In \n                                         circle-packed bases, the tips of all ﬂaps come from the circle \n                                         centers and have zero elevation by deﬁnition and by design. In \n                                         uniaxial box-pleated bases, though, we can relax this require-\n                                         ment for certain ﬂaps, namely, those that come from the corner \n                                         or edge of the paper. For middle ﬂaps, however, in most cases, \n                                         the tip of the ﬂap needs to touch the axis of the base.\n                                             For the moment let us assume that all of the ﬂaps in the \n                                         base are axial ﬂaps, i.e., their tips touch the axis. For packing \n                                         squares, that means that the center of the square lies on the \n                                         axis, and so that point must lie on some zero-elevation contour \n                                         line. Within each hinge polygon or river, contour lines are per-\n                                         pendicular to the boundaries of the polygon. That is enough \n                                         information to precisely locate a set of axial contours: for every \n                                         hinge line on the boundary of the hinge polygon, if there exists \n                                         a line perpendicular to the hinge that passes through the circle \n                                         center, that line must be an axial contour line.\n                                             And so, we must launch from the square center point one \n                                         or more zero-elevation contour lines that propagate to the edges \n                                         of the packing square; these will be the beginnings of the axial \n                                         creases. Figure 13.23 shows this launch for the example prob-\n                                         lem whose ridge creases were shown in Figure 13.17.\n\n\n            Figure 13.23. \n            Launch of the axials from the \n            circle centers that then propa-\n            gate toward the bounding hinge \n            creases.\n\n     592\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ceb"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 189,
  "content": "             25. Fold one flap up       26. Fold the white         27. Fold the left edge     28. Fold the left edge\n             as far as possible.        edge to the center         to the crease you just     to the crease you just\n                                        line and unfold.           made and unfold.           made and unfold.\n\n\n             29. Open-sink the           30. Spread-sink             31. Close up             32. Open-sink the\n             corner in and out on        the corner.                 the flap.                corner on the\n             the existing creases.                                                            existing creases.\n\n\n                                        18–33\n\n\n             33. Fold the flap          34. Repeat steps         35. Fold one layer to the    36. Crimp the two\n             down.                      18–33 behind.            left in front and two to the points out to the\n                                                                 right behind, leaving the    sides and slightly\n                                                                 model symmetric.             upward.\n\n                                                                                                                 177\n                                                                         Folding ChapterInstructions: 6: Grafting Lizard\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0cec"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 232,
  "content": "./origami_dataset_dev/Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li/page232_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ced"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 758,
  "content": "                                                     Four-circle quadrilateral (page 355): a quadrilateral formed by connect-\n                                                     ing the centers of four pairwise tangent circles; such a quadrilateral can be \n                                                     folded so that all edges lie on a line and the tangent points between pairs \n                                                     of circles touch.\n                                                     Frog Base (page 54): one of the Classic Bases, formed by squash- and petal-\n                                                     folding the four edges of a Preliminary Fold.\n\n                                                     G\n                                                     Gadget (page 629): a localized patch of crease pattern that can be substituted \n                                                     for an existing patch to add functionality or otherwise modify the pattern. \n                                                     Level shifters are examples of gadgets.\n                                                     Generic form (page 253): a crease pattern within a molecule or group of \n                                                     molecules in which (a) all axial creases are shown as valley creases; (b) all \n                                                     ridge creases are shown as mountain creases; and (c) all hinge creases are \n                                                     shown as unfolded creases. The generic form is an approximation of the actual \n                                                     crease pattern of a folded base.\n                                                     Grafting (page 135): modifying a crease pattern as if you had spliced into it \n                                                     a strip or strips of paper in order to add new features to an existing base.\n                                                     Grafted Kite Base (page 708): a family of bases composed by adding a \n                                                     border graft to two sides of a Kite Base.\n                                                     Gusset (page 32): one or more narrow triangles of paper, usually formed by \n                                                     stretching a pleat or crimp. Used in quadrilateral molecules and Pythagorean \n                                                     stretches.\n                                                     Gusset molecule (page 361): a crease pattern within a quadrilateral \n                                                     that resembles a partially stretched Waterbomb molecule with a gusset \n                                                     running across its top. The gusset molecule, like the arrowhead molecule, \n                                                     allows any four-circle quadrilateral to be collapsed while aligning the \n                                                     tangent points.\n                                                     Gusset sliver (page 646): a gusset crease closely spaced with an axis-parallel \n                                                     fold, resulting in a structure difﬁcult to fold.\n\n                                                     H\n                                                     Hex pleating (page 659): a form of polygon packing in which the major \n                                                     creases run at multiples of 30° relative to one another.\n                                                     Hinge (page 244): a joint between two ﬂaps.\n                                                     Hinge creases (page 348): creases that in a uniaxial base are perpendicu-\n                                                     lar to the axis. Hinge creases deﬁne the boundaries of ﬂaps or segments of \n                                                     a base.\n                                                     Hinge polygons (page 349): polygons that turn into discrete ﬂaps within \n                                                     a uniaxial base. Hinge polygons are the fundamental elements of polygon \n                                                     packing methods of design, and a hinge polygon represents the exact region \n                                                     of paper taken up by a particular leaf ﬂap.\n                                                     Hinge rivers (page 572): polygonal rivers that are packed along with hinge \n                                                     polygons in polygon-packed designs. A hinge rivers represents the exact region \n                                                     of paper taken up by a particular branch ﬂap.\n                                                     Hybrid base (page 699): a base that is constructed using multiple design \n                                                     techniques.\n                                                     Hybrid reverse fold (page 24): a more complicated form of reverse fold \n                                                     that combines aspects of both inside and outside reverse folds.\n\n\n       746\n                              Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0cee"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 764,
  "content": "",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0cef"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 2,
  "content": "                                                                                         Origami Design Secrets\n                                                                                                                   Second Edition\n\n\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0cf0"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 16,
  "content": "                                             This imbalance arises because it is much easier to describe \n                                         how to replicate an origami ﬁgure than how to design one. \n                                         Origami designs spread through publication of their folding \n                                         sequence—a set of step-by-step instructions. The folding se-\n                                         quence, based on a simple code of dashed and dotted lines and \n                                         arrows devised by the great Japanese master Akira Yoshizawa, \n                                         transcends language boundaries and has led to the worldwide \n                                         spread of origami.\n                                             While thousands of folding sequences have been published \n                                         in books, magazines, and conference proceedings, a step-by-\n                                         step folding sequence does not necessarily communicate how \n                                         the model was designed. The folding sequence is usually opti-\n                                         mized for ease of folding, not to show off design techniques or \n                                         the structure of the model. In fact, some of the most enjoyable \n                                         folding sequences are ones that obscure the underlying design \n                                         of the model so that the appearance of the ﬁnal structure comes \n                                         as a surprise. “How to fold” is rarely “how to design.” Folding \n                                         sequences are widespread, but relatively few of the design \n                                         techniques of origami have ever been set down on paper.\n                                             Over the last 40 years I have designed some 500+ original \n                                         ﬁgures. The most common question I am asked is, “How do you \n                                         come up with your designs?” Throughout the history of origami, \n                                         most designers have designed by “feel,” by an intuition of which \n                                         steps to take to achieve a particular end. My own approach to \n                                         design has followed what I suspect is a not uncommon pattern; \n                                         it evolved over the years from simply playing around with the \n                                         paper, through somewhat more directed playing, to systematic \n                                         folding. Nowadays, when I set out to fold a new subject, I have \n                                         a pretty good idea about how I’m going to go about folding it \n                                         and can usually produce a fair approximation of my subject on \n                                         the ﬁrst try.\n                                             Hence the perennial question: How do you do that? The \n                                         question is asked as if there were a recipe for origami design \n                                         somewhere, a cookbook whose steps you could follow to reliably \n                                         produce any shape you wanted from the square of paper. I don’t \n                                         think of origami design as a cookbook process so much as a bag \n                                         of tricks from which I select one or more in the design of a new \n                                         model. Here is a base (a fundamental folding pattern) with six \n                                         legs: I’ll use it to make a beetle. Here is a technique for adding \n                                         a pair of points to an existing base: I’ll combine these to make \n                                         wings. Some designers have deeper bags of tricks than others; \n                                         some, like John Montroll, have a seemingly bottomless bag of \n                                         tricks. I can’t really teach the way to design origami, for there \n                                         is no single way to design, but what I can and will try to do in \n                                         this book is to pass on some of the tricks from my bag. Origami \n                                         design can indeed be pursued in a systematic fashion. There are \n\n      4\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0cf1"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 770,
  "content": "                TreeMaker  431,  561, 569             W\n                tree theorem  407, 424, 427, 750\n                tree theory  8, 362, 401, 750         Walrus\n                triangle                               crease pattern, base, and folded \n                 appearance in Classic Bases  61            model  114\n                 molecule  352                        washi  15\n                triangulation  423, 750               Waterbomb Base  56,   158, 323, \n                Turtle  325                              356, 627, 751\n                 crease pattern, base, and folded      as a uniaxial base  245\n                      model  198                       as limiting case of rectangle tile  252\n                turtle base  242                       offset, use in Baby  69\n                                                      Waterbomb condition  355, 366, 751\n                U                                     Waterbomb molecule  355,   413, \n                                                         416, 428, 751\n                Uchiyama, Kosho  48,  713              as limiting case of sawhorse \n                 system of bases  58                            molecule  365\n                Uchiyama, Michio  713                 Water Strider\n                 system of bases  58                   contour map and folded model  643\n                Unamuno, Miguel de  713               wedge of creases in split point  110\n                unfold  750                           weight, of an edge  402\n                 as a type of fold  11                Western Pond Turtle\n                uniaxial base  7, 244, 294, 402,       crease pattern, base, and folded \n                   705, 750                                 model  203\n                uniaxial box pleating  562, 573,      Windmill Base  57,  244, 751\n                   660                                 in Stealth Fighter  64\n                uniaxial hex pleating  660\n                universal molecule  424, 584, 590,    Y\n                   751\n                unryu  15                             Yoshino, Issei  48\n                unsink fold  39, 751                  Yoshizawa, Akira  713\n                                                       Crab  62,  326\n                V                                      diagramming symbols  4,   13\n                                                       optimum-length split  95\n                valency  301                           splitting technique  94\n                Valette, Guy  329                     Yoshizawa split  100, 751\n                valley fold  751\n                 deﬁnition of  11                     Z\n                vertices\n                 branch  409,  744                    zone of acceptability\n                 leaf  404, 747                        for overlapping polygons  638\n\n\n       758\n                              Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0cf2"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 695,
  "content": "./origami_dataset_dev/Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li/page695_image005.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0cf3"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 228,
  "content": "                                             In Figure 7.29, the head has been slightly reduced in size \n                                         and the pleats have been allowed to creep into the edges of the \n                                         head and the tail. This seems like an acceptable tradeoff to get \n                                         the body nearly fully covered.\n                                             The next step in the construction would be the same as \n                                         what we did with the Turtle: we replace each of the pleat lines \n                                         with a strip of paper for the pleat. How wide?\n                                             To address this, we need to look at the details of how a tile \n                                         should map to a pleat line. In essence, we are using a line to \n                                         represent the paper that is hidden in the tile. So let’s look at \n                                         the tile and identify the hidden paper; see Figure 7.30. \n\n\n                                                   hidden         hidden\n\n\n            Figure 7.30. \n            Left: in the folded form, the \n            nearly hidden pleat contains \n            the layers of paper that are not \n            visible. Right: the shaded region \n            indicates the hidden paper in \n            the crease pattern.\n\n\n                                             It is this hidden paper that must map to each line in our \n                                         schematic of the scale pattern overlaid on the crease pattern, \n                                         as illustrated in Figure 7.31. Up to now, I’ve been showing tile \n                                         crease patterns from the colored side of the paper, but let’s now \n                                         ﬂip the tile over so that, like the Koi pattern of Figures 7.28 \n                                         and 7.29, we’re looking at the white side of the paper.\n                                             Now we can precisely determine the dimensions of the \n\n                                         scale pattern. In Figure 7.31, the distance marked d0 is the \n                                         width of the visible part of each individual scale in the hori-\n                                         zontal direction; the folded array of scales will be periodic with \n\n                                         spacing d0. To achieve this size and spacing, we must make \n\n                                         parallel pleats with spacings d1 and d2, as shown on the bottom \n                                         of the ﬁgure. From the geometry of each scale, we can calculate \n                                         these relationships:\n\n\n                                                            d = (1 + 1/√2) d0,                (7–1)\n\n\n                                                           d2 = (1/√2) d0.                    (7–2)\n\n     216\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0cf4"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 200,
  "content": "             Dancing Crane\n\n\n             1. Begin with a square, white side\n             up. Fold and unfold in half\n             vertically and horizontally. Then\n             turn the paper over.\n\n\n             2. Fold and unfold along both\n             diagonals.\n\n\n             3. Fold and unfold along an angle  4. Fold and unfold.                5. Fold and unfold.\n             bisector.\n\n     188\n                         Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0cf5"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 566,
  "content": "              154. This view shows the relative\n              positions of the clock face and the deer\n              head. The clock body is not shown, and\n              the view is of the back of the clock face.\n              Turn over.\n\n\n                                                                      155. The clock face is not shown in\n                                                                      this view. Mountain-fold the vertical\n                                                                      part in half and swing the resulting\n                                                                      flap up to stand out at right angles\n                                                                      to the clock body.\n\n                    156. Crimp the T-shaped\n                    flap downward.\n\n\n                   157. Open out the pleated part.                  158. Fold the colored flaps along the top\n                                                                    and bottom of the white region up and\n                                                                    down, respectively; turn the model over.\n                                                                    We will be working on the colored back\n                                                                    side of the white pleated region for steps\n                                                                    159–165.\n\n     554\n                         Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0cf6"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 572,
  "content": "",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0cf7"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 214,
  "content": "                                          foreleg                                           foreleg\n\n\n                                                                    head\n\n\n                                          hind leg                                          hind leg\n\n\n            Figure 7.7. \n            The crease pattern with pleats \n            for both front and hind feet.                           tail\n                                             On the other hand, the pleats we’ve added have increased \n                                         the height of the square much more than they have increased \n                                         its width. If we select the pleat width carefully, we can arrange \n                                         matters so that the added height (from the pleats) and the \n                                         lost height (from taking off the top strip) precisely cancel each \n                                         other out, resulting in a perfect square once again, as shown \n                                         in Figure 7.8.\n\n                                           foreleg                                          foreleg\n\n\n                                                                    head\n\n\n                                          hind leg                                          hind leg\n\n            Figure 7.8. \n            The ﬁnal crease pattern, back to \n            square and with strip grafts for \n            shell pattern and feet.\n                                                                    tail\n\n     202\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0cf8"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 599,
  "content": "                                                                       Figure 13.19. \n                                                                       The straight skeleton for an ir-\n                                                                       regular hinge polygon. Each ridge \n                                                                       is connected to the two polygon \n                                                                       edges for which it is the angle \n                                                                       bisector.\n\n            pairs joined by a horizontal or vertical ridge crease (depend-\n            ing on the orientation of the rectangle), again as previously \n            noted. But now we can see that these are just special cases of \n            the general straight skeleton, and we can construct a straight \n            skeleton for even a very irregular hinge polygon.\n                The straight skeleton shows up in interesting and di-\n            verse ways in computer science and in the world at large. \n            Peter Engel, origami artist and architect, pointed out to me \n            that for a nonconvex structure like Figure 13.19, the straight \n            skeleton is the pattern of ridges in a roof of constant pitch on \n            an irregular building. \n                Although we can construct the ridge creases individually \n            for each hinge polygon and rectilinear river in isolation, when \n            all ridge creases are drawn, they all connect up to one another \n            to form a network of creases. These are the complete set of \n            ridge creases, exactly analogous to the ridge creases that one \n            encounters in circle packing. So we have the hinge creases \n            (the hinge polygon boundaries) and now the ridge creases \n            (the straight skeletons of the hinge polygons). Continuing the \n            analogy with circle packing, there must be analogs of axial and \n            gusset creases as well. And so there are; but the construction \n            of axial creases has some surprises in store for us.\n\n            13.5. Axis-Parallel Creases and Elevation\n            Let us now consider the axial creases. As a reminder, these \n            are the creases in a circle-packed base that are shown in green \n            in Figure 13.20. I have also highlighted the gusset creases (in \n            gray), because they are similar to the axials in an important \n            way.\n                In uniaxial bases, axial creases are always perpendicu-\n            lar to hinge creases, and that is the case whether the base is \n            circle-packed or uniaxial box-pleated. In circle-packed bases, \n            the axial creases and hinge creases can run at arbitrary \n\n                                                                                                     587\n                                                           Chapter 13: Uniaxial Box Pleating\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0cf9"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 457,
  "content": "./origami_dataset_dev/Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li/page457_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0cfa"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 402,
  "content": "./origami_dataset_dev/Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li/page402_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0cfb"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 594,
  "content": "                                             But the second difference is even bigger: instead of creat-\n                                         ing molecular crease patterns that encompass parts of multiple \n                                         ﬂaps, we can create the ridge creases for each polygon and \n                                         river independently, and each region is an isolated ﬂap. That \n                                         is, we treat each polygon and river in isolation and construct \n                                         its ridge creases completely independently of all of the other \n                                         hinge polygons. There is, again, some “magic” in how creases \n                                         all work together, but in this case, the “magic” is that even if \n                                         we construct the ridge creases for the independent polygons, \n                                         they will all work together in the overall crease pattern.\n                                             So how do we construct these ridge creases? There are, as \n                                         we have seen, two classes of polygons: hinge polygons (which \n                                         can be squares, rectangles, or more irregular shapes), and hinge \n                                         rivers (which are rectilinear). \n                                             The hinge rivers are the easiest to construct ridges for, \n                                         especially with uniaxial box pleating. In fact, they’re ridicu-\n                                         lously simple. Everywhere the river makes a bend, you launch \n                                         a 45-degree ridge crease from the corner that travels across \n                                         the river until it hits the opposite corner on the other “bank” \n                                         of the river, as shown in Figure 13.15.\n\n\n            Figure 13.15. \n            Top: ridge creases in a hinge \n            river. \n            Lower left: ridge creases must \n            connect corners of opposite \n            banks of the river. \n            Lower right: if a ridge crease \n            misses the opposite corner, then \n            the river is not constant width.\n\n                                             If it does not hit an opposite corner, then you haven’t \n                                         constructed the river properly as a curve of constant width. In \n                                         fact, one way of checking that the river has constant width is \n                                         to draw all the ridge creases and make sure that all of them \n                                         run from corner to corner.\n                                             The ridge creases for the hinge polygons get a little bit \n                                         more interesting, depending on the shape of the hinge polygon. \n                                         For a given size ﬂap, the smallest that a hinge polygon can be \n                                         is a square, and the ridge creases for a square are easy; they \n                                         are simply the diagonals of the square.\n                                             For a rectangle, the ridge crease pattern is also very \n                                         simple. One extends the diagonals inward from the corners of \n                                         the square. The two diagonals adjacent to each short side will \n\n     582\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0cfc"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 580,
  "content": "                                         surprisingly often) is to “soak up” the extra space by enlarging \n                                         one or more of the interior circles. With this design, the length-4 \n                                         abdomen circle is an obvious candidate for enlargement; we can \n                                         either turn the excess paper underneath, hiding it, or perhaps \n                                         use the extra paper to create additional lines or features of the \n                                         model. A similar analysis to the above, letting the size of the \n                                         abdomen square now become an unknown variable, gives the \n                                         circle/river packing shown in Figure 13.4, where we now show \n                                         the full packing in both halves of the square.\n\n\n                                                       s/2\n                                                   w\n                                                                4   1\n                                            x             4\n                                                    1 1       4\n                                                4                 1 1\n                                                                    1\n                                             4                      1\n                                                                    1\n                                             1                      1\n                                             1                      1\n                                                                    1\n                                                                    2\n                                             6\n\n                                                                  6.2\n                                          s\n                                               6\n\n                                                                6.2\n                                                  2\n\n                                            y\n\n                                                     8     8\n            Figure 13.4. \n            Expanding the abdomen circle                      8\n                                                  z\n            makes the packing rigid.                   s/2\n\n                                             Note that the positions of the circles are ﬁxed (“pinned”) \n                                         in place, as are the rivers where they cross the axial paths be-\n                                         tween the circle centers. Elsewhere, the positions of the rivers \n                                         are not necessarily ﬁxed; I have drawn them where they are \n                                         only for convenience.\n                                             For this packing, the abdomen circle has been increased in \n                                         length by 55%, to a total length of 6.2 units. This means that \n                                         there will be a fair amount of excess length to be hidden. But \n                                         that extra paper was going to have to be hidden somewhere, \n                                         and in a beetle, the abdomen is one of the fattest parts of the \n                                         model; better to hide excess paper in the abdomen (or thorax) \n                                         than in the antennae, for example.\n\n     568\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0cfd"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 219,
  "content": "                1. Begin with a square. Fold and          2. Use the existing mountain fold to  3. Use the other mountain fold to\n                unfold from side to side and top to       make a pleat in the paper.            make a vertical pleat of the same\n                bottom. Turn the paper over.                                                    width.\n\n\n                                                                   3/8\n                                                                                         A\n\n\n                                  4. Rotate the paper 3/8 turn\n                                  counterclockwise.\n                                                                             5. Here is a single pleat in the\n                                                                             orientation of the fish scale.\n                Figure 7.13. \n                Folding sequence for a single pair of crossed pleats.\n\n\n                              A                                       A                                    A\n\n\n                   6. Stretch the two edges away from   7. Squash-fold the excess paper        8. The flap is now released.\n                   the pleat so that the trapped paper is symmetrically.\n                   released. The result will not lie flat.\n\n                Figure 7.14. \n                Stretching and releasing the trapped corner.\n\n                                                                                                                                  207\n                                                                                   Chapter 7: Pattern Grafting\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0cfe"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 231,
  "content": "                       Fin                                    Tail\n\n\n                       Head                                     Fin\n\n\n                     12.2 cm                                 12.0 cm\n\n                                          20 pleats                             Figure 7.33. \n                            0.2 cm 1.2 cm                                       Dimensions and pleats for a 20 \n                                                                                × 20 array of pleats that gives a \n                                                                                scaled Koi.\n\n\n                                                                                Figure 7.34. \n                                                                                The completed Koi with scales.\n\n                                                                                                                 219\n                                                                        Chapter 7: Pattern Grafting\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0cff"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 557,
  "content": "             80. Fold the sides in. The creases don't go     81. Pleat. Turn the            82. Reverse-fold\n             all the way to the other end.                   paper over.                    the corners.\n\n\n             83. Fold the top down.   84. Pull out one layer  85. Turn the paper     86. Sink the edges. These\n                                      from each side.         over.                  creases connect up with the\n                                                                                     ones on the bottom.\n\n\n             87. Swing the lower            88. Fold the left side over and the top edge 89. Pull out a single\n             portion of the model up        down and flatten. This fold connects to a layer of paper.\n             to the right. The model        crease on the rest of the model.\n             will not lie flat.\n\n                                                                                                                 545\n                                                        Folding Instructions:Chapter Black  Forest12: Box Cuckoo Pleating Clock\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d00"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 543,
  "content": "                                        2–3             2–3, 8×\n\n\n           2. Fold the   3. Mountain-fold 4. Repeat steps 2–3. 5. Repeat steps 6. Unfold to step\n           lower left    the bottom corner                  2–3 eight more    2.\n           corner up to lie behind.                         times (until you\n           along the right                                  run out of paper).\n           edge.\n\n\n                                                                                           531\n                                              Folding Instructions:Chapter Black  Forest12: Box Cuckoo Pleating Clock\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d01"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 225,
  "content": "                                       1\n                                           3\n                                   3      5\n                                      5  3 7\n                                1      7   3   1\n                                      5 7\n                                        3 7\n                                   3\n                                          5 3\n\n                                       1                                Figure 7.25. \n                                                                        Number of layers in each region \n                                                                        of the efﬁcient scale tile.\n\n            must always be the case for a tile whose raw edges are aligned \n            along the boundary of the tile. There is an enormous body of \n            work concerning the mathematics of origami pleat tilings—far \n            too much to go into here. For our purposes, it is sufﬁcient that \n            the tiles can be combined into arbitrarily large areas of pat-\n            terned regions with pleats emanating from their edges.\n                Now, we can turn our attention back to the original object \n            of study: the Koi. For this ﬁgure, it would be nice to add scales \n            to the body, but not the head, tail, or pectoral ﬁns. So the ﬁrst \n            thing to do is to identify which parts of the paper will be exposed \n            in the folded model. We should divide the square up into three \n            categories: (a) those parts of the paper that become the body \n            (these should have the pattern exposed); (b) those parts of the \n            paper that become the head and ﬁns (these should not have \n            the pattern exposed); and (c) those parts of the paper that are \n            hidden by other layers (these may or may not get the pattern, \n            depending on how we are constrained by the pattern we choose). \n            Obviously, it’s fairly wasteful to put a lot of effort (and folding) \n            into creating a pattern that will never see the light of exterior \n            view, but since patterns may not be created in isolation but are \n            part of a connected whole, it may be necessary to extend the \n            pattern into subsequently hidden regions in order to form the \n            entire structure. Figure 7.26 shows these regions, color-coded. \n            The body is colored. We would not like the pattern to extend \n            onto the ﬁns or the head, so those are colored gray; then the \n            lightest regions are those we don’t care about. Note that any \n            region covered by another (the way the front of the body is \n            covered by the head) falls into the “don’t care” category.\n                The task now is to ﬁll in the colored regions with a scale \n            pattern while avoiding the gray regions. This is not as easy as \n            it sounds, because pleated scales don’t exist in isolation: They \n            are terminated by pleats on four sides. If we represent a pleat \n            schematically by a single line, then an array of crossing pleats \n            can be represented by two arrays of crossing parallel lines, as \n            in Figure 7.27.\n\n                                                                                                     213\n                                                                Chapter 7: Pattern Grafting\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d02"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 347,
  "content": "./origami_dataset_dev/Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li/page347_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d03"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 769,
  "content": "                R                                     Scorpion HP  676                      string-of-beads method  430\n                                                       contour map and folded model  669    strip graft  750\n                Rabbit                                Sea Urchin, Lang’s  62, 333           structural coloring  349\n                 crease pattern, base, and folded     shadow of a uniaxial base  402        stub  423, 428, 750\n                      model  709                      Shafer, Jeremy  145                   subbase  411, 750\n                rabbit-ear fold  25, 749              shaft                                 subtree  411, 415, 750\n                rabbit-ear molecule  354, 413, 415,    in comb  676                         surjective mapping  404\n                           428                        Shiva                                 swivel fold  28, 750\n                Randlett, Samuel L.  713               crease pattern, base, and folded     symbols\n                 diagramming symbols  13                    model  273                        for actions  16\n                raw edge  15, 749                     side view  313, 749                     point of view  16\n                rectangle, in Mooser’s Train  461     silver rectangle, deﬁnition of  265     repetition of steps  17\n                reduced path  749                     simple molecule  360                    right angle  17\n                  inequality  425, 749                sink fold  33, 749                    symmetry\n                  length  425                          closed  36                             book  305, 744\n                reduced polygon  425                   different ways of making  38           diagonal  745\n                ReferenceFinder  561, 564,  571        double  35                             in circle-packed bases  304\n                reverse fold                           mixed  38,  747                        in computed bases  433\n                 hybrid  25, 746                       multiple  35                           left-right, in molecules  360\n                 inside  23, 747                       open  34, 748                          of a square  305\n                 outside  23, 748                     Solorzano Sagredo, Vicente  713\n                Rhoads, George                        Songbird 1                            T\n                 Bat  57                               crease pattern, base, and folded \n                 Bug  326                                   model  138                      tangent circles  346\n                 use of blintzed Bird Base  64        Songbird 2                            tangent points  347, 348, 357, \n                Richardson, John                       crease pattern, base, and folded        412, 750\n                 Hedgehog  204                              model  325                      Tarantula\n                ridge creases  349, 368, 416, 434,    split, ideal  747                       crease pattern, base, and folded \n                           749                        splitting  748                              model  314\n                 crease assignment  368               spread sink fold  33, 749               symmetry of  304\n                rivers  257, 364, 749                 Spur-Legged Dung Beetle               technical folding  5, 9, 748, 750\n                 hinge  572                            contour map, base, and folded        thickness\n                 in circle/river packings  317, 412         model  678                        balancing by adding layers  632\n                Rohm, Fred  64,  464, 713             squash fold  27, 749                  three-legged animals  56, 97\n                Roko-an  135                          stability of a circle packing  325    three-step models  563\n                Roosevelt Elk                         standard bases  749                   tile  750\n                 crease pattern, base, and folded     Stephenson Rocket  562                  as element of pleated texture  209\n                      model  435                      stick ﬁgure  266, 291, 372, 375,        connection to circles  297\n                                                         384, 401                             dimensional relationships within  \n                                                       rules for construction  269                275\n                S                                     straight skeleton  352, 584             generic form  253\n                Salt Creek Tiger Beetle                deﬁnition  584                         matching rules  253\n                 contour map, base, and folded         in roof design  587                    methods of narrowing  264\n                      model  630                      stretch                                 of creases  250\n                sawhorse graph  416                    extended Pythagorean  647              parallelogram  277\n                sawhorse molecule  365,  413, 416,     offset Pythagorean  646                rectangle  252\n                           749                         perfect offset Pythagorean  646        subdivision of  265\n                scale  410, 749                        perfect Pythagorean  642               triangle  251\n                 of a circle packing  298              Pythagorean  640                     tiling  7, 412\n                scales, representation with pleats    stretched Bird Base  115, 158, 750    Train, Mooser’s  562\n                      206                             stretching                            tree  402, 750\n                Scarab Beetle                          a crimp or pleat  32                 Tree Frog\n                 contour map, base, and folded         a parallelogram molecule  277          crease pattern, base, and folded \n                      model  666                       crossing pleats  206                       model  146\n                Schaer, Jonathan  329                  the simple box  470                  tree graph  402, 584, 750\n                Scorpion                               to form an open sink  34             Treehopper\n                 crease pattern, base, and folded      to form a spread sink  33              crease pattern, base, and folded \n                      model  432                       to form a stretched Bird Base  57          model  158\n\n                                                                                                                                  757\n                                                                                                           Index\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d04"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 755,
  "content": "                                                                                                   Glossary\n\n\n               A\n               Active path (page 408): a path whose length on the crease pattern is equal \n               to its minimum length as speciﬁed by the tree graph.\n               Active reduced path (page 426): a reduced path within a universal mol-\n               ecule whose length on the crease pattern is equal to its minimum length as \n               speciﬁed by the tree graph.\n               Arrowhead molecule (page 358): a crease pattern within a quadrilateral \n               that consists of a Waterbomb molecule combined with an angled dart; it al-\n                lows an arbitrary four-circle quadrilateral to be collapsed while aligning the \n                four tangent points.\n                Assignment (page 21): the labeling of each fold in a crease pattern by its \n                fold direction, e.g., mountain or valley.\n                Axial crease (page 246): a crease in a crease pattern that lies along the \n                axis in the folded form of a uniaxial base.\n                Axial+N crease (page 604): an axis-parallel crease in a crease pattern whose \n               elevation is N width units from the axis in the folded form.\n               Axial polygon (page 247): a polygonal region of paper in a crease pattern \n                outlined by axial creases. In the folded form, the entire perimeter of an axial \n                polygon lies along the axis of the base.\n                Axis (page 244): a line on a base along which the edges of ﬂaps lie and to \n                which the hinges of ﬂaps are perpendicular.\n                Axis-parallel (page 574): any fold or line in a uniaxial base that lies on or \n                parallel to the axis of the base in the folded form. Axial+N contours are all \n                axis-parallel.\n\n               B\n               Base (page 53): a regular geometric shape that has a structure similar to \n               that of the desired subject.\n               Bird Base (page 54): one of the Classic Bases, formed by petal-folding the \n               front and back of a Preliminary Fold.\n               Blintzing (page 58): folding the four corners of a square to the center.\n               Blintzed base (page 58): any base in which the four corners of the square \n               are folded to the center prior to folding the base.\n\n                                                                                                                                  743\n\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d05"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 33,
  "content": "                                                                       Figure 2.18. \n                                                                       Mountain-fold and unfold is \n                                                                       indicated by a double-headed \n                                                                       arrow that combines the \n                                                                       “mountain fold” and “unfold” \n                                                                       arrowheads.\n\n            formation than the sequence of folding instructions, because it \n            shows the entire model (or folded form) at once. The simplest \n            form of the crease pattern simply shows all creases as crease \n            lines, as in Figure 2.19, which shows the crease pattern for \n            the traditional Japanese ﬂapping bird.\n\n\n            Figure 2.19. \n            Crease pattern, base, and folded model of the traditional Japanese \n            ﬂapping bird.\n\n                Knowing just the location of the creases, however, is not as \n            useful as it could be; it is far more useful to know the directions \n            of the creases, i.e., whether they are valley or mountain folds.\n                (“More useful” is a bit of an understatement. In 1996, \n            Marshall Bern and Barry Hayes proved that ﬁguring out \n            crease directions from a generic crease pattern is computation-\n            ally part of a class of problems known as “NP-COMPLETE.” As \n            such problems grow in size, they quickly outstrip the abilities \n            of any computer to solve.)\n                Thus, it is more helpful to give the direction—or crease \n            assignment—of the creases: mountain, valley, or crease (that \n\n                                                                                                      21\n                                                                 Chapter 2: Building Blocks \n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d06"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 27,
  "content": "                Brightly colored origami paper often comes precut to \n            squares. One of the small ironies of the art is that when precut \n            square origami paper was introduced in Japan near the turn \n            of the 20th century, it was made from inexpensive European \n            machine-made paper, since handmade Japanese washi was \n            far too expensive for most purposes. Thus, the origami paper \n            that is considered the most authentically Japanese wasn’t \n            even originally from Japan!\n                For your own folding, there is no special requirement on \n            paper other than it hold a crease and not easily rip. Traditional \n            origami paper—available from most art and craft stores, via \n            the Internet, and at many stores in the Japanese quarter \n            of large cities—is relatively inexpensive and conveniently \n            precut to squares. (It may not be precisely square, however. \n            Like most machine-made papers, prepackaged origami paper \n            has a deﬁnite grain and will change proportion slightly with \n            humidity; a square in Florida will probably be a rectangle in \n            Nevada.) Other papers that are useful are thin artist’s foil \n            (also available from art stores), foil wrapping papers, and \n            various thin art papers you may run across with names like \n            unryu, kozo, and lokta.\n                Origami diagrams are usually line drawings. Even in this \n            day of three-dimensional computer rendering, line drawings \n            convey the information of folding as well as anything. There \n            are ﬁve types of lines that are used for different features of \n            the folded shape. Paper edges, either raw (an original edge \n            of the paper) or folded, are indicated by a solid line. Creases \n            are indicated by a thinner line, and will often stop before they \n            reach the edge of the paper. Valley folds are indicated by a \n            dashed line; mountain folds by a chain (dot-dot-dash) line. The \n            “X-ray line,” a dotted line, is used to indicate anything hidden \n            behind other layers, and could be used to represent a hidden \n            edge (most often), fold, or arrow. It will usually be clear from \n            context what the X-ray line is meant to represent.\n\n\n             Raw edge                             Folded edge\n\n                                                         Mountain fold =\n                                                         fold the paper\n                                                         away from you\n              Valley fold =\n             fold the paper                              Crease =\n               toward you                                location of an\n                                                         earlier fold,\n                      X-ray line =                       since unfolded Figure 2.4. \n                    hidden edge or                                     The ﬁve types of lines used in \n                          crease\n                                                                       sequential origami diagrams.\n\n                                                                                                      15\n                                                                 Chapter 2: Building Blocks \n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d07"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 741,
  "content": "             An extensive and continually updated list of published instructions \n             for elephants (and many other subjects) may be found at an online \n             origami model database, currently at: www.origamidatabase.com.\n\n             2. Building Blocks\n\n             The now-standard system of origami lines and arrows is called the \n             Yoshizawa-Harbin-Randlett system. It was devised by Yoshizawa, \n             modiﬁed and popularized in the West by Robert Harbin and Samuel \n             L. Randlett, and is described in:\n\n             Akira Yoshizawa, Origami Dokuhon, Tokyo, Kamakura Shobo, 1957.\n\n             Robert Harbin, Secrets of Origami, op. cit.\n\n             Samuel L. Randlett, The Art of Origami, New York, E. P. Dutton, 1961.\n\n             3. Elephant Design\n             Dave Mitchell’s One-Fold Elephant, along with several other mini-\n             malist elephant designs, may be found in: \n\n             Paul Jackson, “An Elephantine Challenge: Part 3,” British Origami \n             #161, August, 1993, pp. 4–7.\n\n             4. Traditional Bases\n             The Sea Urchin is contained in:\n\n             John Montroll and Robert J. Lang, Origami Sea Life, New York, Dover \n             Publications, 1990, p. 147.\n\n             Eric Kenneway’s column, “The ABCs of Origami,” which originally \n             appeared in British Origami in 1979–1980, has been expanded and \n             reprinted as:\n\n             Eric Kenneway, Complete Origami, New York, St. Martin’s Press, \n             1987.\n\n             More on the system of triangle dissections and their relationship to \n             origami design can be found in:\n\n             Peter Engel, Folding the Universe, op. cit.\n\n             Robert J. Lang, “Albert Joins the Fold,” New Scientist, vol. 124, no. \n             1696/1697, December 23/30, pp. 38–57, 1989.\n\n             Robert J. Lang, “Origami: Complexity Increasing,” Engineering & \n             Science, vol. 52, no. 2, pp. 16–23, 1989.\n\n             Jun Maekawa, “Evolution of Origami Organisms,” Symmetry: Culture \n             and Science, vol. 5, no. 2, pp. 167–177, 1994.\n\n\n                                                                                                                 729\n                                                                                        References\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d08"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 85,
  "content": "./origami_dataset_dev/Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li/page085_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d09"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 184,
  "content": "                       30. Fold a layer down in                       31. Reverse-fold each of four edges down\n                       front. Repeat behind.                          to lie along the horizontal edges.\n\n\n                 32. Mountain-fold the corners to line up             33. Fold the left white point as far to the\n                 with the edges of the reverse folds from             right as possible and unfold. Repeat with\n                 the previous steps.                                  the left point and with both points behind.\n\n\n                      34. Fold the front and back                     35. Fold the front flap up so that the raw\n                      flaps back upward.                              corner is directly over the middle of the\n                                                                      model. Repeat behind.\n\n\n                      36. Pull out some loose paper.                       37. Mountain-fold the edge\n                      Repeat behind.                                       inside the near pocket.\n\n\n                       38. Fold the two points                                39. Reverse-fold two\n                       front and rear to the left.                            points up.\n\n     172\n                         Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d0a"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 190,
  "content": "                  37. Wrap one                        38. Sink the white                  39. Reverse-fold the\n                  colored layer from                  corners.                            hind legs out to the\n                  inside to outside.                                                      sides.\n\n\n                40. Narrow the tail by            41. Partially rabbit-ear the tail       42. Reverse-fold the\n                folding each side over and        and turn the model over.                hind legs.\n                over in thirds.\n\n\n              43. Reverse-fold the hind feet.     44. Crimp the head slightly and     45. Finished Lizard.\n              Squash-fold the front feet and      pull out the layers on the sides\n              mountain-fold the forelegs          of the head. Curve the tail.\n              away from you.\n\n     178\n                         Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d0b"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 609,
  "content": "             Figure 13.29. \n             Top: a contour map for a complex model with two bouncing axials highlighted. \n             Bottom: the folded model, Snack Time (one praying mantis eating another).\n\n                                                                                                                 597\n                                                                  Chapter 13: Uniaxial Box Pleating\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d0c"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 621,
  "content": "            Figure 13.43. \n            Crease pattern, base, and folded model of the Bull Moose. \n\n                You will ﬁnd folding instructions for the Cerambycid \n            Beetle in the references for this chapter; step-by-step fold-\n            ing instructions for the Bull Moose are at the end of the \n            chapter.\n                Uniaxial box pleating is conceptually a bit more compli-\n            cated than circle/river packing, due to the presence of multiple \n            elevations and the complications of bouncing axial creases. \n            It is extremely powerful, though, and best of all, requires no \n            sophisticated computation; one can design, construct, and fold \n            arbitrarily complicated ﬁgures using nothing more than some \n            colored pencils and graph paper.\n                This chapter has outlined the basic concepts of uni-\n            axial box pleating—which is itself just a single variety of the \n            broader family of polygon packing. While I’ve covered a lot of \n            ground up to this point, there are still many variations and \n            modiﬁcations of the basic theory that one can use to create a \n            better match between the base and the requirements of the \n            subject, and perhaps more interesting, one can use techniques \n            that are not “pure” uniaxial box pleating but are a hybrid of \n            other possibilities. Some of the most interesting—level shift-\n            ing, Pythagorean stretches, and hex pleating—and further \n            generalizations of polygon packing, will be addressed in the \n            next chapter.\n\n\n                                                                                                     609\n                                                           Chapter 13: Uniaxial Box Pleating\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d0d"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 147,
  "content": "            Rokoan displayed numerous examples of joined cranes folded \n            from paper cut in such a fashion) but we will attempt to fold \n            our design from a single square. Thus, we need to obtain all \n            three shapes as portions of a single square. The easiest way \n            to turn the trio of squares back into a single square is to ex-\n            tend the sides of the smaller squares until they join, forming \n            a larger square as shown in Figure 6.6.\n\n\n                               Beak                                         Beak\n\n\n                  Leg                        Leg              Leg                         Leg\n                                Wing                                        Wing\n\n\n                                Tail                                        Tail\n\n            Figure 6.6. \n            The three squares embedded within a larger square.\n\n                Now, we have embedded all three squares in a larger \n            square, which can be used—we hope—to fold a bird with four-\n            toed feet. Does it work? Let’s try it out.\n                The folding sequence shown in Figure 6.7 gives a Bird \n            Base with a small square at each of the corners. However, \n            this square is attached to the larger Bird Base along its full \n            diagonal. Is it possible to fold the small square into another \n            Bird Base? Yes, but with a slightly modiﬁed sequence to ac-\n            commodate the fact that the small square is joined to the larger \n            ﬂap, which limits how it can be manipulated.\n                The resulting Bird Base can be used to make conventional \n            bird feet, although it is desirable to narrow some of the ﬂaps \n            and redistribute their layers, as shown in the Songbird model \n            at the end of the chapter.\n                What we have done here is to add some more paper to \n            the square while keeping it square, by grafting on more paper, \n            in this case, a border running all the way around the outside \n            of the square. We call this a border graft. Grafting can be a \n\n                                                                                                     135\n                                                                       Chapter 6: Grafting\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d0e"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 153,
  "content": "            it all together, and the result is a charming little dragon that \n            stands on its own. I call the new model the Kasahara-Neale-\n            Lang Dragon—KNL Dragon, for short. You will ﬁnd its folding \n            sequence at the end of this chapter.\n                Figure 6.12 shows the crease pattern, base, and folded \n            model of the KNL Dragon. You should be able to pick out the \n            two Bird Bases as well as the boundary of the border graft.\n\n            6.2. Strip Grafting\n            Grafting does not always put the added paper around the \n            outside of the model; if that’s all that there were to grafting, \n            we would quickly exhaust the possibilities of the technique. \n            But we can add grafts in the interior of the paper as well, by \n            cutting patterns apart and reassembling them with our new \n            additions—a far more powerful and versatile technique.\n                If, for example, we wished to add feet without adding \n            excess paper at the head or tail, we could add the additional \n            paper in a strip running across the middle of the square. \n            Imagine, for example, cutting the Bird Base in half hori-\n            zontally and pulling the two ends apart. Then the two “foot” \n            squares could be joined by a strip that cuts across the middle \n            of the paper, and the result inserted into the gap, as shown \n            in Figure 6.13.\n\n\n            Figure 6.13. \n            Construction of a strip-grafted model. Two squares are joined by a \n            strip inserted along a cut across the square.\n\n                But a problem arises; when the creases are connected \n            across the strip, one of the four Bird Base points is no longer \n            freely accessible. Fortunately, the ﬁfth point in a Bird Base, \n            which comes from the center of the square, can be pressed \n            into service as the desired fourth point.\n                The result can be folded into many different types of birds, \n            but because the extra layers in the legs are evenly distributed, \n            I ﬁnd this structure particularly suitable for a long-legged \n\n                                                                                                     141\n                                                                       Chapter 6: Grafting\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d0f"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 635,
  "content": "             72. Mountain-fold the edge of the        73. Detail of head. Crimp the   74. Round the nose with\n             shoulder. Reverse-fold the corner        nose downward, leaving its      reverse and mountain folds.\n             under the chin.                          upper edge rounded.             Crimp an edge to form an eye.\n                                                                                      Crumple the dangling flaps\n                                                                                      slightly.\n\n\n              75. Narrow the stalk of the       76. Top view of head and            77. Reverse-fold the\n              antlers; fold three points toward antlers. Pleat the middle of        corners along the top edge\n              the right and the remaining       the antler and fan the pleats       of each antler. Pinch the\n              pleats to the left. The next view at the top. Repeat on the           group of three points at the\n              is from the top.                  right.                              bottom into a rabbit ear.\n\n\n             78. Spread the three            79. Like this. Open out        80. Finished Bull Moose.\n             points. Shape and round         the ears.\n             the antlers.\n\n     624\n                         Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d10"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 386,
  "content": "                                         and slide them around within the circle jig shown previously; \n                                         I usually just draw sketches. A bit of manipulation reveals an \n                                         elegantly symmetric arrangement of circles and rivers, shown \n                                         in Figure 10.37.\n                                             There is certainly some variation possible in the sizes of \n                                         the circles and width of the river; we could certainly adjust \n                                         the circles’ sizes (and thus, ﬂap lengths) up or down by a small \n                                         amount without limiting our ability to create a recognizable \n                                         orchid. So, once we draw in the axial creases (along lines where \n                                         the circles and rivers touch), we can choose the circle sizes to put \n                                         all axial creases at multiples of 15°—which will make it easier \n                                         to fold, since 15° is a quarter of the easily folded 60°. Another \n                                         beneﬁt of this choice of circle size will soon become apparent.\n                                             But ﬁrst, let’s take stock of what we have accomplished \n                                         with this packing. There are four identical quadrilater-\n                                         als that are circle-plus-crossing-river type. These can be \n                                         ﬁlled by either the sawhorse molecule (if we’re lucky) or \n                                         gusset molecule (if we’re not). On the sides, we have two \n                                         triangles of the circle-plus-river type; we can ﬁll these in \n                                         with rabbit-ear molecules. The rest of the paper is taken \n                                         up by four triangles at the four corners of the square; since \n                                         these triangles only contribute to two flaps each, they \n                                         are essentially unused, and we can fold them underneath \n                                         and ignore them (or pull them out later in the model if a new \n                                         use arises).\n                                             With regard to the quadrilaterals, the choice of a 15° ge-\n                                         ometry was lucky (or inspired) because it allows us to use the \n                                         much simpler sawhorse molecule in the crease pattern. Filling \n\n\n            Figure 10.38. \n            Generic form of the filled-in \n            crease pattern.\n\n     374\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d11"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 129,
  "content": "./origami_dataset_dev/Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li/page129_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d12"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 392,
  "content": "                                         Figure 10.47. \n                                         Three pentagonal circle packings and the associated generic form \n                                         crease patterns that collapse them. Note how the gussets vary among \n                                         the three patterns.\n\n\n                                         Figure 10.48. \n                                         Left: add a circle and expand it until it hits its neighbors. \n                                         Center: when the circle touches its neighbors, add axial creases be-\n                                         tween touching circles. \n                                         Right: ﬁll in the resulting triangles and quadrilaterals with rabbit-\n                                         ear and gusset molecules.\n\n                                         triangle and quadrilateral molecules—what we called composite \n                                         molecules. The basic idea is very simple. The paper that lies \n                                         between the circles is, in a sense, unused. We can make use of \n                                         it by adding a new circle of our own, as shown in Figure 10.48. \n                                         Think of the existing circles as rigid disks; we add a small \n                                         circle, then inﬂate it until it hits its neighbors. Once the circle \n                                         contacts three others, it creates three new axial creases, which \n                                         break down the higher-order polygon into several lower-order \n                                         polygons.\n                                             Because a new circle has three degrees of freedom—the \n                                         two coordinates of its center and its radius—you can always \n                                         expand a circle until it hits at least three of its neighbors. (In \n                                         Figure 10.48, because of the symmetry, we can actually get the \n                                         new circle to touch four neighboring circles). When two circles \n\n     380\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d13"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 379,
  "content": "                                                                                             Figure 10.31. \n                                                                                             The sawhorse molecule does not \n                                                                                             work for most circle/river quadri-\n                                                                                             laterals because the hinge creases \n                                                                                             miss the tangent points.\n\n\n                                                                    B\n                                                                              A\n\n\n                1. Begin with the four angle bisectors. 2. Make a copy of the two lower      3. Construct the two bisectors between\n                Draw lines from all six of the tangent perpendiculars and rotate both copies the indicated angles.\n                points perpendicular to the edges until together about point A until the left one\n                they meet at the bisector. Extend the lower hits point B.\n                perpendiculars farther than the others.\n\n\n                4. Add three more creases through the 5. The finished crease pattern.        6. Collapse on the crease pattern.\n                given crease intersections.\n\n\n                                                      7. The finished gusset molecule.\n                Figure 10.32. \n                Geometric construction for the gusset molecule for a circle/river quadrilateral. Note that the hinge creases \n                now hit the tangent points, which are brought together along the bottom edges of the folded form.\n\n                                                                                                                                  367\n                                                                                         Chapter 10: Molecules\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d14"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 345,
  "content": "                                                                        Figure 9.47. \n                                                                        Sequence for turning the base \n                                                                        into a star.\n\n\n                Let’s look at the perimeter for several values of N: \n                                                                        Table 9.2. \n              N            2     3     4      5     6     7     8       Theoretical perimeter versus \n                                                                        number of circles packed along \n              Perimeter    4    4.5   5.33  6.25   7.20  8.17  9.14     one side.\n\n                In fact, as N, the number of points along one side, becomes \n            large, the perimeter approaches N as its limiting value. Thus, \n            the perimeter can be made arbitrarily large. We can also use \n            this result to work backwards from the desired perimeter. For \n            example, to fold a square postage stamp one inch on a side \n            so that it has the same perimeter as—let’s take something \n            small—the circumference of the world (24,000 miles), we would \n            need to make N equal to about 1.5 billion; the resulting shape \n            would have about 2 billion billion points, and each point would \n            be about 17 microns long—about 1/5 the diameter of a human \n            hair. Clearly, we’d need that special zero-thickness paper that \n            exists in mathematicians’ imagination to fold such a thing! Not \n            to mention a lot of patience.\n                Interestingly, several origami artists had created models \n            on these principles that belied the conjecture of the Napkin \n            Folding Problem years before it had even arisen in math-\n            ematical circles. My own Sea Urchin, which we saw back \n            in Chapter 4 (Figure 4.8) utilizes such a square array of 25 \n            points, and the points, properly thinned and ﬂattened, give a \n            star whose perimeter approaches a limit of 2 × (25) × (1/8) = 6.25. \n\n\n                                                                                                     333\n                                                                  Chapter 9: Circle Packing\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d15"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 423,
  "content": "                                                                (11–1)\n                                |ui − uj| ≥ mlij\n\n            for a scale factor m. We call the set of all such equations the \n            path conditions for the given tree graph.\n                In this way, the scale factor becomes a quantitative mea-\n            sure of the efﬁciency of the crease pattern, and the search for \n            the most efﬁcient crease pattern can be expressed formally as \n            an optimization problem: Given a tree that deﬁnes a base, op-\n            timize the scale factor while varying the coordinates of the leaf \n            vertices, subject to the constraints that (a) the path conditions \n            are satisﬁed, and (b) all leaf vertices lie within a unit square.\n\n            11.4. Subtrees and Subbases\n            It can be shown that active paths cross each other only at leaf \n            vertices. Since active paths become axial creases, the pattern \n            of axial creases breaks up the square into axial polygons. In \n            some of the polygons, all of their sides are active paths (like \n            the inverted-kite-shaped quadrilateral in the center of Fig-\n            ure 11.8). If one of the sides of a polygon lies on the edge of a \n            square, it may or may not be an active path (in Figure 11.8, \n            each triangle has one side on the edge of the square that is not \n            an active path). Each axial polygon has the property that all \n            of its sides map to the plane of projection of the base when the \n            square is folded into a base. Consequently, to ﬁnd a crease pat-\n            tern that collapses the square into the base, it is necessary to \n            ﬁnd a crease pattern that maps the network of axial polygons \n            onto the plane of projection of the base.\n                That problem should sound familiar; this sounds like a job \n            for molecules. Recall that the tree is the projection of the base, \n            which is folded from the complete square. Each polygon on the \n            square corresponds to a portion of the overall base, and if you \n            collapse any polygon into a section of the base—which I call a \n            subbase—the projection of the subbase is itself a portion of the \n            projection of the complete base, i.e., a portion of the original \n            tree graph. The tree graph of a subbase is called a subtree. For \n            example, Figure 11.10 shows the polygons for our six-legged \n            base and the corresponding subtrees for each subbase. Note \n            that since all of the corners of an axial polygon must be leaf \n            vertices, the triangles at the bottom corners of the square are \n            not axial polygons and, in fact, do not contribute to the base in \n            a signiﬁcant way.\n                One requirement of axial polygons that we saw in previous \n            sections was that if two axial polygons share a common side and \n            that side is an axial path, any crease pattern that collapses the \n\n                                                                                                     411\n                                                                   Chapter 11: Tree Theory\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d16"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 437,
  "content": "                   h\n\n                                                                        Figure 11.29. \n                                                                        The reduced polygon in the \n                                                                        folded form corresponds to the \n                                                                        original polygon cut by a plane \n                                                                        a distance h above the original \n                                                                        plane of projection.\n\n\n            A2′,… as we did for the gusset quad construction. I will call the \n            inset polygon a reduced polygon of the original polygon.\n\n                Note that the points Ai′ lie on the bisectors emanating from \n\n            the points Ai for any h. Consider ﬁrst a reduced polygon that is \n            inset by an inﬁnitesimally small amount. In the folded base, the \n            sides of the reduced polygon all lie in a common plane, just as \n            the sides of the original axial polygon all lie in a common plane. \n            However, the plane of the sides of the reduced polygon is offset \n            vertically from the plane of the sides of the axial polygon by a \n            distance h. This is illustrated schematically in Figure 11.29.\n                As we increase h, we shrink the size of the reduced poly-\n            gon. Is there a limit to the shrinkage? Yes, there is, and this \n            limit is the key to the universal molecule. Recall that for any \n            polygon that satisﬁes the tree theorem, the path between any \n            two vertices satisﬁes a path length constraint\n\n\n                               |Ai – Aj| ≥ mlij                            (11–6)\n\n\n            where lij is the path length between nodes i and j measured \n            along the tree. There is an analogous condition for reduced \n            polygons; any two vertices of a reduced polygon must satisfy \n            the condition \n\n                                 ′    ′     ′\n                                   |A     i   –    A   j |   ≥   ml     ij                                  (11–7) \n                          \n\n            where l′ij is a reduced path length given by\n\n                             ′\n                            l ij = lij – h(cot i + cot j )    (11–8)\n                 \n\n            and αi is the angle between the bisector of corner i and the \n            adjacent side. Equation (11–7) is called the reduced path in-\n            equality for a reduced polygon of inset distance h. Any path \n\n                                                                                                     425\n                                                                   Chapter 11: Tree Theory\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d17"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 351,
  "content": "            Songbird 2\n\n\n           1. Begin with the colored side up. 2. Fold the top down to the bottom 3. Fold the top right corner down to\n           Fold and unfold from side to side. and make a small pinch extending lie on the crease you just made and\n                                          inward from the edge.          make a pinch along the top edge.\n\n\n                                                                                                     339\n                                                             FoldingChapter Instructions: 9: Circle Songbird Packing 2\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d18"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 436,
  "content": "                                         pattern of a stubbed quad to fold any such quad into an analog \n                                         of the Bird Base, as shown in Figure 11.27.\n                                             The properties of quadrilaterals with distorted Bird Base \n                                         crease patterns have been the subject of considerable investi-\n                                         gation on their own; Justin, Husimi, and Kawasaki have all \n                                         enumerated various special cases.\n\n                                         11.8. The Universal Molecule\n                                         Since every polygon network can be broken up into triangles \n                                         and quads by the addition of extra circles, the triangle and \n                                         quad molecules are by themselves sufﬁcient for ﬁlling in the \n                                         crease pattern for any tree. And if we subdivide quadrilaterals \n                                         with stubs, we can get everything down to triangles, so that the \n                                         rabbit-ear molecule is the only one needed. However, there are \n                                         many other possible molecules, including molecules that can \n                                         be used for higher-order polygons. It turns out that the gusset \n                                         quad is just a special case of a more general construction that \n                                         is applicable to any higher-order polygon. I call this construc-\n                                         tion the universal molecule. In fact, all of the known simple \n                                         molecules are special cases of the universal molecule. The rest \n                                         of this section describes the construction of this molecule for \n                                         an arbitrary polygon.\n                                             Consider a general polygon that satisﬁes the tree theorem, \n                                         i.e., any two vertices of the polygon are separated by a distance \n                                         greater than or equal to the separation between their corre-\n                                         sponding nodes on the tree. Since we are considering a single \n                                         axial polygon, we know that of the paths between nonadjacent \n                                         vertices, none are at their minimum length (otherwise it would \n                                         be an active path and the polygon would have been split).\n                                             Suppose we inset the boundary of the polygon by a dis-\n                                         tance h, as shown in Figure 11.28. If the original vertices of the \n\n                                         polygon were A1, A2,…, then we will label the inset vertices A1′, \n\n\n                                                                         polygon\n                                                                             reduced polygon\n\n                                                                              α\n                                                                               3  A\n                                                                               α   3\n                                                                          A′    3\n            Figure 11.28.                                                  3\n            A reduced polygon is inset by a \n                                                          ′             A′\n            distance h inside an axial poly-             A1              2\n            gon. The inset corners lie on the         α\n                                                       1        h          α\n                                                        α               α   2\n            angle bisectors emanating from                1               2\n            each corner.                            A1                      A2\n\n     424\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d19"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 350,
  "content": "             19. Fold the tip of the  20. Fold the        21. Turn the        22. Lift up    23. Fold one\n             rabbit ear down          top flap down       model over.         one point.     layer to the\n             toward the right; the    and flatten the                                        left.\n             model will not lie flat. model.\n\n\n              24. Squash-fold the    25. Petal-fold the legs.     26. Pull out some        27. Close up the legs\n              legs upward.                                        loose paper.             and reverse-fold them\n                                                                                           downward.\n\n\n             28. Crimp the feet. Pull  29. Pinch the head and     30. Crimp the beak         31. Finished Emu.\n             some loose paper out of   swing it down.             and tail.\n             the head.\n\n     338\n                         Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d1a"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 344,
  "content": "            Figure 9.45. \n            An N × N circle packing.\n\n                                             Using our circle-packing and tiling techniques—ﬁlling in \n                                         the axial creases, adding smaller circles to break up quadri-\n                                         laterals into triangles—we can add creases to this pattern to \n                                         collapse it into a base with N 2 total ﬂaps.\n\n\n            Figure 9.46. \n            Crease pattern for the N × N \n            circle packing. Only the upper \n            left portion is ﬁlled in.\n\n                                             The result after folding this crease pattern will be a base \n                                         with N2 points, each of length 1/(2(N–1)). Using standard ori-\n                                         gami techniques of sinking, the points can be made arbitrarily \n                                         thin. Once the points are thinned, they can be reverse-folded out \n                                         in all directions, making a star with N 2 points. This sequence \n                                         is shown in Figure 9.47.\n                                             Now, although the points overlap each other somewhat \n                                         at their base, they can be made arbitrarily thin by making the \n                                         sink folds arbitrarily close together. So the total perimeter of \n                                         the star shape approaches the value\n                                               2 × (number of points) × (length of each point),    (9–5)\n                                         where the extra factor of 2 comes from the fact that each point \n                                         contributes two sides to the perimeter. Thus, the total perim-\n                                         eter is\n                                                                   N 2\n                                                                       .                      (9–6)\n                                                                  N −1\n\n\n     332\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d1b"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 422,
  "content": "                                         leaf and branch, by a letter on the tree graph, and have added \n                                         their corresponding vertices to the active paths in the crease \n                                         pattern on the square. Observe that in general, a branch node \n                                         may show up on more than one active path.\n                                             It’s also worth pointing out that we don’t show any leaf verti-\n                                         ces along the edges of the square because the paths between node \n                                         pairs G and E, E and F, and F and H are not active paths.\n\n                                         11.3. Scale\n                                         There is one more factor to consider: the relationship between the \n                                         size of the tree graph and the crease pattern on the square. In \n                                         the pattern shown in Figure 11.8, we have given each stick unit \n                                         length; but for this to ﬁt within a square, the square must be larger \n                                         than a unit square. In order to ﬁt the crease pattern into a unit \n                                         square, we introduce a quantity we call the scale, which is simply \n                                         the distance on the square that corresponds to one unit in the tree \n                                         graph. This is an unknown, as illustrated in Figure 11.9.\n\n                                                                     ?\n\n\n                                         Figure 11.9. \n                                         What is the relationship between the size of the square and the scale \n                                         of the tree graph?\n\n                                             We can ﬁt the crease pattern in Figure 11.8 into a unit \n                                         square if we choose a scale factor m = 0.267; that is, one unit \n                                         of length on the tree is equivalent to a distance of 0.267 in \n                                         the crease pattern. Then we must modify the tree theorem to \n                                         incorporate a scale factor. Our path condition becomes: For \n\n                                         every path between leaf vertices ui and uj, the leaf vertices \n                                         must satisfy the inequality\n\n     410\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d1c"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 378,
  "content": "                                         Figure 10.29. \n                                         Crease pattern and folded form for a sawhorse molecule.\n\n\n                                      1. Fold one edge down to lie        2. Reverse-fold the top corners\n                                      along the opposite edge.            so that all edges lie along the\n                                                                          bottom edge.\n\n\n                                                         3. Finished sawhorse\n                                                         molecule.\n                                         Figure 10.30. \n                                         Folding sequence for the sawhorse molecule.\n\n                                             Recall that even if a quadrilateral satisﬁed the Wa  -\n                                         terbomb condition (sums of opposite sides were equal), the \n                                         Waterbomb molecule wasn’t necessarily the molecule that \n                                         aligns the tangent points. A similar situation occurs with \n                                         the sawhorse molecule; even though you can fold any quad-\n                                         rilateral into a sawhorse molecule, the particular sawhorse \n                                         molecule won’t necessarily make the tangent points line up. \n                                         Figure 10.31 shows the sawhorse creases superimposed on a \n                                         valid circle/river pattern, and it is clear that the hinge creases \n                                         do not hit the edges at the tangent points of the circles and \n                                         rivers.\n\n     366\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d1d"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 393,
  "content": "            touch, we add new axial creases. In the example shown, this \n            has the result of dividing the pentagon into three triangles \n            and a quadrilateral, all of which we know how to ﬁll with  \n            molecules.\n                This technique always works and can be repeated over and \n            over. Suppose we have a polygon with N sides. A circle added \n            in the middle can always be expanded until it touches at least \n            three others. If the three touched circles are consecutive, you \n            will create two triangles and another N-gon, which is no help. \n            But there is always more than one way to add another circle, \n            and if the three touching circles are not consecutive, then the \n            largest polygon remaining will have at most N – 1 sides, thereby \n            simplifying the problem. Repeatedly applying this process to \n            every polygon of order ﬁve or larger will result in a pattern of \n            axial creases consisting entirely of triangles and quadrilaterals, \n            which can be ﬁlled in with rabbit-ear, arrowhead, gusset, and \n            (where appropriate) Waterbomb molecules.\n                An interesting unsolved problem in circle-packed origami \n            design is to prove that for any N-gon of touching circles with \n            N > 4, it is always possible to add a circle touching at least \n            three others so that the largest resulting polygon has, at \n            most, N – 1 sides. It is possible to ﬁnd arrangements where \n            the addition of a circle leaves an N-gon, but in all the cases \n            I’ve examined, there has been another circle arrangement \n            that takes the largest polygon down a notch.\n\n\n            Figure 10.49. \n            Left: circle packing for a ﬁfteen-ﬂap base and axial creases. \n            Right: adding more circles breaks the pentagons into quads and \n            triangles.\n\n                                                                                                     381\n                                                                    Chapter 10: Molecules\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d1e"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 387,
  "content": "            in all six molecules with the generic form of their creases gives \n            the pattern shown in Figure 10.38.\n                Generic form crease patterns are not ﬂat-foldable, but they \n            contain all the creases necessary to make a ﬂat-foldable base. \n            At this point, the easiest way to ﬁnish the crease assignment is \n            to actually cut out, precrease, and fold the structural pattern, \n            making decisions about ﬂap orientation as you fold. One pos-\n            sible arrangement of ﬂaps is shown in Figure 10.39 with the \n            corresponding crease pattern with proper crease assignment \n            and the completed base.\n\n\n            Figure 10.39. \n            Fully assigned crease pattern and folded base.\n\n                You will ﬁnd that this base contains all of the ﬂaps we \n            set out to fold. Of course, they are quite wide (the two petal \n            protrusions are easy to overlook) but conventional narrowing \n            techniques (e.g., multiple sinks) can turn them all into distinct \n            ﬂaps. Once the ﬂaps are in place, the base can be turned into \n            the desired orchid subject in many ways; my own version is \n            shown in Figure 10.40. Folding instructions are given at the \n            end of the chapter.\n                Let’s do another. This time, we’ll do another insect. A \n            fairly simple ant has six legs, head, thorax, and abdomen, with \n            antennae attached to the head. A simple stick ﬁgure of an ant \n            with all these features is shown in Figure 10.41.\n                From the stick ﬁgure, we can see that we’ll need six circles \n            for legs, another circle for the abdomen, a river for the connection \n\n                                                                                                     375\n                                                                    Chapter 10: Molecules\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d1f"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 152,
  "content": "            Figure 6.11. \n            Position of the two squares \n            within a larger square for a one-\n            piece dragon.\n\n                                         larger wings than the original Neale Dragon from which it is \n                                         derived. In this way, efﬁciency is preserved, and the model \n                                         beneﬁts from a bit of serendipity. As with the Songbird, there \n                                         is some further work to ﬁnd a workable folding sequence. Put \n\n\n                                         Figure 6.12. \n                                         Crease pattern, base, and folded model of the KNL Dragon.\n\n     140\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d20"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 634,
  "content": "                                                                               !\n\n\n                  64. Reverse-fold the tail back                 65. Crimp the body with two parallel\n                  upward. Pull out some loose paper              creases. Be careful that it doesn’t\n                  at the shoulders.                              split along the upper edge.\n\n\n                                        66. Mountain-fold the corners at the  67. Mountain-fold the belly inside.\n                                        shoulder. Reverse-fold the corner\n                                        of the crimp. Repeat behind.\n\n\n                68. Squash-fold the tail. Shape                      69. Double-rabbit-ear-\n                the chest with mountain folds.                       fold the legs.\n\n\n                         70. Reverse-fold the four legs at slightly         71. Crimp the hooves. Reverse-fold\n                         different angles for a walking pose.               the flap inside the nose downward.\n\n                                                                                                                 623\n                                                                  ChapterFolding 13: Instructions: Uniaxial Box Bull Pleating Moose\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d21"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 620,
  "content": "                                         other types of subject that incorporate branching patterns into \n                                         their form. Recall the Roosevelt Elk from Chapter 11, which had \n                                         elaborately branched antlers but a host of complicated reference \n                                         points to ﬁnd. A moose would seem to offer a similar challenge. \n                                         Figure 13.42 shows a stick ﬁgure and two circle-packed crease \n                                         patterns, computed from tree theory. The pattern on the left \n                                         is the simplest ﬁgure that ﬁts into the square; the pattern on \n                                         the right has received some tweaking to try to simplify the \n                                         folding pattern. Neither of them, however, appears particularly \n                                         desirable to fold.\n\n\n                                         Figure 13.42. \n                                         Top: stick ﬁgure for a moose. \n                                         Bottom left: a minimally optimized crease pattern. \n                                         Bottom right: a modiﬁed crease pattern adjusted to simplify the \n                                         pattern.\n\n                                             But with uniaxial box pleating, we can create a simple \n                                         crease pattern that goes all the way to the base and folded \n                                         model in a relatively straightforward way, illustrated in Fig-\n                                         ure 13.43.\n\n     608\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d22"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 146,
  "content": "                                Beak\n\n                                                               Beak\n                                                           Leg     Leg\n\n\n                                Wing                                                          Beak\n            Leg                                     Leg                     Wing\n\n                                                               Wing                        Leg\n                                                                          Tail            Leg\n\n                                                               Tail\n\n                                Tail\n\n                                         Figure 6.4. \n                                         Crease pattern, base, and folded model for the Crow.\n\n                                             The two side corners become the legs. We would thus add \n                                         the small squares that form Bird Bases to the corners of the \n                                         larger square as in Figure 6.5.\n                                             Now, if we had three squares actually joined at their \n                                         corners, we could certainly fold a four-footed bird from this \n                                         unusual shape. The practice of folding from corner-joined \n                                         squares is not unknown in origami (a 1797 publication by \n\n\n                                                                       Beak\n\n                          Beak\n\n\n                                                      Leg              Wing              Leg\n                                          x\n\n                                                y\n             y\n                   Leg           Leg\n                                                             x\n                          Tail\n\n                                                                       Tail\n                                         Figure 6.5. \n                                         Two squares attached to another square at their corners.\n\n     134\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d23"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 608,
  "content": "                                             For reasonably well-behaved crease patterns, all of the \n                                         contours eventually run off the paper or terminate, so that we \n                                         end up with a complete map of all of the axial contour lines. \n                                         That map for our test problem is illustrated in Figure 13.28, \n                                         here highlighted.\n\n\n            Figure 13.28. \n            Complete pattern of axial con-\n            tour lines for the sample prob-\n            lem.\n\n                                             The terminology that we use is to say that the axial contour \n                                         line “bounces” off of the ridge creases (in analogy with a ball \n                                         bouncing off of a wall, although a bouncing ball returns on the \n                                         same side of the wall while a bouncing contour continues on the \n                                         opposite side of the crease). Since the network of ridge creases \n                                         can be rather complex, a single axial contour can bounce around \n                                         for quite a long time, as shown in the more complicated pat-\n                                         tern of Figure 13.29 (which is the contour map for a real model, \n                                         Snack Time, which is one praying mantis eating another).\n                                             Axial contours can propagate and bounce for quite a long \n                                         time indeed. Every single point along that network must, in \n                                         the folded form, have zero elevation, and so must be located \n                                         somewhere along the axis of the base.\n                                             One of the surprising results of Erik Demaine’s work on \n                                         the one-cut problem was that for certain patterns of cut lines, \n                                         some of the folds (which undergo a similar bouncing construc-\n                                         tion, from which we have taken the “bouncing” terminology) \n                                         can bounce literally forever—they never stop bouncing, creating \n                                         networks of parallel folds that get ever closer together without \n                                         ever coming to join. We will see in a bit how this can happen, \n                                         but however it does, it would obviously be highly undesirable \n                                         in an origami base! The problem of inﬁnite bouncing is a seri-\n                                         ous matter, but it has a simple solution, in the origami world, \n\n     596\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d24"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 191,
  "content": "             Tree Frog\n\n\n             1. Begin with a square, white       2. Fold and unfold vertically       3. Fold the top left corner to the\n             side up. Fold and unfold along      and horizontally.                   center; make a pinch that\n             the diagonals. Turn the paper                                           crosses the diagonal crease and\n             over.                                                                   unfold.\n\n\n                                                                                                                 179\n                                                                      Folding Instructions:Chapter 6: Tree Grafting Frog\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d25"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 185,
  "content": "                        40. Reverse-fold the head                               41. Steps 42–46 will\n                        and tail twice each.                                    focus on the head.\n\n\n              42. Crimp the top layer.             43. Swivel the top flap               44. Outside-reverse-fold\n                                                   upward slightly.                      the bottom jaw. Outside-\n                                                                                         reverse-fold the nose.\n\n\n               45. Outside-reverse-fold     46. Finished head.                 47. Fold four rabbit ears\n               the bottom jaw in and                                           to make legs.\n               out to make a tongue.\n\n\n                           48. Pleat the wings.                               49. Finished KNL Dragon.\n\n                                                                                                                 173\n                                                                   Folding Instructions:Chapter KNL 6: Grafting Dragon\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d26"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 471,
  "content": "./origami_dataset_dev/Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li/page471_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d27"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 26,
  "content": "                                         world over to fold from them; a Japanese or Russian folder can \n                                         fold from English diagrams and vice-versa). Nevertheless, many \n                                         people ﬁnd folding instructions more readily comprehensible \n                                         with a verbal instruction attached, and so in the instructions in \n                                         this book, you will ﬁnd both words and pictures.\n                                             Origami verbal instructions are given as if the paper were \n                                         ﬂat on the page before you. Thus, words that say “fold the ﬂap \n                                         upward” mean that if you orient the working model the same \n                                         way as the diagram on the page, you will fold the ﬂap toward \n                                         the top of the page. “Up,” “down,” and “to the side” all refer to \n                                         directions with respect to the printed page. While directions \n                                         are always given as if the paper were ﬂat on the page, you may \n                                         ﬁnd it easier to pick the model up, fold in midair, or even turn \n                                         it over to make the fold (mountain folds are commonly made \n                                         by turning the paper over and forming a valley fold). If you do \n                                         this, be sure that you always return it to the orientation shown \n                                         in the next diagram.\n                                             As the folded model begins to accumulate multiple layers \n                                         of paper, it becomes necessary to distinguish among the layers. \n                                         By convention, the term “near” refers to the layers closest to \n                                         you (i.e., those on top) and “far” layers are those on the bottom \n                                         (thus, reserving the words “top” and “bottom” for directions \n                                         with respect to the page).\n                                             Origami paper typically has a white side and a colored \n                                         side. The two colors are featured in some models—there are \n                                         origami skunks, pandas, and even zebras and chessboards \n                                         whose coloration derives from skillful usage of the two sides of \n                                         the paper. Even if only one side is visible at the end, it is help-\n                                         ful in keeping track of what’s going on to show the two sides as \n                                         distinct colors, and that is what I have done here.\n\n\n                     Colored side                            Top\n              White side\n                                                                                         Tip\n                                      Folded      Near                  Far\n                                      edge        layer                 layer\n\n              Horizontal                Raw                                                   Spine\n                 crease                 edge         Left              Right\n\n              Vertical\n               crease                                                         Open\n                                     Corner                                    side\n\n                                                            Bottom\n\n                                         Figure 2.3. \n                                         Verbal terms that apply to origami diagrams.\n\n      14\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d28"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 740,
  "content": "                                             Kunihiko Kasahara, Origami Omnibus, Tokyo, Japan Publications, \n                                             1988, p. 162 (Kasahara Elephant).\n\n                                             Toyoaki Kawai, Origami, Tokyo, Hoikusha Publishing Co., 1970, \n                                             p. 10 (Kawai Elephant).\n\n                                             Mari Kanegae, ed., A Arte Dos Mestres De Origami, Rio de Janeiro, \n                                             Aliança Cultural Brasil-Japão, 1997, p. 119 (Kobayashi Elephant).\n\n                                             Robert J. Lang, The Complete Book of Origami, New York, Dover \n                                             Publications, 1988, p. 68 (Lang Elephant).\n\n                                             John Montroll, Origami for the Enthusiast, New York, Dover Publica-\n                                             tions, 1979, p. 67 (Montroll 1 Elephant).\n\n                                             John Montroll, Animal Origami for the Enthusiast, New York, \n                                             Dover Publications, 1985, p. 70 (Montroll 2 Elephant).\n\n                                             John Montroll, Origami Sculptures, New York, Dover Publications, \n                                             1990, p. 130 (Montroll 3 Elephant).\n\n                                             John Montroll, African Animals in Origami, New York, Dover Pub-\n                                             lications, 1991, p. 79 (Montroll 4 Elephant).\n\n                                             John Montroll, Bringing Origami to Life, New York, Dover Publica-\n                                             tions, 1999, p. 90 (Montroll 5 Elephant).\n\n                                             John Montroll, Teach Yourself Origami, New York, Dover Publica-\n                                             tions, 1998, p. 109 (Montroll 6 Elephant).\n\n                                             John Montroll, Origami Inside Out, New York, Dover Publications, \n                                             1993, p. 75 (Montroll 7 Elephant).\n\n                                             Robert Harbin, Secrets of Origami, London, Octopus Books, 1971, \n                                             p. 224 (Neale Elephant).\n\n                                             Thomas Hull and Robert Neale, Origami Plain and Simple, New \n                                             York, St. Martin’s Press, 1994, p. 72 (Neale Elephant Major) and \n                                             p. 89 (Neale Elephant Minor).\n\n                                             Robert Harbin, Origami 3, London, Coronet Books, 1972, p. 121 \n                                             (Noble Elephant).\n\n                                             Samuel L. Randlett, Best of Origami, New York, E. P. Dutton, 1963, \n                                             p. 134 (Rhoads Elephant).\n\n                                             Hector Rojas, Origami Animals, New York, Sterling Publishing Co., \n                                             1993, p. 37 (Rojas Elephant).\n\n                                             Robert Harbin, Origami: the Art of Paperfolding, New York, Funk & \n                                             Wagnalls, 1969, p. 182 (Ward & Hatchett Elephant).\n\n                                             Robert J. Lang and Stephen Weiss, Origami Zoo, New York, St. \n                                             Martin’s Press, 1990, p. 95 (Weiss Mammoth).\n\n\n     728\n                         Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d29"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 754,
  "content": "                                                  12 Gobancho\n                                                  Chiyoda-ku, Tokyo\n                                                  102-0076 JAPAN\n                                                  http: //www.origami-noa.com/\n\n                                             There are many other national origami societies and other origami-\n                                             related resources on the Internet. I will not give links here (Internet \n                                             links tend to have a short half-life), but any good search engine will \n                                             turn up numerous sites for origami supplies, pictures, commentary, \n                                             and diagrams.\n\n\n     742\n                         Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d2a"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 32,
  "content": "            Figure 2.15. \n            The unfold arrow.\n\n\n            Figure 2.16. \n            The unfold arrow used to show \n            pulling paper out from inside \n            the model.\n\n                                             Particularly in the early stages of folding a model, one \n                                         will make a fold and then immediately unfold it, for the pur-\n                                         pose of establishing a crease that will be used in some future \n                                         (usually more complicated) step. To keep the diagrams fairly \n                                         compact, the fold-and-unfold action is commonly expressed \n                                         in a single ﬁgure, and is indicated by a single double-headed \n                                         arrow that combines the fold arrow (valley fold) and unfold \n                                         arrow in a single arrow.\n\n\n            Figure 2.17. \n            Fold-and-unfold is indicated \n            by a double-headed arrow that \n            combines the “valley fold” and \n            “unfold” arrowheads.\n\n                                             Most of the time, the fold in a fold-and-unfold step will be \n                                         a valley fold, but on occasion, the desired crease is a mountain \n                                         fold. Rather than diagramming this in three steps (turn the \n                                         paper over, valley-fold-and-unfold, turn the paper back over), I \n                                         will use the mountain fold arrow in combination with the unfold \n                                         arrow, as shown in Figure 2.18. It should be understood that \n                                         what is intended is to fold the moving ﬂap behind, make the \n                                         crease, and then unfold.\n                                             In the study of origami design, the crease pattern of the \n                                         ﬁnished ﬁgure or a subset of same provides a great deal of \n                                         information about the structure of the model—often more in-\n\n      20\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d2b"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 768,
  "content": "                KNL Dragon  708                        Waterbomb  355                         active  408, 585\n                 crease pattern, base, and folded      with rivers  364                       between leaf vertices  408\n                      model  141                      Mollard, Michael  329                   cross  585\n                Koi                                   Momotani, Yoshihide  204                of the bookworm  405\n                 crease pattern, base, and folded     Montoya, Ligia  713                   path conditions  411, 412, 413, \n                      model  205                      Montroll, John  48, 706                  748\n                kozo  15                               bag of tricks  4                     path equalities  420, 422\n                                                       Dog Base  244                        path inequalities  420, 426\n                L                                      Five-Sided Square  300               Payan, Charles  329\n                                                      Mooser, Emmanuel  459                 Pegasus\n                layer management  632                 Mooser’s Train  459                     crease pattern, base, and folded \n                leaf edges  402, 747                   building block for  479                    model  260\n                leaf ﬂap  575                         mountain fold  747                    perfect offset Pythagorean stretch  \n                leaf nodes  402, 404, 406, 747         deﬁnition of  11                           646\n                leaf vertices  404, 406, 747          Mouse                                 perfect Pythagorean stretch  642\n                length of a path  408                  crease pattern, base, and folded     Periodical Cicada\n                Lepidoptera  700                            model  711                        crease pattern, base, and folded \n                level shifter  629                    multiaxial base  705                        model  277\n                 hex-pleated  664                                                           petal fold  28, 748\n                line types in diagrams  15            N                                       an edge  29\n                Lizard                                                                        as a combination of swivel folds  \n                 crease pattern, base, and folded     Napkin Folding Problem  329                 28\n                      model  147                      Neale Dragon  139                     Pill Bug  677\n                Lizard base  242, 263                 nodes  402, 747                         crease pattern, base, and folded \n                lokta  15                              branch  402,  744                          model  278\n                Longhorn Beetle                        leaf  402, 747                       plane of projection  402, 408, 748\n                 contour map and folded model         nonessential paper  148               plan view  313, 433, 662, 705, 748\n                      641                             NP-COMPLETENESS  21, 579              pleat fold  31, 748\n                                                                                            pleat grafting  203, 748\n                M                                     O                                     pleats\n                                                                                              coalescence of  156\n                Maekawa, Jun  48,  352,  357, 365,    offset                                  in strip grafts  153\n                   371, 430                            Bird Base with preserved corners     point-splitting  7, 93, 130, 142, \n                mapping from square to tree  404            69                                 275, 748\n                matching rules  7                     offset base  68, 748                    four from a corner ﬂap  131\n                McLain, Raymond K.  461               offset Pythagorean stretch  646       polygon packing  573\n                meander  651                          one-cut problem  352, 588, 596        polygons\n                Meguro, Toshiyuki  48,  334, 352,     one-straight-cut  584                   axial  351\n                   365, 651                           open sink fold  34, 748                 hinge  349, 571\n                Melissen, Hans  329                   Oppenheimer, Lillian  713               overlapping  636\n                middle ﬂap  105, 155, 275,  291,      optimization  412                     Praying Mantis\n                   313, 711, 747                      Orchid                                  crease pattern, base, and folded \n                 relative efﬁciency  321               crease pattern, base, and folded           model  275\n                 splitting of  105                          model  375                      precreasing  748\n                Milano, R.  329                       origami  1, 748                         in petal folds  29\n                MIT  584                               age of  3                              value of  12\n                Mitchell, Dave  41                    Origami Dokuhon I  95                 Preliminary Fold  56, 748\n                mixed sink fold  38, 747              origami sekkei  5, 9, 48, 748           appearance in ﬁsh scale  208\n                molecules  8, 352, 412, 581, 747      outside reverse fold  23, 748           similarity to Five-Sided Square  \n                 arrowhead  358                       overlapping polygons  636                   301\n                 composite  360                                                             pseudohinge crease  416,  581\n                 gusset  361, 638                     P                                     Pteranodon\n                 quadrilateral  354                                                           crease pattern, base, and folded \n                 rabbit-ear  354, 749                 Palmer, Chris K.  205, 714                  model  102\n                 sawhorse  365                        Pangolin, Eric Joisel’s  204          Pythagorean stretch  640\n                 simple  360                          paper coloration  14                    extended  647\n                 triangle  352                        parity  34, 748                         offset  646\n                 universal  424                       path  748                               perfect  642\n                                                                                              perfect offset  646\n\n       756\n                              Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d2c"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 542,
  "content": "             Black Forest Cuckoo Clock\n                                                                              160\n                                                                                 4\n                                                                              156              pendulum\n                                                                                 4\n                                                                              152\n\n                                                                                 8\n\n                                                                              144\n                                                                                 3             pine cones\n                                                                              141\n                                                                                                          42 units\n                                                                                 8\n\n                                                                              133\n                                                                                 2\n                                                                              131               transition\n\n                                                                                 8             reduction\n\n                                                                              123              leaf pair 1\n\n                                                                                                   Tape colored\n                                                                                11                  side here\n\n                                                                              112              leaf pair 2\n\n                                                                                 9\n\n                                                                              103              leaf pair 3\n\n                                                                                 9                        40 units\n\n                                                                               94              leaf pair 4\n\n                                                                                11\n\n                                                                               83              leaf pair 5\n\n                                                                                 9                 Tape colored\n                                                                                                    side here\n                                                                               74              leaf pair 6\n\n                                                                                 9\n\n                                                                               65              leaf pair 7\n\n             1. Begin with a strip of paper in the proportions 10:1, at least 16 by 160 9\n\n             cm (or 8 by 80 inches), colored side up.                          56              leaf pair 8 45 units\n                                                                                 4\n                                                                               52\n                                                                                 3             peak of roof\n             For larger models, it is difficult to find paper of the necessary length. 49\n                                                                                 2\n             However, you can cut four strips that are, respectively, 16 by 33, 16 by 47        ears\n             45, 16 by 40, and 16 by 42 and tape them together where noted by the 6            antlers and nose\n             italicized text. If you use these lengths to make your starting rectangle, 41\n                                                                                               connection to\n             then the tape seams will be hidden inside the model.                8             top of deer head\n                                                                                                   Tape colored\n                                                                               33\n                                                                                 3                  side here\n             Steps 2–10 of the model are devoted to locating the major horizontal 30           bird and door\n                                                                                 4\n             creases. There are two ways of getting these starting proportions. If you          twist\n             want to locate all the creases only by folding, begin with step 2. However, 26\n             you will create many unnecessary creases during the folding process that 6        transition to bird\n                                                                               20\n             will show up on the final model and that may be confusing later in the\n                                                                                                          33 units\n             folding sequence. The easiest and cleanest method of locating the major 12        clock face\n             horizontal creases is to measure and mark the locations of the creases;\n             if you choose to do this, then you may skip to step 11.           8\n\n                                                                                 8             clock hands\n             The notes along the right side indicate from which part of the paper each\n                                                                               0\n             part of the model is derived.                                            16 units\n\n     530\n                         Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d2d"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 224,
  "content": "            Figure 7.23. \n            Another tile unit for ﬁsh scales \n            that is more efﬁcient. Top: the \n            tile and its crease pattern. \n            Bottom: a 2 × 2 array and its \n            crease pattern.\n\n                                         experimentation reveals a somewhat more efﬁcient tile, shown \n                                         in Figure 7.23 in both folded form and crease pattern.\n                                             In this second tile, the crease pattern is 41% larger than the \n                                         folded form (2.0 times in area), so is more efﬁcient in its use of \n                                         paper than our ﬁrst scale pattern, as shown in Figure 7.24. \n\n\n                                                                    1+1/√2\n                                                     1+√2\n                                                                        1/√2\n                                                   1   2+√2\n                                                                     2+2√2\n                                                                            √\n            Figure 7.24.                                                   1+ 2\n                                                            2 + 2√2\n            Dimensions of the new scale                          ≈1.41\n                                                             + √\n            tile.                                           2   2\n\n                                             In fact, the maximum number of layers in any region of this \n                                         tile (seven) is roughly half of the maximum for the sunken-tip \n                                         pattern, as shown in Figure 7.25. Its efﬁciency comes from the \n                                         fact that, relatively speaking, the pleats are half the width of \n                                         the pleats in the previous pattern.\n                                             An interesting side note: Did you notice that all regions \n                                         have an odd number of layers? It’s not hard to show that this \n\n     212\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d2e"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 230,
  "content": "            1. Crease the two pleats 2. Precrease the two    3. Pleat the paper in one 4. Pleat the paper\n            in each direction.       concentric squares, using direction.             in the other\n                                     the spacing of the paired                        direction.\n                                     pleats as a guide.\n\n\n            5. Stretch the pleats 6. Stretch the four edges 7. Form a Windmill Base 8. The finished scale.\n            apart to free the corner. apart to completely flatten from the center and press\n                                the top on the outer    flat.\n                                concentric square.\n            Figure 7.32. \n            Folding sequence for a single scale.\n\n\n                                             Putting this all together, Figure 7.33 shows a set of dimen-\n                                         sions for the initial pleats that gives 1-cm scales and a ﬁnished \n                                         length of about 30 cm from a 51-cm square.\n                                             So, the folding sequence is: (a) insert the pleats into the \n                                         crease pattern; (b) form all of the pleats (and the scales from \n                                         the small structure in between); (c) continue with the regular \n                                         folding sequence of the Koi. If you work your way through \n                                         folding the entire model, you can congratulate yourself both on \n                                         your understanding of the design process and, because there \n                                         are some 400 scale crossings to be shaped, your fortitude.\n\n\n     218\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d2f"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 556,
  "content": "                  74. Bring the layers on the left to the front.       75. Fold the left point down. Note that this\n                                                                       is slightly different from step 68.\n\n\n                    76. Narrow the point with valley folds.           77. Fold the lower half upward and tuck its\n                                                                      left side under the white paper.\n\n\n                      78. Fold the point over to the left.               79. Bring the other point to the front.\n\n\n     544\n                         Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d30"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 218,
  "content": "                                             So now, let’s look at what type of pattern we’d put on this \n                                         design. Fish have a distinctive pattern of overlapping scales \n                                         that is very close to a pattern of overlapping half-circles, similar \n                                         to the pattern shown in Figure 7.12.\n\n\n                                         Figure 7.12. \n                                         Left: a single ﬁsh scale, abstractly represented by a half-circle. \n                                         Middle: an array of half-circles approximating an array of ﬁsh scales.\n                                         Right: an array of crossed pleats at 45° approximating the lines of \n                                         the array of scales.\n\n                                             If we overlay lines on top of the half-circles as shown in \n                                         Figure 7.12, we can elucidate the underlying grid of the pattern; \n                                         it is the same as the grid of crossed pleats rotated by 45°, which \n                                         suggests that a grid of crossed pleats is a good place to start.\n                                             However, crossed pleats alone gives scales that are dia-\n                                         monds, not semicircles. A better approximation of circles can \n                                         be had by blunting the tips of the squares, for example, with \n                                         sink folds. But if you fold up an array of crossed pleats to work \n                                         on, you will ﬁnd that the tips of all squares are entangled with \n                                         other layers of the pleats and need to be freed before they can \n                                         be sunk. So a bit more folding is going to be necessary. In order \n                                         to be efﬁcient about it, let’s make a single crossed pleat to work \n                                         on, as shown in Figure 7.13.\n                                             The tip of the scale is marked A in the folding sequence \n                                         in Figure 7.13. If we wish to blunt the tip, we must ﬁrst free \n                                         it from the entangled layers, which we can do by stretching \n                                         the two pleats apart on either side of the tip as shown in \n                                         Figure 7.14.\n\n     206\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d31"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 696,
  "content": "./origami_dataset_dev/Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li/page696_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d32"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 581,
  "content": "                This design now consists of four axial polygons: a triangle \n            at the bottom, a quadrilateral at the top (it looks like a triangle, \n            but it’s actually a quadrilateral with one straight vertex), and \n            the two heptagons that make up most of the model.\n                (Heptagons? Surely I mean hexagons, right? No, these are \n            heptagons from the standpoint of ﬁlling with molecules; each \n            has one vertex along the midline of the base that is straight, \n            i.e., with a vertex angle of 180°. Each polygon takes in seven \n            circles around its outside, ergo, it is a heptagon.)\n                Once we have a rigid packing, we can ﬁll in the creas-\n            es using our favorite system of molecules. As we saw in \n            Chapter 10, it is possible to break up large polygons into \n            triangles and quadrilaterals by adding additional circles that \n            create extra ﬂaps in the open spaces, but for this example I \n            am going to use the universal molecule (using TreeMaker to \n            compute the positions of the vertices and creases). Figure 13.5 \n            shows the resulting crease pattern using the generic form \n            introduced in Chapter 10, with all creases colored according \n            to their structural role.\n\n\n                                                                       Figure 13.5. \n                                                                       Crease pattern for the generic \n                                                                       beetle with structural coloring.\n\n                As a reminder, with structural coloring, axial creases are \n            green, ridges are red, hinges are blue, and gussets are gray. \n            This coloring (which gives the orientation of the creases in \n            the base) and the hints on folding direction provided by the \n            generic form are enough to collapse such a crease pattern in \n            practice using the approximate rules given in Chapter 10, \n\n                                                                                                     569\n                                                           Chapter 13: Uniaxial Box Pleating\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d33"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 595,
  "content": "            meet; and we then join the two meeting points with another \n            ridge crease that is parallel to one of the sides. This is the \n            classic rectangular sawhorse molecule. Examples of both types \n            of pattern are shown in Figure 13.16.\n\n\n                                                                       Figure 13.16. \n                                                                       Left: ridge creases for a square \n                                                                       hinge polygon. \n                                                                       Right: ridge creases for a rectan-\n                                                                       gular hinge polygon.\n\n                The crease pattern shown in Figure 13.14 contained \n            only squares and a rectangle, and so we can ﬁll in its ridge \n            creases very simply, as shown in Figure 13.17 (in which, and \n            going forward, we have truncated the hinge polygons to the \n            bounding square).\n\n\n                                                                       Figure 13.17. \n                                                                       Ridge creases in the circle packing \n                                                                       from Figure 13.14.\n\n                Every corner of a hinge polygon or hinge river gives \n            rise to a ridge crease within; since every corner of one hinge \n            polygon meets up with at least one other corner, the ridge \n            creases connect up at their corners, and you can see in the \n            ﬁgure that the ridge creases that cross reﬂex corners of rec-\n            tilinear rivers form a straight-line continuation of the ridge \n            crease that emanates from the corner of the polygon tucked \n            into said reﬂex corner.\n                The two patterns shown in Figure 13.16 work for all \n            squares and rectangles. The interesting question, and indeed, \n\n                                                                                                     583\n                                                           Chapter 13: Uniaxial Box Pleating\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d34"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 90,
  "content": "./origami_dataset_dev/Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li/page090_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d35"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 583,
  "content": "                It is perhaps not so obvious that this base has all the \n            required ﬂaps for the legs and antennae, but they are indeed \n            present and distinct. What is obvious is that the ﬂaps (and \n            indeed, the entire base) are quite wide, and so considerable \n            narrowing will be needed in order to get the legs and body nar-\n            row enough to resemble the desired subject. But what is even \n            more obvious—painfully so—is how haphazard the folds are, \n            in both the crease pattern and the base. In the crease pattern, \n            creases run every which way, and the corners of ridges and \n            gusset creases are determined solely by the mathematics of \n            their placement algorithm. In the base, the edges do not line \n            up at all (although if the sides are repeatedly sunk to narrow \n            the base, they could be forced to line up by the parallel sink \n            folds). So, although circle packing provides a mathematical \n            solution to the problem of designing a base, it does not neces-\n            sarily provide an artistic solution, if part of the artistic goal \n            is to have an elegant shape with alignments between creases \n            as well as a relatively easy job of transferring the crease pat-\n            tern to the paper.\n                Even if we use ReferenceFinder to ﬁnd folding sequences \n            for all of the points, the process is fraught with tedium and is \n            error-prone, and the paper will likely be covered by extraneous \n            creases even before we ever start folding. Such a design may \n            be a mathematical success, but it is likely to be an artistic \n            failure.\n                But in the ashes of failure sometimes are found the seeds \n            of success, and there are some powerful ideas hidden within \n            the rubble of this haphazard crease pattern. I would like to \n            take a deeper look at the crease pattern and focus particular \n            attention upon the hinge creases, which I have emphasized \n            in Figure 13.8.\n                What are the hinge creases, really? They are the bound-\n            aries between distinct ﬂaps. Each hinge line maps to a single \n            hinge in the base, no matter how convoluted the line is on the \n            crease pattern. The regions delineated by the hinges are the \n            regions of paper that become the ﬂaps themselves. These re-\n            gions are polygons (or polygonal rivers, as the case may be).\n                We performed the circle packing using circles and cur-\n            vilinear rivers, which represented the minimum amount of \n            paper needed for each ﬂap. But now that we’ve found the \n            crease pattern, the hinges and the polygons they enclose are \n            something different; those polygons are the exact regions used \n            for each ﬂap, no more, no less. We encountered these shapes \n            in Chapter 10; they are hinge polygons. \n                And what are the properties of these hinge polygons? \n            Clearly, they come in two types. There are “circle-like” hinge \n\n                                                                                                     571\n                                                           Chapter 13: Uniaxial Box Pleating\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d36"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 597,
  "content": "            cally, the “distance” from a point to a polygon edge is the \n            perpendicular distance from the point to the extension of the \n            edge to an inﬁnite line. (This makes more sense when you see \n            it than can be described in words.)\n                And I will hope that something about this description \n            has rung a bell of recognition. The construction process—\n            insetting of the edges, merging of vertices, the “pinching off” \n            of a polygon into subpolygons—should sound very familiar, \n            because we have already encountered something very much \n            like it in the construction of the universal molecule. In fact, \n            the resemblance is more than superﬁcial. Recall that in the \n            universal molecule, the presence of active cross paths gave rise \n            to gussets. If there are no active cross paths at any stage of the \n            universal molecule construction, though, then the universal \n            molecule algorithm gives precisely the straight skeleton. So \n            the straight skeleton is, in some sense, a special case of the \n            universal molecule.\n                But in another sense, it is a generalization. The univer-\n            sal molecule was deﬁned solely for convex polygons, but the \n            straight skeleton can be deﬁned for nonconvex polygons—\n            speciﬁcally, L-shaped or T-shaped polygons.\n                Another difference lies in the ease of construction. In \n            general, the universal molecule must be constructed numeri-\n            cally/computationally. The straight skeleton, by contrast, can \n            be constructed graphically—and for nice hinge polygons, its \n            construction is particularly simple.\n                Because of the “closeness” property mentioned above, one \n            way, in principle, to construct the straight skeleton would be to \n            color each edge of the polygon a different color, then measure \n            this special perpendicular distance from every point to every \n            edge and mark the point with the color of the closest edge in \n            a way that makes the boundaries between colors a tree graph. \n            Once you’ve colored every point in the polygon, the straight \n            skeleton would be all of the boundary lines between the dif-\n            ferent colored regions.\n                If we had to construct the straight skeleton that way, it \n            would be a long and tedious process. Fortunately, there’s an \n            easier way to do it, which relies on the fact that every line seg-\n            ment in the straight skeleton is the angle bisector between two \n            of the edges of the polygon—sometimes two adjacent edges, \n            sometimes not. Rather than having to color every point and \n            look for the boundaries, we can just construct those angle \n            bisector bits. \n                We start at the perimeter of the polygon and work our \n            way in toward the center. From each corner, angle bisectors \n            propagate inward. It should be clear that, at least locally, the \n\n                                                                                                     585\n                                                           Chapter 13: Uniaxial Box Pleating\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d37"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 696,
  "content": "./origami_dataset_dev/Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li/page696_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d38"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 568,
  "content": "             171. Squash-fold the flap  172. Squash-fold the    173. Again.    174. Valley-fold   175. Valley-\n             over to the left and swing all flap over to the right.            one point down     fold the flap\n             of the layers outward.                                            to the left.       downward.\n\n\n             176. Fold the corners   177. Fold the        178. Squash-fold    179. Like this   180. Crimp the\n             into the interior (fold bottom corners       the point so that it (perspective    sides of the leaf\n             the two far layers      into the interior.   stands perpen-      view).           downward; it will\n             together as one).                            dicular to the                       not lie flat.\n                                                          pendulum.\n\n\n             181. Mountain-  182. Like this. 183. The pendu-       184. Now we'll work       185. Fold the\n             fold the edges to               lum and pine cone     on the clock face. Fold   corners in to meet\n             lock the crimps                 weights are now       one of the two flaps      at the center line.\n             into place.                     complete.             standing out from the\n                                                                   face upward.\n\n     556\n                         Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d39"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 226,
  "content": "            Figure 7.26. \n            Left: color-coded crease pattern. \n            Right: corresponding color-coded regions of the Koi.\n\n\n            Figure 7.27. \n            Two sets of crossing pleats. \n            Each pleat is represented by a \n            single line.\n\n                                             We can form scales only where two sets of pleats actually \n                                         cross at right angles. Conversely, anywhere the pleats cross, \n                                         we will have scale patterns (or at least the busyness of cross-\n                                         ing pleats), whether intentional or inadvertent. And in any \n                                         region crossed by a single set of pleats, we won’t have scales \n                                         or unadorned paper; we will have a pattern of parallel lines, \n                                         which may or may not be desirable in any given model, but is \n                                         surely to be minimized in this Koi design.\n                                             So, we can overlay arrays of pleats represented by lines \n                                         on the crease pattern and see what’s possible, as shown in \n                                         Figure 7.28. The number of scales is somewhat arbitrary; in \n                                         this example, I have set up a 20 × 20 array of lines, deﬁning \n                                         a 19 × 19 array of scales, each scale signiﬁed by a square be-\n                                         tween pairs of crossing lines.\n                                             This is close, but not ideal. There are a few regions of the \n                                         body that don’t get both sets of pleats: near the tail ﬁn and \n\n     214\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d3a"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 540,
  "content": "                      63. Open out the base of the model and flatten it,\n                      leaving the organist at the left and the pleated section\n                      at the right standing upright.\n\n\n            64. Mountain-fold the edges underneath                    65. Spread-squash two corners.\n            so that they align with existing creases.\n\n\n            66. Open out the sides and fold the base up and                  67. The organist and keyboard assembly\n            toward the organist. The rightward corners get tucked            are not shown in steps 67–68. Fold the\n            underneath the spread-squashed flaps you made in                 music stand so that it stands upright.\n            the last step.\n\n     528\n                         Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d3b"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 554,
  "content": "               56. Fold a Waterbomb Base.        57. Reverse-fold the corners.            58. Petal-fold.\n\n\n                  59. Fold the tip down.         60. Turn the top inside-out      61. Fold the flaps out to the sides.\n                                                 and turn the paper over.\n\n\n                     62. Fold the two points upward.                     63. Swivel one layer upward.\n\n\n                                                                                        A\n\n\n                    64. Pleat the next layer to match.                  65. Wrap one layer around to the\n                                                                        front. Layer A stays in place.\n\n     542\n                         Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d3c"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 232,
  "content": "                                                    Folding Instructions\n\n\n                                       Turtle\n\n\n                                       Western Pond Turtle\n\n\n                                       Koi\n\n\n                                                                                           221\n                                                        ChapterChapter 7:  Folding7: Pattern Instructions Grafting\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d3d"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 347,
  "content": "./origami_dataset_dev/Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li/page347_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d3e"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 18,
  "content": "                                         that on the surface apply to rather mundane aspects of fold-\n                                         ing, for example, the most efﬁcient arrangements of points in a \n                                         base, are actually linked to deep mathematical questions. Just \n                                         a few of the subjects that bear on the process of origami design \n                                         include the obvious ones of geometry and trigonometry, but also \n                                         number theory, coding theory, the study of binary numbers, \n                                         and linear algebra as well. Surprisingly, much of the theory is \n                                         accessible and requires no more than high school mathematics \n                                         to understand. I will, on occasion, bring out deeper connections \n                                         to mathematics where they are relevant and interesting, and I \n                                         will provide some mathematical derivations of important con-\n                                         cepts, but in most cases I will refrain from formal mathematical \n                                         proofs. My emphasis throughout this work will be upon usable \n                                         rules rather than mathematical formality.\n                                             As with any art, ability comes with practice, whether the \n                                         art is origami folding or origami design. The budding origami \n                                         designer develops his or her ability by designing and seeing the \n                                         result. Design can start simply by modifying an existing fold. \n                                         Make a change; see the result. The repeated practice builds \n                                         circuits in the brain linking cause and effect, independent of \n                                         formal rules. Many of today’s origami designers develop their \n                                         folds by a process they often describe as intuitive. They can’t \n                                         describe how they design: “The idea just comes to me.” But \n                                         one can create pathways for intuition to take hold by starting \n                                         with small steps of design. The great leap between following a \n                                         path and making one’s own path arises from the development \n                                         of an understanding of why: Why did the designer do it that \n                                         way? Why does the ﬁrst step start with a diagonal fold rather \n                                         than a square fold? Why do the ﬁrst creases hit the corners? \n                                         Why, in another model, do the ﬁrst creases miss the corners \n                                         only by a little bit? Why does a group of creases emanate from \n                                         a spot in the interior of the paper? If you are a beginning \n                                         designer, you should realize that no design is sacred. To learn \n                                         to design, you must disregard reverence for another’s model, \n                                         and be willing to pull it apart, fold it differently, change it and \n                                         see the effects of your changes.\n                                             Small ideas lead to big ideas; the concepts of design build \n                                         upon one another. So do the chapters of this book. In each \n                                         chapter, I introduce a few design principles and their associ-\n                                         ated terms. Subsequent chapters build on the ideas of earlier \n                                         chapters. Along the way you will see some of my own designs, \n                                         each chosen to illustrate the principles introduced in the chap-\n                                         ter in which it appears.\n                                             Chapter 2 introduces the fundamental building blocks of \n                                         origami: the basic folds. If you have folded origami before, you \n                                         may already be familiar with the symbols, terms, and basic \n\n      6\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d3f"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 742,
  "content": "                                             Several novel treatments of the traditional bases may be found among \n                                             the work of Neal Elias and Fred Rohm. See, for example: \n\n                                             Robert Harbin, Secrets of Origami, op. cit., p. 212 (Rohm’s Hippo-\n                                             potamus).\n\n                                             Robert Harbin, Origami 4, London, Coronet Books, pp. 132–133 \n                                             (Elias’s Chick Hatching).\n\n                                             Robert Harbin, Origami 4, ibid., pp. 134–135 (Elias’s Siesta).\n\n                                             Pete Ford (ed.), The World of Fred Rohm (BOS Booklet #49), London, \n                                             British Origami Society, 1998.\n\n                                             Pete Ford (ed.), The World of Fred Rohm (BOS Booklet #50), London, \n                                             British Origami Society, 1998.\n\n                                             Pete Ford (ed.), The World of Fred Rohm(BOS Booklet #51), London, \n                                             British Origami Society, 1998.\n\n                                             The offset Bird Base has been thoroughly explored by Dr. James \n                                             Sakoda in:\n\n                                             James Minoru Sakoda, Modern Origami, New York, Simon and \n                                             Schuster, 1969.\n\n                                             Yoshizawa’s Crab, an example of a double-blintzed Frog Base, may \n                                             be found in:\n\n                                             Akira Yoshizawa, Sosaku Origami, Tokyo, Nippon Hoso Shuppan \n                                             Kyokai, 1984, pp. 72–73.\n\n                                             Rhoads’s Elephant, an example of a blintzed Bird Base, may be found in:\n\n                                             Samuel L. Randlett, Best of Origami, op. cit., p. 134.\n\n                                             5. Splitting Points\n                                             The Yoshizawa split is shown in his Horse in:\n\n                                             Akira Yoshizawa, Origami Dokuhon, op. cit., p. 61.\n\n                                             For an example of the middle-point split shown in Figure 5.15, see \n                                             the Praying Mantis in:\n\n                                             Robert J. Lang, Origami Insects and their Kin, New York, Dover \n                                             Publications, 1995, p. 106.\n\n                                             A full folding sequence for the Walrus of Figure 5.28 may be found in:\n\n                                             John Montroll and Robert J. Lang, Origami Sea Life, op. cit., pp. 31–33.\n\n                                             A full folding sequence for the Grasshopper of Figure 5.29 may be \n                                             found in:\n\n                                             Robert J. Lang, Origami Insects & Their Kin, op. cit., pp. 59–65.\n\n     730\n                         Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d40"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 24,
  "content": "                                         Origami diagrammers attempt to break folding instructions \n                                         into a sequence of simple steps, but some maneuvers are inher-\n                                         ently complex and require bringing 5 or 6 (or 10 or 20) folds \n                                         together at once. For such pleasant challenges, it’s a big help \n                                         to have all the creases already in place. Precreasing helps tame \n                                         the dragon.\n                                             Valley, mountain, and crease are the three types of folds \n                                         from which all origami springs. But even a valley fold is \n                                         not necessarily the same as another valley fold if the layers \n                                         of paper do not lie flat. When models move into three \n                                         dimensions, both valley and mountain folds can vary in an-\n                                         other way: the fold angle, which can take on many values. \n                                         Imagine drawing a straight line across and perpendicular to \n                                         the fold. The fold angle is the angular change in the direction \n                                         of this line from one side of the fold to the other. This angle can \n                                         vary continuously, from 180° (for a valley fold) to 0° (which is \n                                         no fold at all) to –180° (for a mountain fold). By this measure, \n                                         valley, mountain, and crease are all part of a continuum \n                                         of fold angle.\n                                             There is yet more variation: A fold can be sharp or soft. \n                                         The mathematical model of a “fold” is an inﬁnitely sharp line, \n                                         but with real paper, the sharpness of the fold is something the \n                                         folding artist can choose. Sharp creases are not always desir-\n\n\n                                                                             >0° to 180°\n\n                                                            Valley\n\n\n                                                            Crease           0°\n\n\n            Figure 2.2.                                    Mountain          <0° to –180°\n            Valley folds, creases, and \n            mountain folds are all part of a \n            continuum.\n\n      12\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d41"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 30,
  "content": "                                             The ﬁrst basic fold is the generic valley fold—a fold made \n                                         with a single straight line, with the fold made concave toward \n                                         the folder. The fold itself is indicated by a dashed line, which \n                                         divides the paper into two parts, one stationary (usually), one \n                                         moving. A symmetric double-headed arrow is used to indicate \n                                         which part moves and the direction of motion. The moving part \n                                         almost always must rotate up and out of the plane of the page; \n                                         this motion is conveyed by curving the arrow.\n\n\n            Figure 2.11. \n            A valley fold, as diagrammed, \n            and the result.\n\n                                             The opposite of a valley fold is a mountain fold, which is \n                                         called for when a portion of the paper is to be folded behind. \n                                         The mountain fold is indicated by a chain line (dot-dot-dash), \n                                         and the motion of the paper is indicated by a hollow single-\n                                         sided arrowhead.\n\n\n            Figure 2.12. \n            A mountain fold, as dia-\n            grammed, and the result.\n\n                                             Quite often, a mountain fold is shown as a bit of \n                                         shorthand for “turn the paper over, make a valley fold, \n                                         and then turn it back to the original orientation,” as in the \n                                         example in Figure 2.12. However, mountain folds are \n                                         frequently used to tuck paper into a pocket or between \n                                         layers, situations where turning the paper over will not \n                                         necessarily make a valley fold possible.\n\n            Figure 2.13. \n            A mountain fold is not always \n            amenable to “turn the paper \n            over and make a valley fold.”\n\n      18\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d42"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 756,
  "content": "                                                     Branch edge (page 402): in a tree graph, an edge that is connected to two \n                                                     branch nodes.\n                                                     Branch ﬂap (page 575): a ﬂap that is connected to other ﬂaps at both ends. \n                                                     A branch ﬂap is represented by a branch edge in a tree graph.\n                                                     Branch node (page 402): in a tree graph, a node connected to two or more \n                                                     edges.\n                                                     Branch vertex (page 416): a point in the crease pattern that corresponds \n                                                     to a branch node on the tree graph.\n                                                     Book symmetry (page 305): the symmetry of a crease pattern that is \n                                                     mirror-symmetric about a line parallel to an edge and passing through the \n                                                     center of the paper.\n                                                     Border graft (page 135): modifying a crease pattern as if you added a \n                                                     strip of paper along one or more sides of the square in order to add features \n                                                     to the base.\n                                                     Box pleating (page 459): a style of folding characterized by all folds run-\n                                                     ning at multiples of 45°, with the majority running at multiples of 0° and \n                                                     90° on a regular grid.\n\n                                                     C\n                                                     Circle/river method (page 368): a design technique for uniaxial bases \n                                                     that constructs the crease pattern by packing nonoverlapping circles and \n                                                     rivers into a square.\n                                                     Circle packing (page 296): placing circles on a square (or other shape) so \n                                                     that they do not overlap and their centers are inside the square.\n                                                     Classic Bases (page 54): the four bases of antiquity (Kite, Fish, Bird, and \n                                                     Frog) that are related by a common structure.\n                                                     Closed sink fold (page 36): a sink fold in which the point to be sunk must \n                                                     be popped from convex to concave; it cannot be entirely ﬂattened.\n                                                     Comb (page 676): a structure in uniaxial bases consisting of a series of \n                                                     ﬁlaments spaced out along a longer shaft.\n                                                     Composite molecule (page 360): a molecule that contains axial creases \n                                                     in its interior.\n                                                     Contour (page 589): a line in the crease pattern that lies at a constant \n                                                     elevation from the axis in the folded form. It may or may not be folded.\n                                                     Contour map (page 589): a pattern of lines in a uniaxial base in which \n                                                     the different axis-parallel lines are distinguished by their elevation, e.g., by \n                                                     color.\n                                                     Corner ﬂap (page 105): a ﬂap whose tip comes from one of the corners of \n                                                     the square.\n                                                     Crease (page 11): a mark left in the paper after a fold has been unfolded.\n                                                     Crease assignment (page 21): determination of whether each crease is a \n                                                     mountain fold, valley fold, or ﬂat (unfolded) crease. Also called crease parity.\n                                                     Crease pattern (page 21): the pattern of creases left behind on the square \n                                                     after a model has been unfolded.\n                                                     Crimp fold (page 31): a fold formed by two parallel or nearly parallel \n                                                     mountain and valley folds on the near layers of a ﬂap with their mirror im-\n                                                     age folds formed on the far layers.\n                                                     Crystallization (page 308): the process of ﬁxing the locations of circles \n                                                     in a circle packing by enlarging some of the circles until they can no longer \n                                                     move.\n\n       744\n                              Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d43"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 85,
  "content": "./origami_dataset_dev/Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li/page085_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d44"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 193,
  "content": "              13. Fold two edges down.          14. Reverse-fold two corners out. 15. Steps 16–28 will focus on the\n                                                                                 region in the circle.\n\n\n              16. Pull the near layer to 17. Close up the model. 18. Fold the corner down 19. Unsink a layer of paper\n              the right and release some                        and squash-fold the       from inside the petal fold.\n              trapped paper. You may                            interior corner.          The result should be\n              find it easier to do steps                                                  symmetric.\n              16–19 all at once.\n\n\n                                               16–20\n\n\n              20. Close up the flap.     21. Repeat steps           22. Spread-sink        23. Fold and unfold\n                                         16–20 on the left.         the edges.             along angle bisectors.\n\n\n                24. Spread-sink two   25. Close up the flaps.   26. Turn the paper over.     27. Fold the two\n                corners.                                                                     flaps down.\n\n                                                                                                                 181\n                                                                      Folding Instructions:Chapter 6: Tree Grafting Frog\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d45"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 187,
  "content": "             6. Fold the corner up so that the  7. Fold the bottom right corner  8. Fold the bottom edge up so that\n             edges line up and the crease hits  up along the diagonal so that the the corner touches the white corner\n             the diagonal at the same place;    crease hits the edge at the same at the diagonal; crease all the way\n             make the crease sharp from the     place as the creases you just    across and unfold. Repeat with the\n             diagonal to the right edge and     made.                            right edge.\n             unfold.\n\n\n             9. Mountain-fold two corners         10. Fold and unfold along          11. Fold a rabbit ear, bringing\n             behind. Then turn the paper over     creases connecting the corners     the two top corners together\n             and rotate it so that the colored    to the crease intersection in the  along the center line.\n             corners are on the sides.            center.\n\n\n               12. Reverse-fold the side points down\n               to lie along the center line.\n\n                                                             13. Squash-fold the white   14. Reverse-fold the edges.\n                                                             flap symmetrically.\n\n                                                                                                                 175\n                                                                         Folding ChapterInstructions: 6: Grafting Lizard\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d46"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 178,
  "content": "              37. Mountain-fold the                 38. Fold and unfold                   39. Pull out a double\n              thick flap behind. Turn               through all layers.                   layer of paper, forming\n              the paper over.                                                             gussets in the interior.\n\n\n              40. Like this. The                    41. Squash-fold the                   42. Repeat on the next\n              gussets are indicated by              corners.                              layer up, tucking the\n              the hidden lines.                                                           edges into pockets.\n\n\n                                                                                                  25–46\n              43. Turn the paper back               44. Fold two points up.\n              over.\n\n\n                                                                                                           1/2\n\n\n              45. Fold one layer on                 46. Mountain-fold the     47. Repeat steps 25–46 on the\n              each side to the center,              leg in half (edges away   right. Then rotate the model\n              tucking the top into the              from the head; see the    1/2 turn.\n              pockets.                              next step).\n\n     166\n                         Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d47"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 636,
  "content": "",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d48"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 150,
  "content": "                                         minimize wasted paper. Waste can be avoided—or at least \n                                         reduced—by ﬁguring out ways of using some of the otherwise \n                                         nonessential added paper. For example, when we add feet by \n                                         grafting a border all the way around the outside of a Bird Base, \n                                         adding paper at two opposite corners of the square results in \n                                         the addition of paper at the other two corners, which become \n                                         the head and tail. We don’t need to add four toes to either the \n                                         head or tail, obviously, but if we can put that additional paper \n                                         to good use, the result is a further improved model and elimi-\n                                         nation of the waste. As it turns out, the paper at the head end \n                                         can be used to make a double (i.e., open) beak, while the paper \n                                         at the tail end can be used to make the tail longer, wider, or a \n                                         bit of both. Furthermore, it’s also possible to use some of the \n                                         border that runs between adjacent corners to make a more fully \n                                         rounded body. Thus, the excess paper goes to good use: The \n                                         layers can be evenly distributed through the model, and the \n                                         result is a songbird considerably more lifelike than the original \n                                         Bird Base bird from which we started. The crease pattern, base, \n                                         and folded model are shown in Figure 6.9; you will ﬁnd a full \n                                         folding sequence at the end of the chapter.\n\n\n                                         Figure 6.9. \n                                         Crease pattern, base, and folded model of the Songbird.\n                                             As an extra bonus, this conﬁguration allows us to make \n                                         the legs and breast with the opposite side of the paper showing, \n                                         creating a nice two-toned effect.\n                                             A border graft need not run all the way around the square; \n                                         if you only need to add paper to one end, you can simply add \n\n     138\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d49"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 144,
  "content": "                                                                              3. Mountain-fold the          4. Fold the group of\n                                                                              flap underneath on the        layers up on a crease\n                                                                              existing crease.              that lines up with the\n                                                                                                            hidden edge.\n\n                             1. Begin with a flap     2. Fold the edge to the\n                             from a Bird Base. Fold   existing crease.\n                             the flap up and down.\n\n\n                                                                              7. Pull out some loose      8. Fold so that the raw\n                                                                              paper on both sides.        edges are aligned, and\n                                                                                                          unfold.\n\n\n                      5. Unfold to step 2.           6. Crimp the point\n                                                     upward, using the\n                                                     existing creases.\n\n\n                               9. Crimp the point         10. Outside reverse-     11. Reverse-fold the     12. Reverse-fold three\n                               downward.                  fold.                    edge.                    edges.\n\n\n                                                         13. Reverse-fold three 14. Finished split point.\n                                                         edges again.         There are now four equal\n                                                                              points at the end of the flap.\n                                                     Figure 6.2. \n                                                     Folding sequence for splitting one point into four smaller points.\n\n       132\n                              Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d4a"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 622,
  "content": "                                                    Folding Instructions\n\n\n                                       Bull Moose\n\n\n                                                                                           611\n                                                     ChapterChapter 13: 13: Uniaxial Folding Box Instructions Pleating\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d4b"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 391,
  "content": "                                                                        Figure 10.45. \n                                                                        A ﬁve-circle base with all ﬁve \n                                                                        circles on the edge of the square \n                                                                        yields an axial polygon with \n                                                                        ﬁve sides.\n\n                Figure 10.46 shows a generic form crease pattern for this \n            ﬁve-circle polygon, which yields a ﬁve-ﬂap molecule. It is very \n            similar to the quadrilateral gusset molecule, which suggests \n            that, perhaps, there is a pentagonal gusset molecule as well.\n\n\n                                                                        Figure 10.46. \n                                                                        Generic form crease pattern for \n                                                                        a ﬁve-circle molecule.\n\n                In fact, for ﬁve identical circles, there are many pentagonal \n            gusset molecules, which depend on the speciﬁc arrangement \n            of the circles. Figure 10.47 shows three such molecules, which \n            are obtained by slight perturbations to a packing of ﬁve circles \n            into a square. Unfortunately, there does not appear to be a \n            simple way to geometrically construct the molecule from the \n            circle packing; in fact, it isn’t even clear where the gussets go \n            to allow the pentagon to collapse with its edges on a line and \n            the tangent points aligned. (The patterns in the ﬁgure were \n            computed numerically—we will see how to do this later on.) \n            Furthermore, relatively slight changes in the arrangement of \n            the circles can make signiﬁcant changes in the arrangements \n            of the creases and gussets.\n                The explosion of possibility for ﬁve and higher numbers of \n            sides is worrisome. Fortunately, it isn’t necessary to enumerate \n            all unique molecules for higher-order polygons; there is a way \n            to transform any higher-order polygon into a combination of \n\n                                                                                                     379\n                                                                    Chapter 10: Molecules\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d4c"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 129,
  "content": "./origami_dataset_dev/Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li/page129_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d4d"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 385,
  "content": "                                                                a\n\n\n                                                       bc\n\n                                                                                        f\n\n                       a                                 de\n                              c\n                 b\n                               f\n                       g\n                 d              e                               g\n                      hi\n                        j\n                                                          h           i\n\n\n                                                                j\n\n             Figure 10.36. \n             The circles and river that correspond to the elements of the stick \n             ﬁgure of the Orchid.\n\n\n                                    a\n\n                 b\n                                                     c\n\n\n                       h                         i\n                                    j\n\n                            g\n\n                   d                                e\n                                   f\n\n\n             Figure 10.37. \n             Left: a circle/river pattern for the Orchid. \n             Right: the circle pattern with axial creases added where circles and \n             rivers touch.\n\n                                                                                                                 373\n                                                                             Chapter 10: Molecules\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d4e"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 408,
  "content": "               75. Turn the model        76. Fold down a           77. Bring a point to      78. Fold and unfold.\n               over.                     point.                    the front.\n\n\n             79. Fold the sides in.  80. Fold and unfold        81. Unfold.                82. Fold a group of\n                                     along creases aligned                                 layers to the right.\n                                     with the ones you made\n                                     in step 78.\n\n\n             83. Fold and unfold.    84. Fold and unfold.       85. Bring the two points   86. Fold and unfold.\n                                                                to the vertical crease.\n\n     396\n                         Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d4f"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 352,
  "content": "                                                                                      6. Fold the top edge behind\n                                                                                      along a crease that lines up with\n                                                                                      the folded edge.\n             4. Fold the bottom right corner     5. Fold the bottom edge up so\n             up to the pinch you just made       that the corner aligns with the\n             and make another pinch along        mark you just made.\n             the right edge.\n\n\n             7. Fold along the diagonals\n             through all layers (valley on the\n             left, mountain on the right) and\n             unfold.\n                                               8. Crimp the middle of the model and       9. Squash-fold the white\n                                               bring the corners together, opening        flap in front and the\n                                               out a pocket on the underside.             colored one behind.\n\n\n             10. Bring two layers of paper to the    11. Fold a single layer in    12. Reverse-fold the edges.\n             front on each side. This is most easily so that the edges meet in\n             done by unfolding the near layers,      the middle.\n             changing crease directions and then\n             refolding.\n\n     340\n                         Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d50"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 434,
  "content": "                                     ABH      F                      ABH       F\n\n                          B\n\n              A      I               H      I               F        H      I               F\n                                     F                               F\n                             G\n                    H                               G                               G\n                       F                                         C                               C\n                                 C\n            E                        E                               E\n\n                                                           F                               F\n                                            F                               F\n                      D\n                                                    D                               D\n                                         Figure 11.24. \n                                         Left: a stub added to node A’s edge that satisﬁes four path equalities. \n                                         Middle: active (axial) paths. \n                                         Right: full structural form crease pattern.\n\n                                      ABF                             ABF\n\n                           B\n\n               A                                            F                               F\n                           I          F         I                     F         I\n                              G\n                                                  G                               G\n                        F H\n                                                                 C                               C\n                                 C\n             E                        E                               E\n\n                                                           F                               F\n                                             F                              F\n                       D\n\n                                                    D                               D\n                                         Figure 11.25. \n                                         Left: a second solution, adding the stub to node G’s edge. \n                                         Middle: active (axial) paths. \n                                         Right: full structural form crease pattern.\n\n                                             There is a way, however, of adding a fourth degree of free-\n                                         dom. We can add a new branch node along one of the existing \n                                         edges of the tree and add a new edge and new leaf node to the \n                                         new branch node. There are now four degrees of freedom: the \n                                         two coordinates of the new leaf vertex, the length of the new \n                                         edge, and the distance along the existing edge where the new \n                                         branch node is placed.\n                                             With four degrees of freedom, it is, in principle, possible to \n                                         satisfy four path equalities simultaneously. In the tree graph \n                                         we have been working on, it turns out that we can add our new \n                                         branch node to either of two edges, those connected to leaf nodes \n                                         A and G. Both give solutions that satisfy the path conditions, \n                                         as shown in Figures 11.24 and 11.25.\n\n     422\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d51"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 420,
  "content": "                                                       E                            F\n\n                                                              2      A      2\n\n            Figure 11.7. \n            Node pattern that satisﬁes the                   3                3\n            tree theorem for the six-legged \n            tree. Dotted lines are lengths \n            that exceed their minimum \n                                                      G                            H\n            value; solid green lines have                     2             2\n            lengths equal to their minimum \n            value.\n                                                                     D\n\n                                         square has side length 2√((121 + 8√179)/65) ≈ 3.7460, in which \n                                         case the distances drawn in solid green lines are equal to their \n                                         minimum values, and all other paths (indicated by dashed lines) \n                                         are greater than the minimum length.\n                                             The tree theorem is an existence theorem; it says that a \n                                         crease pattern exists, but it doesn’t tell us what this supposed \n                                         crease pattern actually is. It does provide a strong clue, how-\n                                         ever. The tree theorem says that the leaf vertices become the \n                                         tips of the ﬂaps on the folded base. Are there any other features \n                                         on the square that we can identify on the base?\n                                             Consider the inequality in the tree theorem. Two leaf verti-\n                                         ces must be separated on the square by a distance greater than or \n                                         equal to the distance between their corresponding nodes on the \n                                         tree. In the special case where equality holds, we can uniquely \n                                         identify the line between the two vertices. We will call a line on the \n                                         square that runs between any two leaf vertices a path. Every path \n                                         has a minimum length, which is the sum of the lengths of edges of \n                                         the tree between the two leaf nodes that deﬁne the path. (In the \n\n                                         symbolism of the tree theorem, lij is the minimum length of path \n                                         ij.) The actual length of a path is given by the distance between \n                                         the vertices of the crease pattern that correspond to the leaf nodes \n\n                                         as measured upon the square (|ui – uj| in the tree theorem). Any \n                                         path for which its actual length in the crease pattern is equal \n                                         to its minimum length as deﬁned by the tree graph is called an  \n                                         active path.\n                                             In the base, the only route between two ﬂap tips that is \n                                         equal to the distance between the leaf nodes lies in the plane of \n                                         the projection. Thus, any active path between two leaf vertices \n                                         on the square becomes an edge of the base that lies in the plane \n                                         of projection. Consequently, we have another important result: \n\n                                             Any active path between leaf vertices forms an edge of the \n                                             base that lies in the plane of projection of the base.\n\n     408\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d52"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 346,
  "content": "                                         Similar urchins by others, including Toshiyuki Meguro, who \n                                         pioneered circle-packing design methods in Japan, abound.\n\n                                         9.12. Comments\n                                         The circle method of origami design described in this chapter \n                                         can be an extremely powerful tool for designing complex ori-\n                                         gami models, particularly beetles and insects. For any pattern \n                                         of circles, there exists a folding method that transforms that \n                                         pattern into a base with the proper number and size of points. \n                                         However, although the technique of packing circles guarantees \n                                         that a folding sequence exists to convert the circle pattern into \n                                         a base, it doesn’t provide much guidance as to how to execute \n                                         a step-by-step folding sequence for that base—a shortcoming \n                                         of most algorithmic origami design. So even if you work out a \n                                         circle pattern, you still have some work ahead of you to ﬁgure \n                                         out how to fold the crease pattern into a base.\n                                             By packing circles densely so that each circle touches sev-\n                                         eral others, we can connect the centers of touching circles with \n                                         creases, which turn out to be axial creases in the base. If the \n                                         polygons and circle fragments outlined by the axial creases turn \n                                         out to resemble the circle patterns of known tiles, we can ﬁll \n                                         in the polygons with tile crease patterns and, voilà, construct \n                                         the full crease pattern for an origami base.\n                                             Furthermore, we can, with some further effort, add riv-\n                                         ers of constant width to the circle packing to create bases that \n                                         contain segments separating groups of ﬂaps. These circle/river \n                                         patterns, too, may be ﬁlled in with crease patterns if they hap-\n                                         pen to correspond to known tiles.\n                                             But that’s a very big if. While we have progressed a long \n                                         way in designing origami bases, so that we can start with any \n                                         number, length, and connectivity of ﬂaps we desire, we are \n                                         still dependent upon the existence of tile patterns for ﬁlling in \n                                         the creases of the axial polygons. There is no guarantee that \n                                         such tiles exist.\n                                             At least, there is no guarantee just yet. But as we will see \n                                         in the next chapter, there is a small number of general-purpose \n                                         crease patterns that will allow us to ﬁll in any circle pattern \n                                         whatsoever. These patterns—some new, some old—provide the \n                                         ﬁnal step in the construction of a generalized uniaxial base.\n\n\n     334\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d53"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 421,
  "content": "                Active paths on the square lie in the plane of projection \n            of the square, but the plane of projection is where the vertical \n            layers of paper in the base are connected to each other. In other \n            words, since the paper on both sides of the path lies above the \n            path in the folded base, there must be a fold along the path. \n            This must be true for every active path. Thus, active paths are \n            not only edges of the base; they are major creases of the base. \n            And not just any creases; since the plane of projection contains \n            the axial edges of the ﬂaps, these creases must be axial creases \n            (which is why I used green for their color in Figure 11.7).\n\n                         Active paths become axial creases.\n\n                So now we have the rudiments of the crease pattern for \n            the base. We know that the points on the square that corre-\n            spond to leaf nodes of the tree become the tips of the ﬂaps of \n            the base, and we know that active paths on the square become \n            axial creases of the base.\n                We can construct further correspondence between ele-\n            ments of the tree and the crease pattern, namely, the branch \n            nodes. The axial creases in the crease pattern map onto paths \n            on the tree graph, so any point on the tree corresponds to one or \n            more points along axial creases. Speciﬁcally, we can locate the \n            points along each axial crease that correspond to each branch \n            node, points we will call branch vertices.\n                If our hypothetical bookworm travels from one leaf vertex \n\n            to another, encountering branch vertices at distances d1, d2, \n\n            d3, and so forth along the way, then when we draw the crease \n            pattern, we can identify each of the branch vertices at the \n            same distances along the active path connecting the two leaf \n            vertices as they were spaced out along the tree path. Thus, \n            we can add all of the branch vertices to our budding crease \n            pattern. In Figure 11.8, I’ve identiﬁed all of the vertices, both \n\n                                        EF\n                    A\n\n                     1                         B     A       B\n            E              F\n               1        1\n                  B                               B      B\n                     1\n\n                  C                           C              C          Figure 11.8. \n               1        1                                               Left: tree with all nodes let-\n            G              H                                            tered. \n                     1                 GH\n                                                CC                      Right: crease pattern with leaf \n                                                                        vertices, branch vertices, and \n                    D\n                                                      D                 active paths.\n\n                                                                                                     409\n                                                                   Chapter 11: Tree Theory\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d54"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 347,
  "content": "                                                    Folding Instructions\n\n\n                                       Emu\n\n\n                                       Songbird 2\n\n\n                                                                                           335\n                                                        ChapterChapter 9: Folding 9: Circle Instructions Packing\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d55"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 353,
  "content": "             13. Turn the model over.   14. Fold and unfold    15. Fold one flap to the   16. Pleat the flap.\n                                        the near flaps.        right.\n\n\n                                                                               15–18\n\n\n              17. Release the layers   18. Fold the flap back to  19. Repeat steps       20. Petal-fold. The\n              of paper that are trapped the left.                 15–18 on the right.    valley fold is on an\n              in the pleats.                                                             existing crease.\n\n\n              21. Tuck the flap up      22. Fold two flaps to    23. Fold two corners   24. Sink the two corners\n              inside the model.         the right.               in to the center line  on the creases you just\n                                                                 and unfold.            made.\n\n                                                                                                                 341\n                                                                    FoldingChapter Instructions: 9: Circle Songbird Packing 2\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d56"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 435,
  "content": "            Figure 11.26. \n            Left: a stub-divided quadrilateral. \n            Middle: one version of the arrowhead molecule. \n            Right: another arrowhead molecule.\n\n                Both solutions divide the quadrilateral into four triangles, \n            and in general, any quadrilateral can be similarly divided. I \n            call this process adding a stub to the tree. By repeatedly adding \n            stubs to a uniaxial base crease pattern, any such crease pat-\n            tern can eventually be divided into axial polygons that are all \n            triangles, whereupon they all can be ﬁlled in with rabbit-ear \n            molecules. A crease pattern that has received this treat-\n            ment, i.e., consists entirely of rabbit-ear molecules, has been \n            triangulated.\n                There is an interesting relationship between a quad-\n            rilateral that has been quartered using a stub and the ar-\n            rowhead molecule. Look at the quadrilateral crease pattern \n            in Figure 11.26. By removing a few creases, it’s possible to \n            transform this pattern into either version of the arrowhead \n            molecule for this quadrilateral.\n                Another interesting observation about stub-divided \n            quads: The crease pattern within a stub-divided quad is \n            topologically equivalent to a Bird Base, and by changing the \n            directions of some of the creases, it is possible to use the crease \n\n\n                                                                        Figure 11.27. \n                                                                        The crease pattern from a stubbed \n                                                                        quadrilateral can be used to fold \n                                                                        the quadrilateral into an analog \n                                                                        of the Bird Base.\n\n                                                                                                     423\n                                                                   Chapter 11: Tree Theory\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d57"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 409,
  "content": "             87. Fold and unfold.        88. Unfold.            89. Fold one flap over     90. Crease through all\n                                                                to the right.              layers.\n\n\n                                                     82–91\n\n\n             91. Open out the model 92. Repeat on the right.   93. Open-sink every corner  94. Turn the\n             to be symmetric again.                            (eight on each side) in and paper over.\n                                                               out to the same depth.\n\n\n                                                                                  95–97\n\n\n             95. Fold some      96. Fold a thick   97. Close the        98. Repeat on     99. Flip the top small\n             layers to the      flap down.         model back up.       the right.        point down and fold a\n             right.                                                                       group of flaps up in front.\n\n                                                                                                                 397\n                                                                      FoldingChapter Instructions: 10: Molecules Silverfish\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d58"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 522,
  "content": "./origami_dataset_dev/Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li/page522_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d59"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 384,
  "content": "                                         to suit aesthetic purposes. While every such change alters the \n                                         literal crease pattern, the generic crease pattern for such mi-\n                                         nor variants of a base remains unchanged. And so, I will often \n                                         give only the generic form of the crease pattern for molecules \n                                         and models that follow.\n\n                                         10.9. Putting It All Together\n                                         We now have all the building blocks necessary to build a custom-\n                                         made base from scratch, starting with the desired number, \n                                         lengths, and connections among ﬂaps. Let’s work through such \n                                         a model in detail. We’ll choose an orchid blossom, which offers \n                                         some interesting challenges but isn’t too complicated.\n                                             Orchids come in an enormous variety. I’ll pick a fairly \n                                         common form. Figure 10.35 shows a sketch of an orchid blos-\n                                         som. Orchids typically have six petals plus a stem, but in \n                                         many species, one of the petals is heavily modiﬁed. In the \n                                         variety I’ve chosen, the bottom petal grows two distinct pro-\n                                         trusions partway out the sides of the petal, and we’ll include \n                                         these as distinct ﬂaps in the desired base. We can represent \n                                         the desired conﬁguration of ﬂaps by a stick ﬁgure, as shown \n                                         on the right.\n                                             Now, let’s count the ﬂaps. There are ﬁve similarly-sized \n                                         ﬂaps for the ordinary petals, a sixth ﬂap for the stem, then three \n                                         smaller ﬂaps that make up the composite petal. Those ﬂaps are \n                                         separated from the others by a short segment. Thus, our crease \n                                         pattern will be made up of six large circles, three smaller circles, \n                                         and a relatively narrow river, as shown in Figure 10.36.\n                                             Now comes the fun part: How can we pack these items into \n                                         a square in an efﬁcient way? Recall that (a) the centers of all \n                                         circles must be conﬁned to the square and (b) circles and rivers \n                                         must be connected in the same way that they are connected in \n                                         the stick ﬁgure, which is to say that two circles may only touch \n                                         in the crease pattern if their corresponding sticks touch at a \n                                         node. If you like something concrete, you can cut out circles \n\n\n            Figure 10.35. \n            Left: an Orchid. \n            Right: its representation as a \n            stick ﬁgure.\n\n     372\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d5a"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 390,
  "content": "                                         Figure 10.44. \n                                         Generic form crease pattern, base, and folded model of the Cock-\n                                         roach.\n\n                                             Figure 10.44 shows one more insect design and a small \n                                         challenge. This Cockroach, like the Ant, contains six legs and \n                                         antennae, but I’ve added two more rivers (which create gaps \n                                         between the pairs of legs) and varied the leg length. Can you \n                                         reconstruct the stick ﬁgure from which this design is derived? \n                                         Second, can you identify the axial creases and the types of \n                                         molecules I used? And last, given the structural crease pattern \n                                         here, can you ﬁgure out the crease assignment and fold the \n                                         base? (If not, references with folding instructions for both this \n                                         model and the Ant are given in the References.)\n\n                                         10.10. Higher-Order Polygons\n                                         We now have molecules for triangles, which are common, \n                                         and quadrilaterals, which are occasional. What about higher- \n                                         order polygons? Might we ever see a pentagon, hexagon, \n                                         heptagon, or larger?\n                                             Yes indeed; in fact, we have already seen one such example. \n                                         If we choose to design a base with ﬁve equal ﬂaps and require \n                                         that all ﬂaps come from the edge of the paper, we will arrive at \n                                         the circle packing shown in Figure 10.45. Connecting the centers \n                                         of touching circles with axial creases yields a single primary \n                                         polygon with ﬁve sides. And had we desired six edge ﬂaps, we \n                                         would have ended up with a six-sided polygon. So we do indeed \n                                         need to worry about molecules for higher-order polygons.\n\n     378\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d5b"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 253,
  "content": "./origami_dataset_dev/Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li/page253_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d5c"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 145,
  "content": "                5. Squash-fold the feet     6. Fold two tiny Bird Bases from squares whose\n                downward.                   side is twice the length of the squashed point.\n\n\n                7. Attach the Bird Bases to the two 8. Now the Bird Base has four toes\n                flaps.                          on each foot.\n            Figure 6.3. \n            Adding toes to a Bird Base by gluing.\n\n            squares—two small and one big—from a single sheet. And \n            since the feet folded from the small squares are attached to \n            the tips of the leg ﬂaps in the big square, it makes sense to try \n            attaching the small squares to the corners of the big square \n            that correspond to the leg ﬂaps.\n                To do this, we’ll need to identify the relationship between \n            the square (and its crease pattern) and the folded model. You \n            can do this in practice by coloring ﬂaps of the folded model \n            and then unfolding it to a crease pattern and noting where \n            the colored bits fall. With practice, however, you’ll be able to \n            keep track of such points as you unfold the model without \n            coloring.\n                Figure 6.4 shows the unfolded Crow—which we will take \n            to represent a generic bird—and identiﬁes which parts of the \n            square make up which parts of the bird.\n\n                                                                                                     133\n                                                                       Chapter 6: Grafting\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d5d"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 623,
  "content": "             Bull Moose\n\n\n             1. Begin with a square, colored side up. Fold in       2. Fold the edges to the center line; crease and\n             half vertically and unfold.                            unfold.\n\n\n     612\n                         Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d5e"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 637,
  "content": "                                                          14Polygon Packing\n\n                         t this point, you have seen that uniaxial box \n                         pleating has all the versatility of circle/river \n                         packing but has the additional beneﬁt of pro -\n                         ducing symmetric, easily precreaseable (if not \n            A            necessarily easily collapsible) folding patterns. \n            These patterns can be highly complex, and while the tech-\n            nique may be used for all types of subject, it is particularly \n            suited to insects and arthropods (many of which you will meet \n            in this chapter), such as the Flying Walking Stick shown in \n            Figure 14.1.\n                This design contains all the elements of uniaxial box pleat-\n            ing: rectilinear hinge polygons, ridge creases along the straight \n            skeleton, and two elevation levels for axis-parallel folds: axial \n            and axial+1. Although you might enjoy the challenge of ﬁguring \n            out a crease assignment from the contour map, a fully assigned \n            crease pattern is given at the end of the chapter. \n                If, however, you restrict your designs only to the basic ele-\n            ments of box pleating described in the previous chapter, you \n            will quickly bump up against one of the barriers of uniaxial \n            box pleating, for this design approach carries with it several \n            limitations. Fortunately, there are more specialized tech-\n            niques—modiﬁcations and variations of the basic idea—that \n            let you creatively work around the limitations of uniaxial box \n            pleating. Better yet, uniaxial box pleating is just a special case \n            of a much broader, much more powerful concept, whose name \n            I have already introduced: polygon packing. Polygon packing \n            allows one to create complex designs while striking an aesthetic \n            balance between efﬁciency, symmetry, precreasability, collaps-\n            ibility, and, of course, the desired visual representation of the \n            subject. In this chapter, we will delve deeply into the subtleties \n\n                                                                                                     625\n\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d5f"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 151,
  "content": "            paper to two sides, creating a new square at one corner. The \n            risk, as with all grafted bases, is that the paper you’ve added \n            to complete the square is essentially wasted unless you can \n            ﬁnd some other use for it.\n                As an example, some years ago a composite (multisheet) \n            origami model had become quite popular by combining the \n            head from a dragon by Kunihiko Kasahara (itself a three-\n            piece composite model) with the body, wings, legs, and tail \n            of a simple one-sheet dragon by Robert Neale, as shown in \n            Figure 6.10. The combination became known as the Kasahara-\n            Neale Dragon. Kasahara’s head was folded from a Bird Base, \n            while Neale’s Dragon was folded from another, larger Bird \n            Base, and the two would be joined with glue. The combination \n            is a perfect opportunity to make the entire structure from a \n            single sheet using grafting.\n\n\n            Figure 6.10. \n            Assembly of two different-sized Bird Bases into the Kasahara-Neale \n            Dragon.\n\n                Since the small square would be joined to a corner of \n            the larger square, we can use the border grafting technique. \n            However, as Figure 6.11 shows, we are adding a fair amount of \n            paper just to get that one little square in the upper corner.\n                Fortunately, the extra paper becomes part of the two \n            wing ﬂaps, and so it can be used to give the Dragon somewhat \n\n                                                                                                     139\n                                                                       Chapter 6: Grafting\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d60"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 179,
  "content": "                 48. Open out the white edges.    49. Mountain-fold the near        50. Crimp the body through\n                 Note the location of the angle   layer of each leg inside and      the angle change and curve the\n                 in the valley fold; above the    valley-fold the far layer.        sides around, so that the cross-\n                 fold, the model will not lie flat.                                 section is an inverted “U.”\n\n\n             51. From here onward, you may vary     52. Crimp the beak. Pleat      53. Round the tail. Double-\n             the folds as you like to alter the shape the tail; repeat behind.     rabbit-ear the legs. Reverse-\n             of the bird. Crimp the head downward,                                 fold the cheek.\n             keeping it rounded.\n\n\n                     54. Valley-fold the near      55. Open the beak. Spread         56. Finished Songbird.\n                     edge of the beak upward.      the toes. Shape the rest of\n                     Repeat behind.                the body.\n\n                                                                                                                 167\n                                                                    Folding Instructions:Chapter 6:Songbird Grafting 1\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d61"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 186,
  "content": "             Lizard\n\n\n             1. Begin with a square, colored\n             side up. Fold and unfold along\n             one diagonal.\n\n\n             2. Fold the top edge down to\n             the diagonal and make a pinch\n             along the right edge.\n\n\n             3. Fold the top left corner down  4. Bring the two indicated points 5. Fold the bottom right corner over\n             to the bottom; make a pinch       together and make a pinch along   to the left so that the edges line up\n             along the left side and unfold.   the bottom edge.                  and the crease goes through the mark\n                                                                                 you just made; make the crease sharp\n                                                                                 up to the diagonal and unfold.\n\n     174\n                         Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d62"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 192,
  "content": "              4. Fold the top edge to the pinch you 5. Fold the bottom right corner     6. Like this. Turn the\n              just made; make another pinch on the up to the crease intersection.       paper over.\n              diagonal crease and unfold.\n\n\n                                                                                                    3–8\n\n\n                                                                                           3–8         3–8\n              7. Fold the edge to the diagonal      8. Unfold the pleat and          9. Repeat steps 3–8 on the other\n              crease, allowing the corner behind    turn the paper back over.        three corners. Leave the paper\n              to flip out.                                                           white side up when you’re done.\n\n\n                10. Fold a Waterbomb Base          11. Fold and unfold through   12. Open-sink the point in and out.\n                using the existing creases.        the crease intersections.\n\n     180\n                         Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d63"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 85,
  "content": "./origami_dataset_dev/Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li/page085_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d64"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 31,
  "content": "                When a mountain fold (or, less often, a valley fold) is \n            used to tuck one layer between two others, the layers will \n            be separated as in Figure 2.13, and the arrow will be drawn \n            between the two layers. If, when folding, you ﬁnd that a ﬂap \n            can be folded into more than one location, examine the draw-\n            ing closely, as the arrow will likely show where the layer \n            should go.\n                Quite often, both a mountain fold and a valley fold will be \n            called for on parallel layers, a maneuver that is commonly used \n            for thinning legs and other appendages. This step is shown \n            with two arrows and, if possible, both the mountain and valley \n            fold. You may perform both a mountain and a valley fold if you \n            wish, but many folders actually form both folds as mountain \n            folds, making one from each side of the paper.\n\n\n                                                                       Figure 2.14. \n                                                                       Mountain and valley folds used \n                                                                       to thin a ﬂap.\n\n                Figure 2.14 illustrates several common subtleties of ori-\n            gami diagrams. The valley fold on the far layer is made clear \n            by extending the fold line (the dashed line) beyond the edge \n            of the paper. The valley fold is understood to run completely \n            along the far layer of paper, even though it is not shown. (I \n            could use an X-ray line to indicate the extension of the val-\n            ley fold, but I don’t in this ﬁgure because it would get mixed \n            up with the overlaid mountain fold line). Both the mountain \n            and valley fold layers get tucked into the middle of the model, \n            which you can tell by observing that both arrowheads travel \n            between the two layers. The resultant ﬁgure—the drawing to \n            the right—shows the disposition of the layers along its edge, \n            which makes this example unambiguous. It is often not pos-\n            sible to show such layers, however; you must rely upon the \n            arrows between the layers, as in the ﬁgure on the left.\n                Folds, once made, do not always persist to the end of the \n            model. It is a fairly frequent occurrence that folds are made \n            to establish reference points or lines for future folds, or that a \n            model is unfolded at some point to perform some manipulation \n            upon hidden or interior lines. In either case, folds get unfolded. \n            Unfolding is indicated by a symmetric hollow-headed arrow, \n            as shown in Figure 2.15.\n                The same symbol is used to indicate when paper is to be \n            pulled out from an interior pocket, as shown in Figure 2.16.\n\n                                                                                                      19\n                                                                 Chapter 2: Building Blocks \n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d65"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 757,
  "content": "                Cupboard Base (page 57): a traditional base consisting of a square with \n                two opposite edges folded toward each other to meet in the middle.\n\n                D\n                Decreeping (page 145): rearranging several trapped layers of paper so that \n                no layer is wrapped around another.\n                Detail folds (page 53): folds that transform the ﬂaps of a base into details \n                of the ﬁnished subject.\n                Diagonal symmetry (page 306): the symmetry of a crease pattern that is \n                mirror-symmetric about one of the diagonals of the square.\n                Dihedral angle (page 469): the angle between the two surfaces on either \n                side of a crease, deﬁned as the angle between the surface normals.\n                Distorted base (page 69): a modified base formed by shifting the ver-\n                tices of the crease pattern so that the paper can fold flat; the number \n                of creases and vertices remains the same, but the angles between them \n                change.\n                Double-blintzing (page 326): folding the four corners of a square to the \n                center twice in succession.\n                Double rabbit-ear fold (page 26): a fold in which the creases of a rabbit \n                ear are made on the near layer of a ﬂap and the mirror-image creases are \n                made on the far layer.\n                Double sink fold (page 35): two sink folds formed in succession on the \n                same ﬂap.\n\n                E\n                Edge (page 402): in a tree graph, a single line segment. Each edge cor-\n                responds to a unique ﬂap or connector between ﬂaps in the base. See leaf \n                edge, branch edge.\n                Edge ﬂap (page 105): a ﬂap whose tip comes from one of the edges (but not \n                a corner) of the square. An edge ﬂap has twice as many layers as a same-size \n                corner ﬂap.\n                Edge weight (page 402): a number assigned to each edge of a tree graph \n                that represents the length of the associated ﬂap.\n                Efﬁciency (page 43): a measure of how much paper is used to obtain features \n                of the subject versus extra paper that is merely hidden away.\n                Elevation (page 588): the distance of an axis-parallel crease (or in general, \n                any point) from the axis in the folded form.\n                Elias stretch (page 506): A maneuver used in box pleating to create ﬂaps \n                from a pleated region of paper, by changing the direction of the pleats by 90° \n                within wedges of paper.\n\n                F\n                Fish Base (page 54): one of the Classic Bases, formed by folding all four \n                edges of a square to a common diagonal and gathering the excess paper in \n                two ﬂaps.\n                Flap (page 54): a region of paper in an origami shape that is attached only \n                along one edge so that it can be easily manipulated by itself.\n                Folded edge (page 15): an edge created by folding.\n                Folded form (page 21): the result obtained after folding a crease pattern.\n\n                                                                                                                                  745\n                                                                                                        Glossary\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d66"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 743,
  "content": "             6. Grafting\n             The technique of folding from squares joined only at their corners \n             is described in a two-volume set that includes a reproduction of the \n             1797 original text of Sembazuru Orikata: \n\n             Masao Okamura, Hiden Sembazuru Orikata: Fukkoku to Kaisetsu, \n             Tokyo, NOABooks, 1992.\n\n             See also:\n\n             Masaki Sakai and Michi Sahara, Origami Roko-an Style, Tokyo, He-\n             ian International Publishing, 1998.\n\n             Kasahara’s Dragon may be found in:\n\n             Kunihiko Kasahara, Creative Origami, Tokyo, New York, Japan \n             Publications, 1967, p. 86.\n\n             Robert Neale’s Dragon may be found in:\n\n             Robert Neale, “Dragon,” The Flapping Bird/An Origami Monthly, \n             Chicago, Jay Marshall, vol. 1, no. 5, p. 27, 1969.\n\n             A full folding sequence for the Crawﬁsh of Figure 6.30 may be  \n             found in:\n\n             Robert J. Lang, Origami Animals, New York, Crescent Books, 1992, \n             pp. 52–55.\n\n             A full folding sequence for the Treehopper of Figure 6.31 may be \n             found in:\n\n             Robert J. Lang, Origami Insects & Their Kin, op. cit., pp. 10–13.\n\n             A full folding sequence for the Japanese Horned Beetle of Figure 6.31 \n             may be found in:\n\n             Robert J. Lang, Origami Insects & Their Kin, ibid., pp. 132–142.\n\n             A bird with individual toes that appears to have been constructed \n             using point splitting techniques appears in: \n\n             Akira Yoshizawa, Origami Dokuhon II, Tokyo, New Science Sha, \n             1998, p. 3.\n\n             7. Pattern Grafting\n             John Richardson’s Hedgehog may be found in:\n\n             Eric Kenneway, Origami: Paperfolding for Fun, London, Octopus, \n             1980, pp. 86–87.\n\n             Eric Joisel’s Pangolin may be found in:\n\n\n                                                                                                                 731\n                                                                                        References\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d67"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 25,
  "content": "            able. In a complex model with many folds, sharp creases can \n            weaken the paper to the point that the paper rips. In a model \n            of a natural subject, sharp lines can be harsh and unlifelike, \n            whereas soft, rounded folds can convey an organic quality, a \n            sense of life. On the other hand, when precision is called for, \n            sharp folding may be required to avoid a crumpled mess down \n            the road. Consequently, most models call for a mix of sharp \n            and soft folding, and while the distinction can sometimes be \n            given in the folding diagrams, in most cases, the artist must \n            simply develop through experience a feel for how sharp a \n            given crease must be.\n\n            2.1. Symbols and Terms\n            Origami instruction is conveyed through diagrams—a \n            system of lines, arrows, and terms that become the lingua \n            franca (or perhaps lingua japonica) of the worldwide arena. \n            The modern system of origami diagrams was ﬁrst devised by \n            the great Japanese master Akira Yoshizawa in his books of \n            the 1940s and 1950s, and was subsequently adopted (with \n            minor variations) by the two early Western origami authors \n            Samuel L. Randlett (United States) and Robert Harbin (U. K.). \n            Despite occasional attempts by others at establishing a rival \n            notation (e.g., Isao Honda, who used dashed lines everywhere, \n            but distinguished mountain folds by a “P” next to the line), the \n            Yoshizawa/Randlett/Harbin system caught on and has become \n            the sole international system in the origami world.\n                No system is perfect, and over the years, various diagram-\n            mers have made their own additions to the system. Some, like \n            open and closed arrows (to denote open and closed sink folds), \n            died a quiet death; others, like Montroll’s “unfold” arrow, \n            have become ﬁrmly established in the origami diagrammatic \n            lexicon (symbolicon?). Every author has his or her particular \n            quirks of diagramming, but the core symbols and terms are \n            nearly universal.\n                Odds are that you already have some familiarity with \n            origami and have encountered the Yoshizawa diagramming \n            system. It will, however, serve us to run through the basic \n            symbols and terms, both to establish a ﬁxed starting point \n            and to start the wheels turning for origami design, which \n            is as much a way of looking at origami as it is a set of codiﬁed \n            tools.\n                The ﬁrst thing to run through are origami terms, which \n            include names, directions, and positions. Origami diagrams are \n            ideally drawn so that the diagrams themselves are sufﬁcient \n            to enable the reader to fold the model (which allows people the \n\n                                                                                                      13\n                                                                 Chapter 2: Building Blocks \n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d68"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 19,
  "content": "            steps, but if not, it is essential that you read through this sec-\n            tion. Chapter 2 also introduces a key concept: the relationship \n            between the crease pattern and the folded form, a relationship \n            that we will use and cultivate throughout the book.\n                Chapter 3 initiates our foray into design by examining a \n            few designs. The ﬁrst stage of origami design is modiﬁcation of \n            an existing design; in this chapter, you will have an opportunity \n            to explore this approach by devising simple modiﬁcations to a \n            few ﬁgures.\n                Chapter 4 introduces the concept of a base, a fundamental \n            form from which many different designs may be folded. You will \n            learn the traditional bases of origami, a number of variations on \n            these bases, and several methods of modifying the traditional \n            bases to alter their proportions.\n                Chapter 5 expands upon the idea of modifying a base by \n            focusing upon modiﬁcations that turn a single point into two, \n            three, or more simply by folding. This technique, called point-\n            splitting, has obvious tactical value in designing, but it also \n            serves as an introduction to the concept of modifying portions \n            of a base while leaving others unchanged.\n                Chapter 6 introduces the concept of grafting: modifying \n            a crease pattern as if you had spliced additional paper into it \n            for the purpose of adding structural elements to an existing \n            form. Grafting is the simplest incarnation of a broader idea, \n            that the crease patterns for origami bases are composed of \n            separable parts.\n                Chapter 7 then expands upon the idea of grafting and \n            shows how multiple intersecting grafts can be used to create \n            patterns and textures within a ﬁgure—scales, plates, and other \n            textures. This set of techniques stands somewhat indepen-\n            dently, as almost any ﬁgure can be “texturized.”\n                Chapter 8 generalizes the concept of grafting to a set of \n            techniques called tiling: ﬁguratively cutting up and reassem-\n            bling different pieces of crease patterns to make new bases. \n            This chapter deﬁnes both tiles and matching rules that apply \n            to the edges of tiles to insure that the assemblies of tiles can \n            be folded into a ﬂat shape. Chapter 8 also introduces the pow-\n            erful concept of a uniaxial base—a family of structures that \n            encompasses both the traditional origami bases and many of \n            the most complex modern bases.\n                Chapter 9 shows how the tile decorations that enforce \n            matching can be expanded into a design technique in their \n            own right: the circle/river method, in which the solution of \n            an origami base can be derived from packing circles into a \n            square box. Circle/river packing is one of the most powerful \n            design techniques around, capable of constructing ﬁgures with \n\n                                                                                                      7\n                                                                    Chapter 1: Introduction\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d69"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 555,
  "content": "                                                                             63–66\n\n\n                         66. Pull out some loose paper.                 67. Repeat steps 63–66 on the left.\n\n\n                   68. Fold the right point downward on an           69. Mountain-fold both layers underneath.\n                   existing crease and swing it over to the left.\n\n\n                          70. Squash-fold the point.                71. Wrap one layer on each side of the point.\n\n\n                         72. Fold one-third of the edge               73. Narrow further with mountain folds.\n                         underneath on each side.\n\n                                                                                                                 543\n                                                        Folding Instructions:Chapter Black  Forest12: Box Cuckoo Pleating Clock\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d6a"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 233,
  "content": "             Turtle\n\n\n              1. Begin with a square, white\n              side up. Fold the paper in half,\n              making a pinch along the top\n              and bottom edges. Unfold.\n\n\n              2. Fold the left side in to the    3. Fold the lower right corner        4. Fold the edge of the flap\n              center line, making a crease       over to touch the crease you          over to lie along the right edge.\n              that extends about halfway up.     just made.\n\n\n              5. Fold the bottom left corner     6. Fold the corner back to the       7. Fold the two corners down\n              over to line up with the right     left.                                to lie along the center line.\n              corner.\n\n     222\n                         Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d6b"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 227,
  "content": "                                                                        Figure 7.28. \n                                                                        The crease pattern with two \n                                                                        sets of pleats arrayed across \n                                                                        the middle.\n\n\n            near the pectoral ﬁns. These regions are highlighted in yellow \n            in Figure 7.28. So those regions will not have scales; they will \n            have sets of parallel lines instead. However, if we added more \n            pleats to ﬁll in those areas with scales, the pleats will start \n            encroaching on the head and tail, respectively. We can reduce \n            the uncovered region just a bit if we allow some pleats on the \n            tail and alter the proportions of the head, to something like \n            Figure 7.29.\n\n\n                                                                        Figure 7.29. \n                                                                        Modified crease and pleat \n                                                                        pattern.\n\n                                                                                                     215\n                                                                Chapter 7: Pattern Grafting\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d6c"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 541,
  "content": "            68. Fold the two flaps out to   69. Grasp the organist and pull  70. Pull the sides of the seat\n            the sides.                      her upward so that the colored   out and form it into a box.\n                                            layers below her spread apart.   Square up all of the edges of\n                                            (The keyboard assembly is still  the box.\n                                            not shown here.)\n\n\n            71. Like this. Now we’ll finish the 72. Spread the pleats out    73. Swing the keyboard and\n            keyboard; the next step shows the   to the sides evenly.         pedals down. Arrange the\n            keyboard but not the organist.                                   hands and feet of the organist\n                                                                             over the keyboard and pedals.\n\n\n                                              74. Finished Organist.\n\n                                                                                                     529\n                                                               FoldingChapter Instructions: 12: Box  OrganistPleating\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d6d"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 569,
  "content": "            186. Close-up of     187. Fold         188. Fold              189. Fold           190. Fold the flap\n            the bird's head. Pull and unfold.      and unfold.            and unfold.         over to the right.\n            out the loose flap\n            of paper.\n                          187–189\n\n\n              191. Repeat           192. Fold the top point    193. Petal-fold. Bring      194. Squash-fold (like\n              steps 187–189.        down, incorporating the    the two points upward       half of a petal fold).\n                                    creases shown.             together.\n\n\n                     195. Pull out a single           196. Fold the point          197. Fold a rabbit ear that\n                     layer of paper.                  back upward.                 stands straight out from the\n                                                                                   clock face.\n\n\n            198. Perspective          199. Crimp the           200. Slide the           201. Finished bird. Now,\n            view of step 197.         head downward.           lower half of the        we will attach the clock\n                                                               beak downward.           face to the clock body.\n\n                                                                                                                 557\n                                                        Folding Instructions:Chapter Black  Forest12: Box Cuckoo Pleating Clock\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d6e"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 696,
  "content": "./origami_dataset_dev/Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li/page696_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d6f"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 596,
  "content": "                                         more fundamental mathematical insight, comes from more \n                                         complex rectilinear polygons. What do we use for an L-shaped \n                                         polygon? A T-shaped polygon? An arbitrary polygon? In other \n                                         words, what is a general solution for ridge creases in an arbi-\n                                         trary polygon for which the square and rectangular patterns \n                                         are particular special cases?\n                                             The answer is a construction known to computational \n                                         geometers as the straight skeleton, which is a construction \n                                         that arises in various computational geometry problems but \n                                         that was linked to the world of paper-folding by Professor Erik \n                                         Demaine at MIT, when he showed that the straight skeleton \n                                         was the key step in the solution of the famous one-straight-cut \n                                         problem. That problem is: given a collection of straight-line \n                                         geometric shapes on a piece of paper, fold the paper in such a \n                                         way that one straight cut through all layers ends up cutting \n                                         along all of the lines at the same time. The fold lines for the \n                                         one-cut problem are provided by the straight skeleton construc-\n                                         tion. As it turns out, the universal molecule from origami circle \n                                         packing provides another solution to the one-cut problem (at \n                                         least for convex polygons); thus, there is a pleasant symmetry \n                                         that the universal molecule of origami can solve certain one-cut \n                                         problems, while the straight skeleton of the one-cut problem \n                                         turns out to provide a key set of creases in polygon-packed \n                                         origami design.\n                                             So what is this “straight skeleton” pattern? Let’s start with \n                                         how it is created, which can serve as a deﬁnition of sorts.\n                                             We propagate each edge of the polygon toward the interior \n                                         of the polygon at a constant velocity in the direction perpendicu-\n                                         lar to the edge, lengthening or shortening it so that it remains \n                                         in contact with its neighbors, so that the polygon continuously \n                                         shrinks. If two vertices of the polygon collide, they merge into a \n                                         single vertex, and the intervening edge disappears. If a vertex \n                                         of the polygon collides with a nonadjacent edge, the shrinking \n                                         polygon splits in two and the process continues. The straight \n                                         skeleton is the unique set of line segments produced by the paths \n                                         of all of the shrinking polygon vertices. \n                                             In graph theoretic terms, the straight skeleton forms a tree \n                                         graph—that is, it is connected and contains no loops. The tree \n                                         divides the polygon into smaller polygonal regions; each region \n                                         touches exactly one edge of the polygon with the remaining \n                                         boundary of the subregion formed by segments of the straight \n                                         skeleton. The straight skeleton has the property that every \n                                         point in each region is closer to the region’s part of the polygon \n                                         edge than to any other region’s polygon edge.\n                                             This is not quite the whole truth, because when we say \n                                         “closer” we have to measure distance in a special way. Basi-\n\n     584\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d70"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 191,
  "content": "./origami_dataset_dev/Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li/page191_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d71"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 582,
  "content": "                                         Section 10.8, but TreeMaker (or a bit of manual manipulation \n                                         of the folded base) can also ﬁnd the full crease assignment, \n                                         which is shown in Figure 13.6.\n\n\n            Figure 13.6. \n            Full crease assignment for the \n            TreeMaker version of the generic \n            beetle.\n\n                                             TreeMaker also provides a picture of the folded form of the \n                                         base, given as an “x-ray view” so that all creases are visible. \n                                         This base is shown in Figure 13.7. The coloring of the creases \n                                         in the folded form matches the structural coloring in the crease \n                                         pattern, so you can see explicitly that all axial creases (green) \n                                         do indeed coincide along the axis; the ridges (red) propagate \n                                         toward and away from the vertical axis; the hinges (blue) are \n                                         all perpendicular to the axis; and the gussets (gray) are parallel \n                                         to the axis, but are removed from it at some distance.\n\n\n            Figure 13.7. \n            X-ray view of the base for the \n            generic beetle with creases \n            colored according to their type.\n\n     570\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d72"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 586,
  "content": "                                         efﬁcient. Besides, efﬁciency isn’t everything—sometimes it’s \n                                         not even very much. The beneﬁts gained from polygon packing \n                                         in terms of elegance, symmetry, and foldability often outweigh \n                                         any losses of efﬁciency and gains in thickness.\n                                             I have been talking about “polygon packing” in general, \n                                         not just box pleating, because I want to emphasize the gener-\n                                         ality of polygon packing. There are multiple forms of polygon \n                                         packing; box pleating is but one of them. Because it is the most \n                                         accessible, though, it is the form I will concentrate on for the \n                                         rest of this chapter.\n\n                                         13.3. Concepts of Polygon Packing\n                                         Polygon packing works similarly to circle packing; we are still \n                                         fundamentally creating a stick-ﬁgure-like shape as a uniaxial \n                                         base, but we now pack hinge polygons and hinge rivers, not \n                                         circles and curvilinear rivers, into the square. There are further \n                                         similarities: as with circle packing, we do not allow overlap \n                                         (because any spot of paper can only be in any one ﬂap), and \n                                         the centers of the polygons must lie within the square. But \n                                         there are differences, too. In circle packing, the axial creases \n                                         in adjacent circles and rivers all line up collinearly. This will \n                                         no longer be the case. It will turn out that grids are not just a \n                                         “nice” thing to have—they are essential to keeping the crease \n                                         pattern ﬁnite.\n                                             There is a new family of creases that appears, which joins \n                                         the families of ridge, axial, and hinge creases: axis-parallel \n                                         creases. These are creases that in the folded form run parallel \n                                         to the axis but are offset by some distance from the axis. The \n                                         gusset crease of circle packing is an example of this, but while \n                                         gussets are occasional visitors to circle-packed bases (via gusset \n                                         molecules and universal molecules), axis-parallel creases are \n                                         essential and widespread elements in polygon-packed bases.\n                                             So what are these hinge polygons and hinge rivers?\n                                             In circle packing, there are two fundamental shapes used \n                                         for packing, illustrated in Figure 13.9. They are the circle and \n                                         the river.\n\n\n            Figure 13.9. \n            Two circles and a river.\n\n     574\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d73"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 592,
  "content": "                                         Figure 13.14. \n                                         Left: a nearly full packing. Space can be entirely ﬁlled by expanding \n                                         one of the packing squares into a rectangle. \n                                         Right: the completed packing. Boundaries of the hinge polygons \n                                         become hinge creases.\n\n                                         closest edge. What we are doing, instead, is putting more layers \n                                         of paper into the ﬂap. However, if a square is “loose” enough \n                                         in the packing that it can be expanded in both directions, then \n                                         we truly can lengthen the associated ﬂap.\n                                             I call this process inﬂation, because we are indeed making \n                                         each hinge polygon larger. But, unlike the inﬂation of circle \n                                         packing in which all circles increase in size at the same rate \n                                         (and result in longer ﬂaps), in this version of inﬂation, we ex-\n                                         pand individual squares at different rates, and often in only a \n                                         single direction.\n                                             In many cases, it is possible to soak up all of the excess pa-\n                                         per by expanding squares into rectangles and possibly shifting \n                                         the positions of some rectilinear rivers by moving the locations \n                                         of their right-angle bends. You may ﬁnd, however, that a few \n                                         small holes are left that can’t be plugged simply by expand-\n                                         ing rectangles and/or moving rivers. Those small holes can be \n                                         plugged by adding additional squares and/or rectangles, which \n                                         of course then add ﬂaps to the base, just as in circle packing we \n                                         were able to add circles that broke high-order polygons up into \n                                         lower-order polygons by creating additional ﬂaps.\n                                             But what is really remarkable is that we can further ex-\n                                         pand the rectangles, extruding rectilinear lobes to form more \n                                         complex, irregular, rectilinear polygons. This is somewhat \n\n     580\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d74"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 545,
  "content": "                                                          160\n\n                                                          156\n\n                                                          152\n\n\n                                                          144\n                                                          141\n\n\n                                                          133\n                                                          131\n\n\n                                                          123\n\n\n                                                          112\n\n\n                                                          103\n\n\n                                                           94\n\n\n                                                           83\n\n\n                                                           74\n\n\n                                                           65\n\n\n                                                           56\n\n                                                           52\n                                                           49\n                                                           47\n             10. Divide the                  11. Using the                     12. For the rest\n                                                           41\n             paper into                      vertical and                      of the model,\n             sixteenths,                     diagonal creases                  ignore the light\n             again, creasing                 as guides, add 33                 creases you\n             lightly, and turn               the horizontal 30                 made in steps\n             the paper back                  creases shown.                    2–10 and use the\n             over.                           (If you have  26                  horizontal\n                                             skipped steps                     creases from\n                                             2–10, you may 20                  step 11 as your\n                                             measure the                       major\n                                             locations of the                  landmarks. Fold\n                                             horizontal                        and unfold\n                                             creases.)     8                   vertically, then\n                                                                               add the indicated\n\n                                                           0                   diagonal creases.\n                                                              0            16\n\n                                                                                                                 533\n                                                        Folding Instructions:Chapter Black  Forest12: Box Cuckoo Pleating Clock\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d75"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 223,
  "content": "                A concern with all pattern grafts is efﬁciency: How much \n            paper is consumed by the pattern? This concern can be quanti-\n            ﬁed as the ratio between the area of the pleated structure and \n            the original paper. This ratio can be calculated by comparing \n            the areas of the entire array or, equivalently, from a single \n            tile. Figure 7.21 gives the dimensions of the folded form and \n            crease pattern. The dimensions are relative, of course; I have \n            picked a convenient dimension to be 1 “unit” from which all of \n            the other dimensions follow.\n\n\n                          1+√2           1+√2\n\n                           2+√2\n                        1                    √2\n                                           2+3√2                        Figure 7.21. \n                                                  √\n                                 2 + 3√2        1+ 2                    Comparison of the tile sizes for \n                                      ≈1.83\n                                  2 + √2                                the folded and unfolded tile.\n\n                This comparison shows that the unfolded tile is about \n            83% larger in linear size (hence about 3.3 times the area) of \n            the folded tile. That means that on average, there are two to \n            three layers of paper everywhere in the pattern—quite a bit \n            of thickness for folding. But that’s the average; individual re-\n            gions of the pattern can be considerably thicker, as shown in \n            Figure 7.22, which lists the number of layers in each region of \n            the basic tile.\n\n\n                                        1\n                                    3      3\n                                       5\n                                 1       13    1\n                                       5\n                                     3     3                            Figure 7.22. \n                                                                        The number of layers of paper \n                                        1\n                                                                        in each region of the tile.\n\n                This shows that there are as many as 13 layers in the \n            pattern, which means that any subsequent folding that goes \n            on will require folding through quite thick layers.\n                But there’s nothing particularly special about this pat-\n            tern tile. There is much variety possible in creating sinks and \n            rearrangements of layers around two crossed pleats. A bit of \n\n                                                                                                     211\n                                                                Chapter 7: Pattern Grafting\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d76"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 237,
  "content": "              4. Fold the right edge over so that the 5. Fold the left two corners over to 6. Make pinches between the pairs\n              corner hits the mark you just made; the mark you just made; pinch at top of marks at top and bottom, dividing\n              pinch at top and bottom and unfold. and bottom and unfold. This divides into quarters.\n                                               in half the distance between the corner\n                                               and mark.\n\n\n              7. Make pinches between the pairs 8. Divide again, getting sixteenths. 9. One more time, getting thirty-\n              of marks at top and bottom, dividing                               seconds.\n              into eighths.\n\n\n              10. Fold the right corners to the last- 11. Divide the distance into quarters. 12. Divide each of the three gaps in\n              but-one mark, pinch, and unfold.                                   half. When you are done, you will\n                                                                                 have divided the top and bottom edges\n                                                                                 into 39 equal divisions.\n\n     226\n                         Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d77"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 551,
  "content": "                                         33–35                              33–35\n\n\n              39. Repeat steps 33–35 again.     40. Repeat steps 33–35 one             41. Pleat in two places.\n                                                more time.\n\n\n               42. Turn the paper over.          43. Squash-fold the corner.         44. Squash-fold the corners\n                                                 All of the pleated layers go to     and pull the indicated edges\n                                                 the left. In this and               downward.\n                                                 succeeding steps, don't extend\n                                                 the vertical creases any farther\n                                                 than you have to, so that the\n                                                 top of the paper remains\n                                                 unfolded (and the model does\n                                                 not lie flat).\n\n\n                                                                                                                 539\n                                                        Folding Instructions:Chapter Black  Forest12: Box Cuckoo Pleating Clock\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d78"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 579,
  "content": "                         s/2\n                      w\n                                 4   1\n               x            4\n                      1 1\n                   4\n\n                4                                    4 1\n\n                                                      1\n                1                                        1\n                1                                  4  1\n                                                      1\n                                                  6   1  1\n                6\n                                                 8    2\n\n                                                      4\n             s\n\n                  6                  4\n\n                    2\n                                     4\n               y\n\n                        8\n                                                                       Figure 13.3. \n                                8                                      Circle packing for the generic \n                     z                                                 beetle in a square of side s.\n                         s/2\n\n                And then at the two corners, the Pythagorean theorem \n            gives the remaining two equations:\n\n                       x       2 + w 2 = (4 +1+ 1  +   4)   2 , (13–4)\n\n                               2   2            2\n                       y         + z = (6 + 2 +  8)    .      (13–5)\n\n                These  equations can be solved exactly (with complex \n            results), but all we really need are numerical values for \n            the solution  with all real positive values, which are readily \n            found to be the values shown in Table 13.1.\n\n                           Distance            Value\n                              w                 9.63\n                              x                 2.70\n                              y                14.56\n                              z                 6.63                   Table 13.1. \n                                                                       Distance values for the generic \n                              s                29.26                   beetle circle packing.\n\n                This packing is not complete, however. The packing of the \n            three circles in the interior is not rigid; there is room for the \n            circles (and the rivers around them) to “rattle around” in the \n            interior. The way we deal with this situation (which occurs \n\n                                                                                                     567\n                                                           Chapter 13: Uniaxial Box Pleating\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d79"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 21,
  "content": "            not been previously published. I have also, in several chapters, \n            presented crease patterns and bases of models whose instruc-\n            tions have been published elsewhere; for many of them, you will \n            ﬁnd sources for their full folding sequences in the References \n            section, though for some, the discovery of how to collapse the \n            crease pattern into the base will be left as an exercise for the \n            reader.\n                The concepts presented here are by and large my own \n            discoveries, developed over some 40-plus years of folding. They \n            were not developed in isolation, however. Throughout the book \n            I have pointed out sources of inﬂuence and/or ideas I have ad-\n            opted. In several cases others have come up with similar ideas \n            independently (an event not without precedent in both origami \n            and the sciences). Where I am aware of independent invention \n            by others, I have attempted to identify it as such. However, the \n            formal theory of origami design is very much in its infancy. \n            Sources of design techniques are often unpublished and/or \n            widely scattered in sometimes obscure sources. This work is \n            not intended to be a comprehensive survey of origami design, \n            and if it seems that I have left out something or someone, no \n            slight was intended.\n                Technical folding, origami sekkei, is an ediﬁce of concepts, \n            with foundations, substructure, and structure. Because the \n            organization of this book mirrors this structure, I encourage \n            you to read the book sequentially. Each chapter provides the \n            foundation to build concepts in the next. Let’s start building.\n\n\n                                                                                                      9\n                                                                    Chapter 1: Introduction\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d7a"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 747,
  "content": "             Martin Gardner, “Tangent Circles,” Fractal Music and Hypercards, \n             W. H. Freeman, 1992, pp. 149–166.\n\n             Hans Melissen, On the Packing of Circles, Ph.D. Thesis, University \n             of Utrecht, 1997.\n\n             George Rhoads’s Bug, made from a nine-circle-packing base, may be \n             found in: \n\n             Samuel L. Randlett, The Best of Origami, op. cit., pp. 130–131.\n\n             Most of the discussion, counterexample, and solution strategy for the \n             Napkin Folding Problem is captured at David Eppstein’s Geometry \n             Junkyard: http: //www.ics.uci.edu/~eppstein/junkyard/napkin.html.\n\n             A more extensive discussion (including the Margulis/Arnold credit \n             question) is at: http://en.wikipedia.org/wiki/Napkin_folding_problem.\n\n             10. Molecules\n             A full folding sequence for the Ant of Figure 10.43 may be found in:\n\n             Robert J. Lang, Origami Insects II, op. cit., pp. 24–30.\n\n             A full folding sequence for the Cockroach of Figure 10.44 may be \n             found in:\n\n             Robert J. Lang, Origami Insects II, ibid., pp. 47–55.\n\n             A full folding sequence for the Eupatorus gracilicornus of Figure \n             10.51 may be found in:\n\n             Robert J. Lang, Origami Insects II, ibid., pp. 66–75.\n\n             The Maekawa-Justin theorem is described in:\n\n             Thomas Hull, “The combinatorics of ﬂat folds: a survey,” in Origami3, \n             op. cit., pp. 29–37.\n\n             Toshiyuki Meguro describes circle packing and several types of mol-\n             ecules in: \n\n             Toshiyuki Meguro, “Jitsuyou origami sekkeihou [Practical meth-\n             ods of origami designs],” Origami Tanteidan Shinbun, nos. 7–14, \n             1991–1992.\n\n             11. Tree Theory\n             A partial description of tree theory is given in:\n\n             Robert J. Lang, “Mathematical algorithms for origami design,” Sym-\n             metry: Culture and Science, vol. 5, no. 2, 1994, pp. 115–152.\n\n\n                                                                                                                 735\n                                                                                        References\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d7b"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 753,
  "content": "             15. Hybrid Bases\n             Engel’s Butterﬂy may be found in:\n\n             Peter Engel, Folding the Universe: Origami from Angelﬁsh to Zen, \n             op. cit., pp. 292–311.\n\n             A full folding sequence for the Butterﬂy of Figure 15.5 may be  \n             found in:\n\n             Robert J. Lang, Origami Insects and their Kin, op. cit., pp. 40–45.\n\n             A full folding sequence for the Dragonﬂy of Figure 15.6 may be  \n             found in:\n\n             Robert J. Lang, Origami Insects II, op. cit., pp. 56–65.\n\n             A full folding sequence for the Rabbit of Figure 15.11 may be \n             found in:\n\n             Robert J. Lang and Stephen Weiss, Origami Zoo, op. cit., pp. 115–119.\n\n             A full folding sequence for the Mouse of Figure 15.13 may be \n             found in:\n\n             Robert J. Lang and Stephen Weiss, Origami Zoo, ibid., pp. 89–92.\n\n             Origami Societies\n             Many countries have origami societies that hold conventions and ex-\n             hibitions, sell origami supplies, and publish new and original designs. \n             Four of the larger societies are: \n\n                  Origami USA\n                  15 W. 77th St.\n                  New York, NY 10024\n                  http: //www.origami-usa.org\n\n                  British Origami Society\n                  c/o Penny Groom\n                  2a The Chestnuts\n                  Countesthorpe\n                  Leicester LE8 5TL\n                  http: //www.britishorigami.org.uk/\n\n                  Japan Origami Academic Society\n                  c/o Gallery Origami House\n                  1-33-8-216, Hakusan\n                  Bunkyo-ku, Tokyo\n                  113-0001, JAPAN\n                  http: //www.origami.gr.jp/\n\n                  Nippon Origami Association\n                  2-064, Domir-Gobancho\n\n                                                                                                                 741\n                                                                                        References\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d7c"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 35,
  "content": "            to be unassigned. Not surprisingly, it can be far harder to fold \n            an origami ﬁgure from an unassigned crease pattern than \n            from an assigned one. The process of assigning creases can \n            be thought of as labeling each of the fold lines with further \n            information: namely, its fold direction. That’s the ﬁrst step in \n            a much richer potential for labeling, and as we will eventu-\n            ally see, we can label creases with far more information, and \n            far more signiﬁcant information, than their mere mountain/\n            valley status.\n                While all origami models are created entirely from moun-\n            tain and valley folds, they often occur in distinct combinations, \n            combinations that occur often enough that they have been \n            given names of their own.\n                The ﬁrst and simplest combination fold is the inside \n            reverse fold, which is a fold used to change the direction of a \n            ﬂap. While either a mountain or valley fold could usually be \n            used in the same place, a reverse fold combines both mountain \n            and valley and is usually more permanent, since the tension \n            of the paper tends to keep the reverse fold together. A reverse \n            fold always takes place on a ﬂap consisting of at least two lay-\n            ers of paper. In an inside reverse fold, the mountain fold line \n            occurs on the near layer, a valley fold occurs on the far layer, \n            and the “spine” above the fold lines is turned inside-out. It is \n            indicated by a push arrow, since to form the reverse fold, the \n            spine must be pushed and turned inside-out. If the far edges \n            are visible, then the valley fold may be shown extending from \n            the visible edge, as in Figure 2.21.\n\n\n                                                                       Figure 2.21. \n                                                                       The inside reverse fold.\n\n                In the inside reverse fold, the tip of the ﬂap ends up \n            pointing away from the spine; in Figure 2.21, the spine is \n            the right side of the ﬂap, so the tip must point to the left. If \n            you wanted it to point to the right, then you would use the \n            other type of reverse fold, the outside reverse fold, which is \n            illustrated in Figure 2.22. Again, there is a mountain fold \n            and a valley fold, but in the outside reverse fold, the valley \n            fold occurs on the near layers and the mountain fold on the \n\n                                                                                                      23\n                                                                 Chapter 2: Building Blocks \n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d7d"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 9,
  "content": "",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d7e"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 196,
  "content": "                                      54. Reverse-fold             55. Reverse-fold           56. Fold the tip of\n                                      the flap to the              the flap downward          the flap up and\n                                      right along creases          so that the raw            unfold.\n                                      aligned with the             edges are aligned.\n               53. Steps 54–62        folded edge.\n               will focus on the\n               flap in the circle.\n\n\n              57. Crimp the tip    58. Reverse-fold   59. Reverse-fold     60. Reverse-fold    61. Reverse-fold\n              upward so that the   the tip inside.    the edge.            three edges back    three edges back\n              raw edge ends up                                             to the left.        to the right.\n              horizontal.\n\n\n              62. Like this.                       54–62\n\n\n                                      63. Repeat steps               64. Turn the\n                                      54–62 on the right             model over.              65. Steps 66–76\n                                      near flap.                                              will focus on the\n                                                                                              flap in the circle.\n\n     184\n                         Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d7f"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 182,
  "content": "                                                                                                      8–14\n\n\n                 13. Open-sink the                 14. Fold one layer                  15. Repeat steps 8–14\n                 corners using the                 upward.                             on the other flap.\n                 existing creases.\n\n\n                 16. Fold one flap down          17. Like this. Now we’ll go       18. Fold and unfold along the\n                 to the lower left.              back to working on the entire     diagonal. Then turn the paper\n                                                 model.                            over from top to bottom.\n\n\n                                                           1/8\n\n\n              19. Fold and unfold in half both  20. Fold a Preliminary Fold        21. Mountain-fold the corners\n              vertically and horizontally.      with the creases you just made.    underneath as far as possible.\n              Then rotate the paper 1/8 turn\n              clockwise.\n\n     170\n                         Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d80"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 155,
  "content": "            as a free ﬂap. But there is a difference between the size reduc-\n            tion arising from point-splitting and that from grafting; in \n            point-splitting, the split ﬂaps get reduced in size, but the rest \n            of the model (the body, in the case of the Frog) remains the \n            same size. In grafting, on the other hand, the entire model is \n            shrunk in proportion to accommodate the graft, so the basic \n            proportions of the model are unaltered from their pregrafted \n            values.\n                There are two ways we’ve seen to augment a square at \n            its corners: We could add a border graft—a strip running all \n            the way around the outside—or we could add two strips cross-\n            ing in the middle. Both could be used (and I encourage you to \n            try both yourself), but the crossing-strips conﬁguration offers \n            an extra bonus of creating some extra paper in the middle of \n            the paper, as shown in Figure 6.15. Why is that a bonus? In \n            the traditional Frog, the middle of the paper winds up at the \n            head. It’s always nice to have some extra paper at the head \n            of an animal where it can be used for facial features—mouth, \n            tongue, teeth—or, in the case of a tree frog, prominent eyes. \n            We may not have started designing a frog with eyes, but if \n            the opportunity presents itself, we’ll take it.\n\n\n            Figure 6.15. \n            Adding four squares to a Frog Base by cutting along the diagonals.\n\n                Now, in designing a strip-grafted model, there is a deci-\n            sion to be made: How large should the small squares be, or \n            equivalently, how wide should the strip be? You can, of course, \n            simply use trial and error: Try wider and narrower strips \n\n                                                                                                     143\n                                                                       Chapter 6: Grafting\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d81"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 633,
  "content": "             58. Open-sink the long                59. Mountain-fold the                  60. Pull out some loose\n             edges up to the corners.              corners inside their                   paper in the same way\n                                                   respective flaps.                      you did in step 57.\n\n                      !\n\n\n                                              1/4\n\n\n                                                                 62. Fold all four legs down,\n                                                                 removing the crimp at their base.\n\n\n                61. Carefully fold the model in half,\n                making sure you don’t split the\n                paper at the two marked points.\n                Rotate the paper 1/4 turn clockwise.\n\n                                                                          63. Reverse-fold the tail downward.\n                                                                          Lift up the antlers so that they stand\n                                                                          up and out from the head.\n\n     622\n                         Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d82"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 627,
  "content": "             15. Add 12 diagonal creases.                   16. Fold and unfold in 32 places along the right\n                                                            edge.\n\n\n             17. Precreasing is finished. Pleat the top and 18. Form a Waterbomb Base-like shape using the\n             bottom edges on existing creases.              existing creases. You don’t need to press it fully\n                                                            flat yet.\n\n\n     616\n                         Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d83"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 141,
  "content": "                                                                              Grafting6\n\n                         he initial stages of origami design are usually \n                         modiﬁcations of existing designs. This modi-\n                         ﬁcation can take two forms. The simplest is \n                         that which every folder does consciously or un-\n                         consciously: simply altering proportions of the \n            folding sequence while still following the designer’s instruc-\n            tions. You could change the proportions of particular creases, \n            change the crease ﬁrmness from sharp to smooth (or vice \n            versa), add or remove creases, straighten what is curved and \n            curl what is straight. It is very easy to change a model in the \n            ﬁnal shaping folds. In fact, it is very difﬁcult to make a precise \n            replica of someone else’s fold, particularly if the design is fairly \n            complex. And precise duplication is rarely desirable; an artist \n            must develop his or her own vision of the folded model even \n            when following someone else’s design, and therefore must not \n            be afraid to deviate from the original folding sequence.\n                Changing proportions of an existing model, however, is very \n            limiting to the origami designer. You can only work with the \n            existing structure; you have the same number of ﬂaps, the same \n            lengths, the same relative positions. Techniques such as point-\n            splitting can turn one ﬂap into two, or three, or more, but only, \n            as we have seen, with a substantial penalty in ﬂap length.\n                Quite often, what is needed—or at least desired—in a \n            derivative origami design is not just a rearrangement of the \n            existing paper, but actually a bit more paper somewhere: a \n            longer leg, an extra set of appendages, another petal on the \n            ﬂower, another horn on the beetle. At such times, you might \n            have a nearly complete design (either your own or someone \n            else’s) to which you would like to add a bit more structure, but \n            there’s no more paper from which to make the new bits. At such \n            times—particularly if you’ve already put a great deal of work \n\n                                                                                                     129\n\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d84"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 169,
  "content": "            simpler set of strip grafts by propagating pleats inward from \n            the edges of the square and noting that when they meet, \n            we can send off a single new pleat that connects both pleat \n            intersections. The resulting pattern, which is much more \n            efﬁcient with paper, is illustrated in Figure 6.30.\n                I should point out that the crease lines in the original \n            base actually propagate into the pleats; I have left those out of \n            Figure 6.30 in the interest of clarity. Again, I would encourage \n            you to draw up this pattern and fold it into a lizard and/or to \n            extend the pattern to larger numbers of toes.\n\n            6.4. More Applications of Grafts\n            One of the more enjoyable uses of border and strip grafts is to \n            breathe new life into an old model. There is a shrimp design \n            in the traditional Japanese repertoire, folded from a Bird \n            Base, that is elegant but spare. Simply adding a border graft \n            on two sides allows one to add the larger tail and split claws \n            that make a respectable crawﬁsh, as shown in Figure 6.31. I \n            encourage you to fold it and try it out yourself. The structure \n            is simple enough that you should be able to make it from the \n            crease pattern alone. The folded model shown in Figure 6.31 \n            is still quite minimal; by narrowing the claws and adding \n            further shaping folds, you should be able to produce quite a \n            realistic model.\n\n\n            Figure 6.31. \n            Crease pattern, base, and folded model of the Crawﬁsh.\n\n                                                                                                     157\n                                                                       Chapter 6: Grafting\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d85"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 697,
  "content": "./origami_dataset_dev/Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li/page697_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d86"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 394,
  "content": "                                             It is tempting to think that we could keep applying the \n                                         process to quadrilaterals and thereby reduce every uniaxial \n                                         base to a collection of rabbit-ear molecules, but quadrilater-\n                                         als turn out to be special. If you add a circle to the center of \n                                         a quadrilateral that touches three of the four circles, you will \n                                         end up with two triangles and another quadrilateral. So it’s \n                                         not possible, in general, to take a circle packing crease pattern \n                                         down to consist entirely of rabbit-ear molecules by adding circles \n                                         without altering any of the existing circles.\n                                             Thus, in the circle packing in Figure 10.49—which cor-\n                                         responds to a diagonally symmetric base with thirteen equal \n                                         ﬂaps and two slightly longer ﬂaps at the sides—the axial creases \n                                         outline triangles and four pentagons. By adding another circle \n                                         (meaning another ﬂap) to each pentagon, each can be broken \n                                         down into two quadrilaterals and a triangle.\n                                             Now all polygons can be filled in with molecular \n                                         creases, giving the generic form crease pattern shown in \n                                         Figure 10.50.\n\n\n            Figure 10.50. \n            Generic form crease pattern for \n            the ﬁfteen-ﬂap base, ﬁlled in \n            with molecules.\n\n                                             I shall leave it as another challenge to you to fold this pat-\n                                         tern into a base. It is not easy, given all of the middle ﬂaps, but \n                                         you can easily derive the proportions by folding alone; many of \n                                         the key lines propagate at multiples of 22.5°.\n                                             You might wonder, what would one ever make from a \n                                         ﬁfteen-ﬂap base? I have used this circle packing for a ﬂying \n                                         Eupatorus gracilicornis (a horned beetle), although instead of \n                                         breaking up the axial polygons in this way, I used a pentagonal \n\n     382\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d87"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 380,
  "content": "                                             Once again, however, the gusset molecule comes to the \n                                         rescue; it is possible to construct a version of the gusset mol-\n                                         ecule that brings all tangent points together, illustrated in \n                                         Figure 10.32. This method is a simple geometric construction \n                                         for the creases; a numerical prescription will be given later.\n                                             These ﬁve molecules—rabbit-ear, Waterbomb, arrowhead, \n                                         sawhorse, and gusset—are sufﬁcient to ﬁll in a ﬂat-foldable \n                                         crease pattern for any pattern of circles and rivers that deﬁne \n                                         a uniaxial origami base. The combination of these molecules \n                                         with circle/river packings is called the circle/river method of \n                                         origami design.\n\n                                         10.8. Crease Assignment in Molecules\n                                         I have intentionally glossed over the topic of crease assignment \n                                         within molecules; it is now time to straighten out the issue. \n                                         When we create a base from circles and rivers, we divide up \n                                         the paper into distinct polygons using the axial creases; we \n                                         can then treat each axial polygon individually, ﬁlling it in with \n                                         the appropriate molecular pattern. The choice of molecule is \n                                         a local choice, depending only upon the pattern of circles and \n                                         rivers within each axial polygon. However, the assignment \n                                         of crease parity—whether each crease is a mountain, valley, \n                                         or unfolded crease—is global; it depends upon the overall \n                                         structure of the object and, in particular, the arrangement \n                                         of the various ﬂaps. For a base whose axis is oriented verti-\n                                         cally, any given ﬂap can be folded up or down; in addition, for \n                                         middle ﬂaps, there is often a choice in which layers the ﬂap \n                                         lies between. All of these choices give rise to different crease \n                                         assignments.\n                                             Nevertheless, we can specify the parity of many—though \n                                         not all—of the creases in a pattern at the local level, and it is \n                                         often useful to make this identiﬁcation as an incomplete ap-\n                                         proximation of the ﬁnal crease pattern.\n                                             Examination of the molecular patterns we’ve seen thus \n                                         far reveals some rules of thumb for the parity (mountain or \n                                         valley) of the creases within them. Crease parity depends on \n                                         one’s point of view, of course; the convention I have been us-\n                                         ing (and will continue to use) is that the paper is two-colored; \n                                         crease patterns are viewed from the white side of the paper, \n                                         and the model is folded so that the color ends up on the outside \n                                         (visible surface) of the model.\n                                             Under this convention, within any molecule, the ridge \n                                         creases—those creases that extend inward from the corners—\n                                         are always valley folds, as an examination of the molecules in \n                                         the previous section will show.\n\n     368\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d88"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 431,
  "content": "                                                    C\n                          D\n\n                                              C′\n                                   D′′    B′′\n\n                                A′\n                                                                        Figure 11.19. \n                                                                        Drop perpendiculars from the \n                 A                                            B         new vertices B′′ and D′′.\n\n                If you solve for the gusset quad numerically, you will see \n            that there are some quadrilaterals for which the points A′, B′, \n            C′, and D′ all fall on a line or point. In these special cases, you \n            don’t get an inner quadrilateral for the gusset; instead, you get \n            a sawhorse molecule (if a line) or a Waterbomb molecule (if a \n            point). So the gusset molecule is, in fact, the general molecule \n            for any quadrilateral.\n                Using the rabbit-ear molecule for triangles and the \n            gusset molecule for quadrilaterals, you can fill in any tree- \n            theorem-derived collection of axial polygons that consists of \n            triangles and quadrilaterals to get the complete crease pat-\n            tern for the base. Figure 11.20 shows the full crease pattern \n            for the six-legged tree and the resulting base. You can easily \n            verify the crease pattern by cutting it out and folding it on the \n            lines. As you can see, the projection of the base into the plane \n\n              EF\n\n                     B                 B\n                              A                         A\n                                                                              F\n\n                         B          B\n                                                     E\n                                                                 B\n                   C                     C                                            H\n\n                                                                         C\n                                                              G\n            GH\n                                                                                D\n                     C                 C\n\n                              D\n            Figure 11.20. \n            Full crease pattern (in structural form) and the six-legged base.\n\n                                                                                                     419\n                                                                   Chapter 11: Tree Theory\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d89"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 357,
  "content": "                                                               10Molecules\n\n                               e have seen that new bases can be con-\n                               structed from tiles, pieces of old bases. By \n                               inscribing circular arcs within tiles and \n                               mating them according to a few simple \n                               matching rules, we can build new bases \n            with new arrangements of ﬂaps. However, assembly of tiles to \n            build new bases can be a hit-or-miss proposition: You are lim-\n            ited to working with those tiles you have previously cataloged, \n            and there is no guarantee than a given assembly of tiles will \n            ﬁt efﬁciently into a square of paper.\n                In the previous chapter, we saw how one can use circle \n            packings to ﬁnd a pattern of points within a square (or any \n            other shape of paper) that is guaranteed to be foldable into \n            an origami base that has a speciﬁed length and distribution \n            of ﬂaps. When the conﬁguration of circles happens to match \n            the circles (and, if needed, rivers) of known tiles, then we can \n            ﬁll in the crease pattern with the tile creases, and the paper \n            can be collapsed into a base. However, a problem arises if the \n            circle pattern matches none of the tiles we know so far. With \n            the addition of just a few more patterns, however, we can ﬁnd \n            ﬂat-foldable crease patterns for any circle/river packing—and \n            for a great deal more besides.\n                This process is not as difﬁcult as you might think, be-\n            cause there aren’t that many different types of patterns that \n            are needed. Most of the time, the polygons created by circle/\n            river packings are triangles (as they have been in most of the \n            examples we’ve seen thus far). More complicated bases may \n            have quadrilaterals, pentagons, or higher-order polygons. All \n            can be collapsed so that their edges lie on a line and they align \n            with one another properly. What makes the problem of design-\n            ing a base tractable is that, to a large degree, each polygon can \n\n                                                                                                     345\n\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d8a"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 343,
  "content": "                            Divide by 4                               Divide by N\n\n            Figure 9.44. \n            Left: sinking in fourths narrows the ﬂaps. \n            Center: sinking a larger number of times thins the layers further.\n            Right: the limiting case with zero thickness ﬂaps.\n\n                The crease and circle pattern for the Bird Base is shown in \n            Figure 9.43. The Bird Base consists of four corner ﬂaps (modeled \n            by the four corner circles) and one middle ﬂap, which is provided by \n            the single middle circle. Each of the four corner ﬂaps is one quarter \n            of the perimeter of the square, so if the ﬂaps were splayed out into a \n            star shape, the perimeter of the star would be, at most, equal to the \n            perimeter of the square. But the middle ﬂap is an extra ﬂap. Thin-\n            ning the entire base so that the middle ﬂap can stick out creates \n            extra perimeter. Thinning the base further, as shown in Figure 9.44, \n            removes some of the overlap from the center, allowing the perimeter \n            to get slightly larger as the thinned base approaches its limit, where \n            each ﬂap has zero thickness, and the perimeter approaches a value \n            of 4.414.\n                It was the creation of a middle ﬂap that allowed the perimeter \n            to exceed the conjectured limit of 4 units. But by creating more \n            middle ﬂaps, we can increase the perimeter even further. In fact, \n            rather astonishingly, there is no upper limit to the perimeter of \n            a ﬂat fold—at least, one made with mathematically ideal (zero \n            thickness) paper. You can start with as small a sheet as you \n            like. From a postage stamp, you can theoretically fold a shape \n            whose perimeter is the perimeter of the galaxy.\n                How can we do this? Circle-packing gives the key. Suppose \n            we pack an N × N array of circles into a unit square, as shown \n            in Figure 9.45.\n                Each of the circles has a radius \n                                         1\n                                   r =        .                  (9–4)\n                                      2(N −1)\n\n\n                                                                                                    331\n                                                                  Chapter 9: Circle Packing\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d8b"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 425,
  "content": "                           EF\n\n                                 B      A      B\n\n\n                                     B      B\n\n                                 C              C\n                                                                        Figure 11.11. \n                         GHThe pattern of leaf vertices and \n                                  CC                                    axial paths with circles and \n                                                                        rivers from the corresponding \n                                        D                               base.\n\n            ply the branch vertices, points along the axial paths that cor-\n            respond to the branch nodes of the tree. The creases that ﬁll in \n            this structure will be those creases that collapse the individual \n            polygons so that the branch vertices around the perimeter of each \n            polygon are aligned. And so, the molecular crease patterns we \n            have seen—rabbit-ear (for triangles), Waterbomb, arrowhead, \n            gusset, and sawhorse (for quadrilaterals)—will be the patterns \n            that ﬁll in these axial polygons as well.\n                You can also see from Figure 11.12 that the use of nonover-\n            lapping circles and rivers is simply a geometric way of enforc-\n            ing the path conditions that apply to pairs of leaf vertices. For \n            example, take the case of two leaf nodes with a single branch \n            node between them as shown in Figure 11.12. If the two leaf \n            nodes are separated by edges with lengths a and b, then the \n            path condition between their corresponding leaf vertices in the \n            crease pattern would be\n\n\n                              uAB− u   ≥m() a + b .             (11–2)\n                 \n\n\n            A                                              A\n                                                                 ma\n                 a                                                            mb\n                       C           B                                                B\n                              b\n\n\n            Figure 11.12. \n            Left: a tree with two leaf nodes. \n            Right: use of nonoverlapping circles to represent the path conditions.\n\n                                                                                                     413\n                                                                   Chapter 11: Tree Theory\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d8c"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 419,
  "content": "            this into mathematical language, we arrive at the fundamen-\n            tal theorem of the tree method of design (which I call the tree \n            theorem for short): \n\n                Deﬁne a simply connected tree T with leaf nodes Pi, \n\n                i = 1, 2,…N. Deﬁne by lij the dis-tance between nodes \n\n                Pi and Pj as measured along the edges of the tree; that \n\n                is, lij is the sum of the lengths of all the edges between \n\n                nodes Pi and Pj. For each leaf node Pi, deﬁne a leaf \n                                            ∈         ∈\n                vertex ui in the unit square ui,x [0,1], ui,y [0,1]. Then \n                a crease pattern exists that transforms the unit square \n                into a uniaxial base whose projection is T if \n\n\n                   (a)  |ui–uj| ≥ lij for every i,j; \n\n                   (b)  every leaf vertex belongs to a polygon whose \n                      boundary is composed of segments, each of \n                      which is either on the convex hull of the leaf \n\n                      vertices or is a line along which |ui–uj| = lij; \n\n                   (c)  the projection of a path around each polygon \n                      follows a simple path around some subset of \n                      the tree that does not cross any edge of the tree \n                      more than twice. \n\n\n                Furthermore, in such a base, Pi is the projection of ui \n                for all i.\n\n                Although the proof of the tree theorem is beyond the scope \n            of this book, we will proceed to use it. The tree theorem tells \n            us that if we can ﬁnd a set of leaf vertices within a square for \n            which the distance between any two is greater than or equal \n            to the distance between their corresponding leaf nodes on the \n            tree, then a crease pattern exists that can transform that pat-\n            tern of vertices into a base.\n                Thus, for example, the tree in Figure 11.1 has six leaf nodes; \n            there are ﬁfteen possible pairs of leaf nodes to worry about. The \n            distance from node A to node E is 2 units; thus, the leaf vertices \n            on the square that correspond to nodes A and E must be at least \n            2 units apart. Similarly, to get from node A to node D on the \n            tree, you must travel 3 units; and so the distance between leaf \n            vertices A and D on the square must be at least 3 units as well. \n            And so on, for the other thirteen possible pairs.\n                For a given tree, there are often several possible arrange-\n            ments of leaf vertices that satisfy the tree theorem, each of \n            which yields a different base. For our six-pointed base, a little \n            doodling with pen and paper will reveal that the pattern of \n            nodes shown in Figure 11.7 satisﬁes all such conditions if the \n\n                                                                                                     407\n                                                                   Chapter 11: Tree Theory\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d8d"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 418,
  "content": "                                             Since the tree graph is the shadow of the base, distance \n                                         along the bottom of the base is the same as the distance mea-\n                                         sured along the tree graph. Thus, the distance between two leaf \n                                         vertices on the square must be at least as large as the distance \n                                         between the corresponding two leaf nodes as measured along \n                                         the edges of the tree. If the path on the tree graph doubles \n                                         back or has any uphill or downhill component, as illustrated \n                                         in Figure 11.6, the distance between the leaf vertices must be \n                                         absolutely larger than the distance on the graph.\n\n\n                                                                       P1\n                        P1\n                             l                                               l1\n                             1                                                       l2       l3\n                                                                                     α          P2\n                                     l2                                P1\n\n\n                                               l3\n\n                                                    P2\n                                                                                                P2\n\n\n                                         Figure 11.6. \n                                         A straight path on the square maps to a path in the base that may \n                                         have uphill (and/or downhill) components.\n\n                                             And in particular, this relationship must hold for any two \n                                         points on the base that correspond to nodes on the tree. Now \n                                         while this condition must hold for any pair of points on the \n                                         base, it turns out that if it holds for every pair of leaf nodes, \n                                         it will hold for every pair of points on the base. That is, if you \n                                         can identify a set of points on the square corresponding to all \n                                         of the leaf nodes of a tree—the leaf vertices—and the leaf ver-\n                                         tices satisfy the condition that the distance between any pair \n                                         of them is greater than or equal to the distance between the \n                                         corresponding nodes as measured on the tree, then it is almost \n                                         always guaranteed that a crease pattern exists to transform the \n                                         square into a base whose projection is the given tree.\n                                             This is a remarkable property. It tells us that no matter \n                                         how complex a desired base is, no matter how many points it \n                                         may have and how they are connected to one another, we can \n                                         always ﬁnd a crease pattern that transforms the square (or \n                                         any other shape paper, for that matter) into the base. Putting \n\n     406\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d8e"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 231,
  "content": "./origami_dataset_dev/Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li/page231_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d8f"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 342,
  "content": "                                                                                                     0.207\n\n\n                                                                                                      0.5\n                                                                                                {\n                                                                                              4 flaps\n\n                                                                                            0.073\n\n                                                                                               0.155\n                                                                                                   0.448\n\n\n                                                                                                  0.323   0.135\n                                                                                                 0.323\n\n                                                                                               0.155\n                                                                                             0.448\n                                                                                  Perimeter = 4.120\n\n                                             Figure 9.42. \n                                             Folding sequence for a shape that disproves the conjecture known as \n                                             the Napkin Folding Problem. The dimensions of the various segments \n                                             of the perimeter are given in the last step; the total perimeter adds \n                                             up to 4.120.\n\n\n             Figure 9.43. \n             The circle packing for the Bird \n             Base.\n\n     330\n                         Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d90"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 424,
  "content": "                                                                     A\n\n                                                              EF\n\n                                                                      B\n\n                                                         EF\n                                                A                                         A\n                                                                B          B\n                                                                     A\n                                         E                                                       F\n\n                                                 B               B       B                 B\n\n                                                             C               C\n                                                 C                                         C\n\n                                         G                                                       H\n                                                        GH\n                                                               C           C\n\n                                                                     D\n\n                                                                     A\n\n\n                                                                      B\n\n            Figure 11.10.                                             C\n            The four axial polygons for the \n            six-legged base and the sub-                      GH\n            trees corresponding to each \n            subbase.                                                 D\n\n                                         ﬁrst polygon into a subbase must be compatible with a crease \n                                         pattern that collapses the adjacent polygon into its subbase. In \n                                         tiles, we enforced this matching by drawing circles and rivers \n                                         within axial polygons and forcing the circles and rivers to line \n                                         up. Then, when we introduced molecules, we found that circle/\n                                         river alignments could be enforced by requiring alignment of \n                                         the tangent points of the circles.\n                                             Let’s look at the circle/river treatment of this problem. \n                                         When the path conditions are written as equations, it is difﬁ-\n                                         cult to form an intuitive picture of them, but the value of such \n                                         a treatment is that this optimization can be formulated as a \n                                         set of equations capable of being solved by existing computer \n                                         algorithms. We could have also solved for a base correspond-\n                                         ing to this tree by the circle/river method; if we did this, we \n                                         would have arrived at a conﬁguration of circles and rivers \n                                         that we can superimpose on the rudimentary crease pattern \n                                         from Figure 11.8, as shown in Figure 11.11.\n                                             Figure 11.11 makes it clear: The tangent points, which we \n                                         introduced in an ad hoc way in the previous chapter, are sim-\n\n     412\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d91"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 430,
  "content": "                                                                        CCD      C\n                                                            D\n                                                       D      CD\n\n                                                                                    CBC\n                                                   DDA\n                                                                          ′\n                                                               D′        C\n\n            Figure 11.17.                       ADA                                    BBC\n            Construction of the gusset quad                  A′            B′\n            for a quadrilateral ABCD. Inset \n            the quadrilateral a distance h;                             h\n            then drop perpendiculars from \n            the new corners to the original \n            sides.                                                                         B\n                                              A            AAB               BAB\n\n\n                                                                        CCD     C\n                                                            DCD\n                                                       D\n\n                                                                                   CBC\n                                                   DDA\n                                                              D′           C′\n                                                                D′′   B′′\n                                                ADA                                    BBC\n                                                                              B′\n                                                            A′\n            Figure 11.18. \n            On the inner quadrilateral, con-                           h\n            struct the bisectors of each tri-\n            angle to ﬁnd points B′′ and D′′.  A\n                                                          AAB               BAB            B\n\n                                             Let us suppose we found a solution for equation (11–4). The \n                                         diagonal A′C′ divides the inner quadrilateral into two triangles \n                                         as shown in Figure 11.18. Find the intersections of the bisectors \n                                         of each triangle and call them B′′ and D′′. (If the second equation \n                                         gave the solution, you’d use the opposite diagonal of the inner \n                                         quadrilateral and ﬁnd bisector intersections A′′ and C′′.)\n                                             The points A′, B′′, C′, and D′′ are used to construct the \n                                         complete crease pattern by dropping perpendiculars to the four \n                                         sides, as shown in Figure 11.19. The perpendiculars at A′ and \n                                         B′ are construction lines only, of no particular signiﬁcance. The \n                                         newly constructed lines from B′′ and D′′, however, are hinge \n                                         creases (or, if the adjacent side is not an active path, they could \n                                         be pseudohinge creases).\n                                             You can construct an equation for the distance h in terms \n                                         of the coordinates of the four corners and the distances; it’s a \n                                         rather involved quadratic equation. However, it can be solved \n                                         directly, algebraically.\n\n     418\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d92"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 356,
  "content": "",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d93"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 381,
  "content": "                In a gusset molecule, the boundaries of the gusset are also \n            ridge creases and thus are valley folds. The base of the gusset, \n            which we call a gusset crease, is always a mountain fold.\n                The hinge creases, however, are highly variable; they can \n            be mountain, valley, or unfolded creases, depending on the \n            orientation of the ﬂaps of the molecule. Figure 10.33 shows \n            several perfectly valid crease assignments for the hinge creases \n            within a single gusset molecule.\n\n\n            Figure 10.33. \n            Six possible valid crease assignments for the hinge creases in a gusset \n            molecule.\n\n                You might try folding up these four patterns and observing \n            the differences in the folded forms. The choice of crease parity \n            for the hinge creases affects the orientation of the ﬂaps. Since, \n            in a complete crease pattern, most ﬂaps encompass portions of \n            several different molecules, the choice of crease parity within \n            a given molecule cannot be made in isolation, but only after \n            deciding the ﬂap orientation in the full pattern.\n                When constructing a crease pattern from molecules, it is \n            helpful to assign the creases in two steps. We will ﬁrst deﬁne a \n            generic form for each molecule in which we apply the structural \n            coloring scheme ﬁrst introduced in Figure 10.6 (ridge = red, \n            axial = green, hinge = blue, and adding gusset = gray). This \n            way of drawing a crease pattern highlights the structural role \n            of each crease and its position and orientation in the folded \n\n                                                                                                     369\n                                                                    Chapter 10: Molecules\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d94"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 395,
  "content": "            analog of the arrowhead molecule. You might enjoy comparing \n            the crease pattern in Figure 10.51 with the one in Figure 10.50 \n            and attempting to fold a model from both.\n\n\n            Figure 10.51. \n            Crease pattern, base, and folded model of the Eupatorus gracil-\n            icornis.\n\n                Figure 10.51 is a packing consisting entirely of circles, but \n            as we have seen, we can use molecules for packings of circles \n            and rivers. Figure 10.52 shows a crease pattern for a Silverﬁsh \n            that includes several rivers; nevertheless, all of the molecules \n            are combinations of rabbit ear, gusset, and Waterbomb mol-\n            ecules. As practice, you might try identifying the axial, ridge, \n            and gusset creases from the hints provided by the packing \n            circles. A folding sequence is provided for this one at the end \n            of the chapter.\n                The circle/river method of designing origami is extremely \n            powerful. By packing circles and rivers into a square, you are \n            guaranteed all the ﬂaps you need; by using molecular crease \n            patterns to ﬁll in the axial polygons created by your packing, \n            you are guaranteed a ﬂat-foldable base. Using these and similar \n            techniques, origami artists have created designs of unbeliev-\n            able complexity. These techniques are at their best when the \n            subject has many long, skinny appendages; insects, spiders, \n            and other arthropods are prime candidates. The 1990s saw \n            the ﬂowering of these techniques in both the West and Japan, \n            and launched an informal trans-Paciﬁc competition known \n            as the Bug Wars, in which at every origami exhibition, the \n\n                                                                                                     383\n                                                                    Chapter 10: Molecules\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d95"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 236,
  "content": "./origami_dataset_dev/Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li/page236_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d96"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 168,
  "content": "                                         Figure 6.29. \n                                         Left: cut lines for strip grafts perpendicular to the edge at each foot. \n                                         Right: the embedded pattern, with partial strip creases.\n\n                                         direction of an isolated pleat. Pleats can certainly cross without \n                                         changing direction, as is shown in Figure 6.29. But when two \n                                         pleats collide, that’s an opportunity for them to coalesce into \n                                         a single pleat running in a different direction, which reduces \n                                         the total amount of added paper. Thus, we can create a much \n\n\n                                         Figure 6.30. \n                                         Left: cut lines for a simpliﬁed strip graft. \n                                         Right: grafts inserted.\n\n     156\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d97"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 626,
  "content": "              11. Make three more vertical creases, again through 12. Make another vertical crease.\n              existing crease intersections. Turn the paper over\n              from top to bottom.\n\n\n              13. Make 15 vertical creases, connecting the crease 14. Make 16 more vertical creases, connecting\n              intersections shown. Turn the paper back over    the crease intersections shown.\n              from top to bottom.\n\n\n                                                                                                                 615\n                                                                  ChapterFolding 13: Instructions: Uniaxial Box Bull Pleating Moose\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d98"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 140,
  "content": "                58. Mountain-fold the edges     59. Mountain-fold one of the        60. Refold the crimp\n                inside in front and behind.     two paired flaps inside.            you undid in step 26.\n\n\n                61. Outside reverse-fold            62. Pull out the corner.        63. Crimp the point\n                the right side.                     Repeat behind.                  downward. Repeat behind.\n\n\n               64. Crimp the corner and twist          65. Crimp the right           66. Reverse-fold two inside\n               it upward to the left. Repeat           side underneath.              corners created by the crimp.\n               behind.\n\n\n               67. Reverse-fold the middle         68. Mountain-fold the bottom      69. Finished Goatfish.\n               point (of three) upward.            edges of the jaw and belly.\n\n     128\n                         Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d99"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 154,
  "content": "            Figure 6.14. \n            Crease pattern for a Bird Base \n            with a strip graft. Note that \n            the creases around the fourth \n            point of the tiny Bird Base are \n            no longer used, and the point is \n            not free.\n\n                                         wading bird, realization of which I shall leave as a challenge \n                                         for the reader.\n                                             So, as these two models illustrate, one can create paper \n                                         to add features by augmenting a square in one of two ways; \n                                         you can add paper around the outside, or you can add a strip \n                                         cutting across the model. Of course, in the second case, there’s \n                                         no need to actually cut the square and paste in a strip. You \n                                         simply design in the strip from the very beginning. How wide \n                                         a strip? It depends on how much extra paper you need.\n                                             It’s also possible to add multiple strips. If, for example, you \n                                         wanted a bird with four-toed feet and a split beak and more \n                                         paper in the tail, then you could add two strips: one running \n                                         side to side, one running up and down. Can you design and fold \n                                         such a bird using two crossing strips?\n                                             A straightforward application of strip grafting arises if \n                                         you wish to add toes to four limbs that are made from the four \n                                         corners of the square. An example that is difﬁcult to resist \n                                         is a multitoed frog, and the logical model to start from is the \n                                         traditional Japanese Frog, which is, of course, folded from the \n                                         Frog Base. Now, as we saw in the previous chapter, you can \n                                         make a multitoed frog by splitting the four leg ﬂaps, but that \n                                         approach unavoidably shortens the ﬂaps. We can also use \n                                         grafting to add toes to all four limbs of the traditional Frog to \n                                         realize a model in which the toes are more prominent and the \n                                         legs remain relatively long.\n                                             “Relatively” is the key concept here. Grafting, like point-\n                                         splitting, shortens the limb ﬂaps. If the ﬁnal size of the square \n                                         is ﬁxed, we need to shrink the pregraft base to allow room \n                                         for the grafted paper. As the saying goes, there’s no such thing \n\n     142\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d9a"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 632,
  "content": "              50. Reverse-fold the long           51. Mountain-fold the next           52. Valley-fold the next pair\n              edge on each side (which            edge, reverse-folding it at          of edges, again reverse-\n              terminates with a closed            the top to align with the            folding at their top.\n              sink at the reverse folds you       previous two reverse folds.\n              just made).\n\n\n                                                   52–53          52–53\n\n\n              53. Mountain-fold the next          54. Repeat steps 52–53 on\n              pair of edges, again reverse-       the next pair of layers.\n              folding at their top.\n\n\n              55. Mountain-fold the near          56. Mountain-fold the near\n              edges underneath.                   edges underneath; reverse-           57. Pull out some excess\n                                                  fold the (final) pair of             paper from the long near\n                                                  corners at the top.                  flaps and crimp the excess\n                                                                                       paper upward at the top.\n\n                                                                                                                 621\n                                                                  ChapterFolding 13: Instructions: Uniaxial Box Bull Pleating Moose\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d9b"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 183,
  "content": "              22. Petal-fold front and rear.          23. Fold the two                      24. Fold the tip down\n                                                      flaps back down.                      to the horizontal crease\n                                                                                            and unfold.\n\n\n                 25. Open-sink the top               26. Fold one layer to                  27. Fold one flap up in\n                 corner.                             the right in front and                 front and behind.\n                                                     one to the left behind.\n\n\n                         28. Crimp the two points out                  29. Fold a rabbit ear from the\n                         to the sides.                                 upright flap and swing it over\n                                                                       to the right. Repeat behind.\n\n                                                                                                                 171\n                                                                   Folding Instructions:Chapter KNL 6: Grafting Dragon\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d9c"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 197,
  "content": "                66. Divide the flap       67. Reverse-fold          68. Reverse-fold     69. Reverse-fold the two\n                into quarters along       along a line that         the flap back to     small corners to the right\n                the bottom edge.          connects to the           the left along       (one in front, one behind).\n                                          rightmost mark.           vertical creases.\n\n\n             70. Reverse-fold the        71. Reverse-fold the       72. Reverse-fold     73. Reverse-fold two flaps\n             larger flap along creases   larger flap to the left    the point so that    to the right so that a crease\n             aligned with the folded     along vertical creases.    its right edge is    lines up with a folded edge\n             edges.                                                 vertical.            in each reverse fold.\n\n\n                                                   74. Reverse-fold    75. Reverse-fold the  76. Like this.\n                                                   four flaps along    four flaps so that the\n                                                   vertical creases.   raw edges are all\n                                                                       vertical.\n\n\n                          66–76\n\n\n             77. Repeat steps    78. Steps 79–83        79. Reverse-fold two            80. Mountain-fold the\n             66–76 on the right  will focus on the      points out to the sides.        near layers. Valley-fold\n             flap.               top of the model.                                      the far layers.\n\n                                                                                                                 185\n                                                                      Folding Instructions:Chapter 6: Tree Grafting Frog\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d9d"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 8,
  "content": "                 Camel Spider                                                                  689\n                 Water Strider                                                                 690\n                 Scarab Beetle                                                                  691\n                 Cicada Nymph                                                               692\n                 Scarab Beetle HP                                                            693\n                 Cyclomatus metallifer                                                     694\n                 Scorpion HP                                                                   695\n                 Euthysanius Beetle                                                          696\n                 Spur-Legged Dung Beetle                                                697\n           15. Hybrid Bases                                                         699\n              Folding Instructions \n                 African Elephant                                                            718\n           References                                                                                  727\n           Glossary                                                                                     743\n           Index                                                                                          753\n\n\n                                                                                            vii\n                                                                  Table of Contents\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d9e"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 752,
  "content": "                                             12. Box Pleating\n                                             Many box-pleated ﬁgures from Neal Elias and Max Hulme may be \n                                             found in the following: \n\n                                             Dave Venables, Max Hulme: Selected Works 1973–1979 (BOS Booklet \n                                             #15), London, British Origami Society, 1979.\n\n                                             Dave Venables, Focus on Neal Elias (BOS Booklet #10), London, \n                                             British Origami Society, 1978.\n\n                                             Dave Venables (ed.), Neal Elias: Miscellaneous Folds I (BOS Booklet \n                                             #34), London, British Origami Society, 1990.\n\n                                             Dave Venables (ed.), Neal Elias: Miscellaneous Folds II (BOS Booklet \n                                             #35), London, British Origami Society, 1990.\n\n                                             Dave Venables (ed.), Neal Elias: Faces and Busts (BOS Booklet #36), \n                                             London, British Origami Society, 1990.\n\n                                             Eric Kenneway, Origami: Paperfolding for Fun, London, Octopus, \n                                             1980, pp. 90–91 (Hulme’s Fly).\n\n                                             13. Uniaxial Box Pleating\n                                             The application of the straight skeleton to the one-straight-cut prob-\n                                             lem is described in:\n\n                                             Erik D. Demaine, Martin L. Demaine, and Anna Lubiw, “Folding and \n                                             cutting paper,” Revised Papers from the Japan Conference on Discrete \n                                             and Computational Geometry, edited by Jin Akiyama, Mikio Kano, \n                                             and Masatsugu Urabe, Lecture Notes in Computer Science, volume \n                                             1763, Tokyo, Japan, December 1998, pp. 104–117.\n\n                                             Erik D. Demaine, Martin L. Demaine, and Anna Lubiw, “Folding and \n                                             one straight cut sufﬁce,” Proceedings of the 10th Annual ACM–SIAM \n                                             Symposium on Discrete Algorithms, 1999, pp. 891–892.\n\n                                             The program ReferenceFinder runs on Macintosh and is open-source; \n                                             it and source code may be downloaded from: http://www.langorigami.\n                                             com/referenceﬁnder.htm.\n\n                                             A full folding sequence for the Cerambycid beetle of Figure 13.41 \n                                             may be found in:\n\n                                             Robert J. Lang, Origami Insects II, op. cit., pp. 96–106.\n\n                                             14. Polygon Packing\n\n                                             At this writing, there is no single collective description of polygon \n                                             packing, but many of the ideas may be found described in publications \n                                             of OrigamiUSA and the Japan Origami Academic Association and can \n                                             be seen in crease patterns by numerous artists on their websites.\n\n     740\n                         Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0d9f"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 34,
  "content": "                                         is, not folded at all). The traditional mountain and valley lines—\n                                         chain and dashed—tend to lose their distinction in large crease \n                                         patterns, dissolving into a morass of confusing clutter. Thus, \n                                         in crease patterns, I will adopt a different convention that \n                                         provides greater contrast. Creases that are valley fold lines \n                                         will be indicated by dashed colored lines, while mountain folds \n                                         will be solid black lines. Creases that lie ﬂat will be indicated \n                                         by thin gray lines. Flat creases that don’t play an important \n                                         role are not shown at all, but it is sometimes helpful to show \n                                         creases that were important to the construction of the base. To \n                                         see the difference between the two line styles, compare the two \n                                         examples in Figure 2.20.\n\n\n                                         Figure 2.20.\n                                         Left: a crease pattern using the traditional patterned lines to \n                                         indicate mountain and valley folds. \n                                         Right: the same crease pattern using contrasting lines specialized \n                                         for crease patterns.\n\n                                             The use of dashed lines for valley folds and chain lines \n                                         for mountain folds has been ﬁrmly established as a worldwide \n                                         standard in origami for decades. The precise line styles used \n                                         for crease patterns are less standardized. In general, because \n                                         mountain folds are more visible in the unfolded paper, I choose \n                                         solid, darker lines for them; valley folds are less visible, so \n                                         they get lighter colors and their traditional dashing pattern, \n                                         but a somewhat ﬁner dashing so that the dashes themselves \n                                         do not distract from the large-scale patterns of mountain and \n                                         valley lines.\n                                             A crease pattern that has its mountain and valley folds \n                                         distinctly labeled is said to be assigned, or crease-assigned. If \n                                         we draw all of the fold lines with no distinction, then it is said \n\n      22\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0da0"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 20,
  "content": "                                         arbitrary conﬁgurations of ﬂaps, and yet it can be employed \n                                         using nothing more than a pencil and paper.\n                                             Chapter 10 explores more deeply the crease patterns \n                                         within tiles; those that ﬁt within circle/river designs are called \n                                         molecules. The chapter presents the most common molecules, \n                                         which are sufﬁcient to construct full crease patterns for any \n                                         uniaxial origami base.\n                                             Chapter 11 presents a different formulation of the circle/\n                                         river packing solution for origami design, called tree theory, in \n                                         which the design of the base is related to an underlying stick \n                                         ﬁgure, and the packing problem is related to a set of conditions \n                                         applying to paths along the stick ﬁgure. Although equivalent to \n                                         circle/river packing, the approach shown here is readily amenable \n                                         to computer solution. It is the most mathematical chapter, but \n                                         is in many ways the culmination of the ideas presented in the \n                                         earlier chapters for designing uniaxial bases.\n                                             Chapter 12 then introduces a particular style of origami \n                                         called box pleating, which has been used for some of the most \n                                         complex designs ever constructed. Box pleating in some ways \n                                         goes beyond uniaxial bases; in particular, it can be used to con-\n                                         struct fully three-dimensional ﬁgures by various combinations \n                                         of box-like forms, pleats, ﬂaps, and more.\n                                             Chapter 13 expands upon the ﬂap concept of box pleating to \n                                         introduce a new concept in design, called polygon packing, and \n                                         a particular type of polygon packing, uniaxial box pleating, that \n                                         ties together the concepts of box pleating and tree theory.\n                                             Chapter 14 continues the development of polygon packing \n                                         and uniaxial box pleating, introducing the new design technique \n                                         of hex pleating and methods of generalizing polygon packing \n                                         further to arbitrary angles.\n                                             Chapter 15 continues to move beyond uniaxial bases, \n                                         introducing the idea of hybrid bases, which combine elements \n                                         from uniaxial bases with other non-uniaxial structures. The \n                                         world of origami designs is enormously larger than the uni-\n                                         axial bases that are the focus of this book, but as this chapter \n                                         shows, elements from uniaxial bases can be combined with \n                                         other structures, expanded, and extended, to yield ever-greater \n                                         variety in origami ﬁgures.\n                                             The References section provides references and commen-\n                                         tary organized by chapter with citations for material from both \n                                         the mathematical and origami literature related to the concepts \n                                         in each chapter.\n                                              Each chapter includes step-by-step folding instructions \n                                         for one or more of my origami designs chosen to illustrate the \n                                         design concepts presented in the chapter. I encourage you to \n                                         fold them as you work your way through the book. Most have \n\n      8\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0da1"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 746,
  "content": "                                             See also:\n\n                                             Seiji Nishikawa, “‘Tora’ Saiko [‘Tiger’ Reconsidered]”, Oru no. 7, \n                                             Winter 1994, pp. 89–93.\n\n                                             A full folding sequence for the Tarantula of Figure 9.24 may be \n                                             found in:\n\n                                             Robert J. Lang, Origami Insects II, op. cit., pp. 31–37.\n\n                                             A full folding sequence for the Flying Cicada of Figure 9.25 may be \n                                             found in:\n\n                                             Robert J. Lang, Origami Insects II, ibid., pp. 129–140.\n\n                                             A full folding sequence for the Flying Ladybird Beetle of Figure 9.26 \n                                             may be found in:\n\n                                             Robert J. Lang, Origami Insects II, ibid., pp. 86–95.\n\n                                             A full folding sequence for the Acrocinus longimanus of Figure 9.27 \n                                             may be found in:\n\n                                             Robert J. Lang, Origami Insects II, ibid., pp. 17–23.\n\n                                             Various mathematical circle packings may be found in:\n\n                                             Jonathan Schaer and A. Meir, “On a geometric extremum problem,” \n                                             Canadian Mathematical Bulletin, 8, 1965, pp. 21–27.\n\n                                             Jonathan Schaer, “The densest packing of nice circles in a square,” \n                                             Canadian Mathematical Bulletin, 8, 1965, pp. 273–277.\n\n                                             Michael Goldberg, “The packing of equal circles in a square,” Math-\n                                             ematics Magazine, 43, 1970, pp. 24–30.\n\n                                             Benjamin L. Schwartz, “Separating points in a square,” Journal of \n                                             Recreational Mathematics, 3, 1970, pp. 195–204.\n\n                                             Jonathan Schaer, “On the packing of ten equal circles in a square,” \n                                             Mathematics Magazine, 44, 1971, pp. 139–140.\n\n                                             Benjamin L. Schwartz, “Separating points in a rectangle,” Mathemat-\n                                             ics Magazine, 46, 1973, pp. 62–70.\n\n                                             R. Milano, “Conﬁgurations optimales de disques dans un polygone \n                                             régulier,” Mémoire de Licence, Unversité Libre do Bruxelles, 1987.\n\n                                             Guy Valette, “A better packing of ten equal circles in a square,” \n                                             Discrete Mathematics, 76, 1989, pp. 57–59.\n\n                                             Michael Molland and Charles Payan, “Some progress in the pack-\n                                             ing of equal circles in a square,” Discrete Mathematics, 84, 1990, \n                                             pp. 303–305.\n\n\n     734\n                         Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0da2"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 578,
  "content": "                  Figure 13.2. \n                  Packing shapes on the square \n                  and stick figure. The rivers \n                  are shown connected to their \n                  respective segments on the tree \n                  graph.\n\n                                               circle centers and the size of the enclosing square. This is a \n                                               bit tedious, but it is worth going through as an illustration \n                                               of how to solve for a packing pattern with minimal computa-\n                                               tional tools.\n                                                   Figure 13.3 shows the packing of circles and rivers into \n                                               the left half of a square whose side has length s. The most \n                                               elegant arrangement would have circles packed neatly into the \n                                               corners of the square, but one is rarely so lucky as to achieve \n                                               this condition; more often, the situation is as shown in the \n                                               ﬁgure, where no circle lies precisely in a corner.\n                                                   There are ﬁve unknowns in this ﬁgure: the square side \n                                               s, and the four distances marked w, x, y, and z. In order \n                                               to solve for all distances, we need ﬁve equations. Three of \n                                               them come from adding up distances along the sides of the \n                                               rectangle. Along the top edge, left edge, and bottom edge, we \n                                               have, respectively,\n\n                                                                      w +  4  +   1  =   s  /2   , (13–1)\n\n                                                          x    + 4 +1+1+ 6 + y =  s ,             (13–2)\n                                                              \n                                                          z                + 8 = s  /2   .        (13–3)\n                                                     \n\n                                                                  \n           566\n                             Origami Design Secrets, Second Edition\n      © 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0da3"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 236,
  "content": "             Western Pond  \n             Turtle\n\n\n             There are three ways to get the reference points and guidelines for this model, depending on your desire for folding\n             purity and tolerance of leftover creases on the paper:\n             1. Folding only—follow all steps as instructed.\n             2. Marking and folding—follow steps 1–13; draw lines instead of making creases in steps 14–20; continue folding\n             from step 21.\n             3. Measuring, marking, and folding—divide the top edge into 39ths and the bottom edge into 78ths; jump to step 14;\n             draw lines instead of creases in steps 14–20; continue folding from step 21.\n\n\n             1. Begin with a square, white       2. Fold the bottom corner over     3. Fold the right edge over to\n             side up. Make a pinch along the     to the mark, pinch at top and      the two pinches you just made;\n             bottom edge extending about         bottom, and unfold.                make a pinch along the bottom\n             1/10 of the way up.                                                    and unfold.\n\n\n                                                                                                                 225\n                                                           Folding Instructions:Chapter Western 7: Pattern Pond Grafting Turtle\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0da4"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 550,
  "content": "                                                                             23–24\n\n             31. Squash-fold the hidden              32. Fold the flaps\n             colored edge on each side.              back to the outside.\n\n                                                                                   33. Repeat steps 23–24 on the\n                                                                                   next rectangular region.\n\n\n                                              35. Fold the sides inward,\n                      34. Pleat.              incorporating a reverse fold at each\n                                              top corner and squash-folding the\n                                              nearly hidden corners at the bottom\n                                              similarly to steps 29–31.\n\n\n                                        33–35\n\n\n                                           27–32                             33–35\n\n\n                 36. Repeat steps 33–35.           37. Repeat steps 27–32.            38. Repeat steps 33–35.\n\n     538\n                         Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0da5"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 544,
  "content": "             7. Now fold the                8. Fold the sides             9. Divide the\n             paper in half                  in to the center              paper into\n             lengthwise and                 line, crease                  eighths, again,\n             unfold.                        lightly, and                  creasing lightly.\n                                            unfold. (The                  Turn the paper\n                                            creases in steps              over.\n                                            8–10 are only\n                                            used to get\n                                            reference points\n                                            in step 11; they\n                                            should be made\n                                            as lightly as\n                                            possible.)\n\n\n     532\n                         Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0da6"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 222,
  "content": "                                             Figure 7.19. \n                                             Left: an array of folded tiles forming the scale pattern. \n                                             Right: the same array of crease pattern tiles.\n\n\n                                             Figure 7.20. \n                                             Left: a 3 × 3 folded array of scales from a single sheet. \n                                             Right: its crease pattern.\n\n     210\n                         Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0da7"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 593,
  "content": "            surprising: the leaf polygons can be T-shaped, L-shaped, or \n            in fact quite irregular in shape, and yet we will still be able \n            to construct creases that make them collapse quite neatly, as \n            we will see. So it is never necessary to add additional squares \n            or rectangles, although one might choose to do so for other \n            reasons (to make use of the new ﬂaps, for example).\n                Recall that the boundaries of the hinge polygons were \n            deﬁned to be the hinge creases, so once we have a fully inﬂated \n            packing, we automatically have all of the hinge creases of \n            the base. This highlights a crucial point: we are constructing \n            the crease pattern in a different order from circle packing. In \n            circle packing, we start with the axials, then build the ridges, \n            and ﬁnish up with the hinges. In polygon packing, the hinge \n            creases are preeminent; they are the ﬁrst creases to be found. \n            We now turn our attention to the other creases.\n\n            13.4. Ridge Creases\n            We have found the hinge creases, but still need to ﬁll in the \n            other creases. In circle packing, the creases come in several \n            families: axial, gusset, ridge, and hinge (and pseudohinge, \n            which occasionally crops up). The same types of creases show \n            up in polygon-packed bases—with a few new tweaks and a \n            couple of conceptual differences.\n                The ﬁrst conceptual difference comes from the basic unit \n            in the “divide-and-conquer” algorithm. In circle packing, once \n            we had a packing, we connected the centers of touching circles \n            with axial creases; these axial creases, in turn, broke up the \n            square into active polygons, each of which got ﬁlled in with a \n            molecular crease pattern (a molecule). One of the conceptual \n            hurdles in circle packing was the idea that a single molecule \n            contributes to several different parts of the model. So a tri-\n            angle molecule, for example, contains parts of three different \n            ﬂaps (or more, if there are branch ﬂaps involved); conversely, \n            a given ﬂap may contain contributions from several different \n            molecules. There is no one-to-one correspondence between mol-\n            ecules and ﬂaps of the model, and indeed, part of the “magic” \n            of circle packing is that even though you construct all of the \n            molecules independently, they all work together when joined \n            up in a single crease pattern.\n                This situation changes in polygon packing. In circle pack-\n            ing, we don’t know where the hinge creases go until we’ve \n            constructed the molecules, but in uniaxial box pleating, the \n            hinge creases are exactly the boundaries of the inﬂated hinge \n            polygons and the hinge rivers. As soon as we’ve solved the \n            packing, we have this ﬁrst set of creases.\n\n                                                                                                     581\n                                                           Chapter 13: Uniaxial Box Pleating\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0da8"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 587,
  "content": "                The circle and river represent the minimum amount of \n            paper required for each ﬂap: leaf ﬂaps (represented by circles) \n            and branch ﬂaps (represented by rivers). For polygon pack-\n            ing, we use analogs of these two shapes: closed polygons for \n            leaf ﬂaps, polygonal rivers for branch ﬂaps. Both shapes are \n            outlined by the hinge creases of the crease pattern. But what \n            are the conditions that deﬁne those shapes?\n                We have already said that we want the boundaries of \n            our polygons to run along “nice” angles. In principle, we can \n            use any polygons we want, but it is convenient to group them \n            into families according to the angles that their bounding \n            creases are constrained to. The ﬁrst family is the analog of \n            box pleating.\n                In circle packing, circles represent the minimum paper \n            needed to create a ﬂap. In polygon packing, the polygons are \n            shapes bounded by hinge creases, and they represent the actual \n            paper used in each ﬂap. We will make them obey the “niceness” \n            condition, that all hinge creases run at a nice set of angles, \n            which will be multiples of 90°, in the case of box pleating. That \n            sets the rules for a box-pleated hinge polygon: it is a polygon \n            that fully encloses the circle whose radius is the length of the \n            given ﬂap, and all of its sides run at multiples of 90°.\n                Why must it fully enclose the corresponding circle? Be-\n            cause the circle packing sets an absolute lower bound on the \n            size of the polygon. Since the circle represents the minimum \n            amount of paper required by the ﬂap, every point inside the \n            circle must lie inside the hinge polygon. However, some ad-\n            ditional points outside the circle can also be part of the hinge \n            polygon. That means that for a given ﬂap length, there are \n            arbitrarily many polygons that can give rise to a ﬂap of that \n            length. All that we require is that the polygon fully enclose \n            the circle that deﬁnes the minimum extent, and that the poly-\n            gon’s edges run at multiples of 90°. Several such examples are \n            shown in Figure 13.10.\n                Note that while a square satisﬁes the two conditions of \n            fully enclosing the circle and angle-constrained boundary, \n            there is no requirement that the polygon be a square, or a \n            rectangle, or even convex; L-shaped or T-shaped, or even more \n            complicated shaped polygons are possible. There is also no \n            particular requirement that the polygon touch its enclosing \n            circle on all sides. If the circle can be made larger, though, \n            that is an indication that the resulting ﬂap could turn out \n            to be longer than the minimum length set by the size of the \n            enclosed circle.\n                For a given ﬂap size, though, there is a minimum poly-\n            gon, which is the angle-constrained polygon that encloses its \n\n                                                                                                     575\n                                                           Chapter 13: Uniaxial Box Pleating\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0da9"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 591,
  "content": "            pinned in a way that prevents further shrinkage. An example \n            of this scale-to-ﬁt is shown in Figure 13.13.\n                The “toy problem” tree we have chosen has ﬂaps of two \n            lengths, which are multiples of a common unit. When the \n            ﬂaps are an integral number of units in length, then we can \n            easily examine packing patterns by placing the corresponding \n            squares and rivers on a grid, which is what I have done in \n            Figure 13.13. This ﬁgure shows that a 5 × 5 square, on the left, \n            is just barely too small to ﬁt all ﬁve squares plus the river into \n            the pattern. A 6 × 6 square is large enough to ﬁt everything—\n            but it is, in fact, plenty large; there is a lot of extra room left \n            over for some of the squares to “rattle around.”\n                Packing problems of this sort are notoriously difﬁcult \n            to solve; in fact, ﬁnding the optimum packing of squares of \n            variable size within another square is one of the so-called NP-\n            COMPLETE problems of computer science, a problem whose gen-\n            eral solution could provide an efﬁcient solution to every hard \n            problem whose answer could be easily checked. The greatest \n            minds of computer science think that no such solution exists \n            (though no one has proved this yet). Fortunately, in origami, \n            there are two mitigating circumstances that apply. First, \n            origami packing problems are rarely “worst-case” problems. \n            Second, we don’t need to ﬁnd the best possible solution (nor \n            to prove that it is the best possible); we only need a solution \n            that is reasonably good.\n                And so, a packing such as the one on the right in \n            Figure 13.13 is perfectly suitable for our needs. There is \n            still a lot of empty space that needs to be filled, though. \n            Remember, in a polygon packing, every point in the square \n            must belong to some hinge polygon or hinge river; every \n            point must be allocated to some region of the base.\n                We performed the initial packing using squares, because \n            a square is the minimum-size polygon that (a) encloses the \n            circle, and (b) satisﬁes the angle limitations on its edges. But \n            we can use larger polygons that satisfy these two conditions. In \n            particular, we can expand a square in any direction in which \n            it is unconstrained by adjacent squares or rectilinear rivers, \n            turning it into a rectangle, and expanding the rectangle to \n            “soak up” the extra paper. So, as Figure 13.14 shows, while we \n            can ﬁll most of the extra space by moving some of the hinge \n            polygons into the interior of the enclosing square, we can “sop \n            up” the rest of the space by expanding the square in the lower \n            left corner into a rectangle.\n                Interestingly, when we expand a rectangle, we’re not \n            lengthening the associated ﬂap; the length of the ﬂap is given \n            by the perpendicular distance from the circle center to the \n\n                                                                                                     579\n                                                           Chapter 13: Uniaxial Box Pleating\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0daa"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 585,
  "content": "            to an integer division of the circle: 8ths (45°), 12ths (30°), or \n            16ths (22.5°), for example.\n                As we will see, it is indeed possible to design complex \n            origami bases by working directly with the hinge polygons \n            and hinge rivers—a technique I call “polygon packing.”  And \n            it requires some new ideas and new concepts, which I will \n            introduce shortly. But polygon packing is also quite old—in \n            fact, one form of it dates back to the earliest days of the mod-\n            ern era of origami. The nice properties I’ve outlined exist in \n            a design method we’ve already encountered: box pleating. As \n            we have seen, one can create arbitrary arrangements of ﬂaps \n            using the techniques of box pleating; what remains is to ﬁnd \n            the appropriate mapping between the concepts of circle/river \n            packing and the concepts of box pleating—and, we hope, to \n            uncover any additional concepts in the one that are suggested \n            by the other. Box pleating itself is not new; what is new is \n            how it can be tied to circle packing, polygon packing, and \n            uniaxial bases.\n                Box pleating actually is an example of polygon packing—\n            or at least the portion of box pleating that involves uniaxial-\n            base-like structures, which I will call uniaxial box pleating. \n            Uniaxial box pleating brings both of the “nice” properties \n            outlined above:\n\n                • All creases run at a ﬁnite number of angles: in \n                box pleating, multiples of 45°.\n\n                • All creases can be forced to lie on a regular grid; \n                in box pleating, a grid of squares.\n\n                All is not perfection, though; there are cons, too, for \n            uniaxial box pleating (and for polygon packing in general), \n            as we will see:\n\n                • The ﬂaps are generally narrower than the equiva-\n                lent ﬂaps in circle-packed bases. (There are tricks, \n                however, for selectively widening certain ﬂaps, one \n                of which—level shifting—I’ll talk about shortly.)\n\n                • The crease patterns are less efﬁcient than circle-\n                packed patterns. \n\n                This inefﬁciency is unsurprising: it can be shown that \n            circle/river packing produces the most efﬁcient uniaxial bases; \n            everything else must be, by deﬁnition, less efﬁcient. What is \n            surprising, though, is that the penalty is often very small, \n            and uniaxial box-pleated structures can still be surprisingly \n\n                                                                                                     573\n                                                           Chapter 13: Uniaxial Box Pleating\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0dab"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 200,
  "content": "./origami_dataset_dev/Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li/page200_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0dac"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 552,
  "content": "              45. Pull the corners out to        46. Carefully mountain-fold\n              the side.                          the sides through all layers.\n\n\n                                                                                 47. Pleat. The mountain fold\n                                                                                 lies on an existing crease.\n\n\n                                                    48. Reverse-fold the\n                                                    corners.\n\n\n                  49. Fold the flap up and                                           50. Pull out some\n                  back. Turn the paper over.                                         loose paper.\n\n     540\n                         Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0dad"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 234,
  "content": "              8. Fold the two top corners          9. Fold the top edge down           10. Unfold the two flaps.\n              down to lie along the raw            along a crease that runs from\n              edges.                               corner to corner.\n\n\n              11. Fold the top corners down       12. Fold the top left corner     13. Crease from corner to\n              to the side corners; crease all     down to the right side corner,   corner in both directions. Turn\n              the way across and unfold.          crease, and unfold. Repeat       the paper back over.\n                                                  with the top right corner. Turn\n                                                  the paper over.\n\n\n              14. Collapse the model        15. Squash-fold the       16. Squash-fold the    17. Fold the near layers\n              on the existing creases.      two edges (like half      two remaining edges,   over and over in thirds.\n                                            of a petal fold).         including the two\n                                                                      loose flaps.\n\n                                                                                                                 223\n                                                                        ChapterFolding 7:Instructions: Pattern Grafting Turtle\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0dae"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 220,
  "content": "                                             When the square has been released, there is a tiny Pre-\n                                         liminary Fold in the layers underneath. We then can sink the \n                                         tip of the square, but only to the depth allowed by the edges of \n                                         the Preliminary Fold.\n\n\n                                   9. Sink the tip.                   10. The tip is now sunk.\n\n                                         Figure 7.15. \n                                         Now that the tip has been freed, it can be sunk.\n\n                                             Now this was just a single pleat. We can make an array \n                                         of scales from an array of these pleats. An array of pleats is \n                                         deﬁned by three quantities: the direction of the pleats, the width \n                                         of each pleat, and the spacing from one pleat to the next. We \n                                         have chosen the direction to be 45°. For a given pleat width, \n                                         there is one degree of freedom left to choose: the spacing of \n                                         the pleats relative to the pleat width. To make this choice, we \n                                         should extract the structure of the pleat crossing, and use that \n                                         as a basic element to be replicated. That structural element \n                                         consists of the visible fold lines of the pleats (and, if you like, \n                                         the hidden edges of the pleats), as shown in Figure 7.16.\n\n\n            Figure 7.16. \n            Left: a single pleat. \n            Right: the structural elements \n            of the pleat crossing.\n\n     208\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0daf"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 546,
  "content": "             13. Now add                       14. Now add                       15. Add more\n             some vertical                     some horizontal                   vertical creases.\n             creases.                          creases.\n\n     534\n                         Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0db0"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 696,
  "content": "./origami_dataset_dev/Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li/page696_image005.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0db1"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 208,
  "content": "             67. Fold the remaining layer  68. Turn the model back over.  69. Narrow the point by 1/3,\n             up inside the wing.                                          folding each layer individually.\n\n\n                                    1/4\n\n\n                                            71. Narrow the neck with mountain\n                                            folds. Crimp the beak.\n\n             70. Form the body into a U\n             shape while crimping the neck.\n             Rotate 1/4 turn.\n\n\n                                                                     72. Narrow the legs. Crimp the neck\n                                                                     and tail. Position the wings and head.\n\n\n                                       73. Finished Dancing Crane.\n\n     196\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0db2"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 36,
  "content": "            Figure 2.22. \n            The outside reverse fold.\n\n                                         far layers, opposite from what happens in the inside reverse \n                                         fold. The outside reverse fold is also indicated by a push arrow, \n                                         because it is typically made by pushing at the spine with one’s \n                                         thumb while wrapping the edges of the paper around to the \n                                         right. Like the inside reverse fold, it is much more permanent \n                                         than a simple mountain or valley fold would be.\n\n\n                                                                    Inside reverse fold\n\n\n                        Valley fold\n\n\n                                                                   Outside reverse fold\n\n\n                      Mountain fold\n\n\n                                                                    Hybrid reverse fold\n\n                                         Figure 2.23. \n                                         The ﬁve possible ways to turn the tip of a three-layer ﬂap.\n\n      24\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0db3"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 750,
  "content": "                                             J. P. Duncan and J. L. Duncan, “Folded developables,” Proceedings of \n                                             the Royal Society of London, Series A, vol. 383, 1982, pp. 191–205.\n\n                                             P. Di Francesco, “Folding and coloring problems in mathematics and \n                                             physics,” Bulletin of the American Mathematical Society, vol. 37, no. \n                                             3, July 2000, pp. 251–307.\n\n                                             D. Fuchs and S. Tabachnikov, “More on paperfolding,” The American \n                                             Mathematical Monthly, vol. 106, no. 1, Jan. 1999, pp. 27–35.\n\n                                             David A. Huffman, “Curvatures and creases: a primer on paper,” IEEE \n                                             Trans. on Computers, Volume C-25, 1976, pp. 1010–1019.\n\n                                             Thomas Hull, “On the mathematics of ﬂat origamis,”    Congressus \n                                             Numerantium 100, 1994, pp. 215–224.\n\n                                             Thomas Hull, “Origami math, parts 1, 2, 3 and 4,” Newsletter for \n                                             Origami USA, nos. 49–52, Fall 1994–Fall 1995.\n\n                                             Koji Husimi and M. Husimi, The Geometry of Origami, Tokyo, Nihon \n                                             Nyoron-sha, 1979.\n\n                                             Jacques Justin, “Mathematics of origami, part 9,” British Origami, \n                                             June 1986, pp. 28–30.\n\n                                             Jacques Justin, “Aspects mathematiques du pliage de papier,” Pro-\n                                             ceedings of the First International Meeting of Origami Science and \n                                             Technology, H. Huzita, ed., 1989, pp. 263–277.\n\n                                             Jacques Justin, “Mathematical remarks about origami bases,” Sym-\n                                             metry: Culture and Science, vol. 5, no. 2, 1994, pp. 153–165.\n\n                                             Jacques Justin, “Towards a mathematical theory of origami,” Origami \n                                             Science and Art: Proceedings of the Second International Meeting of \n                                             Origami Science and Scientiﬁc Origami, K. Miura (ed.), Otsu, Japan \n                                             1997, pp. 15–30.\n\n                                             Toshikazu Kawasaki, “On the relation between mountain-creases \n                                             and valley-creases of a ﬂat origami,” in Proceedings of the First In-\n                                             ternational Meeting of Origami Science and Technology, op. cit., pp. \n                                             229–237.\n\n                                             Toshikazu Kawasaki, “On high dimensional ﬂat origamis,” Proceed-\n                                             ings of the First International Meeting of Origami Science and Tech-\n                                             nology, op. cit., pp. 131–141.\n\n                                             Toshikazu Kawasaki, “On solid crystallographic origamis [in \n                                             Japanese],” Sasebo College of Technology Report, vol. 24 1987, pp. \n                                             101–109.\n\n                                             Toshikazu Kawasaki, “On the relation between mountain–creases \n                                             and valley–creases of a ﬂat origami [abridged, English translation],” \n                                             Proceedings of the First International Meeting of Origami Science and \n                                             Technology, op. cit., pp. 229–237.\n\n\n     738\n                         Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0db4"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 744,
  "content": "                                             Michael G. LaFosse, Origamido: Masterworks of Paper Folding, \n                                             Gloucester, Rockport, 2000, pp. 15–16.\n\n                                             Makoto Yamaguchi, Eric Joisel: The Magician of Origami, Tokyo, \n                                             Gallery Origami House, 2011.\n\n                                             Examples of Chris K. Palmer’s tessellation patterns may be found \n                                             in:\n\n                                             Chris K. Palmer, “Extruding and tessellating polygons from a plane,” \n                                             Origami Science & Art: Proceedings of the Second International Meet-\n                                             ing of Origami Science and Scientiﬁc Origami, Koryo Miura, ed., Otsu, \n                                             Japan, Nov. 29–Dec. 4, 1994, pp. 323-331.\n\n                                             Michael G. LaFosse, Paper Art: The Art of Sculpting with Paper, \n                                             Gloucester, Rockport, 1998, pp. 26–33.\n\n                                             Jeffrey Rutzky and Chris K. Palmer, Shadowfolds: Surprisingly \n                                             Easy-to-Make Geometric Designs in Fabric, New York, Kodansha \n                                             America, 2011.\n\n                                             Other patterns of intersecting pleats may be found in:\n\n                                             Paulo Taborda Barreto, “Lines meeting on a surface: the ‘Mars’ \n                                             paperfolding,” Origami Science & Art: Proceedings of the Second \n                                             International Meeting of Origami Science and Scientiﬁc Origami, \n                                             op. cit., pp. 343-359.\n\n                                             Alex Bateman, “Computer tools and algorithms for origami tessella-\n                                             tion design,” in Origami3, Thomas Hull, ed., Natick, Massachusetts, \n                                             A K Peters, 2002, pp. 121–127.\n\n                                             A wide variety of origami tessellations may be found in:\n\n                                             Eric Gjerde, Origami Tessellations: Awe-Inspiring Geometric Designs, \n                                             Natick, Massachusetts, A K Peters, 2008.\n\n                                             8. Tiling\n                                             Two origami masters who have extensively utilized tiling as a design \n                                             methodology in their work are Peter Engel and Jun Maekawa. You \n                                             can ﬁnd both theory and many elegant examples of different tiles \n                                             and models incorporating them in the following: \n\n                                             Peter Engel, Folding the Universe: Origami from Angelﬁsh to Zen, \n                                             op. cit.\n\n                                             Kunihiko Kasahara, Viva! Origami, Tokyo, Sanrio, 1983.\n\n                                             See also examples of grafting in:\n\n                                             Peter Engel, “Breaking Symmetry: origami, architecture, and the \n                                             forms of nature,” Origami Science & Art: Proceedings of the Second \n                                             International Meeting of Origami Science and Scientiﬁc Origami, op. \n                                             cit., pp. 119–145.\n\n     732\n                         Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0db5"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 22,
  "content": "",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0db6"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 181,
  "content": "               4. Fold the left edge over         5. Mountain-fold through the          6. Make all three folds\n               to the crease intersection         intersection of the last two creases  at once, forming a small\n               and unfold. Repeat with the        (the corner touches the marked        Preliminary Fold in the\n               bottom edge.                       crease intersection) and unfold.      lower left corner.\n\n\n               7. Steps 8–16 will focus            8. Squash-fold the corner.            9. Petal-fold the edge.\n               on the lower left corner.\n\n\n                 10. Fold and unfold                 11. Fold the corner up              12. Fold and unfold.\n                 along angle bisectors.              and to the right.\n\n                                                                                                                 169\n                                                                   Folding Instructions:Chapter KNL 6: Grafting Dragon\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0db7"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 195,
  "content": "                                                                                                         32–38\n\n\n               39. Stretch the two near      40. Tuck the paper         41. Turn the        42. Repeat steps\n               points out to the sides.      underneath and close       model over.         32–38 on this side.\n                                             the model up.\n\n\n                                                                            32–40        32–40\n\n\n                 43. Squash-fold the     44. Fold a small 45. Fold one wide  46. Repeat steps  47. Fold half the\n                 top and flatten.        point down.     layer to the right in 32–40 in front and layers to the right\n                                                         front and one to the behind.          in front and half to\n                                                         left behind.                          the left behind.\n\n\n                                                                                         48–51           48–51\n                                                                                                         48–51\n\n\n             48. Fold a single 49. Reverse-fold two 50. Make a small    51. Reverse-fold    52. Repeat steps\n             flap along the   edges and stretch the crimp across the    the corner back to  48–51 on the other\n             folded edge and  flap over to the right. flap and close it up. the left.       three flaps.\n             unfold.          The result will not lie\n                              flat.\n\n                                                                                                                 183\n                                                                      Folding Instructions:Chapter 6: Tree Grafting Frog\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0db8"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 85,
  "content": "./origami_dataset_dev/Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li/page085_image004.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0db9"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 142,
  "content": "                                         into the model—the prospect of starting over from scratch can \n                                         be downright depressing.\n                                             Now, if it were allowed, one might be tempted to simply \n                                         glue on a bit of extra paper, just as in the previous chapter the \n                                         obvious solution to splitting a point was to cut it in two. But \n                                         just as we found ways to achieve the same result as cutting \n                                         while preserving one-piece, no-cut folding, it turns out that it \n                                         is quite often possible to achieve the same result as gluing—to \n                                         add a bit of paper to a particular location without redesigning \n                                         the entire model—while preserving the square that we started \n                                         from. This process is remarkably versatile: It can transform a \n                                         run-of-the-mill design into something special or even extraordi-\n                                         nary and has been utilized by many of the world’s top origami \n                                         designers. I call it grafting.\n\n                                         6.1. Border Grafts\n                                         For a concrete example of grafting, let’s consider our old \n                                         standby, the Bird Base, which lends itself very well to perching \n                                         birds. The Bird Base has four long ﬂaps, which can be used for \n                                         a head, tail, and two legs. The simplest bird I know of that can \n                                         be folded from the Bird Base is a traditional design, the Crow: \n                                         Narrow two ﬂaps to make legs, then reverse-fold one ﬂap and \n                                         crimp the two narrowed ﬂaps to create a head, legs, and feet, \n                                         as shown in Figure 6.1.\n                                             Now, as origami designers have done for decades, you \n                                         can use the Bird Base to realize a wide variety of perching \n                                         birds, so long as you don’t need open wings, by using this basic \n                                         design. By adding more folds—extra reverse folds, crimps, \n                                         rounding folds—it’s possible to make many distinct and recog-\n                                         nizable species with suggestions of wings, feathers, and even \n                                         eyes and other features.\n                                             But one thing that most of these origami birds have in \n                                         common is that the foot is represented by a single toe, and \n                                         real birds, of course, have four toes. This simpliﬁcation is not \n                                         intrinsically bad; all origami is somewhat abstract, and in the \n                                         overall design of a model, there should be a balance in the level \n                                         of abstraction. A simple, clean-lined model can succeed perfectly \n                                         well with simpliﬁed feet.\n                                             It must be said, however, that a distinctive feature of many \n                                         birds is their splayed feet, whether standing on the ground or \n                                         grasping a branch or twig. There are occasions when it would \n                                         be quite desirable to have full, four-toed feet on a perching \n                                         bird design.\n                                             One approach, of course, would simply be to turn the \n                                         foot ﬂap into four ﬂaps using the point-splitting techniques of \n\n     130\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0dba"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 624,
  "content": "             3. Fold four times, dividing the paper into eighths. 4. Fold eight times, dividing the paper into\n                                                              sixteenths. Turn the paper over.\n\n\n             5. Fold 16 times, dividing the paper into 32nds. 6. Make a bunch of diagonal creases.\n             Make each fold by bringing the mountain fold\n             just below it to the one just above it (or vice-\n             versa); this will insure later that the pleats all line\n             up.\n\n                                                                                                                 613\n                                                                  ChapterFolding 13: Instructions: Uniaxial Box Bull Pleating Moose\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0dbb"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 630,
  "content": "                     33. Stretch the sides apart so that                     34. Dent the top in two places, adding\n                     three squares’ worth of the top point                   the creases shown. Stretch the top\n                     flattens out.                                           left toward the left a bit.\n\n\n                            35. Stretch a bit more paper to\n                            the left and close up the model.\n                            The next view is from the left\n                            side.\n                                                            36. Turn the model over.     37. Fold a group of flaps\n                                                                                         upward as far as possible.\n\n\n             38. Pull out a single layer of paper,    39. Fold a rabbit ear from        40. Steps 41–56 will focus\n             folding the pair of flaps up at right    the vertical layers and fold      on the top of the model.\n             angles to the rest of the model.         the upright flaps down.\n\n                                                                                                                 619\n                                                                  ChapterFolding 13: Instructions: Uniaxial Box Bull Pleating Moose\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0dbc"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 156,
  "content": "                                         and see if the feet come out too big or too small. But there is \n                                         another factor that should be taken into account. To keep the \n                                         lines of the model clean, it is desirable to make the edges line \n                                         up as much as possible, which means that features we add by \n                                         grafting would ideally line up with features that are already \n                                         there in the pregrafted base. In the case of the Frog, if we make \n                                         the added strip the same width as the ﬂaps of the Frog Base, \n                                         the new layers will be exactly half the width of the Frog Base \n                                         ﬂaps. Narrowing the ﬂaps by folding them in half will result \n                                         in all the edges lining up, giving a neater appearance. Thus, \n                                         the resulting crease pattern from which we start would be \n                                         something like Figure 6.16. \n\n\n            Figure 6.16. \n            An elegant proportion arises if \n            the dimensions of the smaller \n            squares are matched to the di-\n            mensions of the Frog Base.\n\n                                             There are still two problems: How do we ﬁnd these creases, \n                                         and how do we actually collapse the pattern (i.e., what is the \n                                         folding sequence)? The coordinates of the reference points can \n                                         be numerically calculated from their geometric relationship; \n                                         you can measure and plot their location. (It is also possible \n                                         to devise folding sequences for any reference point, but that \n                                         problem, which is quite rich in and of itself, is beyond the scope \n                                         of this book.)\n                                             For ﬁnding the folding sequence, a good way to start is to \n                                         make the paper resemble a base that you already know how \n                                         to fold—in this case, the traditional Frog Base. It often works \n                                         when a base has been augmented by strips simply to fold the \n                                         strips so that the crease pattern looks like the ungrafted base, \n                                         then proceed with the square fold as if it were all one sheet of \n                                         paper as shown in Figure 6.17.\n\n     144\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0dbd"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 618,
  "content": "                                         Ridges alternate between mountain and valley along their \n                                         length. Hinges get assigned according to the positions of the \n                                         corresponding ﬂaps. The fully assigned crease pattern with \n                                         structural coloring is shown in Figure 13.38.\n                                             And this pattern indeed can be folded into a base that has \n                                         the right ﬂaps in the right place to make this generic beetle, \n                                         as shown in Figure 13.39. (The leg ﬂaps have been folded out \n                                         to the sides in this drawing to make it easier to visualize the \n                                         base.)\n\n\n            Figure 13.39. \n            The generic beetle concept we \n            started with and the box-pleated \n            base we ended up with.\n\n                                             Having completed this design, there are now only “three \n                                         easy steps” left for the reader: precrease, collapse, and shape. \n                                         I encourage you to print out the pattern in Figure 13.38 and \n                                         collapse it so that you can verify that that the coloring does \n                                         indeed describe the position of the various creases in the folded \n                                         base.\n                                             Box-pleated designs can be much neater than their circle-\n                                         packed equivalents. Figure 13.40 shows a stick ﬁgure and a \n                                         narrowed circle-packed base for a Cerambycid Beetle, a beetle \n                                         with long antennae. Although this structure, based on the uni-\n                                         versal molecule, is certainly foldable, ﬁnding reference points \n                                         for the odd-angle folds would be difﬁcult indeed.\n                                             Its box-pleated equivalent, on the other hand, is simple \n                                         and elegant, as shown in Figure 13.41, and is relatively easily \n                                         foldable to boot.\n                                             Figure 13.41 displays the normal mountain/valley color \n                                         scheme. Can you now identify the ridge, hinge, axial, and \n                                         axial+1 creases? Can you then identify the hinge polygons, and \n                                         so which region of the paper goes into each ﬂap?\n                                             While complex uniaxial bases are particularly well suited \n                                         to insects and arthropods (and I have a personal soft spot for \n                                         them as subject matter), their techniques may be used for many \n\n     606\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0dbe"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 697,
  "content": "./origami_dataset_dev/Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li/page697_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0dbf"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 383,
  "content": "            is an axial crease, ridge crease, or hinge crease, than to know \n            whether it is speciﬁcally mountain or valley. Given the hints on \n            folding direction provided by the dashing pattern, the generic \n            form alone is often sufﬁcient information to ﬁgure out how to \n            fold the entire base.\n                Molecules do not occur in isolation, of course; they are \n            agglomerated into tiles and entire crease patterns. In such \n            macro-structures, molecules are joined edge-to-edge by axial \n            creases that must also have their parity assigned. Usually—\n            but again, not always—the axial creases are mountain folds, \n            and so, in the structural representation, they will always be \n            drawn that way.\n                The exception to the “axial = mountain” rule arises when \n            molecules completely surround a vertex in the interior of the pa-\n            per; then it will be necessary to change one of the axial creases \n            to a valley fold or, equivalently, assign two of the axial creases \n            to be unfolded creases. This follows from a relatively famous \n            formula witin origami derived independently by Maekawa and \n            Justin, which states: \n                 \n                                   V – M = ± 2.                               (10–3)\n\n                That is, around any ﬂat-folded interior vertex, the differ-\n            ence between the number of mountain folds (M  ) and valley \n            folds (V ) is ±2, with the choice of sign being made based on \n            whether the folded vertex is concave (+2) or convex (–2) from \n            the viewpoint of the observer.\n                If N molecules come together at an interior vertex, each \n            contributes one ridge and one axial crease. The N ridges must \n            all be valley folds, which means that of the N axial creases, \n            N – 2 must be mountain folds and 2 must be unfolded, or \n            N – 1 are mountain folds and 1 is a valley fold.\n                It is helpful to deﬁne a generic form for entire crease pat-\n            terns, just as we do for individual molecules, in which all axial \n            creases are shown as mountain folds, whether they connect \n            to interior vertices or not. A generic form crease pattern for a \n            uniaxial base has all axial creases assigned as mountain folds; \n            all gusset creases are mountain folds; all ridge creases are \n            valley folds; and all hinge creases are unfolded creases. While \n            such a crease pattern is not, as a rule, ﬂat-foldable, all that is \n            needed to make it ﬂat-foldable is to change the assignment of \n            a handful of creases; no new creases are added. I ﬁnd that in \n            working out a design, the generic form of the crease pattern \n            actually conveys the assembly of the base more clearly than \n            the literal crease pattern would, for in the process of folding, \n            one tends to ﬂip the ﬂaps back and forth and rearrange layers \n\n                                                                                                     371\n                                                                    Chapter 10: Molecules\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0dc0"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 397,
  "content": "                                                    Folding Instructions\n\n\n                                       Orchid Blossom\n\n\n                                       Silverfish\n\n\n                                                                                           385\n                                                       Chapter 10:Chapter Folding 10: Instructions Molecules\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0dc1"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 426,
  "content": "            A                                          A\n                                                             ma       mc\n                            D          B                                         mb\n                a     C                                                               B\n                          c        b\n\n\n                                         Figure 11.13. \n                                         Left: a tree with two leaf nodes and two branch nodes. \n                                         Right: use of circles and rivers to represent the path conditions.\n\n                                             If we draw a circle around node A of radius ma (the scaled \n                                         length of ﬂap A) and one around node B of radius mb, then the \n                                         path condition is satisﬁed if and only if the two circles do not \n                                         overlap; and at equality, the two circles touch.\n                                             Similarly, if the two leaf nodes are separated in the tree \n                                         by multiple edges as in Figure 11.13, we can still represent this \n                                         geometrically by inserting rivers whose width is proportional \n                                         (by the same scale factor m) to the corresponding segments of \n                                         the tree.\n                                             The use of circles and rivers to design a crease pattern and \n                                         the solution of the path equations are completely equivalent \n                                         approaches. Why use one instead of the other? Circles and rivers \n                                         are concrete geometric objects, easily visualizable, and so are \n                                         generally easier for a person to work with. But equations have \n                                         their own value; they can be manipulated, rigorously proven, \n                                         and turned into algorithms. The ﬁrst computer algorithm for \n                                         sophisticated origami design and the proof of its sufﬁciency were \n                                         based on the path equations. However, most origami designers \n                                         who use these techniques work with circles, rivers, and (as we \n                                         will see) other geometric objects to create their own designs. \n                                         Even if one is working computationally, it is still a useful aid \n                                         to one’s intuition when working with crease patterns found by \n                                         path methods to draw in the corresponding circles (and/or riv-\n                                         ers) to illustrate the underlying structure.\n\n                                         11.5. Computational Molecules\n                                         In the previous chapter on molecules, we distinguished dif-\n                                         ferent molecules by their number of ﬂaps and whether or not \n                                         they had connectors between groups of ﬂaps. This distinction \n                                         is concisely captured by associating with each molecule the \n\n     414\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0dc2"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 340,
  "content": "                                             The circle pattern provides a simple way to see the effect \n                                         of blintzing a base. Although each stage of blintzing doubles the \n                                         area of the square, it doesn’t double the number of ﬂaps, since \n                                         some of the paper is consumed turning some quarter- or half-\n                                         circles into full circles. In the progression of the blintzed Frog \n                                         Base shown in Figure 9.39, the original Frog Base has ﬁve long \n                                         ﬂaps; the blintzed Frog Base has nine, and the double-blintzed \n                                         Frog Base has thirteen, numbers that are easily veriﬁed by \n                                         examining the circle pattern.\n                                             For nine ﬂaps and nine circles, the closest packing of circles \n                                         gives the singly blintzed Bird Base that was used for Rhoads’s Bug. \n                                         But you only need eight ﬂaps for a simple insect—head, tail, and six \n                                         legs—and the N = 8 optimum circle packing solution, like N = 6, \n                                         gives a crease pattern perfectly suited to the simple insect. For \n                                         the same size square, the N = 8 pattern gives eight ﬂaps that \n                                         are about 4% longer than the ﬂaps derived from the blintzed \n                                         Bird Base. As with N = 3 and N = 6, the most efﬁcient base is \n                                         rather unexpected. Four of the eight ﬂaps are middle ﬂaps—\n                                         ordinarily, the least efﬁcient way to make a ﬂap—and I am \n                                         unaware of any prior design based on this pattern. Neverthe-\n                                         less, the overall solution is the most efﬁcient eight-equal-ﬂap \n                                         base there is. I leave it to the reader to devise a model that \n                                         exploits this base.\n                                             The N = 9 pattern, as mentioned earlier, corresponds to the \n                                         blintzed Bird Base. The crease pattern for the next case, N = 10 \n                                         ﬂaps, is generated by a circle packing of particular mathemati-\n\n\n                                N = 10 (ca. 1970)        N = 10 (ca. 1971)          N = 10 (ca. 1987)\n                                  r = 0.2083+              r = 0.2096+                r = 0.2100+\n\n\n            Figure 9.41. \n            Optimal ten-circle packings \n            giving ten-pointed bases. \n            Upper left: Goldberg’s solution. \n            Upper center: Schaer’s solution. \n            Upper right: Milano’s solution. \n            Lower left: Valette’s solution. \n            Lower right: Mollard and Payan’s N = 10 (ca. 1989)         N = 10 (ca. 1990)\n            solution, the proven champion.   r = 0.21059+               r = 0.21063+\n\n     328\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0dc3"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 354,
  "content": "             25. Simultaneously squash-                26. Close up the                 27. Mountain-fold\n             fold the upper, hidden flap,              spread sink.                     the flap behind.\n             and spread-sink the lower\n             corner.\n\n\n              28. Mountain-fold the flap  29. Fold a group of   30. Fold two edges in so      31. Fold one\n              behind so the edges line up. layers to the left.  that the creases line up      pleated flap\n                                                                with the hidden edges         back to the left.\n                                                                behind.\n\n\n                                                                                                           1/4\n                             22–31\n\n\n                 32. Repeat steps            33. Turn the          34. Fold a single    35. Fold the model in\n                 22–31 on the right.         model over.           flap down as far     half and rotate 1/4 turn\n                                                                   as possible.         clockwise.\n\n     342\n                         Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0dc4"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 432,
  "content": "                                         is indeed the tree, and all of the ﬂaps have the proper length. \n                                         This crease pattern displays all of the structural crease types \n                                         we have encountered: axial, ridge, gusset, hinge—and even a \n                                         pair of pseudohinges along edges EG and FH.\n\n                                         11.7. Higher-Order Polygons\n                                         What about axial polygons with more than four sides? As \n                                         we saw in the last chapter, we can reduce higher-order axial \n                                         polygons formed in circle/river packings by adding a circle \n                                         inside the polygon and inﬂating it until it contacts three other \n                                         circles (or rivers). There is a corresponding procedure within \n                                         tree theory.\n                                             Let’s take the same example we used before: a pentagon, \n                                         which would represent a ﬁve-ﬂap base. This would have a tree \n                                         containing ﬁve leaf nodes. Although there are several possible \n                                         ﬁve-leaf-node trees, let’s take the simplest for illustration, the \n                                         one with a single branch node, i.e., a ﬁve-star. This graph and \n                                         a sample axial polygon, are shown in Figure 11.21.\n\n                                                                      ABF\n                                                        B\n\n                                           A\n                                                                                             F\n                                                                      F\n\n                                                     F\n            Figure 11.21.                                                                        C\n                                                              C\n            Left: tree for a base with ﬁve E                          E\n            equal ﬂaps. \n            Right: pattern of leaf vertices                                                F\n                                                                             F\n            and active paths corresponding \n                                                   D\n            to this tree.\n                                                                                    D\n\n                                             With circle/river patterns, we broke up higher-order \n                                         polygons by adding circles within the polygon and inﬂating \n                                         them until they contacted three (or more) of the other circles. \n                                         Adding a circle to a circle/river pattern was tantamount to \n                                         creating a new ﬂap. The equivalent action in tree theory would \n                                         be to add a new leaf node and edge to the tree and extend its \n                                         length until the path inequalities become equalities for at least \n                                         three of the other nodes (while the path inequalities for the re-\n                                         maining nodes remain satisﬁed). The result would be the same \n                                         pattern whether we used circles and rivers or path equations, \n                                         and is illustrated in Figure 11.22, ﬁlled with rabbit-ear and \n                                         gusset molecules.\n                                             In this polygon, because of the bilateral symmetry, we \n                                         were able to make the new circle contact four other circles (or \n\n     420\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0dc5"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 368,
  "content": "                                                                 B   F   C\n\n                                                            B                 C\n\n\n                                                                                 D\n            Figure 10.14.                                A\n            Drop perpendiculars from the \n            bisector intersections to all four \n            sides.\n                                                               A     E    D\n\n                                             Now, let’s see if the converse is true. In a four-circle quadri-\n                                         lateral, one whose opposite sides sum to equal values, construct \n                                         the angle bisectors from all four corners. The two bisectors on \n                                         the left must meet at a point; similarly, the two on the right \n                                         must also meet at a point (which may or may not be the same \n                                         point). Suppose they are two different points. Drop perpendicu-\n                                         lars from the two bisector intersections to the adjacent sides, \n                                         as shown in Figure 10.14.\n                                             We label the lengths of distinct segments along the edges \n                                         A–F as shown; since each is a distance, all six quantities are \n                                         greater than or equal to zero. If this is a four-circle quadrilat-\n                                         eral, then the sums of opposite sides must be equal; that is,\n\n                                               (A + B) + (C + D) = (A + E + D) + (B + F + C). (10–1)\n\n                                             This means that\n\n                                                                  E = F = 0.                               (10–2)\n                                              \n                                             And this, in turn, implies that the distance between the \n                                         two bisector intersections is zero, i.e., that they are the same \n                                         point. Thus, any quadrilateral that satisﬁes the Waterbomb \n                                         condition has its angle bisectors meet at a point and can be \n                                         folded into an analog of the Waterbomb Base.\n\n\n                                         Figure 10.15. \n                                         Three identical polygons formed by four different circles.\n\n     356\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0dc6"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 369,
  "content": "                Note that the distances A–D are not necessarily equal to \n            the circle radii a–d that we started with; there are many dif-\n            ferent four-circle patterns that give rise to exactly the same \n            quadrilateral. Three examples are shown in Figure 10.15.\n                Waterbomb molecule quadrilaterals have a couple of other \n            interesting properties. If we draw four lines from the bisector \n            intersection, each perpendicular to one of the four edges, they \n            all have the same length, which means that a circle can be \n            inscribed within the quadrilateral as shown in Figure 10.16, a \n            property ﬁrst shown by Koji Husimi, also noted by Justin and \n            Maekawa.\n\n\n            Figure 10.16. \n            A quadrilateral deﬁned by four touching circles can have a circle \n            inscribed within it that touches all four sides.\n\n                It is also quite easy to show the converse of this relation-\n            ship, that the vertices of any quadrilateral with an inscribed \n            circle tangent to all four sides are the centers of four pairwise \n            tangent circles.\n                If a quadrilateral satisﬁes the Waterbomb condition, then \n            the folds of the Waterbomb Base—the four bisectors, plus the \n            four perpendiculars—are uniquely speciﬁed. So there is only \n            one way to collapse the quad into a Waterbomb molecule. But \n            as we saw, there are many possible circle patterns that can \n            give rise to the same quadrilateral. Only one particular set of \n            circles has the property that the tangent points line up with \n            the hinge creases, as shown in Figure 10.17.\n                For the rhombus that appears in the six-circle packing \n            (Figure 10.11), this is also the situation: The Waterbomb mol-\n            ecule does not bring the tangent points together, as Figure 10.18 \n            shows.\n                Thus, even if a quadrilateral satisﬁes the Waterbomb \n            condition, the Waterbomb molecule may not be the appropri-\n            ate crease pattern that brings together the tangent points. \n            Fortunately, there are other quadrilateral molecules that ﬁll \n            this need.\n\n                                                                                                     357\n                                                                    Chapter 10: Molecules\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0dc7"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 355,
  "content": "                      36. Crimp the flap on the right                 37. Crimp the head downward.\n                      upward.\n\n\n                      38. Reverse-fold the legs downward.             39. Double-rabbit-ear the two legs.\n\n\n                    40. Reverse-fold the legs.\n                    Rotate the model slightly\n                    counterclockwise.\n\n                                                       41. Squash-fold the tail\n                                                       from side to side.\n\n                                                                                    42. Crimp the feet so that the\n                                                                                    model stands flat. Fold the\n                                                                                    small flap up on the side of\n                                                                                    the head and repeat behind.\n\n\n                43. Fold the layers                  44. Open out and round      45. Finished Songbird.\n                underneath the head inside.          the eye. Pinch the beak.\n\n                                                                                                                 343\n                                                                    FoldingChapter Instructions: 9: Circle Songbird Packing 2\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0dc8"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 433,
  "content": "                                      ABF                             ABF\n                           B\n\n              A\n                                                            F                                F\n                                      F                               F\n                              G\n                        F                         G                               G\n                                                                 C                               C\n                                  C\n            E                         E                               E\n\n                                                           F                               F\n                                            F                                F\n                       D\n                                                    D                               D\n            Figure 11.22. \n            Adding another ﬂap to the base is equivalent to adding a new edge \n            (and leaf node) to the tree. \n            Left: the modiﬁed tree. \n            Middle: the new circle pattern. \n            Right: the crease pattern with molecules in place.\n\n            equivalently, turn four path inequalities into equalities). But in \n            the general case, this is usually not possible. This can be seen \n            by counting degrees of freedom; when we add a new circle, we \n            have three degrees of freedom: the two coordinates of its center \n            plus the radius of the circle. So we can, in general, use those \n            three degrees of freedom to satisfy only three equalities.\n                Because of this limitation, we cannot usually subdivide \n            quadrilaterals into triangles. For example, looking at quadri-\n            lateral ABGE in Figure 11.23, if we add another circle to the \n            opening within the quadrilateral (which corresponds to adding \n            another edge to the tree graph at node F), we will ﬁnd that we \n            divide the quadrilateral into two triangles—and another quad. \n            Adding a circle to this new quad still leaves a quad behind. This \n            process can continue forever, always leaving a residual quad-\n            rilateral, which is why we needed the gusset quad and other \n            quadrilateral molecules.\n\n            ABF                           ABF\n\n\n                                 F                             F\n            F                             F\n\n                          G                            G\n                                      C                             C   Figure 11.23. \n            E                             E                             Left: adding a circle to the quad-\n                                                                        rilateral subdivides it, leaving a \n                                F                             F\n                   F                             F                      new quadrilateral. Right: sub-\n                                                                        dividing the new quadrilateral \n                          D                             D               still leaves a smaller quad.\n\n                                                                                                     421\n                                                                   Chapter 11: Tree Theory\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0dc9"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 427,
  "content": "                            A\n                        a\n                               a                          E\n                     D                                                                           C\n                                 D                                    C                     c\n                            E                                    c\n                                                                         B\n                 b                  c                                            b\n                                            B       b                                  D\n                                                          D                                 a\n                                                             a\n                                                                A\n            B                          C                                                      A\n                    bcD\n            Figure 11.14. \n            Generic form crease pattern, folded form, and tree graph for a rabbit-\n            ear molecule.\n\n            particular tree graph (a subtree of the base’s tree graph) to \n            which it corresponds.\n                As we have seen, there is a single triangle molecule, the rab-\n            bit-ear molecule. It has three ﬂaps that come to a common point; \n            thus its tree has three leaf nodes and three edges, which are \n            joined at a common branch node, as shown in Figure 11.14.\n                If you are folding the axial polygon, you can ﬁnd the inter-\n            section of the angle bisectors—point E in the ﬁgure —by pinch-\n            ing each corner in half along the bisector and ﬁnding the point \n            where all three creases come together. If you are calculating \n            the crease locations numerically, there is an elegant formula \n            for the location of the intersection of the angle bisectors of an \n\n            arbitrary triangle. If pA, pB, and pC are the vector coordinates \n\n            of corners A, B, and C and pE is the coordinate of the bisector \n\n            intersection, then pE is given by the formula\n\n                           p ()()()b+ c +p c + a +p a + b\n                      p  =  A         B         C\n                       E            2(a+ b + c )\n                           p  ()()()sb − ac +p sc − ba +p sa − cb\n                          =  A   +     B   +     C   + \n                                       s2s                      (11–3)\n\n            where s is the perimeter of the triangle. That is, the location of \n            the bisector intersection is simply the weighted average of the \n            coordinates of the three corners, with each corner weighted by \n            the length of the opposite side.\n                What happens when one of the sides of the triangle is not \n            an active path? This can happen, for example, when one of the \n            sides of the triangle lies along an edge of the square; all of the \n            triangles in Figure 11.8 are of this type. Since the distance \n            between any two leaf vertices must be greater than or equal \n            to the minimum path length, the side that isn’t an active path \n            must be slightly too long to be an active path rather than too \n            short. Fortunately, only a slight modiﬁcation of the rabbit ear \n\n                                                                                                     415\n                                                                   Chapter 11: Tree Theory\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0dca"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 341,
  "content": "            cal signiﬁcance. While there are mathematical proofs that the \n            patterns shown in Figures 9.29 and 9.30 for N = 1 through 9 are \n            the most efﬁcient possible, the most efﬁcient packing for N = 10 \n            has been the source of some controversy. Not until 1997 was the \n            most efﬁcient packing known. Over a 25-year span, ﬁve different \n            circle packings for N = 10 were found, each more efﬁcient than \n            the previous (although the lengths of the ﬂaps in each solution \n            are all within 1% of one another). In each case, the discoverer \n            conjectured that he had found the most efﬁcient arrangement \n            possible; in the case of all but the last, a more efﬁcient solution \n            was subsequently found. The most recent solution, discovered \n            in 1990 by the mathematicians Mollard and Payan, gives a \n            ﬂap length of 0.2106+; it was proven optimal by the Dutch \n            mathematician Hans Melissen in 1997. The ﬁve solutions and \n            their lines of symmetry are given in Figure 9.41.\n                I ﬁnd it remarkable that such a simple answer to the most \n            efﬁcient packing of ten circles into a square should be so elusive. \n            And if there is so much room for variation in the circle packing \n            for this one particular origami base, think of the possibilities \n            for arbitrary origami structures.\n\n            9.11. The Napkin Folding Problem\n\n            We now have the machinery to design bases with any number of \n            ﬂaps. We also have the tools to solve an interesting mathematics \n            problem that circulated among mathematicians in the mid-1990s, \n            called, at the time, the Margulis Napkin Problem for Russian \n            mathematician Grigory Margulis (although it seems to have in \n            fact been coined by a different Russian mathematician, Vladimir \n            Arnold). The problem was posed as a request for a proof:\n\n                Prove that no matter how one folds a square napkin, \n                the ﬂattened shape can never have a perimeter that \n                exceeds the perimeter of the original square.\n\n                That is, if you start with a square 1 unit on each side, prove that \n            you can’t fold a shape whose perimeter is greater than 4 units.\n                The somewhat surprising fact is that the assertion isn’t true—it \n            is indeed possible to fold a shape with a perimeter greater than 4. \n            Figure 9.42 shows the folding sequence for a shape whose perimeter is \n            slightly greater than 4 units—4.120 units, to be exact. Remarkably, a \n            counterexample to this recent mathematical conjecture can be made \n            from a 200-year-old shape: the venerable Bird Base.\n                A closer examination of this shape, coupled with our under-\n            standing of circle-method origami design, reveals how this can be \n            accomplished.\n\n                                                                                                     329\n                                                                  Chapter 9: Circle Packing\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0dcb"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 396,
  "content": "                                         Figure 10.52. \n                                         Crease pattern, base, and folded model of the Silverﬁsh.\n\n                                         chief architects of these techniques showed off their latest and \n                                         greatest winged, horned, antennaed, and sometimes spotted \n                                         and striped creations. It was an entomologist’s delight (and \n                                         an arachnophobe’s nightmare), and the contest is still going \n                                         on with new revelations every year.\n                                             In circle/river-method designs, the packing of the circles \n                                         and rivers into the square is still a bit ad hoc; the designer \n                                         must shufﬂe circles on paper (or actually manipulate card-\n                                         board circles) to ﬁnd an efﬁcient arrangement; but there is no \n                                         particular prescription for ﬁnding an efﬁcient arrangement, \n                                         let alone the most efﬁcient arrangement. Circles and rivers \n                                         are a wonderful tool for visualizing paper usage, but they can \n                                         also be a distraction from some of the underlying principles. \n                                         By reintroducing a concept we have already seen—the stick \n                                         ﬁgure or tree—and building connections between properties of \n                                         the tree and the crease pattern directly, in the next chapter we \n                                         will be able to construct rigorous mathematical tools that al-\n                                         low the numerical solution of both locally and globally efﬁcient \n                                         crease patterns.\n\n\n     384\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0dcc"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 382,
  "content": "                                         form. But also, knowing the probable crease assignments, we \n                                         can, in a single crease pattern, give a broad hint of the crease \n                                         assignment by adopting three simple rules:\n\n                                             • all ridge creases are valley folds except those at \n                                             axial reﬂex vertices, which are mountain folds;\n\n                                             • all gusset baselines are mountain folds; and\n\n                                             • all hinge creases are shown as unfolded creases \n                                             (since they could go either way).\n\n                                             The generic forms of all of the molecules we have seen are \n                                         shown in Figure 10.34.\n\n\n                                         Figure 10.34. \n                                         Generic form of molecules. \n                                         Top row: rabbit-ear, Waterbomb, and sawhorse molecules. \n                                         Bottom: arrowhead and gusset molecules. Note the ridge crease \n                                         that is a mountain fold at the axial reﬂex vertex in the arrowhead \n                                         molecule.\n\n                                             It is a curious fact that the generic form of a molecule isn’t \n                                         actually ﬂat-foldable as drawn; but I ﬁnd the structural form \n                                         as illuminating, if not more so, than the true crease pattern. \n                                         The true crease assignment varies depending on the speciﬁc \n                                         ﬂap orientation, which is often not important. What is very \n                                         important when one is attempting to assemble a molecule, \n                                         or a base, is to know where each crease ends up in the folded \n                                         form. And so it is often more useful to know whether a crease \n\n     370\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0dcd"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 619,
  "content": "             Figure 13.40. \n             Stick ﬁgure and fully assigned crease pattern with structural col-\n             oring for a long-antennaed beetle using circle/river packing and \n             universal molecules.\n\n\n             Figure 13.41. \n             Crease pattern, base, and folded model for the Cerambycid Beetle.\n\n                                                                                                                 607\n                                                                  Chapter 13: Uniaxial Box Pleating\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0dce"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 413,
  "content": "./origami_dataset_dev/Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li/page413_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0dcf"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 631,
  "content": "              41. Sink the near corner on          42. Pull out some loose             43. Reverse-fold the edge.\n              each side.                           paper from the left near\n                                                   flap.\n\n\n                                                                                        42–45           42–45\n\n\n                                                                                                        42–45\n\n              44. Reverse-fold the edge            45. Reverse-fold the edge           46. Repeat steps 42–45 on\n              back to the left.                    back to the right so that the       the next flap on the left and\n                                                   edges are aligned with the          on both flaps on the right.\n                                                   other layers.\n\n\n              47. Sink the next pair of            48. Open-sink the far edge          49. Reverse-fold the top\n              corners.                             on each side. Over the next         hidden corner of the next\n                                                   8 steps, you will start with        nearest layer on each side.\n                                                   the far edges and work your\n                                                   way to the near ones.\n\n     620\n                         Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0dd0"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 157,
  "content": "                  1. Pleat the paper vertically. 2. Pleat the paper horizontally. 3. Form a Preliminary\n                                                                             Fold and continue folding\n                                                                             the Frog Base.\n            Figure 6.17. \n            Initial folding sequence to construct the augmented Frog Base.\n\n                This puts all the creases in the right place, but you will of-\n            ten ﬁnd that some of the layers get trapped; this happens with \n            the thick layers formed by the crossing pleats in the center of \n            the paper. In such cases, you will probably have to partially \n            unfold the model to disentangle the layers (a process dubbed \n            decreeping by origami artist Jeremy Shafer). Decreeping ac-\n            complishes two things: It makes all of the layers accessible so \n            that they can be turned into other features, and by reducing or \n\n\n            Figure 6.18. \n            Crease pattern, base, and folded model of the Tree Frog.\n\n                                                                                                     145\n                                                                       Chapter 6: Grafting\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0dd1"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 143,
  "content": "             1. Begin with a Bird 2. Narrow the flaps with 3. Fold one flap down. 4. Fold the next flap down.\n             Base. Reverse-fold the mountain folds.\n             bottom flaps out to the\n             sides.\n\n\n                         5. Mountain-fold the 6. Reverse-fold the top point 7. Finished Crow.\n                         model in half.      to form a head. Crimp the feet.\n\n            Figure 6.1. \n            Folding instructions for a simple Crow.\n\n            the previous chapter. This change comes at a cost, of course: \n            In order to obtain four ﬂaps at the tip, the main ﬂap gets \n            substantially consumed. It is possible to obtain four toes \n            using the sequence shown in Figure 6.2 (a radial four-point \n            split), but the legs that are left are short, fairly wide, and suf-\n            ﬁciently thick so that narrowing them to approximate a bird’s \n            stick-like legs is rather difﬁcult.\n                For a perching bird, it would be desirable to keep the \n            legs long but to replace the single point at the tip of each leg \n            with four points without reducing the length of the leg. That \n            requires a net addition of paper.\n                If it weren’t for those one-piece rules, we could simply \n            glue on an extra bit of paper at the feet as shown in Figure 6.3 \n            as a revised ending to the folding sequence of Figure 6.1. We \n            could make a pair of four-toed feet from two tiny bird bases, \n            glue them onto the larger bird, and presto! We’re done.\n                But from a single sheet, what can we do? Well, we could \n            see if it’s possible to somehow obtain the functionality of three \n\n                                                                                                     131\n                                                                       Chapter 6: Grafting\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0dd2"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 625,
  "content": "                7. Make two vertical folds through existing crease 8. Make another vertical fold through existing\n                intersections. Turn the paper over from top to crease intersections. Turn the paper back over.\n                bottom.\n\n\n                9. Make four diagonal folds.                   10. Make four more diagonal folds.\n\n\n     614\n                         Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0dd3"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 85,
  "content": "./origami_dataset_dev/Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li/page085_image005.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0dd4"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 194,
  "content": "                 22–25\n\n\n               28. Repeat steps         29. Bring the bottom left and right corners       30. Squash-fold the left flap\n               22–25 on this side.      together, swinging the excess paper to the        in front and the opposite\n                                        left in front and to the right behind. Spread     flap behind, spreading the\n                                        the extra layers up near the tip evenly, front    thick layers up near the tip\n                                        to back.                                          symmetrically.\n\n\n             31. Reverse-fold in the       32. Petal-fold the      33. Fold the side         34. Open-sink the\n             two remaining flaps.          edge in front.          corners to the            corners on the creases\n                                                                   center and unfold.        you just made.\n\n\n             35. Fold and unfold      36. Fold the small   37. Lift up the point and     38. Fold the raw\n             through all layers.      point down as far as squeeze it in half, forming a edge inside on\n                                      possible.            rabbit ear from a single layer existing creases.\n                                                           of paper and opening out a\n                                                           layer on the lower flaps. The\n                                                           paper will not lie flat.\n\n     182\n                         Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0dd5"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 180,
  "content": "            KNL Dragon\n\n\n            1. Begin with a square, white    2. Fold the right edge to the  3. Fold the bottom left corner\n            side up. Fold and unfold         downward diagonal and          to the crease you just made so\n            along both diagonals.            unfold.                        that the crease passes through\n                                                                            the upper left corner; make a\n                                                                            pinch where it crosses the\n                                                                            diagonal and unfold.\n\n\n     168\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0dd6"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 745,
  "content": "             Both tiling and grafting are described in:\n\n             Jun Maekawa, “Evolution of Origami Organisms,” Symmetry: Culture \n             and Science, vol. 5, no. 2, 1994, pp. 167–177.\n\n             A design example using circles for allocation of points may be \n             found in:\n\n             Fumiaki Kawahata, “Seiyaku-eno chosen: kado-no oridashikata \n             [Challenge to restrictions: how to make points]”, Oru, no. 2, Autumn \n             1993, pp. 100–104.\n\n             A full folding sequence for the Shiva of Figure 8.47 may be found in:\n\n             Jay Ansill, Mythical Beings, New York, HarperPerennial, 1992, pp. \n             70–75.\n\n             A full folding sequence for the Hercules Beetle of Figure 8.48 may \n             be found in:\n\n             Robert J. Lang, Origami Insects and their Kin, op. cit., pp. 82–89.\n\n             A full folding sequence for the Praying Mantis of Figure 8.49 may \n             be found in:\n\n             Robert J. Lang, Origami Insects and their Kin, op. cit., pp. 106–\n             113.\n\n             A full folding sequence for the Periodical Cicada of Figure 8.52 may \n             be found in:\n\n             Robert J. Lang, Origami Insects II, Tokyo, Gallery Origami House, \n             2003, pp. 118–128.\n\n             A full folding sequence for the Pill Bug of Figure 8.55 may be found in:\n\n             Robert J. Lang, Origami Insects II, ibid., pp. 38–46\n\n             A full folding sequence for the Centipede of Figure 8.56 may be \n             found in:\n\n             Robert J. Lang, Origami Insects II, ibid., pp. 180–194\n\n             9. Circle Packing\n             Montroll’s Five-Sided Square may be found in:\n\n             John Montroll, Animal Origami for the Enthusiast, op. cit., pp. \n             21–22.\n\n             Toshiyuki Meguro describes a circle/river design of a ﬂying insect in:\n\n             Toshiyuki Meguro, “‘Tobu Kuwagatamushi’-to Ryoikienbunshiho \n             [‘Flying Stag Beetle’ and the circular area molecule method]”, Oru \n             no. 5, Summer 1994, pp. 92–95.\n\n                                                                                                                 733\n                                                                                        References\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0dd7"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 23,
  "content": "                                                            Building2 Blocks\n\n                             uch of the charm of origami lies in its simplic-\n                             ity: There is the square, there are the folds. \n                             There are, it would appear, only two types \n                             of folds: mountain folds (which form a ridge) \n                             and valley folds (which form a trough). So, \n            square + mountain folds + valley folds is the recipe for nearly \n            all of origami. How simple can you get?\n                But is it true that there are two types of fold? Maybe \n            there’s only one; the mountain fold can be turned into a valley \n            fold merely by turning the paper over.\n\n\n                                                                        Figure 2.1. \n                                                                        A mountain fold is the same as \n                                                                        a valley fold turned over.\n\n                On the other hand, perhaps there are three types of fold: \n            valley folds, mountain folds, and unfolds. If we fold the paper \n            in half and unfold it, we will be left with a line on the paper—\n            a crease—which is also a type of fold. Creases are sometimes \n            merely artifacts, leftover marks from the early stages of \n            folding, but they can also be useful tools. Creases can provide \n            reference points (“fold this point to that crease”) and in the \n            purest style of folding (no measuring devices, such as rulers, \n            allowed) creases, folded edges, and their intersections are the \n            only things that can serve as reference points. Creases are \n            also commonly made in preparation for a complex maneuver. \n\n                                                                                                      11\n\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0dd8"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 37,
  "content": "                In the verbal instructions, the term “reverse fold” (with-\n            out an “inside” or “outside” qualiﬁer) will generally mean \n            “inside reverse fold.”\n                A simple ﬂap with two layers has only two possible types \n            of reverse fold: inside or outside. More complicated ﬂaps \n            with multiple layers can have multiple possibilities or even \n            combinations of the two; for example, the triangular shape \n            shown in Figure 2.23 (made by folding a square in thirds at \n            one corner) can be either inside- or outside-reverse-folded \n            to either the left or right; in addition, it is possible to make \n            a sort of hybrid reverse fold that combines aspects of both. \n            The silhouettes of all three shapes (and for that matter, the \n            mountain- or valley-folded equivalents) are the same; they \n            differ only in their crease patterns. In diagrams throughout \n            the book, they will be distinguished by the presence or absence \n            of push arrows (distinguishing reverse folds from mountain \n            or valley folds) and/or the conﬁguration of edges shown in \n            subsequent diagrams.\n                Another combination fold that occurs with some regular-\n            ity is the rabbit-ear fold (which acquired its name from some \n            rabbit design long since lost in the mists of antiquity). The \n            rabbit-ear fold is almost always performed on a triangular \n            ﬂap, and is characterized by three valley folds along the angle \n            bisectors of the triangle, with a fourth fold, a mountain fold, \n            extending from the point of intersection perpendicularly to \n            one side.\n\n\n                                                                       Figure 2.24. \n                                                                       The rabbit-ear fold.\n\n                When a rabbit-ear fold is formed, all of the edges lie on a \n            common line. Remarkably, this procedure works for a triangle \n            of any shape—or perhaps it is not so remarkable, since the \n            rabbit ear is merely a demonstration of Euclid’s theorem that \n            the angle bisectors of any triangle meet at a common point.\n                Rabbit-ear folds occur not only on isolated ﬂaps. Bring-\n            ing all the edges to lie on a common line is a special property; \n            the rabbit ear is the simplest example of a molecule, which is \n            the name for any crease pattern with this property. We will \n            encounter rabbit-ear crease patterns and molecules in much \n\n                                                                                                      25\n                                                                 Chapter 2: Building Blocks \n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0dd9"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 751,
  "content": "             Toshikazu Kawasaki, “On the relation between mountain–creases and \n             valley–creases of a ﬂat origami [unabridged, in Japanese],” Sasebo \n             College of Technology Report, Vol. 27 1990, pp. 55–80.\n\n             Toshikazu Kawasaki, “R(gamma) =1,” Origami Science and Art: Pro-\n             ceedings of the Second International Meeting of Origami Science and \n             Scientiﬁc Origami, K. Miura ed., Otsu, Japan 1997, pp. 31–40.\n\n             Toshikazu Kawasaki and Masaaki Yoshida, “Crystallographic ﬂat \n             origamis,” Memoirs of the Faculty of Science, Kyushu University, \n             Series A, vol. 42, no. 2, 1988, pp. 153–157.\n\n             J. Koehler, “Folding a strip of stamps,” Journal of Combinatorial \n             Theory, vol. 5, 1968, pp. 135–152.\n\n             W. F. Lunnon, “A map–folding problem,” Mathematics of Computation, \n             vol. 22, no. 101, 1968, pp. 193–199.\n\n             W. F. Lunnon, “Multi–dimensional map folding,” The Computer \n             Journal, vol. 14, no. 1, 1971, pp. 75–80.\n\n             Jun Maekawa, “Evolution of origami organisms,” Symmetry: \n             Culture and Science, vol. 5, no. 2, 1994, pp. 167–177.\n\n             Jun Maekawa, “Similarity in origami (abstract),” Abstracts for the \n             Second International Meeting of Origami Science and Scientiﬁc Ori-\n             gami, Otsu, Japan 1994, pp. 65–66.\n\n             Koryo Miura, “A note on intrinsic geometry of origami,” Proceedings \n             of the First International Meeting of Origami Science and Technology, \n             op. cit., pp. 239–249.\n\n             Koryo Miura, “Folds—the basis of origami,” Symmetry: Culture and \n             Science, vol. 5, no. 1, 1994, pp. 13–22.\n\n             Koryo Miura, “Fold—its physical and mathematical principles,” \n             Origami Science and Art: Proceedings of the Second International \n             Meeting of Origami Science and Scientiﬁc Origami, K. Miura (ed.), \n             Otsu, Japan 1997, pp. 41–50.\n\n             Ileana Streinu and Walter Whiteley, “The spherical carpenter’s rule \n             problem and conical origami folds,” Proceedings of the 11th Annual \n             Fall Workshop on Computational Geometry, Brooklyn, New York, \n             November 2001.\n\n             Kunio Suzuki, “Creative origami ‘snowﬂakes’: some new approaches \n             to geometric origami (abstract),” Abstracts for the Second Interna-\n             tional Meeting of Origami Science and Scientiﬁc Origami, Otsu, \n             Japan 1994, pp. 37–38.\n\n             The program TreeMaker runs on Macintosh, Linux, and Windows \n             computers and is available with documentation at: http: //www.\n             langorigami.com/treemaker.htm.\n\n\n                                                                                                                 739\n                                                                                        References\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0dda"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 696,
  "content": "./origami_dataset_dev/Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li/page696_image004.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ddb"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 209,
  "content": "                                                          Pattern Grafting7\n\n                          imple grafting can take the form of borders \n                          (whole or partial) around the paper or strips that \n                          propagate inward from the edges of the paper. \n                          The strip grafts you’ve seen thus far use pleats \n                          to add paper along the edges of the square in \n            order to expand appendages. But it’s also possible to use the \n            pleats themselves as the additional feature of the model, for \n            example, to create a pattern in an expanse of paper. In the \n            best of all possible worlds, one can add pleats that both create \n            extra paper in appendages and create a useful pattern in the \n            rest of the model. In this way, all of the added paper makes a \n            contribution to the overall model.\n\n            7.1. Pleated Patterns\n            An ideal candidate for this sort of two-for-the-price-of-one design \n            is a turtle. There are many origami turtles—not as many as \n            there are elephants, but still quite a few—nearly all of which \n            have smooth shells. But the pattern of plates on a turtle’s shell \n            is a distinctive feature of the animal (beyond the presence of \n            the shell itself, of course), and in recent years, several designers \n            have taken it as a challenge to fold the plate pattern as part \n            of the shell, with varying results. Using strip grafting, it is a \n            relatively straightforward process to add pleats to the shell of \n            an otherwise smooth-shell turtle design in order to create the \n            natural pattern of plates. As a bonus, we can use the pleats to \n            add detail to other parts of the model.\n                Here’s how we do it: Figure 7.1 shows the structure of a \n            simple turtle. It’s easy to fold and has a very simple structure. \n            As we have done before, it is useful to examine the base and the \n            crease pattern as well as the folded model in order to establish \n\n                                                                                                     197\n\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ddc"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 221,
  "content": "                A single pleat crossing can be thought of as an individ-\n            ual tile. To develop an approximation of the pattern of \n            semicircles, we should array tiles containing the lines of \n            the pleat crossings in such a way that they create a similar \n            pattern. Figure 7.17 shows such an array, ﬁlling in over the \n            semicircular array.\n\n\n                                                                        Figure 7.17. \n                                                                        Left: two tiles of crease pattern. \n                                                                        Right: the tiles arrayed over the \n                                                                        pattern of semicircles.\n\n                One can think of this operation as cutting out small tiles \n            of pleats, then taping them together edge-to-edge to realize the \n            larger array. We can do this to both the folded and unfolded \n            form of the paper. The folded form gives the folded array; the \n            unfolded form gives the crease pattern necessary to realize the \n            array. Figure 7.18 shows, ﬁrst, a single tile.\n\n\n                                                                        Figure 7.18. \n                                                                        Left: the folded tile. \n                                                                        Right: the crease pattern.\n\n                What we deﬁne as the edges of the tile is somewhat arbi-\n            trary; what matters most is the tile-to-tile spacing, which sets \n            the overall periodicity of the scale array. In Figure 7.18, I have \n            chosen the tile boundary so that the visible portion of each scale \n            is a quarter of an equilateral octagon. We can create an array \n            of such octagonal scales by putting together an array of scale \n            tiles, as shown in Figure 7.19.\n                And then, once we have created our array, we can (ﬁgu-\n            ratively) tape the patterns together as we did with individual \n            grafts in order to create a single-sheet array.\n\n                                                                                                     209\n                                                                Chapter 7: Pattern Grafting\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ddd"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 547,
  "content": "           16. Add more               17. Add more               18. Add more\n           horizontal creases         vertical creases.          horizontal creases.\n           and turn the paper\n           over.\n\n                                                                                           535\n                                              Folding Instructions:Chapter Black  Forest12: Box Cuckoo Pleating Clock\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0dde"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 553,
  "content": "                  51. Sink the edges.\n\n                                       52. Push in two layers and pull\n                                       both layers up to make a point.\n\n\n                 53. Turn the model over.\n\n\n                                          54. Fold the sides in.\n\n\n                                                                   55. This is what the entire model\n                                                                   looks like. Turn it over.\n\n                                                                                           541\n                                              Folding Instructions:Chapter Black  Forest12: Box Cuckoo Pleating Clock\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ddf"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 729,
  "content": "./origami_dataset_dev/Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li/page729_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0de0"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 235,
  "content": "                        AB\n\n\n                                                                                               A  B\n\n\n                18. Fold two flaps                  19. Reverse-fold four flaps         20. Observe that\n                downward. Note the                  out to the sides. Do not            corners A and B remain\n                corners marked A and B.             include corners A and B in          flat. Reverse-fold the\n                                                    the reverse folds.                  tips of the legs\n\n\n                21. Reverse-fold the     22. Reverse-fold the       23. Divide the        24. Pleat the top and\n                tips of the hind legs.   tips of all four legs.     bottom point into     bottom and curve the shell\n                                         Turn the model over        thirds with creases   to make it rounded. The\n                                         from side to side.         that line up with     tail pleats are on existing\n                                                                    folded edges behind.  creases; the head pleats\n                                                                                          have vertical valley folds.\n\n\n              25. Pleat the head and tail;         26. Puff out the head. Pinch          27. Finished Turtle.\n              these pleats lock the pleats         the tail to make it three-\n              made in the previous step.           dimensional. Round the shell\n                                                   and shape the legs.\n\n     224\n                         Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0de1"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 584,
  "content": "            Figure 13.8. \n            The generic beetle crease pattern, \n            with hinges emphasized.\n\n                                         polygons, which enclose circles, and “river-like” hinge polygons, \n                                         which wind about like rivers, and so we will call the latter \n                                         hinge rivers. The circle-like hinge polygons fully enclose the \n                                         minimum-packing circles, and in some cases are tangent to \n                                         those circles—but tangency is clearly not a requirement on all \n                                         sides. As for the hinge rivers, like their curvilinear brethren, \n                                         they maintain a constant width along their length. But they \n                                         travel in straight segments, changing direction only at discrete \n                                         places, where they are, invariably, crossed by a ridge crease \n                                         that connects the two corners of the bend.\n                                             So what if we could just skip the circles and rivers and \n                                         go straight to packing of the hinge polygons and hinge rivers? \n                                         What might we gain? One very important thing: control over \n                                         what polygons we use. With circle/river packing, the polygons \n                                         bounded by hinge creases are generated fairly late in the pro-\n                                         cess and we get whatever happens to fall into place. But if we \n                                         could work directly with hinge polygons, we could control their \n                                         shapes; we could, in fact, choose their shapes. Thus, we could \n                                         insure that we end up with nice hinge polygons.\n                                             And what, exactly, constitutes a “nice” hinge polygon? \n                                         Well, two properties come to mind. First, it would be nice if \n                                         all of the vertices fell on a regular grid, so that every vertex \n                                         could be found with a relatively simple folding process. Second, \n                                         it would be nice if the creases ran at only a small number of \n                                         angles, further making it easy to construct the crease pattern. \n                                         By a small number of angles, I mean angles that correspond \n\n     572\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0de2"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 590,
  "content": "                                             Figure 13.12. \n                                             Hinge polygons for a 5-leaf stick ﬁgure, showing the minimum polygons \n                                             (squares that enclose the packing circles) and a hinge river.\n\n\n                                             Figure 13.13. \n                                             Left: a 5 × 5 square almost works. \n                                             Right: a 6 × 6 square encloses all polygons.\n\n     578\n                         Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0de3"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 291,
  "content": "             Figure 8.55. \n             Crease pattern with circles and rivers, base, and folded model of the \n             Pill Bug.\n\n\n             Figure 8.56. \n             Crease pattern with circles and rivers, base, and folded model of the \n             Centipede.\n\n                                                                                                                 279\n                                                                                  Chapter 8: Tiling\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0de4"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 285,
  "content": "            touches a, the two corresponding ﬂaps are connected at their \n            base. The way you can keep this straight is to use the rule that \n            two segments are connected at a point if in the circle pattern, \n            you can travel from one to the other without cutting across a \n            circle or river.\n                Continuing downward, ﬂaps a–d are connected to a short \n            segment (e), which, in turn, is connected to two more short seg-\n            ments (f and g) and a longer point, l. Both f and g are terminated \n            in pairs of ﬂaps—h and i, and j and k, respectively.\n                So this base will have eight longish ﬂaps, two paired along \n            a segment, and a single ﬂap longer than any of them. Now, if \n            this base meets the needs of the desired subject, we can ﬁll it \n            in with tile creases, as shown in Figure 8.44 with simple and \n            narrowed tiles.\n                And if we fold either pattern into a base, we will obtain a \n            base with the same number, length, and conﬁguration of ﬂaps \n            as is predicted by the circle pattern.\n                You might enjoy folding the base for yourself and seeing if \n            you can identify the ﬂaps. The folding sequence in Figure 8.46 \n            gives the appropriate proportions for the division into squares \n            and rectangles; from there, the other folds can be constructed \n            by bisecting various angles.\n                I have used a dissection very similar to this for a model \n            of Shiva as Nataraja, but using rectangles of proportion 2 × \n            (1+√2), rather than the silver rectangle (1 × √2). The crease \n\n\n            Figure 8.47. \n            Crease pattern, base, and folded model of Shiva.\n\n                                                                                                     273\n                                                                         Chapter 8: Tiling\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0de5"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 508,
  "content": "            Figure 12.38. \n            Scaling up the crane tile. Two \n            more doublings are required for \n            a thousand cranes.\n\n                                         paper would be nearly 10 × 10 meters: pretty large, yes, but \n                                         not entirely inconceivable.\n                                             And how many cranes would it contain? A 32 × 32 array \n                                         would contain 1024 cranes. If one left six cranes unfolded at \n                                         each of the four corners, the result would be exactly 1000 cranes. \n                                         The Japanese folding classic Sembazuru Orikata translates to \n                                         “The Folding of One Thousand Cranes.” The Sembazura style \n                                         of folding involves cutting deep slits into a sheet to make ar-\n                                         rays of connected cranes. But here, we see, through the power \n                                         of box pleating, we can—at least in principle—fold a thousand \n                                         cranes in the fu-setsu sei-hokkei ichi-mai ori style: from a single \n                                         uncut square.\n\n     496\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0de6"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 397,
  "content": "./origami_dataset_dev/Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li/page397_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0de7"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 534,
  "content": "            35. Valley-fold the edge upward.                   36. Mountain-fold the edge underneath.\n\n\n                                                                                  33–37\n\n\n            37. Close up the edge.                            38. Repeat on the right.\n\n     522\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0de8"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 252,
  "content": "",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0de9"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 246,
  "content": "               60. Form valley folds               61. Squash-fold the extra          62. Reverse-fold three\n               betweeen the existing               paper over to the right and        corners.\n               mountain creases and pleat          flatten.\n               the corners all together. Then\n               turn the paper back over.\n\n\n               63. Valley-fold the corner.        64. Spread the toes;                65. Finished front foot.\n                                                  simultaneously sink the edge\n                                                  of the “heel.” The paper will\n                                                  lie almost flat, except for the\n                                                  pleats forming the toes, which\n                                                  will be vertical.\n\n\n               66. Detail of hind foot. Fold       67. Squash-fold the flap,          68. Close up the flap.\n               and unfold.                         opening out the pleat.\n\n                                                                                                                 235\n                                                           Folding Instructions:Chapter Western 7: Pattern Pond Grafting Turtle\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0dea"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 520,
  "content": "                                         again, outside the world of traditional origami. However, once \n                                         those techniques merged into the rapidly expanding world of \n                                         origami in the late 20th century, there was a great leap forward \n                                         in the origami art, and the works of Elias, Hulme, and others \n                                         testify to its power.\n                                             But there was still one more step to take. With all its \n                                         power, classic box pleating as I have described in this chapter \n                                         still has limitations: it worked especially well for designs from \n                                         arbitrary rectangles but the job gets much tougher if we take the \n                                         constraint of folding from a square. The development of circle \n                                         packing and tree theory showed that it was possible to create \n                                         highly complex forms from a square (or any other shape), but \n                                         there was a price to pay, in complexity, irregularity, and folding \n                                         difﬁculty. Wouldn’t it be wonderful, though, if the regularity of \n                                         box pleating could be combined with the universality of circle \n                                         packing, tree theory, and molecules? It can be; it is wonderful; \n                                         and that will be the subject of the next chapter.\n\n\n     508\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0deb"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 93,
  "content": "                         33. Steps 34–41 focus on                  34. Double-reverse-       35. Outside reverse-\n                         the tips of the white flaps.              fold the tip inside.      fold the flap.\n\n\n               36. Pull out some      37. Shift the interior    38. Crimp and rotate the     39. Closed-sink\n               loose paper.           point so that its tip lies end of the flap so that it  the corner.\n                                      along the center line.    aligns with the shaft\n                                                                emanating to the left.\n\n\n                                                                               34–38\n\n\n                40. Mountain-fold the                   41. Like this.               42. Repeat steps 34–38\n                bottom edge underneath.                                              (stop at 38!) on the right.\n                Repeat behind.\n\n\n                43. Crimp the left side            44. Round the heart with           45. Finished Valentine.\n                upward so that the two             mountain folds. Dent the\n                halves of the white shaft          tail of the arrow to make it\n                line up.                           slightly three-dimensional.\n\n                                                                                                                  81\n                                                                      FoldingChapter Instructions: 4: Traditional Valentine Bases\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0dec"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 87,
  "content": "                                                                                                           1/4\n\n\n                 8. Repeat on the bottom          9. Fold the two lower               10. Fold the model in\n                 two corners.                     points down as far as they          half and rotate 1/4 turn\n                                                  will go.                            clockwise.\n\n\n              11. Reverse-fold the left side        12. Fold one layer up in         13. Reverse-fold the pair of\n              downward symmetrically.               front and one to the rear        flaps as if they were a\n                                                    behind.                          single flap (they are joined\n                                                                                     about halfway down).\n\n\n               14. Reverse-fold the tips of       15. Reverse-fold the bottom         16. Reverse-fold a\n               each corner so that the raw        corners. Valley-fold the            hidden layer down from\n               edges line up.                     leading edge of the near            the inside of the bottom\n                                                  wing; repeat behind.                of the model.\n\n\n                17. Spread the wings              18. Finished Stealth Fighter.\n                and tail.\n\n                                                                                                                  75\n                                                                 FoldingChapter Instructions: 4: Traditional Stealth Fighter Bases\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ded"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 78,
  "content": "                                         most designs do), the base creases are made ﬁrst and usually \n                                         persist throughout the folding of the model. By examining the \n                                         crease pattern for a model and identifying the base creases, you \n                                         can gain information about the folding sequence for the model \n                                         because the earlier steps will be devoted to construction of the \n                                         base. The base creases tend to be longer than later folds in the \n                                         sequence. Thus, for example, in the Snail shown in Figure 4.12, \n                                         we can pick out several long creases in the pattern that identify \n                                         the probable base, which is shown in Figure 4.13.\n\n\n                                         Figure 4.12. \n                                         Crease pattern and ﬁnished model of Snail, from a Kite Base.\n\n                                             In this pattern, composed of only six creases, you can \n                                         already see the basic structure of the snail: the tail, the two \n                                         corners that become the antennae, and the long colored ﬂap \n                                         that becomes the shell.\n                                             The full pattern obtained by unfolding the folded model is \n                                         often too cluttered to clearly discern the structure. It is more \n                                         useful to show just the major creases, typically those when \n                                         the base is complete but before the ﬁnal shaping has begun. \n                                         Throughout this book I will show crease patterns at this inter-\n                                         mediate stage of folding, along with a drawing of the shape that \n                                         corresponds to the crease pattern and the folded model.\n                                             Interestingly, the more complicated the base is, the easier \n                                         it often is to recognize in the crease pattern because its creases \n                                         form a distinctive pattern. In the Valentine in Figure 4.14, it \n\n      66\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0dee"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 50,
  "content": "                                             For any given corner, there is only one way of making an \n                                         open sink, but there are multiple ways of forming closed sinks; \n                                         in fact, a sink can be open at one end and closed at the other, \n                                         an arrangement called a mixed sink. The different varieties \n                                         are not always distinguishable from the outside, as different \n                                         arrangements of interior (hidden) layers can have the same \n                                         outward appearance. For a quadrilateral sink—one with four \n                                         ridges running down from the top point—there are nine distinct \n                                         conﬁgurations. They and their crease patterns are shown in \n                                         Figure 2.47.\n\n\n             Open sink\n\n\n             Mixed sink\n\n\n             Mixed sink\n\n\n            Closed sink\n\n                                         Figure 2.47. \n                                         The nine distinct types of sink for a four-ridged point.\n\n      38\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0def"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 736,
  "content": "            61. Fold one flap as far up to       62. Valley-fold the flap out to    63. Pull out some loose paper.\n            the right as possible.               the side.\n\n\n                             64. Sink the point while                    65. Close up the flap.\n                             squash-folding one of the\n                             white folded edges.\n\n\n                                                                        61–66\n\n\n            66. Narrow the leg a bit with a    67. Repeat steps 61–66 on the      68. Curve the body so that the sides\n            valley fold.                       right.                             are parallel and the middle is U-\n                                                                                  shaped.\n\n     724\n                         Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0df0"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 722,
  "content": "                                         Figure 15.11. \n                                         Crease pattern, base, and folded model of the Rabbit.\n\n                                         (which is why the grafted Kite Base is a family of bases, rather \n                                         than a single base). The smaller the Kite Base is, relative to the \n                                         full square, the more paper is available for other ﬂaps. Thus, in \n                                         Figure 15.12, where I have drawn three different sizes, you can \n                                         see that in the image on the left, the four circles at the top of \n                                         the square (and thus their corresponding ﬂaps in the base) are \n                                         relatively small compared to the lower ﬂaps; compare circles A, \n                                         B, and C in Figure 15.12. Reducing the Kite Base relative to the \n                                         larger square allows the four type A ﬂaps to enlarge, as you can \n                                         see in the progression in the ﬁgure.\n\n\n                    A                             A\n                                                                              A\n\n\n           B                             B                             B\n\n\n                   C                             C\n                                                                               C\n\n                                         Figure 15.12. \n                                         Three different ratio embeddings of the grafted Kite Base.\n\n     710\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0df1"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 44,
  "content": "                                         to show the edges, so a small set of zigzag lines is drawn next \n                                         to the edge (as in Figures 2.36 and 2.37), which represents an \n                                         edge-on view of the ﬁnished crimp or pleat.\n                                             The two folds of a pleat or crimp are often parallel, but they \n                                         need not be. If they are not parallel, then the ﬂap will change \n                                         direction, with the net change of direction equal to twice the \n                                         difference between the angles of the two creases.\n\n\n            Figure 2.38. \n            Examples of angled pleats (top) \n            and crimps (center, bottom).\n\n                                             The valley and mountain folds that make up a pleat or \n                                         crimp can meet each other at one edge of the ﬂap or the other, \n                                         but cannot meet in the interior of the paper without adding ad-\n                                         ditional creases. If you try to make them meet in the interior, \n                                         which you can do by stretching the ends of an angled pleat or \n                                         crimp away from each other, you will ﬁnd that a small gus-\n                                         set must form that extends from the intersection point to the \n                                         adjacent edges.\n                                             Stretching a pleat (or more commonly, a crimp) until it \n                                         forms a gusset is a fairly common maneuver that is used to \n                                         soften the change of angle to realize a more natural, rounded \n                                         form. Stretching gussets is also the basis of some of the most \n                                         powerful design techniques that we will see.\n                                             All of the combination folds we have encountered so far \n                                         have involved edges, either the raw edge of the paper or folded \n                                         edges on which the creases terminate. Their formation is some-\n                                         what eased by the ability to reach around behind each layer of \n\n      32\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0df2"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 681,
  "content": "            a raw edge, and so the resulting pattern may end up being \n            slightly easier to fold neatly—particularly if it is a very com-\n            plex and/or highly stressed pattern.\n                Hex pleating offers some additional beneﬁts, too; hexa-\n            gons are closer to circles than squares, and so hex pleating has \n            the potential to give more efﬁcient packings than the square \n            packings of box pleating. But that is only a potential, not a \n            deﬁnite, rule; whether a hex-pleated packing, or a box-pleated \n            packing, or box pleating plus Pythagorean stretches is more ef-\n            ﬁcient will depend on the speciﬁcs of the design. I have found a \n            few designs where hex pleating provides an interesting and/or \n            elegant crease pattern. Hex-pleated contour maps and folded \n            forms are shown in Figures 14.47 and 14.48 as two examples: \n            a Cyclomatus metallifer beetle and a scorpion. \n                The Cyclomatus is similar to the Cicada Nymph in that \n            most of the axis-parallel folds (and layers of paper) are shifted \n            to higher elevation; most contours are axial+1 and axial+2. You \n            will see, though, a few axial contours—notably the ones that give \n            rise to the cleft between the wing covers of the beetle. You will \n            ﬁnd a fully assigned crease pattern at the end of the chapter.\n                The  Scorpion, too, uses multiple levels and numerous \n            level shifters to keep the legs thin and the body wide, as you \n            can see in Figure 14.48. It, too, has a fully assigned crease \n            pattern at the end of the chapter.\n\n\n            Figure 14.47. \n            Contour map, base, and folded model of a hex-pleated Cyclomatus \n            metallifer beetle. \n\n                                                                                                     669\n                                                               Chapter 14: Polygon Packing \n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0df3"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 695,
  "content": "                                                            Crease Patterns\n\n\n                                       Flying Walking Stick\n\n\n                                       Salt Creek Tiger Beetle\n\n\n                                       Longhorn Beetle\n\n\n                                       Camel Spider\n\n\n                                       Water Strider\n\n\n                                                                                           683\n                                                         ChapterChapter 14: 14: Polygon Crease  PatternsPacking \n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0df4"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 118,
  "content": "                                                2. Top of the model.      3. Pleat and fold a rabbit      4. Fold and\n                                                Fold and unfold.          ear from the thick point,       unfold through all\n                                                                          using the existing creases.     layers.\n\n\n                     1. Begin with a\n                     Frog Base. Fold and        5. Wrap one layer         6. Fold one layer to the          7. In progress.\n                     unfold to define the       of paper to the           right, releasing the trapped      Pull paper out\n                     baseline.                  front.                    paper at the left that links it   from here.\n                                                                          to the next layer.\n\n                                                     2×, 6–8\n                                                                                                                          6–10\n\n\n                                                  9. Repeat steps             10. Swing the               11. Repeat steps\n                        8. Close the\n                                                  6–8 on the next             point over to the           6–10 on the\n                        model back\n                                                  two layers.                 left.                       right.\n                        up.\n\n                                                                                                       12–13\n\n\n                                                  13. Pull out the            14. Swing the                15. Repeat steps\n                12. There are four edges on the\n                                                  loose paper                 point back to the            12–13 on the\n                top right; pull out as much of\n                                                  between the                 right.                       left.\n                the loose paper between the\n                                                  first and\n                third and fourth edges as\n                                                  second layer.\n                possible. A hidden pleat\n                disappears in the process.\n\n\n                                               17. Open-sink the           18. Rearrange the layers    19. Fold one layer to the\n                      16. Fold and\n                                               point. You will have to     at the top so that the      right in front, and one to\n                      unfold.\n                                               open out the top of the     central square forms a      the left behind. The\n                                               model somewhat to           Preliminary Fold.           model should be\n                                               accomplish this.                                        symmetric, as in step 1.\n\n\n       106\n                              Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0df5"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 124,
  "content": "                                             However, since we’ll want the mountain folds at the edges \n                                         of the wedge group to line up with the raw edges of the square, \n                                         it’s clear that we’ll need a crease to bring those two lines to-\n                                         gether. That forces the two valley folds shown in Figure 5.24, \n                                         each of which necessarily bisects the angle between the raw \n                                         edge of the paper and the boundary of the wedge group.\n\n\n                                                                        A\n\n\n                                                                                      B\n\n\n                                         Figure 5.24. \n                                         Left: the wedge group, superimposed on a kite ﬂap. \n                                         Right: add two valley folds to make the raw edges line up with the \n                                         edges of the wedge group.\n\n                                             The points where the valley folds hit the original kite \n                                         folds—marked A and B in Figure 5.24—mark the transition \n                                         region between the creases of the kite ﬂap and the creases of \n                                         the point group. The kite creases don’t propagate any farther \n                                         toward the tip of the paper than these two intersections. Still \n                                         more creases are required to allow the crease pattern to fold \n                                         ﬂat, however. While it’s possible to calculate the remaining \n                                         creases necessary, it’s far easier to simply fold the model with \n                                         the creases known so far and force it ﬂat; the necessary creases \n                                         will fall into just the right place, giving the ﬁnal crease pattern \n                                         shown in Figure 5.25.\n                                             This can be generalized to larger numbers of points, but \n                                         you will ﬁnd that with ﬁve or more points, you will have to \n                                         use narrower wedges (with an apex angle of 30° rather than \n                                         45°) in order to put the outermost points on the raw edge of \n                                         the paper and not cut off some of the inner points, as shown \n                                         in Figure 5.26.\n                                             Extending these creases to connect to kite ﬂap creases is \n                                         left as an exercise for the reader. Here’s another exercise: Can \n                                         you use this technique on a Frog Base to create a frog with four \n                                         toes on the forelegs and ﬁve on the back legs?\n\n     112\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0df6"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 642,
  "content": "                                         contour line is shifted by the gadget between the two axial+1 \n                                         contours down to axial+0 (that is, plain old axial) elevation. \n                                         And clearly, it is possible to use the same gadget to go the other \n                                         direction as well.\n                                             In box pleating, ridges can propagate at two angles with \n                                         respect to incident axial contours: 45° and 90°. There are level-\n                                         shifting gadgets for both situations, and the two possibilities \n                                         are shown in Figure 14.7.\n\n\n            Figure 14.7. \n            The two level-shifting gadgets \n            for box pleating.\n\n                                             As an illustration of this technique, Figure 14.8 shows a \n                                         contour map for a Salt Creek Tiger Beetle that is somewhat \n                                         similar to the generic beetle base of the previous chapter, but \n\n\n                                                                       12 012\n\n\n                                         Figure 14.8. \n                                         Contour map, base, and folded form for the Salt Creek Tiger Beetle. \n                                         Note that the abdomen is widened by use of level shifters inserted \n                                         into the body.\n\n     630\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0df7"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 656,
  "content": "                                         and s2 of the enclosing rectangle. All of the dimensions of the \n                                         gusset folds and ridge vertices follow from there. But I draw \n                                         your attention to the distance marked t in Figure 14.16, which \n                                         is the distance from the side of the enclosing rectangle (which is \n                                         on gridlines) to the peak vertex of a ridge crease, whose value \n                                         is given by Equation (14–1). This distance is either integral \n\n                                         or half-integral, depending on the value of the expression s1 + \n\n                                         s2 – d (even = integral, odd = half-integral).\n                                             If the distance is half-integral, then that ridge crease ver-\n                                         tex will not fall on a grid point, and that, in turn, implies that \n                                         somewhere between the two opposite corners of this gadget, \n                                         there must be two axis-parallel creases one unit apart; and \n                                         this, in turn, implies that we would have implicitly introduced \n                                         at least one half-integral axis-parallel crease. This, in itself, \n                                         would not be so bad, except for the fact that once we’ve intro-\n                                         duced one half-integral fold somewhere, it can rattle around \n                                         for quite a while in the crease pattern as it bounces off of ridge \n                                         creases, halving ﬂap widths where we really don’t want them \n                                         to be halved.\n                                             Figure 14.21 shows two similar stretches. Both ﬁt two r = \n                                         5 circles together, so the minimum distance between the two \n                                         circle centers is d = 10. On the left with circle A, we ﬁt them \n\n                                         into a 9 × 6 rectangle with s1 + s2 – d = 5, which is odd. On the \n\n                                         right with circle B, we ﬁt them into a 9 × 7 rectangle with s1 + \n\n                                         s2 – d = 6, which is even. And indeed, the one on the left creates \n                                         a level conﬂict if we strive for alternating elevations, whereas \n                                         the one on the right works just ﬁne with alternating elevations \n                                         from one axial crease to the next.\n\n\n                                            !\n                                                                                            B\n                                               A\n\n            Figure 14.21. \n                                            s = 6                                                                                        s = 7\n            Two Pythagorean stretches        2                                              2\n            for minimum separation of 10 \n            units. Left: a 9 × 6 rectangle. \n            Right: a 9 × 7 rectangle.                      s1 = 9              s1 = 9\n\n     644\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0df8"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 130,
  "content": "             Pteranodon\n\n\n                 1. Begin with a square,          2. Fold the paper in half         3. Bring all four corners\n                 colored side up. Fold and        from edge to edge and             together at the bottom,\n                 unfold along the diagonals.      unfold. Repeat the other          forming a Preliminary\n                 Turn the paper over.             direction.                        Fold.\n\n\n     118\n                         Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0df9"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 483,
  "content": "                       1. Begin with a 3 × 2 rectangle.                2. Fold the top down and unfold.\n                       Fold and unfold in thirds.\n\n\n                       3. Fold each edge to a crease line       4. Bring the bottom edge to the vertical crease line,\n                       and unfold.                              crease, and unfold. Repeat on the right, and in two\n                                                                places up top.\n\n\n                       5. Fold the sides up so that they         6. Fold the raw edges of each side toward\n                       stand straight up.                        each other, lifting up the front and rear\n                                                                 edges at the same time.\n\n\n                       7. Fold the sides down.                      8. Finished Box.\n\n                Figure 12.10. \n                Folding sequence for the traditional box from a rectangle.\n\n                                                                                                                                  471\n                                                                                      Chapter 12: Box Pleating\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0dfa"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 497,
  "content": "            sults in a triangular ﬂap of the same dimensions, is shown \n            in Figure 12.26.\n                Now, one way of thinking of the folded result is: “a big ﬂat \n            region in which we’ve grafted in a ﬂap.” So, let’s identify the \n            graft, using the ideas from Chapter 6. We can identify three \n            distinct regions of the paper: the ﬂap itself, the background \n            in the folded form, and the excess paper that’s needed to keep \n            the post-grafted crease pattern lying ﬂat. These regions are \n            identiﬁed in Figure 12.27.\n\n\n            Figure 12.26. \n            Left: crease pattern for a simple triangular ﬂap. \n            Right: the folded ﬂap.\n\n\n                        background\n\n\n            excess\n\n\n             flap\n\n\n                         excess\n            Figure 12.27. \n            Left: the crease pattern can be divided up into three types of regions: \n            the ﬂap, the background, and excess paper. \n            Right: the folded form, showing the lines of division.\n\n                                                                                                     485\n                                                                  Chapter 12: Box Pleating\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0dfb"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 468,
  "content": "                 98. Reverse-fold the                               99. Squash-fold the tail.\n                 tips of the legs.\n\n\n                  100. Fold the ears back                        101. Crimp the head and antlers downward,\n                  toward the left.                               pivoting around the point where the ears\n                                                                 join the head.\n\n\n               102. Fold the antlers                          103. Reverse-fold the\n               back to the left.                              hidden point downward.\n                                                              Repeat behind.\n\n\n                         104. Reverse-fold the                         105. Fold the antlers in half, reversing the\n                         outermost point downward.                     direction of the fold halfway along their\n                                                                       length. Repeat behind.\n\n                                                                                                                 457\n                                                                  Folding Instructions:Chapter 11: Roosevelt Tree Theory Elk\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0dfc"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 440,
  "content": "                                                                    ABF\n\n                                                        B\n                                                                                  B′\n                                            A                              A′              F\n                                                                    F\n\n                                                     F                                  C′\n                                                              C            E′                   C\n                                          E                         E\n            Figure 11.31.                                                          D′\n            Left: ﬁve-ﬂap tree.                                                           F\n                                                                           F\n            Right: generic form crease pat-         D\n            tern for its universal molecule.\n                                                                                   D\n\n                                         molecule directly using the universal molecule construction, as \n                                         shown in Figure 11.31. The pentagon ABCDE is inset, form-\n                                         ing pentagon A′B′C′D′E′; the inset distance is chosen so that \n                                         reduced path E′B′ becomes active. This becomes a mountain \n                                         fold, and splits the reduced polygon into two distinct polygons, \n                                         triangle A′B′E′ and quadrilateral B′C′D′E′. Repeating the \n                                         insetting process on each of these reveals that in each case, \n                                         the new polygon can be inset to a common point, yielding the \n                                         rabbit-ear molecule in the former and the Waterbomb molecule \n                                         in the latter.\n                                             A remarkable feature of the universal molecule is that all \n                                         of the simple molecular crease patterns that have been previ-\n                                         ously enumerated are just special cases of it, including the \n                                         rabbit-ear molecule, the gusset quad, and both sawhorse and \n                                         Waterbomb quads. So the universal molecule well deserves its \n                                         name; it is the only molecule needed to turn any tree method \n                                         uniaxial base into a folded base.\n                                             Unfortunately, for polygons of higher order than quad-\n                                         rilaterals, there is generally no easy way to construct the \n                                         universal molecule by folding alone; in most cases, it must be \n                                         computed.\n                                             Faced with an axial polygon with ﬁve or more sides, you \n                                         can do one of three things: \n\n                                             • Add a circle (equivalent to adding an edge to an \n                                             existing node of the tree), which creates three or more \n                                             new active paths.\n\n                                             • Add a stub to the tree (equivalent to adding an edge \n                                             and a new node to an existing edge of the tree), which \n                                             creates four or more new active paths.\n\n                                             • Construct a universal molecule.\n\n     428\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0dfd"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 326,
  "content": "                       (a)                            (b)                            (c)\n\n\n                       (d)                            (e)                            (f)\n\n\n                       (g)                            (h)                            (i)\n                                         Figure 9.23. \n                                         An assortment of possible tarantula crease patterns.\n\n                                         surface of the tarantula. In addition, all of the legs are edge \n                                         points and have exactly the same number of layers. Of all the \n                                         possible bases, I think it lends itself best to the subject; and so \n                                         I have carried this pattern all the way to a folded model, which \n                                         is shown in Figure 9.24.\n                                             I would encourage you to try folding the other bases from \n                                         their crease patterns and turn them into your own tarantula \n                                         design.\n\n     314\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0dfe"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 332,
  "content": "                                         N = 1                  N = 2                    N = 3\n\n\n                                         N = 4                  N = 5                    N = 6\n\n\n                                         N = 7                  N = 8                    N = 9\n                                         Figure 9.30. \n                                         Crease patterns for optimal bases with one through nine ﬂaps.\n\n                                             In each ﬁgure, I have drawn in the major creases of the \n                                         base. Notice something: Wherever two circles touch, there is a \n                                         major crease connecting the centers of the two circles. These \n                                         lines are shown as mountain folds in the ﬁgures. Note, too, that \n                                         any crease that hits one of these mountain lines other than at \n                                         a circle center hits it at a right angle. These properties hint at \n                                         some deeper relationships between circle packings and their \n                                         corresponding crease patterns. As we will see in later sections, \n                                         there are several different types of creases that all share con-\n                                         sistent properties.\n                                             You might ﬁnd it an illuminating exercise to transfer the \n                                         crease patterns shown here to origami paper squares and to \n                                         fold the corresponding bases to verify that they do, indeed, have \n                                         the proper number of ﬂaps and that the ﬂaps are all the same \n                                         size within each base. You will also discover something about \n                                         the coloring pattern of the creases. Most of the black creases \n\n     320\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0dff"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 454,
  "content": "              47. Open-sink the       48. Spread-sink the     49. Spread the layers of the 50. Fold the two points\n              corner in and out on    corner as you did in    top point symmetrically and in half and swing them\n              the existing creases.   steps  40–41.           bring two points up to stand out to the sides.\n                                                              out away from the model.\n\n\n                                                                                                           1/4\n\n\n              51. Crimp the two                    52. Fold the sides in and          53. Curve the body into a\n              remaining flaps out to the           tuck under the legs.               half-cylinder and rotate 1/4\n              sides.                               There’s no exact                   turn counterclockwise.\n                                                   reference point for this.\n\n\n                    54. Crimp the tail,\n                    narrowing it at its base.\n                    Crimp the neck upward.\n\n\n                                                  55. Reverse-fold the tail.         56. Narrow the tail with\n                                                  Reverse-fold the head.             mountain folds. Narrow the\n                                                                                     neck with mountain folds.\n\n                                                                                                                 443\n                                                                 Folding Instructions:Chapter 11: Alamo Tree  StallionTheory\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e00"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 333,
  "content": "            will be mountain folds; all of the colored creases will be valley \n            folds; and the light creases will go in either direction, depend-\n            ing on how you choose to orient the ﬂaps.\n                It is also instructive to note what kind of ﬂap—corner, \n            edge, or middle—you get with each base. The distribution of \n            ﬂaps is enumerated in Table 9.1.\n\n\n                                 Corner  Edge   Middle \n                                 Flaps   Flaps  Flaps\n                            1       1\n                            2       2\n                            3       1       2\n                            4       4\n                            5       4              1\n                            6       2       3      1\n                                                                        Table 9.1. \n                            7       2       4      1                    Numbers of corner ﬂaps, edge \n                            8       4              4                    ﬂaps, and middle ﬂaps in optimal \n                            9       4       4      1                    circle-packed bases.\n\n                Given the inefﬁciency of middle ﬂaps versus edge ﬂaps—\n            remember, a middle ﬂap takes four times as much paper as \n            a corner ﬂap of the same length—it is somewhat surprising \n            to ﬁnd that for as few as ﬁve ﬂaps, it is more efﬁcient to use \n            a middle ﬂap than to create another edge ﬂap. For only three \n            ﬂaps, one corner ﬂap and two edge ﬂaps are preferable to all \n            three corner ﬂaps.\n                Since these patterns give the most efﬁcient bases for the \n            desired number of ﬂaps, it is not surprising that several of \n            them have been in existence for hundreds of years. The pat-\n            terns for one, two, four, and ﬁve ﬂaps correspond to four of the \n            traditional bases—the Kite, Fish, Waterbomb, and Bird Bases, \n            respectively (where the top of the Bird Base forms a ﬁfth ﬂap). \n            The ﬁrst three bases have all of their ﬂaps on the corner; the \n            last has one middle ﬂap.\n                What is surprising, though, is that several of these circle \n            patterns correspond to bases that have not yet been published \n            in the origami literature! Speciﬁcally, I am aware of no pub-\n            lished design based on the symmetry of the patterns for N = \n            3, 6, 7, and 8. I ﬁnd this remarkable because there are quite \n            a few models that require three, six, seven, or eight ﬂaps, and \n            these patterns correspond to the most efﬁcient structures for \n            getting each number of ﬂaps. It is illuminating to examine each \n            of these crease patterns in more detail.\n\n                                                                                                     321\n                                                                  Chapter 9: Circle Packing\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e01"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 455,
  "content": "                                                                      58, 2x\n\n\n                  57. Pull down one layer of 58. Pull down another 59. Repeat step 58 two     60. Valley-fold two\n                  the tail. Repeat behind. layer of the tail. Repeat more times, spreading    corners of the tail.\n                                          behind.                  the layers evenly.         Curve the tip.\n                                                                   Repeat behind.\n\n\n                 61. Outside reverse-\n                 fold the head.\n\n\n                                                  62. Crimp the                     63. Pleat the mane.\n                                                  head upward.\n\n\n                 64. Double-rabbit-ear\n                 the hind legs to the left.\n                                                                         1/8\n\n\n                                                65. Reverse-fold the legs.      66. Mountain-fold the edge of each\n                                                Rotate the horse 1/8 turn       hind leg, front and rear. Reverse-fold\n                                                counterclockwise.               the tip. Repeat behind.\n\n     444\n                         Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e02"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 441,
  "content": "            Figure 11.32. \n            Crease patterns and folded forms for three different molecular \n            solutions to the ﬁve-ﬂap pentagon. \n            Left: stub plus gusset quad. \n            Middle: two stubs. \n            Right: universal molecule.\n\n                Since polygon subdivision is commonly called for in several \n            places, you can mix and match approaches; say, add a stub \n            to fracture a polygon, then ﬁll in the results with universal \n            molecules. Or you could apply the universal molecule to some \n            polygons and subdivide others. As the number of sides of the \n            initial polygon grows, the possibilities explode. All crease pat-\n            terns will be foldable into bases with the same number and \n            length of ﬂaps as was speciﬁed by the tree; the differences lie \n            in the width of the ﬂaps, the presence of extra ﬂaps, and the \n            number of layers of paper that lie along the axis of the base. \n            Figure 11.32 shows the folded form for three of the crease pat-\n            terns for the ﬁve-ﬂap pentagon.\n                These images also illustrate some general features of the \n            different approaches. A nice feature of the universal molecule is \n            that it is very frugal with creases. A tree ﬁlled in with universal \n            molecules tends to have relatively few creases and large, wide \n            ﬂaps (which can, of course, be subsequently narrowed arbitrarily \n            as desired). In fact, I conjecture that for any axial polygon, the \n            universal molecule is the crease pattern with the shortest total \n            length of creases that collapses that polygon to a uniaxial base. \n            A small number of creases translates into relatively few layers in \n\n                                                                                                     429\n                                                                   Chapter 11: Tree Theory\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e03"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 327,
  "content": "            Figure 9.24. \n            Crease pattern, base, and folded model of the Tarantula.\n\n                As we see in the tarantula design, circle packing patterns \n            and their corresponding crease patterns are most symmetric if \n            the circle radii (and thus ﬂap lengths) are chosen from among \n            only a small number of values, rather than making every ﬂap \n            a different length. It is common to adjust the values in order \n            to realize particularly symmetric patterns.\n                The crease pattern in Figure 9.25 is based on a circle \n            packing of six large circles and six medium ones oriented \n            in opposite directions, corresponding to six long and six \n            medium ﬂaps; three small circles are added to ﬁll in the gaps. \n            This gives a pattern that, in the interior of the model, can be \n            ﬁlled in entirely with triangle tiles, and works very well for \n            ﬂying insects, in which the six long ﬂaps can be used for four \n            wings, head, and abdomen, while the six medium ﬂaps get \n            used for legs.\n                We could also rotate the pattern by 90° and assign the \n            short ﬂaps to head, abdomen, and wings, and the long ﬂaps to \n            legs to make a ﬂying insect with proportionately longer legs. \n            Can you devise a model based on this hint?\n                While this circle packing is quite efﬁcient in its use of the \n            paper, it still leaves the corners unused, making it a great temp-\n            tation to ﬁgure out something else to do with them. The Flying \n            Ladybird Beetle in Figure 9.26 uses the same circle packing \n            (although adding two more smaller circles), but further uses \n            the corners of the paper to realize the spots on the wings.\n\n                                                                                                     315\n                                                                  Chapter 9: Circle Packing\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e04"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 469,
  "content": "             106. Pinch the two eyebrow horns at their base               107. Reverse-fold the front point. Crimp\n             to narrow them. Reverse-fold one of the upper                the two left points apart. Repeat behind.\n             horns down and to the right. Repeat behind.\n\n\n                      108. Crimp the antlers.                                109. Open and shape the ears.\n                      Shape naturally.                                       Reverse-fold and shape the muzzle.\n                                                                             Pleat the neck.\n\n\n                                        110. Finished Roosevelt Elk.\n\n     458\n                         Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e05"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 496,
  "content": "            1. Begin with the grid. Fold one 2. Pleat on two horizontal grid lines. 3. Fold two panels over to the\n            column over to the right.                                       right.\n\n\n            4. Fold the top edge back to the left 5. Fold a rabbit ear from the lower 6. The completed flap.\n            and reverse-fold the hidden corner. layer.\n\n                                         Figure 12.25. \n                                         Folding sequence to create a single wheel ﬂap.\n\n                                             A question that always arises with crease patterns is, “In \n                                         what order do you make the creases?” As you have no doubt \n                                         already discovered, with tree theory bases, there often is no \n                                         simple order: many creases must be brought together at once. \n                                         In the case of this wheel ﬂap, though, there is a relatively \n                                         simple folding sequence that takes a precreased grid to the \n                                         ﬂap, which is shown in Figure 12.25.\n                                             Now, it is tempting to think that the relevant question here \n                                         is, “What is the folding sequence needed to make this triangular \n                                         ﬂap?” But the real question you should focus on is, “What are \n                                         the folds needed to make the ﬂap?” without worrying overmuch \n                                         about what order you might make the folds when it actually \n                                         comes to folding. And, perhaps even more important, how much \n                                         paper was required to make this, and other, ﬂaps?\n                                             The train wheel ﬂap is one grid unit long, which suggests \n                                         that it might be one of the simpler box-pleated ﬂaps. But it is \n                                         not the simplest; that ﬁrst column of squares that we folded \n                                         over in step 1 is paper that doesn’t really contribute anything \n                                         to the ﬂap except thickness. A simpler structure, which re-\n\n     484\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e06"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 482,
  "content": "                                                                    Rear\n\n\n                                                      Handle Side   Base    Side Handle\n\n\n                                                                    Front\n\n            Figure 12.8. \n            Crease pattern for the box with \n            features labeled.\n\n\n                                         in Figure 12.10. Note, however, that the folding sequence is \n                                         considerably different.\n                                             This simple box is one of the building blocks of box-pleated \n                                         models. It is a structure that can be stretched, squeezed, \n                                         modiﬁed, and most importantly, combined with duplicates and \n\n\n                                  Rear                                          Rear\n\n\n                   Handle Side    Base    Side Handle             Handle Side   Base    Side Handle\n\n\n                                 Front                                          Front\n\n\n                                         Figure 12.9. \n                                         A 3 × 2 rectangle (dotted line) encloses all the important elements \n                                         of the model.\n\n     470\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e07"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 657,
  "content": "                Part of the reason we have conﬂict with odd-order Py-\n            thagorean stretches is that we have assumed as part of the \n            geometry that the gusset is itself axis-parallel; this implicitly \n            assumes that the two circle centers lie at the same elevation. \n            If one is axial, the other must be axial. But the fact that their \n            separation, measured along the perimeter of the two overlap-\n            ping squares, is odd suggests that if we want alternating eleva-\n            tions, the two circle centers should lie at different elevations. \n            And this, in turn, gives an entirely different geometry to the \n            creases and vertices in the region of overlap.\n                We can solve for the dimensions of this new geometry. \n            It is similar to that of Figure 14.16, but now the two vertices \n            A and B, instead of both being shifted upward from the axis \n            in the folded form are shifted equal distances, one upward \n            from the axial contour, the other downward from the axial+1 \n            contour, as shown in Figure 14.22. \n\n\n                    r2\n\n                A\n                  A′\n\n               h\n\n\n            s2\n\n                                          r1\n                                                             h A\n                                                                                                 h\n                                   B′                          A′                             B′\n                                    B                                                           B\n                          s1                                                   d\n            Figure 14.22. \n            Schematic of an offset Pythagorean stretch. Left: crease pattern. \n            Right: projection of the folded form with ridge creases in red.\n\n                If we again denote the offset distance by h, we ﬁnd a \n            somewhat different expression for the offset in this conﬁgu-\n            ration:\n                                 s2 + s2 − (d 2 +1)\n                       h       =  1   2             .          (14–5)\n                                 4(s1 + s2 − (d +1))\n\n                                                                                                    645\n                                                               Chapter 14: Polygon Packing \n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e08"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 131,
  "content": "              4. Petal-fold the front and 5. Fold one flap      6. Fold the upper left edge 7. Fold the top point down\n              back flaps to form a Bird   down in front and     down to the horizontal    along a crease that passed\n              Base.                       one behind.           crease and unfold. Repeat through the crease\n                                                                with the upper right edge. intersection along the\n                                                                                          center line.\n\n\n               8. Fold up the tip of the  9. Unfold to step 6.   10. Open-sink the          11. Spread-sink the\n               corner along a crease                             point in and out on the    two top near\n               aligned with the existing                         existing creases.          corners. Repeat\n               horizontal crease.                                                           behind.\n\n\n                 12. Fold one long               13. Fold the bottom left flap   14. Fold the flap up again so that the\n                 flap up in front and            up to lie along the horizontal  crease hits the edge at the same point,\n                 one up behind.                  crease; crease lightly and      but now the left edges are aligned.\n                                                 unfold.                         Crease firmly and unfold.\n\n                                                                                                                 119\n                                                                   FoldingChapter Instructions: 5: Splitting Pteranodon Points\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e09"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 125,
  "content": "                    A                                                A\n\n\n                                    B                                               B\n\n\n             Figure 5.25. \n             Left: the kite creases terminate at points A and B. \n             Right: the completed crease pattern. (The corner goes unused and \n             should be folded down before making the creases.)\n\n                                        incompatible\n\n\n             Figure 5.26. \n             Left: four wedges don’t let you put the outermost points on the raw \n             edge of the ﬂap. \n             Right: using narrower wedges permits this construction to be \n             extended to ﬁve or more points.\n\n                  Another family of splits works particularly well for odd \n             numbers of points. It’s shown in Figure 5.27 for three, ﬁve, \n             and seven points (what would you ever use seven small points \n             for?), but this method, like the other, generalizes in an obvi-\n             ous way.\n\n                                                                                                                 113\n                                                                         Chapter 5: Splitting Points\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e0a"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 643,
  "content": "            has extra width in the abdomen. This extra width is obtained \n            by inserting two of the 90°-incidence level shifters into the ab-\n            domen, which connects an axial contour to an axial+2 contour. \n            (Can you ﬁnd this connection in the contour map?)\n                A fully assigned crease pattern is given at the end of the \n            chapter.\n                The symmetric gadgets of Figure 14.7 are not the only \n            possible level-shifting gadgets; there are asymmetric versions \n            as well. You can discover these by, for example, spread-sinking \n            the corner in Figure 14.3 at some angle other than the sym-\n            metric angle. You can also construct them graphically. The \n            angle at the tip of the triangle is ﬁxed: 45°, in the 90° angle \n            level shifter on the left in Figure 14.7. (In general, the angle \n            at the tip is equal to the angle between the ridge crease and \n            an incident axial). You can imagine keeping that angle ﬁxed \n            and swinging the two lines back and forth from side to side \n            to orient the level shifter more closely toward one axial fold \n            or the other, as illustrated in Figure 14.9.\n\n\n             45°                                                       Figure 14.9. \n                                                                       Left: one can swivel the level \n                                                                       shifter back and forth about its \n                                                                       tip so long as the angle between \n                                                                       the two lines is ﬁxed. \n                                                                       Right: an asymmetric level shift-\n                                                                       er whose vertices all lie on grid \n                                                                       lines.\n\n\n                One particularly interesting and useful level shifter is \n            shown on the right in Figure 14.9, which is a pattern I learned \n            from Japanese artist Satoshi Kamiya. A small perturbation in \n            angle puts all four vertices of the level shifter on grid points, \n            making it easy to construct in a grid-based box-pleated de-\n            sign.\n                Other versions of level shifter apply when a contour hits \n            a junction of several ridge creases. Special cases can often be \n            found simply by drawing just the region of paper around the \n            junction with contour lines and the original ridge creases and \n            then spread-sinking to make the contour lines wind up in the \n            right place. And I should point out that just as the spread-\n            sink has been around a very long time, the use of structures \n            like this can be found in many crease patterns for advanced \n            complex designs. Like box pleating, level shifting itself is not \n\n                                                                                                     631\n                                                               Chapter 14: Polygon Packing \n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e0b"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 119,
  "content": "               20. Petal-fold.      21. Fold the flap   22. Fold and unfold. 23. Closed-sink the edges\n                                    back upward.                             on the creases you just\n                                                                             made.\n\n                                               20–24\n\n\n            24. Closed-sink the next 25. Repeat steps 20–24 26. Finished four points.\n            pair of edges.        behind.\n\n            Figure 5.16. \n            Folding sequence to split a middle ﬂap into four smaller ﬂaps.\n\n\n            can get an idea of what is possible by examining the crease pat-\n            terns of corner, middle, and edge ﬂaps shown in Figure 5.14.\n                As Figure 5.14 shows, the crease pattern for an edge ﬂap \n            is simply that of a pair of corner ﬂaps, and that of a middle \n            ﬂap is four corner ﬂaps; edge and middle ﬂaps themselves \n            can be made by sewing together corner ﬂaps along their  \n            raw edges.\n                It thus makes sense to see if the analogy continues. For \n            example, is it possible to put together the crease patterns \n            for four split corner ﬂaps to get the crease pattern for a split \n            middle ﬂap?\n                It is, and the result is shown in Figure 5.15. This can be \n            folded up. The sequence to fold it directly from a middle ﬂap \n            is quite challenging, however, which perhaps accounts for its \n            rarity in published origami designs. One possible sequence \n            is shown in Figure 5.16. You can try this sequence on the top \n            of a Frog Base.\n                When you split a middle ﬂap, you obtain four smaller \n            ﬂaps. (Similarly, an edge point can be split into either two \n            or three ﬂaps, depending on how you orient the creases with \n            respect to the edge.) The split middle ﬂap gives rise to an \n            interesting relationship. Each of the four resulting ﬂaps has \n\n                                                                                                     107\n                                                                 Chapter 5: Splitting Points\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e0c"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 694,
  "content": "                                         convey both mountain/valley/crease status by the line pattern, \n                                         and axis-parallel/ridge/hinge status by the color. Using both \n                                         layers of information, you should be able to collapse the crease \n                                         pattern into the base shown in the ﬁgure within the chapter, \n                                         and then from there, add shaping folds to create the ﬁnished \n                                         form shown in the photograph. I encourage you to work through \n                                         all of the examples. Once you’ve succeeded in folding all of \n                                         these bases, you’ll be well armed to take on the many complex \n                                         crease patterns in the origami literature—crease-assigned or \n                                         not—and, most importantly, to design your own works.\n\n\n     682\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e0d"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 680,
  "content": "                                         its length. A fully crease-assigned crease pattern is shown at \n                                         the end of the chapter.\n                                             How does hex pleating compare to box pleating? There \n                                         are pluses and minuses. One of the pluses is purely aesthetic; \n                                         I ﬁnd hex-pleated crease patterns to be more interesting than \n                                         box-pleated patterns. There’s enough repetitiveness and sym-\n                                         metry to make them beautiful, but there’s more variation in \n                                         angle than in box pleating which, to be honest, can start to \n                                         look a little boring after a while. On the downside, though, it \n                                         is much harder to precrease a pattern that is on a hexagonal \n                                         grid as compared to a square grid (as our origami tessellation \n                                         friends are well aware).\n                                             In fact, there is a signiﬁcant issue with hex pleating that \n                                         I have not yet mentioned but that you will quickly discover \n                                         once you start playing around with it. While box-pleated grids \n                                         ﬁt naturally onto a square, since the “length” unit and “width” \n                                         unit of an equilateral triangular grid differ by an irrational \n                                         multiple, there is no possibility that a hex-pleated grid can ﬁt \n                                         precisely onto a square with all four corners of the square on \n                                         grid vertices.\n                                             The grid in Figure 14.46 looks pretty close, however. That \n                                         is because there are certain “magic” combinations of grid dimen-\n                                         sions that come so close to a square that the difference can be \n                                         ignored. The ﬁrst few magic combinations* are:\n\n            Table 14.1. \n                                                   Height     7      15     97     209\n            Magic dimensions for a grid of \n            equilateral triangles.                 Width      6      13     84     181\n\n                                             Looking back at Figure 14.46, you can see that the implied \n                                         grid is 15 units high and 13 units wide. This is not a perfect \n                                         square, but it is extremely close; if we made the paper 13 grid \n                                         units wide exactly and 15 grid units high exactly, then the ratio \n                                         of height:width would be 1:1.00074; certainly there would be \n                                         no harm in rounding it to 1:1.\n                                             The “magic” dimensions are pretty far apart, though, so \n                                         we got lucky with this particular design. In general, if you are \n                                         folding from a square, the square will not ﬁt the paper exactly. \n                                         But what you can do is scale either the height or width to ﬁt \n                                         the grid exactly; you will then have a little bit of excess paper \n                                         in the other dimension that can be folded over and tucked away \n                                         inside the model. That little bit of excess paper is not entirely \n                                         wasted, either; a folded edge is more resistant to tearing than \n\n                                         * For those of a mathematical bent, these ratios are the convergents of the \n                                         continued fraction expansion of the width-to-height ratio of an equilateral \n                                         triangle, 2/√3.\n\n     668\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e0e"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 723,
  "content": "                What is less obvious but also a consideration is the length \n            of the gap between circle pairs A–B and B–C. In the ﬁrst two \n            patterns, the B–C circles are touching, indicating that their \n            corresponding ﬂaps are joined at their base. Conversely, in the \n            last pattern, circles A and B are touching with a gap between \n            B and C, which means that ﬂaps A and B are joined at their \n            base. By adjusting the size of the Kite Base embedded within \n            the square and manipulating the circles that allocate paper for \n            ﬂaps, you can adjust not only the length of the ﬂaps, but also \n            their topology.\n                You can also graft other shapes into squares in a similar \n            way. The design shown in Figure 15.13, for example, grafts the \n            diamond of a Fish Base into a square.\n\n\n            Figure 15.13. \n            Crease pattern, base, and folded model of a Mouse.\n\n                In all of the grafted Kite Base examples, the top point of the \n            Kite Base becomes a relatively thick middle ﬂap. In the previous \n            two models, this middle ﬂap ends up unused, sunken down into \n            the model. But it would also be possible to use it for features, \n            for example, by point-splitting, as we will see shortly.\n                One of the things you should always do when you learn a \n            new technique is to ask: How can this be generalized? In the \n            grafted Kite Base, an obvious generalization is to vary the size \n            of the Kite Base relative to that of the bounding square. Another \n            generalization, perhaps less obvious, but equally powerful, is \n            to vary the apex angle of the Kite Base. Different angles give a \n\n                                                                                                     711\n                                                                  Chapter 15: Hybrid Bases\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e0f"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 45,
  "content": "             1. Example of a stretched pleat. 2. The top will form a little hood 3. Finished stretched pleat with\n             Pull the two sides apart, keeping on either the front or back side. gusset.\n             the angle fixed.\n            Figure 2.39. \n            Stretching an angled pleat forms a gusset on either the near or \n            far layers.\n\n\n             1. Example of a stretched crimp. 2. The top forms a narrow   3. Finished stretched crimp with\n             Pull the two sides apart, keeping diamond; dent the middle down gusset.\n             the angle fixed.               between the layers.\n\n            Figure 2.40. \n            Stretching an angled crimp forms a gusset between the layers of \n            paper.\n\n            paper and work on the fold from either side. The next group \n            of combination folds does not have this property—they are \n            the family of sink folds. The inability to reach both sides of \n            the paper makes them considerably harder to perform, since \n            (usually) only one side of the paper is accessible, and usually \n            puts any model including them well into the complex rating of \n            difﬁculty. However, sink folds arise quite naturally from  \n            systematic methods of origami design, and so it is essential \n            that they be learned and practiced.\n                The simplest of the various sink folds is the spread sink, \n            which is only marginally more difﬁcult than a squash fold. It \n            works the same way; a ﬂap is lifted up, its edges are spread \n            symmetrically, and the result is ﬂattened. What distinguishes \n            a spread sink from a squash fold is that in the spread sink, at \n            least two layers—an outer one and an inner one—are simul-\n            taneously squashed while remaining joined. Spread sinks are \n            very satisfying to make; you start by ﬂattening the very tip \n            of the ﬂap, then as the edges are stretched to the sides, the \n            ﬂattened region grows and reaches its maximum size when \n            the paper is completely ﬂat.\n                Spread sinks are most often formed from triangular \n            corners, but there are analogous structures that form convex \n            polygons of any size and shape.\n\n                                                                                                      33\n                                                                 Chapter 2: Building Blocks \n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e10"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 51,
  "content": "                In diagrams, which version of sink is desired is usually \n            conveyed by the arrangement of edges in the subsequent views \n            and/or by cut-away views of the interior layers.\n                The last—and by many accounts, the most challenging—\n            of the sink folds goes by the name of unsink. As the name sug-\n            gests, it is a reversal of a sink fold. That is, you are presented \n            with an apparently sunken point and the object is to invert the \n            point upward. The challenge here is that while you can always \n            push a point downward to sink it, pulling a layer upward is \n            problematic when there is nothing to grab onto.\n\n\n            Figure 2.48. \n            An unsink fold.\n\n                Unsink folds come in open and closed varieties that are \n            analogous to their similarly named sink brethren. The unsink \n            is the youngest of the sink combination folds: It only began to \n            be used in the late 1980s, and since then, only sporadically. \n            It is not hard to imagine why. Most of the other combination \n            folds arise naturally from the process of “playing with” the \n            paper. If you want to change the direction of a point, the re-\n            verse fold naturally follows. Stretch a point to make it longer, \n            and you are likely to (re)discover the petal fold. Shorten a \n            ﬂap—crimps and pleats ﬁll the bill. And removal or round-\n            ing of a corner will lead you to reverse folds and sinks, both \n            open and closed. But the unsink is something of an anomaly. \n            It’s unlikely to arise from simple doodling or shaping. But it \n            does arise very directly from systematic origami design. In \n            this chapter, we are—fortunately—still far away from being \n            forced to learn to unsink, but we now, having enumerated \n            the basic folds of origami, are ready to make our ﬁrst forays \n            into origami design.\n\n\n                                                                                                      39\n                                                                 Chapter 2: Building Blocks \n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e11"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 737,
  "content": "                  69. Rotate the head slightly by adjusting           70. Crimp the neck just behind the ears\n                  the location of the valley fold where it             (the pleats tuck under the ears) and\n                  joins the body.                                     rotate the head downward.\n\n\n                  71. Mountain-fold the edges of the body             72. Crimp the rear portion of the body\n                  underneath.                                         in two places to form legs.\n\n\n                  73. Fold the tips of the hind feet                 74. Crimp the trunk downward and spread\n                  underneath. Round the belly and shape              the layers at its tip. Shape the legs with\n                  the backs of the legs.                             slight mountain folds. Adjust the overall\n                                                                     position of the limbs to a natural one.\n\n\n                                       75. Finished African Elephant.\n\n                                                                                                                 725\n                                                               Folding Instructions:Chapter  15:African Hybrid Elephant Bases\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e12"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 79,
  "content": "            Figure 4.13. \n            The base creases (a Kite Base plus a single reverse fold) for the Snail.\n\n            is not particularly clear from the folded model where it came \n            from, but in its crease pattern, its Bird Base heritage is un-\n            mistakably present.\n                Similarly, the outlines of a Frog Base are clearly visible \n            in the lines of the Hummingbird in Figure 4.15.\n\n\n            Figure 4.14. \n            Crease pattern, base, and finished model of Valentine, from a Bird Base.\n\n                                                                                                      67\n                                                                Chapter 4: Traditional Bases\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e13"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 86,
  "content": "             Stealth Fighter\n\n\n              1. Begin with the white side\n              up. Fold the paper in half\n              from side to side and\n              unfold.\n\n\n             2. Fold the paper in half from       3. Fold each corner in half          4. Fold the side edges in to\n             top to bottom and unfold.            along an angle bisector and          lie along the vertical center\n                                                  unfold.                              line.\n\n\n                 5. Fold the top and                 6. Pull the corners out           7. Flatten the corners,\n                 bottom edges to the                 to the sides and pinch            making a sharp point (the\n                 center of the paper.                them in half.                     left side is shown\n                                                                                       completed here).\n\n      74\n                         Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e14"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 92,
  "content": "             22. Fold and unfold      23. Unfold to step 20.                           25. Reverse-fold the two\n             through the near layers                                                   points to the sides. Note the\n             only. Repeat behind.                                                      reference points for the two\n                                                                                       reverse folds.\n                                                             24. Reverse-fold both\n                                                             points as far downward as\n                                                             possible.\n\n\n                         26. Reverse-fold two edges\n                         upward on each side.\n\n                                                                       27. Partially open out the left\n                                                                       side. The model will not lie flat.\n\n\n                  28. Valley-fold the flap on the existing crease;\n                  simultaneously flatten the interior pleat and\n                  mountain-fold its edge underneath. The model\n                  will not lie flat.\n\n                                                                         29. Push down on the triangle\n                   27–29                         27–29                   and close the model back up.\n                                                  27–29\n\n\n                         30. Repeat steps 27–29\n                         behind and on the right.\n\n                                                                          31. Valley-fold the near\n                                                                          edge of each flap. Repeat\n                                                                          behind.\n\n\n                     32. Wrap a raw edge from the inside\n                     of each flap to the front; repeat behind.\n\n      80\n                         Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e15"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 247,
  "content": "               69. Fold and unfold along          70. Mountain-fold the near          71. Crimp the white layers\n               the angle bisector.                layer behind; valley-fold the       downward.\n                                                  far layer.\n\n\n               72. Reverse-fold four edges        73. Reverse-fold the edges          74. Finished hind foot.\n               upward so that they stand          to lie flush with all the other     Repeat steps 52–73 on the\n               above the white edges.             edges.                              other two feet.\n\n\n                       75. Pleat the hind legs and spread the         76. Finished Western Pond Turtle.\n                       toes. Crimp and curve the forelegs.\n                       Pull out the middle edges of the head\n                       and make it three-dimensional.\n\n     236\n                         Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e16"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 521,
  "content": "                                                    Folding Instructions\n\n\n                                       Organist\n\n\n                                       Black Forest Cuckoo Clock\n\n\n                                                                                           509\n                                                       ChapterChapter 12: Folding 12: Box Instructions Pleating\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e17"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 535,
  "content": "                                          33–37\n\n\n                 39. Repeat on the middle layers.\n\n\n                 40. Reverse-fold the right flap downward. Note that the\n                 two diagonal folds in each layer are above and below\n                 an existing horizontal crease.\n\n                                                                                           523\n                                                         FoldingChapter Instructions: 12: Box  OrganistPleating\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e18"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 253,
  "content": "                                                                              8Tiling\n\n                               hile there are many different approaches \n                               to origami design, the ones that I’ve \n                               shown thus far can be arranged in a rough \n                               hierarchy of complexity. We started with \n                               some simple structures—the traditional \n            bases. Then, we modiﬁed these bases by various distortions—\n            offsetting the crease pattern from the center of the square or \n            distorting the entire pattern. Both types of modiﬁcation leave \n            the number of ﬂaps unchanged; they only alter the lengths and \n            widths of the ﬂaps.\n                Then we increased the number of ﬂaps by subdividing \n            some ﬂaps into smaller ﬂaps using the various point-splitting \n            techniques. While in principle any number of ﬂaps can be at-\n            tained, point-splitting is inherently a process of reduction; \n            the ﬂaps you end up with are always smaller than what you \n            started with. Thus, there are deﬁnite limits on what you can \n            accomplish by point-splitting.\n                We can escape those limitations by using grafting, by ef-\n            fectively adding paper to an existing crease pattern in such a \n            way that the paper remains square after the graft. Grafting \n            allows you to add features to an origami base without taking \n            anything away from features that are already present. The \n            simplest grafts are border grafts, which consist of adding paper \n            around one or more edges of the square, but this method, too, \n            has its limits. You can only add paper—and thus features—to \n            ﬂaps that are made from a raw edge, i.e., corner and edge ﬂaps. \n            Another limitation is that when you are border grafting, edge \n            ﬂaps don’t offer quite the same freedom of point creation that \n            corner ﬂaps did; a border graft that can create four points at \n            a corner ﬂap only creates two points of the same size at an \n            edge ﬂap.\n\n                                                                                                     241\n\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e19"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 509,
  "content": "                The  actual folding of 1000 cranes from a single uncut \n            square will, of course, be left as an exercise for the reader.\n\n            12.5. More with Pleats\n            The power of box pleating lies in the property of universality. Its \n            components—boxes of assorted sizes; ﬂaps of various lengths, \n            widths, and positions on the paper—these all possess a uni-\n            versal interface: the parallel pleat. Like LegoTM bricks, a small \n            number of components can snap together to make an uncount-\n            able variety of shapes. If each structural element comes with a \n            set of connections that are one-unit-grid alternating mountain/\n            valley pleats, then they can be connected to each other in both \n            the folded form and the crease pattern in ways that give the \n            desired three-dimensional shape for the former and the single \n            uncut sheet of paper for the latter.\n                That property, in turn, raises a new question: Are there \n            other useful structures that have this same interface? If so, we \n            could add them to the general toolkit of box pleating, providing \n            still more entries in the origami artist’s palette.\n                The interface between boxes and ﬂaps is the alternating \n            pleat. But this is, itself, a structure of interest, and has a role \n            in decorative folding that extends well beyond (and, conceiv-\n            ably, before) the traditional Japanese art of origami. Back in \n            17th-century Europe, it became popular among the wealthy \n            classes to fold napkins into elaborate and decorative shapes; \n            these napkins, although cloth, not paper, were stiff and accepted \n            creases, and so allowed folding techniques and effects very \n            similar to those possible with modern paper. This interest led \n            to a series of manuals on this craft in Italy and Germany—some \n            of which contains the ﬁrst known usage of the terms “moun-\n            tain fold” (Bergfalte) and “valley fold” (Talfalte). Figure 12.39 \n            shows a plate from the book Trattato delle piegature by Mattia \n            Giegher from 1639, which illustrates a variety of ﬁgures that \n            could be created from folded napkins. We see in these ﬁgures \n            the basic mechanisms of box pleating and some truly remark-\n            able folding creations (even allowing for some artistic license \n            of the illustrator).\n                It should be noted that none of this work includes most \n            of the techniques we have described here: there are no middle \n            ﬂaps, boxes, or trains (which would be quite an accomplish-\n            ment in 1639), and certainly no tiling cranes. (However, Fig-\n            ure 12.39 #3, in the lower right corner, looks suspiciously like \n            an Elias Stretch, which we will shortly meet.) But there are \n            a remarkable array of animal and object forms, and most of \n            these result from the application of a few simple techniques \n\n                                                                                                     497\n                                                                  Chapter 12: Box Pleating\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e1a"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 284,
  "content": "                                                                         d\n\n                                                                            a     c\n                                                                         b\n\n                                                                         e\n\n                                                                          f    g\n\n\n                                                                     l    h\n             Figure 8.45. \n             Folded form of the base with                                       k\n             narrowed tiles.                                             i      j\n\n\n                                          1. Begin with the white side up.      2. Fold the top edges down along\n                                          Fold and unfold along both            the diagonal and unfold.\n                                          diagonals.\n\n\n                                          3. Fold the top edges down along a    4. The creases you just made form\n                                          crease that hits the intersection of  the boundaries of the tiles.\n                                          the edge and the crease you just\n                                          made.\n\n                                             Figure 8.46. \n                                             Folding sequence to divide the square into square and rectangular tiles.\n\n     272\n                         Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e1b"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 290,
  "content": "            Figure 8.53. \n            Top left: a parallelogram tile. \n            Bottom left: schematic of its \n            folded form. \n            Right: same for a longer paral-\n            lelogram.\n\n                                             Also like a rectangle, a parallelogram can be tiled to ﬁll \n                                         the plane. Look at what happens when we stack two of these \n                                         tiles vertically or horizontally. The circles and rivers line \n                                         up, so the combination can fold ﬂat. But the tilt of the paral-\n                                         lelograms creates an offset between adjacent points, so that \n                                         the net result is a series of points evenly strung out along a \n                                         common line.\n\n\n            Figure 8.54. \n            Tiling of two and four par-\n            allelogram tiles and their \n            schematics.\n\n                                             This is quite a nice trick; the circles in the crease pattern \n                                         are arranged in rows and columns, while in the stick ﬁgure \n                                         corresponding to the base, the ﬂaps are distributed along a \n                                         single line. Thus, the tile allows us to build an essentially \n                                         one-dimensional chain of ﬂaps while efﬁciently using a two-\n                                         dimensional region of paper. A combination of rectangles and \n                                         parallelograms gives the 14 legs and body segments of a pill \n                                         bug, as shown in Figure 8.55. By varying the length and tilt \n                                         angle of the parallelogram, you can vary the circle radii and \n                                         river width, corresponding to the lengths of the legs and of the \n                                         segments between them.\n                                             It’s also possible to add circles and rivers to a trapezoid in \n                                         the same way as a parallelogram. A combination of rectangle, \n                                         parallelogram, and trapezoidal tiles gives a twenty-legged \n                                         centipede, whose crease pattern and folded form is shown in \n                                         Figure 8.56.\n\n     278\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e1c"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 130,
  "content": "./origami_dataset_dev/Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li/page130_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e1d"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 286,
  "content": "                                         Figure 8.48. \n                                         Crease pattern, base, and folded model of the Hercules Beetle.\n\n                                         pattern, base, and folded model are shown in Figure 8.47. Can \n                                         you identify the individual tiles?\n                                             The same base may be used in several different orienta-\n                                         tions to create distinctly different models; it is often not at all \n\n\n                                         Figure 8.49. \n                                         Crease pattern, base, and folded model of the Praying Mantis.\n\n     274\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e1e"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 292,
  "content": "                                             While any parallelogram can be turned into a circle/river \n                                         tile that covers the plane, only particular proportions and tilt \n                                         angles give evenly spaced legs. You might ﬁnd it an interesting \n                                         challenge to work out the relationship between parallelogram \n                                         dimensions, leg length, body segment length, and the number \n                                         of rows and columns of parallelograms and trapezoids. After \n                                         you’ve done that, you might try your hand at working out how \n                                         to make multilegged centipedes using only rectangle and tri-\n                                         angle tiles.\n                                             Whether you use triangles, parallelograms, or trapezoid \n                                         tiles, by using more rows and columns, you can increase the \n                                         number of legs arbitrarily; in fact, it’s possible to make a \n                                         hundred-legged centipede from a square. The use of tiles gives \n                                         a remarkably efﬁcient centipede. The length of the folded model \n                                         is about two-thirds of the side of the square, and surprisingly, \n                                         for a constant ratio between leg length and body segment, the \n                                         length turns out to be about the same no matter how many \n                                         legs it has.\n                                             Origami design by tiling can be a powerful technique \n                                         for discovering new bases from which to fold new designs. \n                                         However, there is still a bit of trial-and-error to it, in that \n                                         the way we’ve approached it has been to assemble tiles into a \n                                         pattern and see what kind of base arises. If you have built up \n                                         a collection of many different types of tile, then for a particular \n                                         subject, you can try ﬁtting together different tiles compris-\n                                         ing the required number of circles and rivers. But it’s still an \n                                         indirect way of designing a model. The concepts within the \n                                         tiling method, however—circles, rivers, and most importantly, \n                                         the uniaxial base—are fundamental. We can build off these \n                                         concepts to construct several algorithms for a directed design: \n                                         “I need this many ﬂaps; here’s how to get them.” In the next \n                                         chapter, we’ll encounter the ﬁrst of these algorithms.\n\n\n     280\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e1f"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 279,
  "content": "            Figure 8.38. \n            Schematic representation of two triangular tiles. The length of each \n            stick is equal to the length of the ﬂap.\n\n            However, there is an important difference between the stick \n            ﬁgure and the base. Although we often draw the branches of \n            the stick ﬁgure in the same orientation as the ﬂaps of a base \n            (as in Figure 8.38), there is no signiﬁcance to the order of sticks \n            around their common endpoint. The ﬂaps of the base may be \n            superimposed, one atop the other, but in order to distinguish \n            adjacent ﬂaps, I will always draw the stick ﬁgure schematic \n            with the segments separated by some angle. So in the stick ﬁg-\n            ure, it is not the angles between segments that are signiﬁcant; \n            only the lengths of the segments and their connections to each \n            other matter, because the length of each segment indicates \n            the length of the corresponding ﬂap. This length is also equal \n            to the radius of the inscribed circular arc for ﬂaps represented \n            by circles.\n                For a tile with a river running through it, we will represent \n            both the ﬂaps and the connection between them by lines as well. \n            Thus, a rectangular tile with a river is represented schematically \n            by four lines joined in pairs with a connection between the pairs, \n            while a square tile composed of four circles would be represented \n            by four lines all coming together at a point.\n\n\n            Figure 8.39. \n            Schematic representation of a rectangular tile with a river and a \n            square tile.\n\n                                                                                                     267\n                                                                         Chapter 8: Tiling\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e20"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 397,
  "content": "./origami_dataset_dev/Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li/page397_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e21"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 523,
  "content": "             0                       16\n                                        0\n\n\n                                        10\n                                        11\n\n                                        14\n\n\n                                        20\n\n\n                                        26\n\n\n                                        33\n\n\n                                        38\n\n                                        41\n                                        43\n\n\n                                        50\n\n                                        54\n                                        551/2\n                                        56\n                                        571/2\n                                        59\n                                        61\n\n                                        64\n\n              2. Fold and unfold horizontal           3. Fold the left edge in to the       4. Fold and unfold\n              creases at each of the divisions        vertical center line.                 along angle bisectors\n              shown. Although you can find                                                  in three places.\n              the divisions by folding,\n              measuring and marking will\n              avoid putting extraneous\n              creases on the paper.\n\n\n                                                                                                                 511\n                                                                      FoldingChapter Instructions: 12: Box  OrganistPleating\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e22"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 245,
  "content": "             52. Detail of foreleg. Fold and    53. Reverse-fold the point. Then    54. Open out the point, making a\n             unfold.                            turn the model over.                pleat along the folded edge.\n\n\n                 55. Fold and unfold                 56. Fold and unfold                57. Valley fold the near\n                 along the edge behind               along the angle                    layer and mountain-fold\n                 the flap.                           bisector.                          the far layer.\n\n\n                           58. Form a mountain fold                      59. Turn the paper over.\n                           that runs to the corner and\n                           open out the white layer.\n                           The paper will not lie flat.\n\n     234\n                         Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e23"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 251,
  "content": "                                                                                                        1/2\n\n\n                25. Swivel-fold the                26. Fold the sides             27. Fold the model in half,\n                corners upward while               underneath on the existing     incorporating a reverse fold at the\n                folding the sides in.              creases, allowing the near     bottom and keeping the top gently\n                                                   flaps to swing outward.        rounded. Rotate the model 1/2 turn.\n\n\n               28. Fold two corners up as        29. Crimp the tail upward.         30. Mountain-fold the white\n               far as possible.                                                     corner. Repeat behind.\n\n\n              31. Crimp the head down,           32. Mountain-fold the corners      33. Reverse-fold the tips of\n              keeping it and the body rounded    just to the right of the fins.     the fins.\n              and three-dimensional.             Pleat the edge of the nose,\n                                                 pinching at the corners.\n\n\n               34. Pleat the face. As you do      35. Pleat the fins and fold           36. Finished Koi.\n               so, make a small circular          them up and out to the sides.\n               dimple at the top of the pleat     Curve the tail slightly.\n               to form an eye. Repeat behind.\n\n     240\n                         Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e24"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 537,
  "content": "                        43. Add one more pair of reverse folds, both diagonal.\n                        Note that both hit the folded edge at the existing crease.\n\n\n                        44. Flatten the model completely, squaring up and\n                        aligning all the layers of the pleats.\n\n                                                                                           525\n                                                         FoldingChapter Instructions: 12: Box  OrganistPleating\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e25"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 84,
  "content": "",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e26"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 90,
  "content": "             Valentine\n\n\n              1. Begin with a square, colored\n              side up. Fold and unfold along the\n              diagonals. Turn the paper over.\n\n\n              2. Fold the paper in half from edge   3. Bring all four corners together at 4. Petal-fold the front and\n              to edge and unfold. Repeat the other  the bottom, forming a Preliminary back flaps to form a Bird\n              direction.                            Fold.                             Base.\n\n\n              5. Fold one flap        6. Fold one flap to the   7. Fold one flap up in 8. Unfold the model\n              down in front and       right in front and one to front and back down.   completely.\n              one behind.             the left behind.          Repeat behind.\n\n      78\n                         Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e27"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 709,
  "content": "             Spur-Legged Dung\n             Beetle\n\n\n             Mark the edges of a 76×76 square grid. Use the edge\n             markings to locate interior vertices. Note that the\n             antenna folds at the top are not aligned to the grid;\n             instead, the lines are tilted at a slope of 1:8. You\n             should precrease the extra creases shown in the middle\n             before collapsing the base.\n\n\n                                                                                                                 697\n                                                           Crease Patterns:Chapter Spur-Legged 14: Polygon Dung Packing Beetle \n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e28"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 47,
  "content": "            1. A sink fold can    2. Fold the point down 3. Fold and unfold 4. Unfold the point.\n            sometimes easily be   along the sink line. along a crease that just\n            made as a spread-sink,                     touches the tip of the\n            as this sequence shows.                    point.\n\n\n                      5. Grasp the sides and fold 6. Bring the middle of 7. Completed sink fold.\n                      them down while simul- the sides of the square\n                      taneously stretching and region together at the\n                      pushing down on the top top.\n                      flap.\n\n            Figure 2.43. \n            Folding sequence for making a sink folding using a spread sink.\n\n                The example in Figure 2.43 is for a four-sided sink—one \n            in which the point has four ridges coming down from it (and \n            the polygon outlined by the mountain folds “going around the \n            mountain” is a quadrilateral), but you can form three-, ﬁve-, \n            and higher-sided sinks in a similar way.\n                As we have seen, a valley fold can combine with its mir-\n            ror image to make a reverse fold, a squash fold can combine \n            with its mirror image to make a petal fold, and a rabbit ear \n            can combine with its mirror image to make a double rabbit \n            ear. Can a sink fold be combined with its mirror image? Yes, \n            in multiple ways, but the most common way happens when a \n            point is sequentially sunk down and back up. The maneuver \n            is called a double sink (or triple or quadruple sink, for more \n            complicated generalizations).\n                Although a multiple sink can be made sequentially—make \n            the lowest sink, then reach inside and sink the point back \n            upward—it’s usually easier to make them all together, ﬁrst \n            pinching the mountain folds around the point, then pinching the \n            valley folds around before attempting to close up the model.\n\n                                                                                                      35\n                                                                 Chapter 2: Building Blocks \n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e29"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 721,
  "content": "                The concept of the grafted Kite Base is illustrated in Fig-\n            ure 15.10. The basic structural form is the Kite Base, whose \n            crease pattern is embedded in the square. The central triangle \n            of the Kite Base will be preserved in the ﬁnal model, giving \n            a large, ﬂat region from which to form the body. Instead of \n            running the axis of the model down the center of the square, \n            we can treat the perimeter of the preserved triangle as con-\n            sisting of axis; we then use conventional techniques, such as \n            circle/river packing, to create ﬂaps from the region outside \n            the preserved triangle.\n\n                                                                        added paper\n\n\n            Figure 15.10. \n            Left: Kite Base. \n            Middle: crease pattern for the Kite Base. \n            Right: Kite Base embedded within a larger square.\n\n                Not all of the theory carries over; the molecular crease \n            patterns we constructed were based on the assumption that all \n            axial creases wind up collinear in the folded model. This will \n            assuredly not be the case if we keep the colored triangle from \n            folding ﬂat. However, we can still use circles to allocate paper \n            to the ﬂaps that will lie along the creases.\n                We can also incorporate portions of the colored triangles \n            into ﬂaps, by allowing our circles to partially overlap the tri-\n            angle; however, these ﬂaps will not be axial ﬂaps. That may \n            not be a problem; in fact, it may be quite desirable. Thus, for \n            example, in the Rabbit shown in Figure 15.11, the two bottom \n            corners of the embedded triangle become the rear legs of the \n            animal. Obviously, they are not axial ﬂaps, but for this ﬁgure, \n            axial ﬂaps would not be very useful as the rear legs. On the \n            other hand, axial ﬂaps work very well for the head and ears, and \n            the four-circle-packing—and the crease pattern that results—\n            should, by now, be very familiar to you.\n                The ratio between the size of the embedded Kite Base and \n            the original square is a design variable that changes continuously \n\n                                                                                                     709\n                                                                  Chapter 15: Hybrid Bases\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e2a"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 735,
  "content": "              52. There is a small              53. Pleat a single layer near    54. Reverse-fold the corners.\n              Preliminary Fold at the top of    the bottom and swing the two     Repeat on the far layers.\n              the head. Valley-fold the near    points out to the sides. Flatten\n              edges and mountain-fold the       firmly.\n              far edges.\n\n\n              55. Mountain-fold the near        56. Mountain-fold two edges      57. Mountain-fold the point\n              point as far down as possible.    to the center line.              as far behind as possible.\n\n\n              58. Sink the corners of the       59. Reverse-fold two corners.    60. Mountain-fold two edges.\n              ears a bit.                                                        Turn the paper over from top\n                                                                                 to bottom.\n\n                                                                                                                 723\n                                                               Folding Instructions:Chapter  15:African Hybrid Elephant Bases\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e2b"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 53,
  "content": "                                                          Elephant3 Design\n\n                          n the beginning—at least, according to some \n                          mythologies—there was the Elephant. And so \n                          it is with the elephant that we begin our foray \n                          into origami design. The elephant—the subject \n                          of Georgeot’s exhibition—is one of the most \n            common subjects for origami. Presumably, this is because it \n            is so readily suggested. Almost any large shape with a trunk \n            is recognizable as an elephant. If the shape has four legs and \n            large, ﬂoppy ears, so much the better. But all these features \n            aren’t needed; in fact, it is possible to fold an elephant using a \n            single fold, as Figure 3.1 shows (designed by Dave Mitchell).\n\n\n            1. Begin with a sheet of writing paper. Fold the 2. Finished One-Crease Elephant.\n            upper right corner down along an edge.\n            Figure 3.1. \n            Dave Mitchell’s One-Crease Elephant.\n\n                Do you see it? The elephant is facing to the right.\n                Yes? Perhaps? This simple model—about as simple as you \n            can get—illustrates one of the most important characteristics \n\n                                                                                                      41\n\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e2c"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 700,
  "content": "./origami_dataset_dev/Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li/page700_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e2d"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 696,
  "content": "      Crease Patterns\n\n\n                        Scarab Beetle\n\n\n                        Cicada Nymph\n\n\n                        Scarab Beetle HP\n\n\n                        Cyclomatus metallifer\n\n\n                        Scorpion HP\n\n\n  684\n            Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e2e"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 682,
  "content": "                                         Figure 14.48. \n                                         Contour map and folded model of a hex-pleated Scorpion HP.\n\n                                         14.8. Arbitrary Polygons\n                                         Box-pleating and hex-pleating are not the only way to employ \n                                         polygon packing. If we are careful with our selection of polygons, \n                                         we can use polygons whose sides run at many different angles, \n                                         and, in fact, angles that are not integer subdivisions of a circle. \n                                         As long as the contours along the outside of the polygon are \n                                         evenly spaced, polygons and rivers will all mate nicely with \n                                         one another along their edges, no matter what the angles of \n                                         the polygons and rivers are.\n                                             Polygons on a grid insured “nice mating,” though. When \n                                         a polygon is formed on a grid, we can draw evenly spaced \n                                         contour lines all the way around the polygon with no hiccups \n                                         in the spacing. For purposes of mating polygons, it’s not ter-\n                                         ribly important what goes on inside the polygon; what matters \n                                         are the points on the outline of the polygon where quantized \n                                         contours hit those of the adjacent polygon. If we mark these \n                                         points on the outside of a polygon, we can be assured that two \n                                         such polygons will mate and their contours will line up, and \n                                         no undesirable new contours will be created.\n                                             But we don’t necessarily need a grid to force this condi-\n                                         tion. For some polygons, simply controlling the side lengths is \n                                         sufﬁcient. Consider, for example, a triangular hinge polygon \n                                         with an integer number of contour lines along one side. We \n\n     670\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e2f"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 669,
  "content": "            deﬁne the left boundary of the pattern to be 0 and the right \n            boundary to be 1. We can then plot the transfer function of the \n            pattern: that is, make a plot of the position where a contour \n            line exits the pattern as a function of where it entered.\n\n                                                      f(x)\n                                                      1\n\n\n                                                      0                   x\n            01x                        1 – x           0               1\n                                         \n             a – xx  x              a – x + 1         g(x)\n            01a\n                                                      1\n\n\n                                                      a\n                                                      0                   x\n                                                       0  a            1\n            Figure 14.36. \n            Top left: the upper portion of the crease pattern. \n            Top right: transfer function for a bouncing contour line. \n            Bottom left: the lower portion of the crease pattern. \n            Bottom right: transfer function for a bouncing crease pattern.\n\n                The top half of the pattern is quite easy to analyze, as \n            shown in the upper half of the ﬁgure. If a crease enters the \n            pattern at position x, it exits the pattern at position 1 – x. If \n            we deﬁne f(x) as the output position for a given input position \n            x, we have\n\n                                  f (x) =   1  −    x .      (14–11)\n\n                The analysis of the bottom half is a bit more complicated; \n            there is a discontinuity at horizontal position x = a. If the \n            contour enters somewhere below x = a, then it comes out at \n            position a – x, but if it enters anywhere above x = a, then it \n            comes out at position a – x + 1. We can express this behavior in \n            a single function, which we will call g(x), which is given by\n\n                       g(x)           = ()a − x  mod 1.      (14–12)\n\n                                                                                                     657\n                                                               Chapter 14: Polygon Packing \n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e30"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 133,
  "content": "              25. Fold one layer to    26. Fold one flap          27. Open the right side    28. Close the model\n              the left.                down.                      of the model, which        back up.\n                                                                  causes the hidden edge\n                                                                  to squash downward.\n\n\n                              29. Crimp the left  30. Reverse-fold the corner.    31. Mountain-fold\n                              side upward.        Note that the mountain fold     an edge behind.\n                                                  aligns with a valley crease     Repeat behind.\n                                                  on the layer beneath. Repeat\n                                                  behind.\n\n\n             32. Fold the right edge  33. Narrow the flap by     34. Carefully reverse-fold  35. Outside-reverse-\n             over and over, dividing  forming a rabbit ear.      through the thick layers.   fold the layers.\n             the angle in thirds.     Repeat behind.             The top edge of the reverse\n             Repeat behind.                                      fold hits the marked spot.\n\n                                                                                                                 121\n                                                                   FoldingChapter Instructions: 5: Splitting Pteranodon Points\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e31"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 655,
  "content": "                Aesthetically speaking, I ﬁnd the perfect Pythagorean \n            stretch to be the most elegant form of this overlapping-squares \n            structure, but Pythagorean triples are relatively rare among \n            the small integers, and so it is good to know that there is a \n            solution for any combination of rectangle and overlap. It’s also \n            not necessary that the “perfection” be exact. If the computed \n            height h is fairly small relative to a unit, then it’s often possible \n            to simply “fudge” the excess paper out of existence, connecting \n            the two rectangle corners directly and then slightly adjusting \n            the rest of creases during the actual folding process.\n                This design pattern—letting the polygons overlap and \n            then introducing a set of gusset ridge creases—is, like the \n            level-shifting gadget, more than a mathematical curiosity; \n            it is a very useful tool in box-pleated design, particularly \n            around the corners of the square. Figure 14.20 shows a crease \n            pattern and photograph of a Water Strider. The use of four \n            Pythagorean stretches allows much longer and thinner legs \n            to be obtained than a pure box-pleated solution would allow, \n            but the overall pattern of box pleating makes the crease pat-\n            tern easily constructible and leads to overall alignment of the \n            edges, permitting a relatively neat folded form. \n                Now, the three parameters that deﬁne the structure of \n            a Pythagorean stretch are the minimum distance d between \n\n            the two relevant circle centers and the length and width s1 \n\n\n            Figure 14.20. \n            Contour map and folded model for the Water Strider. \n\n                                                                                                     643\n                                                               Chapter 14: Polygon Packing \n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e32"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 622,
  "content": "./origami_dataset_dev/Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li/page622_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e33"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 641,
  "content": "                                          0                                     0\n                                          1                                     1\n                                          2                                     0\n                                          1                                     1\n                                          0                                     0\n\n\n            01210                                 01210\n            Figure 14.5. \n            Contour map of a level-shifting gadget. Left: prior to level shifting. \n            Right: after level shifting. The numbers along each contour line \n            indicate the elevation of the contour.\n\n                Once one knows the contours, then one can work out a \n            layer ordering and assign creases. Figure 14.6 shows one pos-\n            sible crease assignment of the pattern with mountains and \n            valleys but retaining the structural coloring.\n\n                                          0                                     0\n                                          1                                     1\n                                          2                                     0\n                                          1                                     1\n                                          0                                     0\n\n\n            01210                                 01210\n            Figure 14.6. \n            Crease-assigned contour map. Left: prior to level shifting. \n            Right: after level shifting.\n\n                I call an isolated pattern of creases like this a gadget. \n            This particular gadget is a design pattern for level shifting. \n            Whenever a contour crosses a ridge crease, as in Figures 14.4 \n            and 14.5, we can use this gadget to shift the elevation on one \n            side by an amount equal to twice the distance to the two sur-\n            rounding contour lines. So in the example above, the axial+2 \n\n                                                                                                     629\n                                                               Chapter 14: Polygon Packing \n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e34"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 127,
  "content": "            Figure 5.28. \n            Crease pattern, base, and folded model of the Walrus.\n\n            structure from the crease pattern? It is recognizably a ver-\n            sion of a Bird Base (to be precise, a stretched Bird Base), but \n            two opposite ﬂaps have been split—to make the tusks at one \n            end and the tail ﬂippers at the other. Figure 5.28 shows the \n            crease pattern, the base, and the folded model. From these \n            clues, you should be able to reconstruct the model entirely. \n            (If you can’t fold the model from the crease pattern, base, and \n            folded model, full instructions may be found in books cited in \n            the references.)\n                A more sophisticated form of point-splitting is employed \n            in the model whose crease pattern is shown in Figure 5.29. The \n            Grasshopper is also clearly from a Bird Base, but with three \n            splits. The central point has been sunk and Yoshizawa-split; \n            then two of the four long ﬂaps have also been split into three \n            points each. This, too, is a challenge: Can you ﬁgure out how \n            to perform the splitting functions on a Bird Base to yield the \n            Grasshopper’s base? (And then, shape the resulting ﬂaps into \n            the folded model.)\n                By using point-splitting, you can add extra appendages \n            and features to models made from existing bases. However, \n            there is a cost in layers, and a limit on size. As we have seen, \n            even the theoretically optimum two-point split results in ﬂaps \n            less than half the size of the ﬂap you started with. Point-\n            splitting cannot double a ﬂap at the same size, or increase \n            the length of a ﬂap, or add more points to the end of the ﬂap \n\n                                                                                                     115\n                                                                 Chapter 5: Splitting Points\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e35"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 707,
  "content": "./origami_dataset_dev/Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li/page707_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e36"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 494,
  "content": "                                         allowed the integration of boxes with ﬂaps: ﬂaps for wheels, \n                                         for legs, for arms, for entire bodies. And so we shall now turn \n                                         our attention to ﬂaps.\n\n                                         12.3. Box-Pleated Flaps\n                                         Boxes are interesting, but the possibilities for things we can \n                                         make from boxes alone are pretty limited. Mooser’s Train con-\n                                         tains more than just boxes; an essential part of its “train-ness” \n                                         are its wheels—14 of them in total. Each wheel comes from a \n                                         small, triangular ﬂap of paper. Part of the beauty and power \n                                         of box pleating is that it makes it relatively easy to create such \n                                         ﬂaps and to place them where we want. To see why this is so, \n                                         let us create and examine several such ﬂaps. \n                                             We don’t have to fold the entire train to do so. We can, in \n                                         fact, just fold ﬂaps in isolation. As long as we respect the grid \n                                         on which the creases of the boxes reside, we can create ﬂaps and \n                                         then, in principle at least, splice together our ﬂaps and boxes \n                                         along the grid lines of creases, just as we did with grafting. So, \n                                         let’s fold an isolated train wheel ﬂap.\n                                             When folding box-pleated structures, we know in advance \n                                         that vertical and horizontal folds will fall on a regularly spaced \n                                         grid. We don’t know where the diagonal folds fall, at least, not \n                                         at the beginning; they’ll typically fall in different grid squares \n                                         for different structures. When we’re experimenting, though, it’s \n                                         often convenient to have the paper precreased into a square \n                                         grid so that those vertical and horizontal folds fall naturally in \n                                         the right place. But how many grid squares do we need? Pre-\n                                         creasing grids in powers of 2 (2, 4, 8, 16, 32…) is fairly easy, so \n                                         a good general practice is to start with an 8 × 8 grid, as shown \n                                         in Figure 12.23, and then jump up by powers of 2, as needed, \n                                         if more squares are needed for the test structure. You’ll ﬁnd \n                                         it most efﬁcient to fold all of the ½ divisions, followed by all of \n                                         the ¼ divisions, then the ⅛ths, and so forth.\n                                             If we want to focus on the train wheel, we should extract \n                                         just that part of the crease pattern, plus a little extra paper \n                                         that will serve to illustrate how the layers of its ﬂap need \n                                         to connect to other parts of the model. Figure 12.24 shows \n                                         a small slice of the crease pattern from Figure 12.3 that \n                                         contains a single wheel (from the upper left corner of the \n                                         crease pattern). We can then transfer this crease pattern to \n                                         a precreased 8 × 8 grid. Note: McLain’s original crease pat-\n                                         tern, shown in Figures 12.3 and 12.4, didn’t show the creases \n                                         that appear in the outermost column of grids and were drawn \n                                         with the colored side of the paper up. In Figure 12.24, I have \n                                         added those creases and drawn the paper white side up. \n\n     482\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e37"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 23,
  "content": "./origami_dataset_dev/Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li/page023_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e38"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 480,
  "content": "                                                                                               1/8\n\n\n                1. Begin with a square. Fold  2. Fold the four corners to the 3. Rotate the paper 1/8 turn 4. Fold the sides in to the\n                and unfold along the diagonals. center of the paper.       clockwise.                  center line.\n\n\n                5. Mountain-fold the top half 6. Fold one flap up to the top     7. Pull the corners out to the\n                of the model behind.          edge in front; repeat behind.      sides as far as possible and\n                                                                                 flatten the model.\n\n\n                      8. Pull the raw corners out            9. Fold the corners in to the         10. Fold the top corner down;\n                      completely in front and behind.        center on existing creases.           fold the resulting flap down\n                                                             Repeat behind.                        again. Repeat behind.\n\n\n                  11. Grasp the two white flaps\n                  and pull them in opposite                 12. Finished Box.\n                  directions, opening out the\n                  model.\n                                                     Figure 12.6. \n                                                     Folding sequence for the traditional box.\n\n       468\n                              Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e39"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 319,
  "content": "                Here, the pattern with the line of symmetry parallel to a \n            side is slightly more efﬁcient than the one in which the line of \n            symmetry is along the diagonal. Consequently, the correspond-\n            ing base would have longer ﬂaps, and the resulting model would \n            be more efﬁcient. Not by much, however. The difference is only \n            about 1%.\n                The diagonal pattern is not a stable pattern; that is, \n            we could allow two pairs of ﬂaps to become somewhat larger \n            without shrinking anything else. The two ﬂaps that can grow \n            are the two in the upper right corner of Figure 9.15. Can you \n            see why?\n                A pattern that is almost as efﬁcient is the twelve-circle \n            packing shown in Figure 9.16, which gives twelve paired ﬂaps \n            with diagonal symmetry or ten paired ﬂaps, and two on the sym-\n            metry line, if you use book symmetry. Even if you only need ten \n            ﬂaps, since the major crease lines of this pattern all run at 45° \n            or 90° to one another, it might be simpler to make a base from \n            this pattern than from the preceding two. With the twelve-circle \n            pattern, the slight loss in efﬁciency would be offset by the ease \n            of folding and the cleanliness of the lines of the model.\n\n\n                                                                        Figure 9.16. \n                                                                        A diagonal-symmetry twelve-\n                                                                        circle packing (r = 0.177).\n\n                The mathematical study of circle packings has tended to \n            concentrate upon packings of identical circles, corresponding to \n            bases with circles all the same size. However, in origami, we often \n            are seeking to construct bases in which the ﬂaps do not have the \n            same length. In a grasshopper, for example, the two back legs are \n            much longer than the other four legs. When we try to ﬁnd a circle \n            packing for a grasshopper, we should use two large circles for the \n            back legs and four smaller ones for the front legs (and perhaps \n            a medium-sized circle for the body and another short one for the \n            head). Ordinarily, one would choose circle dimensions that cor-\n            respond precisely with desired ﬂap lengths. However, by judicious \n            selection of circle size, we can produce particularly elegant and \n            symmetric crease patterns, as we will see.\n\n                                                                                                     307\n                                                                  Chapter 9: Circle Packing\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e3a"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 457,
  "content": "             Roosevelt Elk\n\n\n                                                                                24.21\n                                                                  0.00  11.01 20.56 26.28                 70.00\n                                                              0.00\n                                                              5.24\n                                                              7.97\n                                                              9.33\n\n\n                                                             22.91\n\n                                                             32.47\n\n\n                                                             70.00\n            1. Begin with the colored side up. Fold the paper       2. Measure and mark off four points along the edges\n            in half and unfold. Turn the paper over.                and three in the interior. You can either make small\n                                                                    pinch marks (as shown here) or make light pencil\n                                                                    marks on the paper.\n\n\n     446\n                         Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e3b"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 331,
  "content": "            to be optimal. Thus, for the origami problem of folding a base \n            with N equal-length ﬂaps, the optimum crease patterns are \n            also known. The optimum circle patterns and lengths of each \n            ﬂap (as a fraction of the side of a unit square) are given in \n            Figure 9.29 for N = 1 through 9. I have only drawn that por-\n            tion of each circle that appears within the square.\n\n\n                  N = 1                   N = 2                    N = 3\n                  r = 1.000              r = 0.707                r = 0.518\n\n\n                  N = 4                   N = 5                    N = 6\n                 r = 0.500               r = 0.354               r = 0.300\n\n\n                  N = 7                   N = 8                    N = 9\n                 r = 0.270               r = 0.259                r = 0.250\n            Figure 9.29. \n            Optimal packings for one through nine circles.\n\n                Because circle packing is a well-explored mathematical \n            ﬁeld, it is possible to look to the mathematical literature for \n            patterns that give rise to origami bases (as I have done here). \n            In fact, as new circle packings are discovered, new origami \n            bases will come right along with them. The nine circle packings \n            shown in Figure 9.29 each have corresponding origami crease \n            patterns, which are shown in Figure 9.30 superimposed on the \n            circle packings.\n\n                                                                                                     319\n                                                                  Chapter 9: Circle Packing\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e3c"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 325,
  "content": "            pedipalp ﬂaps are middle ﬂaps, which means that they will be \n            wrapped inside other ﬂaps in the folded base; this may make \n            it difﬁcult to achieve an elegant distribution of the legs in the \n            folded model. Also, being middle ﬂaps, they will have many lay-\n            ers of paper when they are thinned. In Figure 9.22, however, \n            the pedipalps are edge ﬂaps and the abdomen is a middle ﬂap, \n            which would probably be easier to work with. Since the abdo-\n            men is not thinned as much as a leg or pedipalp would be (it \n            might actually be ballooned outward), it would be more tolerant \n            of the extra layers inherent in a middle ﬂap.\n                Note that in both cases, two of the legs are middle ﬂaps; \n            these will unavoidably be thicker than the other leg ﬂaps, \n            especially compared to the two corner leg ﬂaps immediately \n            above. This variation in leg thickness could conceivably be a \n            weakness of any model folded from either base.\n                A remarkable thing about circle-packing bases is that de-\n            spite the deterministic nature of their construction, there are \n            usually many possible circle-packed bases for a given number \n            and distribution of ﬂaps. Consider the following sources of \n            variety: \n\n                • There are two possible symmetric orientations for \n                the base.\n\n                • There are typically several crystallizations of the \n                major circles for each symmetric orientation.\n\n                • There are typically several placements of the minor \n                circles for each crystallization.\n\n                For the tarantula conﬁguration—eight legs, two pedipalps, \n            an abdomen and a head—a small amount of experimentation \n            reveals a host of possible crease patterns, some of which are \n            shown in Figure 9.23.\n                Each crease pattern gives a unique base. Some are el-\n            egant, some are awkward; some can be folded in plan view \n            (i.e., opened out ﬂat, like an open book) while others only work \n            in side view, i.e., in proﬁle. All can be turned into a tarantula of \n            one sort or another. When you add to that the inﬁnite variations \n            possible in thinning and shaping folds, you can see that the \n            possibilities for exploiting circle packing are nearly limitless.\n                Of the nine patterns, (b) (book symmetry) and (e) (diagonal \n            symmetry) are actually the same pattern. Both are based on \n            an underlying octagon, which can be ﬁt into the square with \n            either symmetry. The presence of a valley fold running along \n            the symmetry line for most of the model allows the base to be \n            folded in plan view, which allows a smooth and rounded top \n\n                                                                                                     313\n                                                                  Chapter 9: Circle Packing\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e3d"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 443,
  "content": "                                                                        Figure 11.34. \n                                                                        Universal molecule for the \n                                                                        polygon shown in Figure 11.33.\n\n                The string-of-beads method produces a single large polygon \n            that must be collapsed into the base. The techniques described \n            by Maekawa involve placing tangent circles in the contours \n            shown in the last step of Figure 11.33, which is analogous to \n            our use of additional circles to break down axial polygons into \n            smaller polygons in the tree method. Kawahata’s algorithm \n            projects hyperbolas in from the edges to locate reference points \n            for molecular patterns, and produces yet another type of mol-\n            ecule.\n                One can also apply the universal molecule directly to the \n            string-of-beads polygon, achieving another efﬁcient crease pat-\n            tern that collapses into a base.\n                Figure 11.34 shows the universal molecule. The initial \n            hexagon is inset to the point that the two horizontal reduced \n            paths become active, and the hexagon is split into two triangles \n            and a rectangle. The triangles are ﬁlled with rabbit ear creases; \n            the rectangle is further inset, forming a sawhorse molecule.\n                The tree method of design is based on equations and has \n            been rigorously proven to work. Rigorous proof may ease one’s \n            mind, but solving the equations can be quite difﬁcult to do \n            by hand. Such computationally intensive problems are best \n            handled by computer and, indeed, the procedures described \n            above can be cast in the mathematical and logical terms that \n            lend themselves to computer modeling. I have written a com-\n            puter program, TreeMaker, which implements these algorithms. \n            Using TreeMaker, I’ve created bases for a number of subjects \n            whose solutions have eluded me over the years—deer with \n            varying sizes and types of antlers, 32-legged centipedes, ﬂying \n            insects, and more. Using a computer program accelerates the \n            development of a model by orders of magnitude; from the tree \n\n                                                                                                     431\n                                                                   Chapter 11: Tree Theory\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e3e"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 324,
  "content": "                                         either case, all polygons are either triangles or quadrilaterals, \n                                         and so one can now ﬁll in the polygons with the appropriate \n                                         tiles, giving the resultant crease pattern, shown superimposed \n                                         over the circles in Figure 9.21.\n\n\n            Figure 9.21. \n            The ﬁnished crease pattern.\n\n                                             Although the method of circle packing seems to be very \n                                         straightforward, there are many choices to be made along the \n                                         way, each giving a different result. For example, when placing \n                                         the pedipalps, we could have placed them at the top of the square \n                                         and put the abdomen down in the central hexagon, giving the \n                                         circle packing and crease pattern shown in Figure 9.22.\n\n\n            Figure 9.22. \n            An alternative circle packing \n            and crease pattern.\n\n                                             The choice of which packing to use will be affected by vari-\n                                         ous factors. For example, in the pattern of Figure 9.21, the two \n\n     312\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e3f"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 442,
  "content": "                                         the base, at least until you start sinking edges to narrow them. \n                                         A base with narrow ﬂaps will require many folds, no matter \n                                         how you design it. But with the universal molecule, because \n                                         you don’t have to arbitrarily add circles (and hence points) to a \n                                         crease pattern to knock polygons down to quads and triangles, \n                                         bases made with the universal molecule tend to have less bunch-\n                                         ing of paper and fewer layers near joints of the base, even with \n                                         multiply-sunk ﬂaps, resulting in cleaner and—sometimes—\n                                         easier-to-fold models.\n\n                                         11.9. Other Techniques\n                                         An alternative design approach that blends aspects of the circle/\n                                         river method and tree method has been described by Kawahata \n                                         and Maekawa. It has been called the string-of-beads method \n                                         of design. As in the tree method, you begin with a tree of the \n                                         model to be folded. Each line of the tree is turned into a pair of \n                                         lines and the tree is expanded to ﬁll a square, with the nodes \n                                         of the tree spaced around the edges of the square like beads on \n                                         a string. Circles and circular arcs are then constructed in the \n                                         square that surround each leaf vertex. The process is illustrated \n                                         for a six-ﬂap base shown in Figure 11.33.\n\n\n                                         Figure 11.33. \n                                         The string-of-beads method. The tree is turned into a closed polygon, \n                                         which is then inﬂated inside a square with straight lines between \n                                         the leaf nodes. The result is a large polygon inside the square that is \n                                         subsequently collapsed into a base.\n\n                                             In the string-of-beads method, the tree is converted into \n                                         a large polygon in which each corner is one of the leaf nodes of \n                                         the tree, and each side is as long as the path between adjacent \n                                         leaf nodes. It is clear that this distribution of leaf nodes is just \n                                         a special case of the tree method in which we have constrained \n                                         all of the nodes to lie on the edge of the square; it avoids creating \n                                         middle ﬂaps, but at the possible expense of efﬁciency.\n\n     430\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e40"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 456,
  "content": "                 67. Narrow the leg. Fold the     68. Crimp and open out the          69. Double-rabbit-\n                 corners of the hoof              hooves. Shape the tail so           ear the forelegs.\n                 underneath.                      that the tail and hooves form\n                                                  a stable tripod.\n\n\n              70. Reverse-fold the tips of the       71. Mountain-fold                72. Simultaneously\n              forelegs. Steps 71–73 will focus on    the corners of the               narrow and crimp the\n              the forelegs.                          forelegs.                        forelegs downward\n                                                                                      at slightly different\n                                                                                      angles.\n\n\n                     73. Crimp and open          74. Pleat the mane. Crimp the     75. Finished Alamo Stallion.\n                     out the hooves.             body. Reverse-fold the nose and\n                                                 mouth. Shape to taste.\n\n                                                                                                                 445\n                                                                 Folding Instructions:Chapter 11: Alamo Tree  StallionTheory\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e41"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 330,
  "content": "                                         designing a base with N equal-length ﬂaps can be solved by \n                                         ﬁnding a distribution of N nonoverlapping circles whose centers \n                                         all lie within a square.\n                                             In origami, packings of unequal circles arise more often \n                                         than equal circles because origami bases are more often com-\n                                         posed of ﬂaps of differing lengths. When all of the ﬂaps are \n                                         the same length, however, then all of the circles are the same \n                                         diameter. This problem turns out to have some interesting \n                                         mathematical connections, so we will digress brieﬂy to explore \n                                         them. The problem of packing N nonoverlapping circles with \n                                         their centers inside of a square is equivalent to the problem of \n                                         packing N nonoverlapping circles entirely inside of a somewhat \n                                         larger square; Figure 9.28 shows how the same pattern solves \n                                         both problems.\n\n\n                                         Figure 9.28. \n                                         A solution for an origami circle packing is equivalent to a circle \n                                         packing in which the circles must lie completely inside the square.\n\n                                             The similarity between the two problems would be only \n                                         a curiosity but for one thing; the problem of packing equal \n                                         nonoverlapping circles entirely inside a geometric ﬁgure is \n                                         a well-researched ﬁeld in mathematics. This correspondence \n                                         between the origami design problem and the mathematics of \n                                         circle-packing is fortunate, because many of the solutions to \n                                         circle-packing problems have already been enumerated in the \n                                         open mathematical literature. Instead of rederiving a solu-\n                                         tion (not an easy task, depending upon the number of ﬂaps), \n                                         one can merely look up the optimum circle pattern for a given \n                                         number of circles.\n                                             For the mathematical problem of packing N equal nonover-\n                                         lapping circles into a square, the optimum solutions for N = 1 \n                                         through 10 are known and have been mathematically proven \n\n     318\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e42"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 318,
  "content": "            Figure 9.14. \n            Mirror symmetries of the square. \n            Left: book symmetry. \n            Right: diagonal symmetry.\n\n                                         it can be symmetric about a diagonal of the square, which we \n                                         call diagonal symmetry.\n                                             From these symmetry considerations, we see a new rule \n                                         for circle placement emerging: Not only should the number and \n                                         diameter of circles match the number of ﬂaps on the base, but \n                                         the distribution of the circles should also match the symmetry \n                                         of the subject. There are two distinctly different types of circles: \n                                         those that come in symmetric pairs, and those that lie directly \n                                         upon the line of symmetry. Appendages that come in mirror-\n                                         image pairs correspond to circles that have mirror-image pairs \n                                         on the square. Appendages that do not come in pairs, such as \n                                         the head and tail, correspond to circles that should lie directly \n                                         upon the symmetry line of the square.\n                                             If we wish to fold a ten-appendaged tarantula, we should \n                                         choose a line of symmetry, divide the square into two regions \n                                         along the line of symmetry, and then pack ﬁve circles into each \n                                         region in mirror image of each other. This task is easily done, \n                                         and my (conjectured) optimal solutions for the two possible \n                                         lines of symmetry are illustrated in Figure 9.15.\n\n\n                                         Figure 9.15. \n                                         Left: optimum ten-circle packing with book symmetry (r = 0.197). \n                                         Right: optimum ten-circle packing with diagonal symmetry (r = 0.194).\n\n     306\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e43"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 481,
  "content": "            from in the unfolded sheet, we can establish a correspondence \n            between the folded and unfolded forms of the model, as shown \n            in Figure 12.7.\n\n\n                                                                        Figure 12.7. \n                                                                        Correspondence between the \n                                                                        parts of the folded model and \n                                                                        the crease pattern.\n\n                If we examine the crease pattern by itself, we see that not \n            all of the paper is needed to make the model. In particular, \n            the top and bottom corners (which are tucked down inside the \n            bottom of the model) don’t contribute much (other than a bit \n            of extra stiffness, owing to the multiple layers), and the side \n            corners are tucked underneath the handle as well.\n                Note that in this three-dimensional model, some of the \n            mountain and valley folds make a dihedral angle—the angle \n            between adjacent surfaces—of 90° while others are pressed ﬂat \n            in the folded model.\n                Examination of the labeled crease pattern in Figure 12.8 \n            shows that we don’t need the entire square to fold this box. In \n            fact, we can fold what is essentially the same model from a 3 × 2 \n            rectangle, as outlined by dotted lines in Figure 12.9.\n                Although a 3 × 2 rectangle is considered nonstandard in \n            origami (or at least, less common) and is less pleasingly sym-\n            metric than a square, it is a more natural shape for folding the \n            box, since the edges of the paper are aligned with the sides of \n            the box and the layers are more evenly distributed. We can \n            fold essentially the same box from a 3 × 2 rectangle, as shown \n\n                                                                                                     469\n                                                                  Chapter 12: Box Pleating\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e44"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 495,
  "content": "                1. Fold the bottom up to the top and   2. Fold the bottom and top edges to   3. Add folds dividing into eighths by\n                unfold.                                the crease you just made.             bringing the top and bottom edges to\n                                                                                             the folds shown.\n                                                                     1–3\n                                                 1/4\n\n\n                4. Rotate the paper 1/4 turn.          5. Repeat steps 1–3.                  6. The precreased grid.\n                Figure 12.23. \n                Precreasing an 8 × 8 grid.\n\n\n                Figure 12.24. \n                Left: section of the Train crease pattern that contains a single wheel \n                ﬂap. \n                Right: the crease pattern transferred onto an 8 × 8 grid with creases \n                extended to the boundary.\n\n                                                                                                                                  483\n                                                                                      Chapter 12: Box Pleating\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e45"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 640,
  "content": "                                             What I would like to do is to compare the crease patterns \n                                         of the ﬁrst and last steps of this model, emphasizing the con-\n                                         tour lines (where I have taken the bottom edge of the folded \n                                         shape as the axis). First, we have the original shape, as shown \n                                         on the left in Figure 14.4. It consists of a series of concentric \n                                         contour lines, with the lowest elevation, axial (green) around \n                                         the outside and in the center, axial+1 inside of that (brown), \n                                         and the highest elevation, axial+2 inside of that (violet). Then, \n                                         on the right, we have a contour map of the result.\n\n\n                                         Figure 14.4. \n                                         Top left: contour map of the test structure before sinking. \n                                         Bottom left: the folded form. \n                                         Top right: the contour map after sinking. \n                                         Bottom right: the folded form.\n\n                                             We have, of course, added some diagonal folds in red \n                                         (which correspond to ridge creases). But the important thing \n                                         to observe is that the second line down in the middle, which \n                                         used to be axial+2, is now just plain axial. We have shifted the \n                                         elevation of this crease.\n                                             The folds that created the shifting were the creases along \n                                         the diagonal ridge crease on each side of the former ridge. \n                                         Let’s focus on just one side of this structure. This pattern of \n                                         creases, created by the spread-sink, when isolated, becomes a \n                                         tool for shifting the elevation of an axis-parallel fold, as shown \n                                         in Figure 14.5.\n\n     628\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e46"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 126,
  "content": "            Figure 5.27. \n            Crease patterns for splitting a \n            point into three, ﬁve, and seven \n            smaller points.\n\n                                             There is also a variation of this pattern that works for even \n                                         numbers of points, which you might enjoy trying to discover. \n                                         Which of the two families is better? It depends on the model. \n                                         The two families may be distinguished by the major mountain \n                                         folds: In the previous example, they radiate from a point; in \n                                         this family, they are parallel. If the group of points is to be \n                                         spread out (a technique that enhances the illusion of length), \n                                         the radial family seems to fan more neatly; it’s ultimately a \n                                         personal choice dictated by the aesthetics of the model.\n                                             I would encourage you to fold up a few bases and try out \n                                         the different splitting techniques; then unfold them and exam-\n                                         ine the crease patterns. Most point-splitting sequences have \n                                         a distinct pattern of creases in which the converging creases \n                                         that form a ﬂap suddenly stop at an obtuse triangular pleat \n                                         that then radiates outward with creases that form two, three, \n                                         or more points.\n\n                                         5.5. More Applications of Splitting\n                                         Once you become familiar with point-splitting, you can use \n                                         it in many ways to form pairs of features. The crease pattern \n                                         in Figure 5.28 is the base for a Walrus. Can you elucidate its \n\n     114\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e47"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 132,
  "content": "             15. Again, fold the flap up with 16. Crimp using the 17. Pull out the loose 18. The raw edges should be\n             the crease hitting the left edge existing creases.  paper completely on   perfectly horizontal; if they\n             in the same place, but now the                      both the near and far aren’t, adjust the crimp and\n             right edges are aligned. Crease                     sides of the flap.    flatten. Then reverse-fold the\n             firmly and unfold.                                                        white flap to the left.\n\n\n                      19. Squash-fold the              20. Fold the corner           21. Fold a rabbit ear.\n                      flap over to the right.          over to the left.\n\n\n                                                                                                 13–22\n\n                      22. Bring one layer in           23. Fold one flap             24. Repeat steps\n                      front, thus hiding the           down.                         13–22 on the right.\n                      tip of the rabbit ear.\n\n     120\n                         Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e48"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 654,
  "content": "                                         Figure 14.18. \n                                         Contour map and folded model for the Camel Spider, which incorpo-\n                                         rates eight Pythagorean stretches. \n\n                                             When this happy state of affairs arises, I call this structure \n                                         a perfect Pythagorean stretch, and the result is illustrated in \n                                         Figure 14.19. \n\n\n            Figure 14.19. \n            A perfect Pythagorean stretch.\n\n     642\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e49"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 668,
  "content": "                                         One could, of course, simply redeﬁne the axial (0) contour to be \n                                         the middle of the base, in which case folded contour lines would \n                                         appear at elevations 0, 1/2, 1, 3/2, and 5/2.\n                                             A fully assigned crease pattern and photograph of the ﬁn-\n                                         ished model are given at the end of the chapter. Once you have \n                                         folded this, as a practice challenge, you might try seeing if you \n                                         can alter the crease pattern to replace the abdomen segmenta-\n                                         tion with the technique shown in Figure 14.32.\n\n                                         14.6. Dense Bouncing\n                                         Throughout this discussion of uniaxial box pleating, an impor-\n                                         tant notion has been the idea that all of the patterns lie neatly \n                                         on a grid. In many of the ﬁgures thus far, that grid is explicit. \n                                         It certainly makes it easy to fold a crease pattern if its verti-\n                                         ces and lines fall upon a grid, but there is a deeper reason for \n                                         requiring a grid, illustrated by the simple uniaxial box-pleated \n                                         pattern shown in Figure 14.35.\n\n\n            Figure 14.35. \n            A uniaxial box-pleated pattern. \n            How far does the bouncing con-\n            tour go?\n\n                                             This pattern is relatively simple, consisting of four quad-\n                                         rilaterals, two of them L-shaped. The vertex marked with a \n                                         black dot is some contour line, not necessarily axial. Suppose \n                                         we launch it perpendicularly toward the closest hinge line and \n                                         start the process of bouncing around the ridge creases. A little \n                                         bit of that process is shown. Where and when does the contour \n                                         close and/or run off of the paper?\n                                             The answer, as it turns out, depends critically upon the \n                                         dimensions of the two L-shaped ﬁgures in the bottom half of the \n                                         pattern. The way to see this is to cut the paper in half along the \n                                         horizontal hinge in the middle, as shown in Figure 14.36 and, \n                                         for each half, plot the horizontal position at which a vertical \n                                         crease, upon entering the pattern, exits. For simplicity, let’s \n\n     656\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e4a"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 683,
  "content": "            propagate those contours into the triangle, reﬂect them off of \n            the ridge creases, and then send them back out to either side, \n            adding new contours as needed to ﬁll out the triangle. On the \n            input side, there are evenly spaced contours running from \n            vertex to vertex. Is the same true on the other two “output” \n            sides of the triangle?\n                Figure 14.49 shows the answer: it depends on the tri-\n            angle, and small differences in the dimensions of the triangle \n            can make a big difference in the behavior of the contours. In \n            the pattern on the left, the contours alternate with even spac-\n            ing all the way to the far vertex of the triangle. In the triangle \n            on the right, which is only very slightly different, the contours \n            around the outside don’t line up with each other when they \n            get to the ridge creases in the interior. Or, equivalently, if we \n            reﬂect the contours across the ridge creases, they don’t hit the \n            sides at evenly spaced unit distances from the vertices.\n\n                        new                                    new\n                                    new                                      new\n\n\n              OUT                                    OUT\n                                          OUT                                      OUT\n\n\n                            IN                                      IN\n            Figure 14.49. \n            Left: a “nice” triangle, with integer contours on each side. \n            Right: a “not-nice” triangle: it’s not possible to continue the contours \n            with even spacing all the way around the polygon. An x-ray line \n            shows the original position of the left side of the triangle.\n\n                This ﬁgure also suggests what the difference is between \n            the two triangles: the side lengths of the one on the left are \n            clearly an integer number of units in length. In the one on \n            the right, the side lengths are not integral, and that is what \n            causes the misalignment in the contour pattern.\n                That doesn’t mean the triangle on the right is wholly \n            unusable, though. We can choose to continue the pattern on \n            one side of the triangle, say, the left side; reﬂection off of the \n            ridge creases then dictates what the contours must be on the \n            right side, as shown in Figure 14.50.\n                So, we can complete the pattern of contours, but we lose \n            two potentially desirable attributes: (1) the top vertex is no \n\n                                                                                                     671\n                                                               Chapter 14: Polygon Packing \n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e4b"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 697,
  "content": "                                                            Crease Patterns\n\n\n                                       Euthysanius Beetle\n\n\n                                       Spur-Legged Dung Beetle\n\n\n                                                                                           685\n                                                         ChapterChapter 14: 14: Polygon Crease  PatternsPacking \n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e4c"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 734,
  "content": "                                40–42\n\n            43. Repeat steps 40–42 on the right. 44. Fold the top behind and          45. Turn the model over from\n                                                 swing the three flaps in front       top to bottom.\n                                                 as far upward as they will go.\n\n\n               46. Steps 47–60 will focus         47. Fold the edges in toward        48. Unfold the two flaps.\n               on the head.                       the centerline; the edges\n                                                  should be vertical and parallel.\n\n\n              49. Sink the edges on the           50. Pull out a single layer of     51. Mountain-fold the edges\n              creases you just made.              paper partway on each side.        underneath on each side.\n\n     722\n                         Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e4d"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 52,
  "content": "",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e4e"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 46,
  "content": "                                         Figure 2.41. \n                                         A spread sink.\n\n                                             The next member of the sink family is the conventional, \n                                         or open, sink. The open sink is a simple inversion of a corner \n                                         formed from a region in the interior of the paper. Conceptu-\n                                         ally, it is quite simple: The line of the sink is a mountain fold, \n                                         which runs all the way around the point being sunk like a road \n                                         girdling a mountain peak. All of the creases above the sink line \n                                         get converted to the opposite parity, mountain to valley, valley \n                                         to mountain.\n                                             What makes an open sink “open” is that the part of the pa-\n                                         per being sunk can (usually) be opened out entirely ﬂat, which \n                                         allows a relatively straightforward strategy for its formation: \n                                         stretch the edges apart so that the tip of the point to be sunk \n                                         ﬂattens out, pinch a mountain fold all the way around, then \n                                         push the middle down into the model and ﬂatten the model. \n                                         The creases in the sunk region will (again, usually) fall into \n                                         the right place.\n                                             Figure 2.42 shows this process, including the intermediate \n                                         stage, and the crease pattern of the result.\n                                             It is sometimes possible to make an open sink by perform-\n                                         ing a spread sink ﬁrst, as Figure 2.43 shows.\n\n\n                                         Figure 2.42. \n                                         The open sink, formation and crease pattern.\n\n      34\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e4f"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 720,
  "content": "                                             By inserting the strip, we have created two axes within \n                                         the base; it is now multiaxial. By using the inserted strip for \n                                         the body, we can utilize nearly the full length of the leg ﬂaps by \n                                         narrowing the uniaxial portions, while the central strip retains \n                                         its full width, as shown in Figure 15.9.\n\n\n                               6. Sink the edges in and out 7. Reverse-fold the flaps 8. Observe that very little\n                               to narrow them.        out to the sides.       of the horizontal flap is now\n                                                                              hidden inside the model.\n                                         Figure 15.9. \n                                         Narrowing the edges that would conceal the leg ﬂaps still leaves paper \n                                         available for a wide body.\n\n                                             The example in Figure 15.9 is a bit contrived to illustrate \n                                         the principle. But you can use this technique in many ways, \n                                         varying the width of the inserted strip relative to the paper \n                                         remaining to vary the ratio of body width to ﬂap length while \n                                         still preserving efﬁciency.\n\n                                         15.3. Grafted Kite Base\n                                         The region that you insert does not have to be a rectangular \n                                         strip, of course. Far from it: One of the most versatile techniques \n                                         for creating animal forms, used in designs by numerous artists, \n                                         inserts a Kite Base (or modiﬁcation thereof) into the corner of \n                                         a square. Or, viewed another way, it consists of a strip graft \n                                         added to two sides of a Kite Base, similar to the strip graft that \n                                         created the KNL Dragon in Chapter 6. But now, rather than \n                                         simply using the strip to create small features at the corners \n                                         of the model, the strip is made wide enough that, when ﬁlled \n                                         with ﬂap-creating molecules, it contributes a collection of ﬂaps \n                                         around the periphery of the triangle that makes up the silhou-\n                                         ette of the Kite Base. This added material thereby produces \n                                         much of the overall structure of the model. Better yet, it is \n                                         highly variable: By varying the width of the grafted strip, you \n                                         can add more or fewer ﬂaps, make them larger or smaller, and \n                                         create a remarkable variety of ﬂat and three-dimensional fauna. \n                                         I call the family of structures the grafted Kite Base.\n\n     708\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e50"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 708,
  "content": "             Euthysanius Beetle\n\n\n             Mark the edges of a 76×76 square grid. Use the edge\n             markings to locate interior vertices. Note that the\n             antenna folds at the top are not aligned to the grid;\n             instead, the lines are tilted at a slope of 1:8. You\n             should precrease the extra creases shown in the middle\n             before collapsing the base.\n\n\n     696\n                         Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e51"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 141,
  "content": "./origami_dataset_dev/Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li/page141_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e52"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 91,
  "content": "              9. Extend an existing crease to the 10. Fold the bottom corner up; the 11. Refold the Bird Base, using the\n              lower left edge. Repeat above.   crease hits the edge at the same place existing creases (you will have to\n                                               as the last crease. Repeat with the top make new creases through the colored\n                                               corner.                           corners).\n\n\n             12. Fold the bottom  13. Shift some      14. Squash-fold the 15. As you did in     16. Bring a raw\n             left corner up to the paper upward as    corner, swinging the step 13, shift some  edge in front of\n             center line; the fold far as possible,   excess paper over to paper upward,        the flap.\n             runs along an        releasing the       the left.           releasing the trapped\n             existing crease. You trapped paper                           paper underneath.\n             don’t need to make   underneath the\n             this fold sharp.     flap.\n\n\n                                                                     12–19\n\n\n                                                                      1/2\n\n               17. Open out      18. Fold the two top  19. Repeat steps    20. Divide each     21. Reverse-fold\n               the raw edges     near flaps downward   12–19 behind.       vertical flap into  each flap up and\n               slightly.         while folding the     Then rotate the     thirds with valley  down on the\n                                 blunt interior flap   model 1/2 turn.     folds.              existing creases.\n                                 underneath. Close\n                                 the model and flatten\n                                 firmly.\n\n                                                                                                                  79\n                                                                      FoldingChapter Instructions: 4: Traditional Valentine Bases\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e53"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 85,
  "content": "                                                    Folding Instructions\n\n\n                                       Stealth Fighter\n\n\n                                       Snail\n\n\n                                       Valentine\n\n\n                                       Ruby-Throated Hummingbird\n\n\n                                       Baby\n\n\n                                                                                            73\n                                                        ChapterChapter 4: 4:Folding Traditional Instructions Bases\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e54"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 250,
  "content": "               13. Fold and unfold along         14. Fold and unfold along a         15. Crimp the corner on the\n               two angle bisectors.              crease that passes through the      two existing creases.\n                                                 crease intersection.\n\n\n              16. Fold the side flaps down       17. Fold the side corners up,       18. Lightly crease the bottom\n              and up.                            crease, and unfold.                 point up and down. Try not to\n                                                                                     make any crease mark on the\n                                                                                     far side.\n\n\n              19. Fold through all layers;       20. Fold and unfold all the            21. Swing the crimped\n              only make the crease sharp         way up along a crease aligned          flap to the left.\n              between the two dots.              with the folded edge; unfold\n                                                 to step 19.\n\n\n                                  19–20\n\n                 22. Repeat steps                23. Turn the model over.            24. Fold the side corners in to\n                 19–20 on the right.                                                 lie along the crease line.\n\n                                                                                                                 239\n                                                                        ChapterFolding 7: Instructions:Pattern Grafting Koi\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e55"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 536,
  "content": "                    41. Reverse-fold the right flap again with a pair\n                    of reverse folds. The upper fold lies on an existing\n                    crease; the lower diagonal folds meet an existing\n                    crease at a folded edge.\n\n\n                    42. Add another pair of reverse folds. The leftward\n                    one is diagonal; note that it hits an existing crease.\n                    The rightward one lies on an existing crease.\n\n     524\n                         Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e56"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 522,
  "content": "             Organist\n\n\n                                        1. Begin with a 4x1 rectangle, white side up. Fold in\n                                        half the long way and unfold. Rotate it to be vertical.\n\n\n     510\n                         Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e57"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 244,
  "content": "                  46. Pleat the shell and curve it\n                  around. The mountain folds are\n                  vertical; the valley folds are\n                  made so that the mountain folds\n                  line up with the existing edges.\n                                                     47. Pleat the head (top)\n                                                     and tail (bottom); note that\n                                                     the upper pleat extends\n                                                     farther into the shell.\n                                                     Mountain-fold the sides\n                                                     underneath.                     48. Valley-fold all the way\n                                                                                     around the bottom of the\n                                                                                     shell to create a rim (and\n                                                                                     also further lock the pleats\n                                                                                     made in step 46).\n\n\n                 49. Mountain-fold the\n                 edges of the head and\n                 tail through all layers.\n\n                                                      50. Pinch and\n                                                      narrow the tail.\n\n\n                                                                                      51. Steps 52–74 will\n                                                                                      focus on the legs and feet,\n                                                                                      starting with the forelegs.\n\n                                                                                                                 233\n                                                           Folding Instructions:Chapter Western 7: Pattern Pond Grafting Turtle\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e58"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 278,
  "content": "                                         Figure 8.37. \n                                         Left: simple tile for a square. \n                                         Right: narrowed form of the same tile.\n\n                                         form is—surprise!—the same crease pattern as a Bird Base \n                                         (see Figure 8.37).\n                                             So, we could treat this tile as the narrow form of a square \n                                         tile, or we could decompose it into four of the triangular tiles \n                                         that we’ve already seen (in which case, we’d add a ﬁfth circle \n                                         to the center of the square, representing the ﬁfth accessible \n                                         ﬂap).\n                                             So, it appears that a given tile can have several different \n                                         crease patterns inside it with the same number and length of \n                                         ﬂaps; only the widths of the ﬂaps differ. The simplest tiles have \n                                         the widest ﬂaps. By sinking the tiles in various ways, we can \n                                         make the ﬂaps narrower; in fact, by sinking over and over, we \n                                         can make each of the ﬂaps arbitrarily thin.\n\n                                         8.6. Stick Figures and Tiles\n                                         At this point, it is helpful to introduce a pictorial notation for \n                                         the arrangement of ﬂaps in the folded form of a tile: the stick \n                                         ﬁgure. We represent each ﬂap in the folded form by a line seg-\n                                         ment whose length is equal to the length of the ﬂap, with line \n                                         segments joined to each other in the same way that the ﬂaps \n                                         are joined to each other.\n                                             If two circles touch within the tile, then their corresponding \n                                         ﬂaps touch, and we will represent that connection by drawing \n                                         the sticks as touching at their corresponding end. Thus, for \n                                         example, the folded form of a triangular tile—three ﬂaps—can \n                                         be represented schematically by three lines coming together \n                                         at a point.\n                                             Figure 8.38 illustrates this schematic form for two of the \n                                         triangle tiles. A triangular tile can be folded into a shape with \n                                         three ﬂaps; we will represent the tile by a three-branched stick \n                                         ﬁgure, in which the sticks are the same length as the ﬂaps in \n                                         the tile.\n                                             The stick ﬁgure can also be viewed as the limiting case as \n                                         the ﬂaps of the folded form are made narrower and narrower. \n\n     266\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e59"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 293,
  "content": "                                                    Folding Instructions\n\n\n                                       Pegasus\n\n\n                                                                                           281\n                                                        Chapter 8: FoldingChapter Instructions 8: Tiling\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e5a"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 287,
  "content": "            obvious from the folded form that the underlying base is the \n            same. But if you examine the pattern of ﬂaps—where are the \n            long ﬂaps, where are the short, how are they joined—you can \n            perceive the essential similarity. The same structural base as \n            was used in Shiva can also be used to realize a Hercules Beetle, \n            as shown in Figure 8.48.\n                One can also combine techniques: construct a base by \n            tiling, then split one or more ﬂaps using point-splitting. The \n            Praying Mantis shown in Figure 8.49 employs nearly the same \n            base as the Hercules Beetle, but splits the middle ﬂap into four \n            points to form antennae.\n\n            8.7. Dimensional Relationships Within Tiles\n            In any tile, every circle or river encounters two sides of the \n            tile; this establishes a relationship between the two sides. The \n            union of all such relationships can constrain the possible sizes \n            of circles and rivers within the tile. In a triangle tile composed \n            of three circles, it is clear from Figure 8.50 that each side of the \n            triangle has a length equal to the sum of the radii of the two \n            adjacent circles (which, you recall, are equal to the lengths of \n            their associated ﬂaps).\n\n\n                                        c      c\n                                Z\n                                                    Y\n\n                              a                     b\n\n                                                                        Figure 8.50. \n                                  a             b                       A triangle tile composed of three \n                                         X                              different circles.\n\n                It is clear from the ﬁgure that if the sides of the triangle \n            are X, Y, and Z and we are starting from ﬂaps of length a, b, \n            and c, then\n                                     X = a + b,                  (8–1)\n                 \n                                     Y = b +  c ,                                  (8–2)\n                 \n                                     Z = a + c .                                  (8–3)\n                 \n                We can also invert the relationship to ﬁnd the lengths of \n            ﬂaps that can be obtained from a given triangle: \n\n                                                                                                     275\n                                                                         Chapter 8: Tiling\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e5b"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 283,
  "content": "                                a\n\n                           b        c\n\n                                d                               a d\n                                                              b     c\n                                                                  e\n                                                             l\n               h                                k                 g\n                                                                 f\n                                e                                   k\n                                                             h  i j\n                           f         g                                  Figure 8.43. \n                                        j\n                        i                                               Left: the circle/river pattern \n                                                                        with all features labeled. \n                                                                        Right: the schematic stick ﬁgure, \n                                l                                       illustrating the lengths and \n                                                                        connections among ﬂaps.\n\n            the crease pattern, we label each circle and river with a letter \n            from a to l, as in Figure 8.43.\n                The four circles a–d at the top are four equal-length ﬂaps. \n            Since a touches b and c, its corresponding line must be joined \n            to lines b and c at the same point. Since b and c also touch \n            circle d, that means line segment d must also be connected at \n            the same point as well.\n                There is a subtlety here I don’t want to speed by; even \n            though circle d doesn’t touch circle a, since d touches b and b \n\n\n            Figure 8.44. \n            Left: the crease pattern ﬁlled with simple tiles. \n            Right: the same pattern ﬁlled with narrow tiles.\n\n                                                                                                     271\n                                                                         Chapter 8: Tiling\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e5c"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 297,
  "content": "              29. Fold the near flap   30. Fold the bottom                               32. Fold the white\n              back to the right.       corner up so that the                             flap down along the\n              Repeat behind.           crease lines up with an    31. Sink the corner on angle bisector.\n                                       existing edge and          the crease you just\n                                       unfold. Repeat behind.     made. Repeat behind.\n\n\n              33. Fold and unfold.      34. Unfold to step 32.    35. Reverse-fold in         36. Fold and\n                                                                  and out on the creases      unfold. Repeat\n                                                                  you just made.              behind.\n\n\n              37. Fold down along         38. Fold the white      39. Fold the white      40. Unfold to step\n              an angle bisector.          edge down along         edge back up to the     37.\n                                          the raw edge.           top.\n\n\n              41. Reverse-fold the               42. Fold one flap to the           43. Sink the corner.\n              top flap on the existing           left. Repeat behind.               Repeat behind.\n              crease.\n\n                                                                                                                 285\n                                                                       Folding Instructions:Chapter 8: Pegasus Tiling\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e5d"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 240,
  "content": "                                                                   0            25             53            78\n             21. If you have been drawing the reference lines      22. Form mountain folds where indicated.\n             rather than folding them, now is the time to start\n             folding. Pleat the top of the paper on the existing\n             creases.\n\n\n             23. Form valley folds where indicated.                 24. Make all the pleats together on the creases shown\n                                                                    and flatten the paper completely.\n\n\n                                                                                                                 229\n                                                           Folding Instructions:Chapter Western 7: Pattern Pond Grafting Turtle\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e5e"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 526,
  "content": "             11. Add some horizontal             12. Fold along the vertical          13. Add some horizontal\n             creases.                            valley folds.                        valley folds.\n\n\n     514\n                         Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e5f"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 532,
  "content": "                        27. Continue the stretch.                          28. Continue the stretch.\n\n\n                                                                                  26–29\n\n\n                        29. Continue the stretch.                          30. Repeat on the right.\n\n     520\n                         Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e60"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 254,
  "content": "                                             Yet more variety in added features comes when we \n                                         realize that the existing crease patterns are not indivisible; \n                                         we can cut them up and insert strip grafts throughout their \n                                         structure. Strip grafts create points and ﬂaps along edges just \n                                         as border grafts do, but they also create extra points in the \n                                         interior of the paper without diminishing the size of adjacent \n                                         ﬂaps. As an expansion of strip grafts, we can graft in pleats \n                                         to create extra edges running across a face, and weave cross-\n                                         ing groups of pleats to create scales, bristles, and other tex-\n                                         tural elements. Although they all start with an existing crease \n                                         pattern, strip and pleat grafts are much more versatile than \n                                         point-splitting and border grafts and come in many more varia-\n                                         tions. Strip and pleat grafting possess this great versatility \n                                         because they are based on dissected crease patterns, and there \n                                         are usually many different ways to dissect a given pattern.\n                                             Once we’ve taken the step to incorporate grafting into \n                                         dissected crease patterns, an enormously richer variety of ori-\n                                         gami structures becomes accessible. When grafting in strips of \n                                         paper, we can vary the width, length, direction, and location \n                                         of the strips; we can insert multiple strips; and we can create \n                                         branching networks of strips, all to place additional points and/\n                                         or textural elements into the basic design.\n                                             In the models to which we’ve applied grafting—the Song-\n                                         bird, the Lizard, the Turtle—our grafts have taken the form of \n                                         fairly narrow strips. These are still relatively small perturbations \n                                         to a preexisting model. The precursor to the songbird was still a \n                                         bird; the lizard with toes began life as a lizard without toes; and \n                                         the turtle with a patterned shell was still recognizably a turtle \n                                         when its shell was smooth. But grafts can be made much larger \n                                         and more complex and can be used to create new bases so dif-\n                                         ferent from their predecessors that they hardly seem related at \n                                         all. We will expand our palette of design techniques by exploring \n                                         further the concept of dissection and reassembly. Thus far, we \n                                         have treated bases and grafts as two distinctly different types of \n                                         objects; we start with a base, then we add a graft. In this chapter \n                                         we will learn to decompose both bases and grafts into the same \n                                         underlying structures, which can be reassembled in an inﬁnite \n                                         variety of ways. We will also learn to distill origami bases down \n                                         to simple stick ﬁgures; we will then use these stick ﬁgures as \n                                         tools for the design of new bases.\n\n                                         8.1. Uniaxial Bases\n                                         Let’s look at several of the bases that I’ve shown so far. First, \n                                         we have the Classic Bases: Kite, Fish, Bird and Frog Bases; \n                                         to these, we add two new bases, those used for the Lizard and \n                                         the Turtle. All six are shown in Figure 8.1.\n\n     242\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e61"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 268,
  "content": "                                                      misalignment\n\n\n            Figure 8.18. \n            Two tiles cannot be mated if \n            their circles do not line up.\n\n                                             At this point, you might wish to explore ﬁtting together \n                                         tiles in different ways and examining the resulting crease pat-\n                                         terns (and for a challenge, try folding the corresponding bases). \n                                         The circles serve two purposes. First, they create matching \n                                         rules that enforce foldability of the resulting crease patterns. If \n                                         you match up two tiles with misaligned circles, you will not, in \n                                         general, be able to collapse the crease pattern without adding \n                                         new creases. For example, the right triangle tile and the Lizard \n                                         tile cannot be mated because the circles don’t line up. If you \n                                         try to fold the shape in Figure 8.18, you cannot form either of \n                                         the two creases incident perpendicularly upon the mating line \n                                         without adding new creases inside the other tile.\n                                             Therefore it is absolutely necessary that all circles line up \n                                         with the circles of mating tiles along tile boundaries. This is a \n                                         substantial restriction on the ways that tiles can be assembled \n                                         into crease patterns.\n                                             On the other hand, however, there is often more than one \n                                         way that the circles can be drawn within a given tile. Let’s \n                                         look at the rectangular tile. It differs from the triangular and \n                                         Waterbomb tiles in two ways: \n\n                                             • A gap in the middle of the crease pattern sepa-\n                                             rates the upper pair of circles from the lower pair of \n                                             circles.\n\n                                             • A segment in the folded form separates the upper \n                                             pair of ﬂaps from the lower pair of ﬂaps.\n\n\n            Figure 8.19.                                              gap\n            Left: crease pattern for the \n            rectangular tile. \n            Right: folded form of the tile.\n\n     256\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e62"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 81,
  "content": "                                                             new\n                                                                                            new\n\n\n            Figure 4.16. \n            Left: a Bird Base. Middle: the crease pattern shifted toward a corner. \n            Right: the crease pattern shifted toward an edge.\n\n                Neither of the two variations is aesthetically pleasing; the \n            creases terminate in rather arbitrary locations, resulting in \n            several points with ragged edges and others with a parallel-\n            edged strip running along one side. These excess bits will usu-\n            ally detract from the model unless they can be incorporated \n            into the design—that is, used to create one or more additional \n            features of the model. That this incorporation can be done \n            successfully is illustrated by the Baby in Figure 4.17, which is \n            based on an offset Waterbomb Base, and which uses the extra \n            strip to realize the color-changed diaper. Can you identify the \n            creases of the Waterbomb Base in the crease pattern? It will \n            be a bit harder, because portions of the base creases have \n            changed direction or been smoothed out in the course of fold-\n            ing the model, so they are not as evident. Nevertheless, you \n            should be able to pick out the creases of a Waterbomb Base \n            shifted toward an edge.\n                It is also possible to offset the central crease cluster while \n            preserving the points where the creases all come together at \n            the corners of the square. This eliminates the ragged points \n            of the previous offsetting technique, but now the edges of the \n            four points are no longer aligned. That may or may not be a \n            drawback; two of the points are now longer than the other \n            two, making the base perhaps better suited to other subjects. \n            Such a base is said to be a distorted base.\n\n                                                                                                      69\n                                                                Chapter 4: Traditional Bases\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e63"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 95,
  "content": "                                                                                  1/8\n\n\n               7. Turn the paper over from     8. Fold a Preliminary Fold. Rotate     9. Squash-fold the\n               top to bottom.                  the paper 1/8 turn clockwise.          near right flap.\n\n\n              10. Petal-fold the edge.          11. Fold the flap down.              12. Sink the point up\n                                                                                     inside the model.\n\n\n                                                    9–13                             9–13             9–13\n\n\n                  13. Fold one layer to             14. Repeat steps 9–13             15. Repeat steps 9–13\n                  the right.                        on the left.                      on both sides behind.\n\n\n                   16. Sink 1/3 of                  17. Fold one layer to the   18. Fold the near layer of the left edge\n                   the top point.                   right in front and one to   to the center line and unfold. Do the\n                                                    the left in back.           same on the right, but don’t make the\n                                                                                crease sharp below the horizontal edge.\n\n                                                                                                                  83\n                                                   Folding Instructions: Ruby-ThroatedChapter 4: Traditional Hummingbird Bases\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e64"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 724,
  "content": "                                         different aspect ratio to the embedded triangle. Perhaps more \n                                         interesting, other angles allow crease patterns with different \n                                         symmetries. You might ﬁnd it interesting to explore the pos-\n                                         sibilities of some of these other angles; an apex angle of 60°, in \n                                         particular, offers several fruitful possibilities.\n\n                                         15.4. Mixing and Matching\n                                         Throughout this book, I have chosen examples that were pure \n                                         illustrations of the various mathematical design techniques. \n                                         The real world of design, however, is rarely so pure. More of-\n                                         ten than not, an origami design is best served by employing a \n                                         mixture of techniques: box pleating here, circle packing there, \n                                         grafting, molecules, point-splitting, pleated textures—and oth-\n                                         ers beyond the ones shown here.\n                                             The various design techniques are, at the end, tools; and \n                                         just as a painter may use an assortment of brushes and pig-\n                                         ments to realize his design, the origami artist can employ a \n                                         variety of design techniques within the same model to realize \n                                         a single uniﬁed vision of the subject.\n                                             This last design brings together several of the design \n                                         techniques I have shown. As in the Rabbit and Mouse in this \n                                         chapter, I use the grafted Kite Base to embed a large triangle \n                                         into the crease pattern, from which the massive hindquarters \n                                         come; I employ point splitting to turn the large middle ﬂap into \n\n\n                                         Figure 15.14. \n                                         Crease pattern, base, and folded model of the African Elephant.\n\n     712\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e65"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 42,
  "content": "            Figure 2.33. \n            Petal-folding an edge.\n\n                                             Petal folds, squash folds, reverse folds, and rabbit ears are \n                                         all closely related to each other. It is often possible to reach \n                                         the same end by more than one means. For example, the petal \n                                         fold shown in Figure 2.33 can also be realized by making two \n                                         reverse folds and a valley fold.\n\n\n            1. Fold the sides in to lie 2. Reverse-fold the edges 3. Lift up the frontmost flap. 4. Finished petal fold.\n            along the center line and inside using the creases\n            unfold.               you just made.\n\n            Figure 2.34. \n            An alternative way to make a \n            petal fold using reverse folds.\n\n                                             And if you were to cut apart the finished petal fold \n                                         along the center line (cutting both slightly left and right of \n                                         the center line to be sure to sever all layers that touch the \n                                         center line), the petal-folded ﬂap would turn out to be two rab-\n                                         bit ears!\n                                             Thus, the various combination folds are not distinct \n                                         entities so much as convenient ways of getting two or four \n                                         creases to come together at once. What is important in origami \n                                         design is the underlying structure, not the speciﬁc sequence of \n                                         steps one takes to get to the ﬁnished model (although it must \n                                         be acknowledged that once the design is ﬁxed, a sequence com-\n                                         posed of simple combinations that ﬂows from one to the next is \n                                         far more aesthetically pleasing than a few precreases followed \n                                         by, “Make these 150 creases come together at once”).\n\n      30\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e66"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 56,
  "content": "                                         will break up the lines of the model. In short, the less efﬁcient \n                                         a model is, the poorer its visual appeal. Thus, efﬁciency is an \n                                         aesthetic goal as well as a mathematical goal. For a base with \n                                         a ﬁxed number of ﬂaps, the most efﬁcient base is that base in \n                                         which the ﬂaps are as large as possible.\n                                             The tools of origami design cannot (yet) directly address \n                                         elegance, but they can address its close relative, efﬁciency, \n                                         by quantifying what is possible and impossible and providing \n                                         direction for maximally efﬁcient structures. To wield the tools \n                                         of origami design, one must have some tools to start with. \n                                         The way to build a set of tools is to examine some examples of \n                                         design and deconstruct the model, identifying and isolating \n                                         speciﬁc techniques. To get started and to illustrate some basic \n                                         principles of origami design, let’s add three more elephants to \n                                         the roster.\n\n                                         3.1. Elephant Design 1\n                                         The ﬁrst design shown in Figure 3.3 is for an Elephant’s Head. \n                                         It is very simple and takes only ﬁve creases.\n                                             This is very simple—it’s perhaps one step up from the \n                                         One-Crease Elephant, although, you might note, it took ﬁve \n                                         steps. Can you devise an elephant using exactly two creases? \n                                         Exactly three?\n\n                                         3.2. Elephant Design 2\n                                         On the scale of origami complexity, both the One-Crease \n                                         Elephant and the Elephant’s Head fall into the “simple” \n                                         category. But as we add more features to a model, it almost \n                                         invariably increases in complexity. As an illustration, let’s take \n                                         the same basic design as the Elephant’s Head and add a pair \n                                         of tusks to it.\n                                             The amount of folding increased substantially, just to cre-\n                                         ate two tiny points for tusks. But I also added a few steps to give \n                                         deﬁnition to the ears (step 9). Why? Why not just leave the face \n                                         a ﬂat surface as we did in the previous model? Two reasons. In \n                                         the ﬁrst Elephant’s Head, the ears came almost for free—there \n                                         were two ﬂaps (the corners of the square) available to work with. \n                                         But in this design, we needed to create side ﬂaps (in steps 8 \n                                         and 9) to deﬁne the ears, which required more folding.\n                                             There’s a second reason, however, which is a bit more \n                                         subtle. There is an aesthetic balance that needs to be main-\n                                         tained across an origami design. The tusks introduce some \n                                         small, ﬁne features into the model. The contrast between \n                                         those ﬁne features and the broad, ﬂat, featureless expanse of \n\n      44\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e67"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 730,
  "content": "            African Elephant\n\n\n            1. Begin with a square, colored side 2. Fold the top corner to the bottom 3. Make a fold that connects the lower\n            up. Fold and unfold along one and unfold, making a small pinch right corner with the pinch you just\n            diagonal.                     along the left side.           made; make the crease sharp where\n                                                                         it crosses the diagonal and unfold.\n\n\n     718\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e68"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 718,
  "content": "                                         of the animal. The leg ﬂaps extend downward from the axis, \n                                         as in Figure 15.7. This means that the legs need to traverse \n                                         the entire height of the body before they extend beyond it, \n                                         and the portion of the ﬂap that extends beyond the body is \n                                         shorter than the original ﬂap. In effect, a portion of the hard-\n                                         won ﬂap length gets used up inside the body, where it serves \n                                         no useful purpose.\n\n\n                                                                            1/4\n\n\n            1. Start with a Frog Base. 2. Reverse-fold the  3. Mountain-fold the 4. Finished basic animal\n            Reverse-fold the near pair remaining two flaps out to model in half and rotate form. Note how much of\n            of points up and outward. the sides.            1/4 turn clockwise.  the leg flap is lost inside\n                                                                                 the model.\n                                         Figure 15.7. \n                                         Folding sequence for a basic animal from a Frog Base. Since the \n                                         axis runs down the spine, portions of the leg length are lost inside \n                                         the model.\n\n                                             The wider the body region, the greater the fraction of \n                                         the leg ﬂaps that gets consumed. Obviously, we could reduce \n                                         the waste by narrowing the body, but if we need a particu-\n                                         lar body width, that option is not available. To compensate, \n                                         the leg flaps must be lengthened in the original design, \n                                         which ends up reducing the relative size of everything else, \n                                         and making the overall model less efﬁcient than it needs  \n                                         to be.\n                                             Ideally, the leg ﬂaps wouldn’t emanate from the spine of \n                                         the subject. This goal can be realized in several ways, by reor-\n                                         ganizing the model so that the axis is no longer along the spine, \n                                         or by moving away from uniaxial bases entirely. Several artists, \n                                         notably John Montroll, have over the past few decades devised \n                                         numerous clever alternatives to uniaxial bases that sidestep \n                                         this problem with remarkable efﬁciency. One approach used \n                                         by many artists is a natural outgrowth of two of the concepts I \n                                         have described in this book, grafting and uniaxial bases. As we \n                                         did with the Butterﬂy example, we combine portions of uniaxial \n\n     706\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e69"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 693,
  "content": "            a simple route, and in general, there may be no easy way to \n            get to the destination: no linear sequence of small, bite-sized \n            folds.\n                We can see this phenomenon in the circuitous twists and \n            turns of axis-parallel contours and creases. If the paper were \n            truly rigid, then any given axis-parallel crease would need to \n            be folded uniformly along its length, all at once. And this is \n            almost never possible without some distortion of the rest of \n            the paper. In such patterns, all of the fold angles are coupled \n            to one another in such a complex way that they cannot be \n            separated; no one fold can be formed without affecting the \n            others. The design cannot be reduced to a linear sequence; it \n            exhibits irreducible complexity (in the origami sense).\n                So, how do you fold a design, given its crease pattern? \n            You must bring most or all of the creases together at once, \n            activating tens, or hundreds, of creases together. The key to \n            success to such a complex endeavor is to recognize the hier-\n            archical structure of the crease pattern and the additional \n            information that attaches to each crease: its type and eleva-\n            tion. Individual creases are not just “mountain” or “valley”; \n            they have an identity that tells you where they must end up \n            in the ﬁnished model. Thus, you know that all of the axial \n            creases are going to end up collinear with one another along \n            the axis; all of the axis+1 creases will be aligned with one an-\n            other on one side or the other of the axis. The hinge creases \n            are perpendicular to the axis in the folded form; the ridge \n            creases run along diagonals. Using this information, you can \n            keep the “big picture” of the base in mind as you collapse the \n            crease pattern into its ﬁnished form, guiding each crease to-\n            ward its end location, and discovering a valid layer ordering \n            (one hopes) as the base approaches ﬂatness.\n                Most crease patterns, of course, do not tell you this ad-\n            ditional structural information. They only identify the crease \n            as mountain or valley (and some don’t even do that much). \n            When presented with a crease pattern, you can give yourself \n            a leg up by ﬁrst examining it to see if there is some high-level \n            structure. Is it uniaxial, or are regions of it uniaxial? If you \n            can identify uniaxial regions, then you can trace the contours \n            and identify hinge polygons, ridge creases, and axis-parallel \n            contours. Armed with that knowledge, you can then more eas-\n            ily perform the collapse, because you will now have a map that \n            tells you at least in general terms where you are headed.\n                For the models presented in this chapter, there are no \n            simple, linear folding sequences. There are only crease pat-\n            terns and collapses. But to give you a little extra help, I have \n            used a dual coloring scheme for the following crease patterns to \n\n                                                                                                     681\n                                                               Chapter 14: Polygon Packing \n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e6a"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 687,
  "content": "            can be constructed geometrically or computed, and the gusset \n            molecule for Figure 14.54 is shown in Figure 14.55. And yes, \n            indeed, as you can see: once we construct the gusset molecule, \n            all of the contours connect properly to their counterparts on \n            the other sides.\n\n\n                                                                       Figure 14.55. \n                                                                       Filling in the hinge polygon with \n                                                                       the appropriate gusset molecule \n                                                                       allows all of the contours to line \n                                                                       up with their counterparts on \n                                                                       other sides of the hinge polygon.\n\n                So this tells us that we can, in fact, use any quadrilateral \n            whatsoever as a hinge polygon; if it has integer sides, we can \n            ﬁnd the straight skeleton to tell us approximately how the \n            contours should line up with one another, then use the gusset \n            molecule to perturb the ridge creases in such a way that they \n            line up exactly the way we want.\n                And did we have to give up anything to get this ﬂexibil-\n            ity? Yes: a little bit of length. In theory, the ﬂap made from \n            this polygon should be as long as the radius of its maximum \n            inscribed circle (shown in Figure 14.55). If, however, you \n            measure the length of the resulting ﬂap (it is given by the \n            length of the longest axial+1 contour in the ﬁgure), you will \n            see that we have given up a little bit of length. In essence, we \n            have traded some of that length for uniformity of the crease \n            pattern. In many cases, it is an acceptable tradeoff.\n                Wasn’t it a nice coincidence that the gusset molecule, \n            which we use to ﬁnd ridge creases inside active polygons, \n            works as well to ﬁnd ridge creases inside hinge polygons? It is \n            indeed nice—but it’s not just a coincidence. In fact, there is a \n            deep duality between the axial polygons of tree theory and the \n            hinge polygons of polygon packing, and the same algorithms \n            work for both in many situations. So just as the gusset mol-\n            ecule works to bring points along the edges into alignment for \n            both axial quadrilaterals and hinge quadrilaterals, for hinge \n            polygons with larger numbers of sides, the universal molecule \n            algorithm will work as well, in exactly the same way.\n\n                                                                                                     675\n                                                               Chapter 14: Polygon Packing \n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e6b"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 650,
  "content": "                                         centers for the central circle. If we draw a circle around the \n                                         lower circle whose radius is the sum of the radii of both circles, \n                                         then any grid point lying on or outside of this larger circle would \n                                         be acceptable. This larger circle deﬁnes a “zone of acceptability” \n                                         for the center of the second circle; each grid point within this \n                                         zone (on or outside of the larger circle) could be a circle center. \n                                         These points are shown in green in Figure 14.14.\n\n\n                                         potentialpotential\n                                         closercloser\n                                         circlecircle\n                                         centerscenters\n\n            Figure 14.14. \n            Circle centers for overlapping zonezone of of\n            squares.                     acceptabilityacceptability\n\n                                             Now, clearly, if we’re violating the rules of spacing for box \n                                         pleating, something has to be different in the crease pattern, \n                                         and as we will see, we will lose the property of all creases run-\n                                         ning along gridlines or at multiples of 45°. But we can still ﬁnd \n                                         creases that give distinct ﬂaps of the right shape. The two circles \n                                         lie at diagonally opposite corners of a rectangle, and we can use \n                                         the gusset quad molecule to ﬁnd the ridge creases that go into \n                                         this rectangle. Those creases are shown in Figure 14.15.\n                                             So we can still generate creases that deﬁne the two poly-\n                                         gons around each circle, and while there is a bit of irregular-\n                                         ity in the crease angles, observe that several of the vertices of \n                                         the new creases still fall on grid points. In fact, the only two \n                                         vertices that don’t necessarily fall on grid points are the two \n                                         extreme corners of the gusset—and even these lie on diagonal \n                                         lines. We can solve analytically for the positions of these two \n                                         vertices, given the other dimensions of the surrounding ﬁgures, \n                                         as shown in Figure 14.16.\n                                             The pattern contains two recognizable rectangles; the \n\n                                         outer rectangle (with sides s1 and s2) is the bounding box of the \n                                         two circle centers, and this rectangle has its corners on the grid. \n\n     638\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e6c"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 136,
  "content": "                4. Petal-fold the front   5. Fold one flap       6. Fold the upper left     7. Fold one flap up to\n                and back flaps to form    down in front          edge down to the           the right so that the\n                a Bird Base.              and one behind.        horizontal crease and      right edge is aligned\n                                                                 unfold. Repeat with        with the layer\n                                                                 the upper right edge.      underneath.\n\n\n                  8. Pull out some     9. Squash-fold the corner, 10. Pull out some loose      11. Open out\n                  loose paper as far   swinging the white flap paper on the right as in        the flap and\n                  as possible.         over to the left along a step 8.                        flatten.\n                                       vertical valley fold.\n\n\n                                                                                                         7–14\n\n\n                 12. Mountain-fold the  13. Using the existing  14. Reverse-fold the          15. Repeat steps\n                 edge underneath.       creases, bring the two  edge inside.                  7–14 behind.\n                                        bottom corners together\n                                        while buckling the\n                                        middle upward.\n\n     124\n                         Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e6d"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 13,
  "content": "./origami_dataset_dev/Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li/page013_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e6e"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 122,
  "content": "                               1                1                  1                   1     2\n                                                                         2\n                                                                                                 3\n                                                     2\n                                                                           3\n                                                                                                 4\n\n\n                                         Figure 5.19. \n                                         Split points with the point tips identiﬁed.\n\n                                         but the presence of a gap between them. If we examine the \n                                         crease patterns for the two-, three-, and four-point patterns, \n                                         we see a common wedge of creases that appears in every pat-\n                                         tern. Figure 5.20 shows one instance shaded in each of the \n                                         three patterns.\n\n                                              1                   1                    1     2\n                                                                        2\n                                                                                                 3\n                                                    2\n                                                                           3\n                                                                                                 4\n\n\n                                         Figure 5.20. \n                                             The three patterns with the common wedge of creases.\n\n                                             If we cut out just this wedge from any one of the patterns \n                                         and fold it up, we get the structure shown in Figure 5.21.\n\n\n            Figure 5.21. \n            Left: the crease pattern on the \n            wedge. \n            Right: the folded structure.\n\n                                             Two points have one copy of this wedge, three points have \n                                         two, four points have three. Crease patterns with progres-\n                                         sively larger numbers of points include progressively larger \n                                         numbers of copies of a basic element. This is not particularly \n                                         surprising. What is interesting, and perhaps just a bit unex-\n                                         pected, is that the basic unit of replication is not a single ﬂap; \n\n     110\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e6f"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 644,
  "content": "                                         new, but once we recognize the function of a structure, we can \n                                         then use, adapt, modify, and improve it, and make it one more \n                                         tool in our designer’s arsenal.\n\n                                         14.2. Layer Management\n                                         Level shifting allows one to selectively widen (or narrow) ﬂaps. \n                                         That allows one to, for example, make a body wider than the \n                                         legs, or distribute layers across the width of a ﬂap, reducing (or \n                                         at least, balancing) the overall thickness of the ﬂap. This is a \n                                         useful capability. When one is designing a complex base, even \n                                         with thin paper, the paper thickness plays a non-negligible \n                                         role in the ﬁnished ﬁgure. When used well, it can add needed \n                                         three-dimensionality to the fold. It can also get in the way, \n                                         though, driving upward the thickness of ﬂaps that need to be \n                                         thin (legs, antennae), or simply unbalancing thickness. If one \n                                         folds an insect with six legs so that four of the legs come from \n                                         the corners and the other two come from the edges, then those \n                                         edge ﬂaps will have roughly twice as many layers as the corner \n                                         ﬂaps. This can produce a notable imbalance in the apparent \n                                         thickness of the legs.\n                                             Paradoxically, the solution to such an imbalance, with \n                                         some legs too thick, is to add layers to the legs that are too \n                                         thin. If the thicknesses are balanced, it is much less noticeable. \n                                         This selective addition of layers to ﬂaps can be accomplished \n                                         by enlarging the corresponding hinge polygons.\n                                             Fine-grained layer control is an ability that polygon pack-\n                                         ing offers that is not readily available in circle/river packing. \n                                         In the latter, the individual ﬂap polygons are deﬁned late in \n                                         the design process, and you “get what you get.” In polygon \n                                         packing, we can tinker with the layers in individual polygons, \n                                         giving much more control over the thickness of the correspond-\n                                         ing ﬂaps.\n                                             The way we add layers to ﬂaps in uniaxial box pleating \n                                         is simple: we make the ﬂap polygon larger than its minimum \n                                         size. Since all of the paper within the polygon is going to go \n                                         into the ﬂap, making the polygon larger while maintaining the \n                                         length and width of the ﬂap insures that the average amount \n                                         of paper in the ﬂap increases.\n                                             All leaf ﬂaps (those with one free end) taper in their \n                                         number of layers, with the fewest layers near the tip and the \n                                         most near the base, where it joins the rest of the model. This \n                                         relationship is evident in circle-packed bases, where ﬂaps tend \n                                         to be triangular; it is less evident, but no less true, in uniaxial \n                                         box-pleated bases. The number of layers at the base tends to \n                                         increase linearly with distance from the tip, and is, for evenly \n\n     632\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e70"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 678,
  "content": "            Figure 14.44. \n            Left: ridge contours added. \n            Right: axial contours added.\n\n\n                                         respective hinge contours perpendicularly. These contours are \n                                         forced. One can also add additional axial contours in addition to \n                                         the forced contours, in order to establish a constant contour spac-\n                                         ing; this will result in a constant width for all of the ﬂaps and so a \n                                         relatively uniform distribution of layers. The complete set of axial \n                                         contours is shown in the right subﬁgure of Figure 14.44.\n                                             Next come the axial+1 contours, which we add, naturally, \n                                         halfway between each of the axial contours, as shown in the \n                                         left subﬁgure of Figure 14.45. \n                                             This completes the basic crease pattern. This will give a \n                                         base whose ﬂaps are all the same width, one “width” unit—\n                                         which, recall, is only 58% of a “length” unit in hex pleating. All \n                                         of the ﬂaps, therefore, will be fairly narrow. The “body” ﬂaps \n                                         get opened down the middle, along the axial line of symmetry, \n                                         and so will be twice as wide as the individual leg and antennae \n                                         ﬂaps, but this is still too narrow to make a respectable body. \n                                         So we’ll want to widen the ﬂaps that give rise to thorax and \n                                         abdomen, and this we can do by inserting level shifters at the \n                                         appropriate place, as shown on the right in Figure 14.45. This, \n                                         then, completes the contour map of the base, which is shown \n                                         along with the folded model in Figure 14.46.\n                                             Not too surprisingly, it looks a lot like the Scarab Beetle \n                                         of Figure 14.27, but with a slightly narrower body relative to \n\n\n     666\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e71"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 491,
  "content": "                           1. Joining two boxes.                2. Joined.\n\n\n                                      3. The crease pattern for the double-box.\n\n            Figure 12.19. \n            Joining two boxes, and the resulting crease pattern.\n\n                Two or three of these boxes can be joined at their ends. \n            They can be lengthened, made taller, and butt-joined, and as \n            the collection of boxes grows, the rectangle from which the \n            complete shape is folded grows correspondingly.\n                Another way of thinking of this box is as a tube that is \n            squeezed at the ends, as shown in Figure 12.21.\n                So now, we have a general-purpose way of making boxes: \n            long boxes, wide boxes, open boxes, closed boxes, and chains \n            of boxes. Boxes of all shapes and sizes. But as a starting point \n            for origami, boxes are somewhat limited: you can only use \n            them to make things that are, well, box-like. Fortunately, \n            what could be more box-like than—a boxcar? Or, in the case \n            of Mooser’s Train, a train of boxcars! It’s not hard to see how \n            one progresses from a chain of boxes to a train of boxcars. \n            And while Mooser’s Train isn’t built from precisely this type \n            of box, the main structural element, shown in Figure 12.22, \n            is a small modiﬁcation of it.\n\n                                                                                                     479\n                                                                  Chapter 12: Box Pleating\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e72"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 485,
  "content": "                1. To make the box longer, stretch                  2. Like this.\n                the paper apart.\n\n                Figure 12.12. \n                Stretching the box to make it longer.\n\n\n                1. To make the box longer, cut it     2. Spread the halves apart …           3. And insert a section to lengthen\n                in half …                                                                    the box.\n\n\n                      4. Join the cut edges …                     5. And voila! A longer box.\n\n                Figure 12.13. \n                Lengthening the box by cutting and inserting more paper.\n\n                                                                                                                                  473\n                                                                                      Chapter 12: Box Pleating\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e73"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 334,
  "content": "                                         9.10. Bases from Equal Circle Packings\n                                         The ﬁrst unusual structure in this group is the N = 3 case. I \n                                         suspect it is undiscovered because this pattern is not similar to \n                                         any well-known base found by angle bisection. Its symmetry is \n                                         based on the uncommon 30°–60°–90° right triangle rather than \n                                         the more familiar 22.5° angle that you ﬁnd in the four Classic \n                                         Bases. Also, two of the three ﬂaps lie on an edge, rather than \n                                         at the corner; since edge ﬂaps tend to be thicker, most early \n                                         origami designers avoided using edge ﬂaps unless absolutely \n                                         necessary. I am not aware of any origami model that uses this \n                                         pattern in a square to realize a subject with three major ﬂaps, \n                                         despite there being a number of such subjects around, e.g., \n                                         long-legged birds. (There are, not surprisingly, models made \n                                         from an equilateral triangle that utilize the creases within \n                                         the triangle.) An example of a model of my own that uses this \n                                         symmetry is shown in Figure 9.31, with folding instructions at \n                                         the end of the chapter.\n\n\n                                         Figure 9.31. \n                                         Crease pattern, base, and folded model of the Emu based on the \n                                         N = 3 circle packing.\n\n                                             Notice that three of the four corners of the square go un-\n                                         used in this base; I suspect that the proﬂigate waste of such a \n                                         large fraction of the paper has deterred folders from making use \n                                         of this base, and indeed, it is difﬁcult to resist the temptation to \n                                         use some of the extra paper for wings, feathers, color-changes, \n\n     322\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e74"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 452,
  "content": "               22. Reverse-fold the corner  23. Reverse-fold the     24. Fold one flap up.  25. Squash-fold the\n               on the existing crease.      corners on both sides.                          edge.\n\n\n             26. Fold the raw edge      27. Bring a flap to the front. 28. Fold one flap down. 29. Fold the next flap\n             to the center line.                                                              down.\n\n\n                                        24–30\n\n\n             30. Swing one flap         31. Repeat steps 24–30    32. Fold two points to 33. Fold the tip back to the\n             to the right.              on the left.              two lines.             right along a crease aligned\n                                                                                         with the center line.\n\n                                                                                                                 441\n                                                                 Folding Instructions:Chapter 11: Alamo Tree  StallionTheory\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e75"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 446,
  "content": "                                         Figure 11.37. \n                                         Crease pattern, base, and folded model of the Alamo Stallion.\n\n                                         creases of the adjacent triangles; among other things, this \n                                         choice forces equality between the length of the tail and the \n                                         length of the hind legs. You can see the effect of this choice on \n                                         the ease of folding; the full folding sequence for this model is \n                                         given at the end of the chapter.\n\n\n                                         Figure 11.38. \n                                         Crease pattern, base, and folded model of a Roosevelt Elk.\n\n     434\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e76"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 320,
  "content": "                                         9.7. Selective Inflation\n                                         We can achieve a high packing density by making use of some \n                                         variability in the design process. In most origami designs, the \n                                         relative lengths of the ﬂaps are not all absolutely ﬁxed. After \n                                         all, if a point is too long, it can be shortened by reversing or \n                                         sinking its tip. Conversely, if it turns out to be too short, that \n                                         deﬁciency can sometimes be hidden by how the shaping folds \n                                         are performed, for example, in a leg, by reducing or eliminating \n                                         angular bends. So if we allow some variability in the lengths \n                                         of ﬂaps, we can adjust the sizes of the circles to obtain more \n                                         points of contact between adjacent circles.\n                                             It’s rarely desirable to allow all of the circles in a pattern to \n                                         vary independently. At the very least, ﬂaps that come in sym-\n                                         metric pairs—paired legs, paired wings, perhaps front-and-rear \n                                         legs—should maintain the same relative sizes. The optimum is to \n                                         be found not in ﬁxing all ﬂaps to have the same relative length, \n                                         nor in allowing each ﬂap to vary independently, but somewhere \n                                         in between. To achieve this middle ground, we divide the ﬂaps \n                                         up into groups that are subject to similar scaling.\n                                             As a practical matter, it’s usually the longest ﬂaps—which \n                                         have the largest circles—that dominate the structure of a crease \n                                         pattern. Thus, one would typically start designing a crease pat-\n                                         tern by putting the largest circles in the square and inﬂating \n                                         them until they can no longer grow. One then adds the next-\n                                         smallest set of circles in the spaces of the larger circles until \n                                         they, too, become ﬁxed; and then add the next set, and so on. \n                                         I call this process of ﬁxation crystallization of the circle pack-\n                                         ing, because the process resembles the crystallization of atoms \n                                         when a liquid is cooled below freezing. And just as the atoms \n                                         of a crystallized liquid form a highly symmetric arrangement, \n                                         quite often the crystallized circle packings of origami, too, form \n                                         structures of great regularity and symmetry.\n                                             An example will make the process clear. Let’s continue \n                                         with the tarantula we introduced earlier. As I mentioned, ta-\n                                         rantulas have in addition to their eight legs an additional pair \n                                         of appendages on the head called pedipalps which resemble a \n                                         tenth pair of legs (although they are typically only about half \n                                         the length of the legs). Thus, we require a base with eight long \n                                         ﬂaps for legs and two somewhat shorter ﬂaps for the pedipalps. \n                                         Tarantulas also have a fairly bulbous abdomen, which we will \n                                         represent by yet another ﬂap, and a cephalothorax (which \n                                         contains the head and body), which will also require a ﬂap. \n                                         Thus, our desired tarantula base would have a total of twelve \n                                         ﬂaps. We could use the twelve-equal-circle packing shown in \n                                         Figure 9.16, but we can construct a more elegant and efﬁcient \n\n     308\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e77"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 308,
  "content": "                                         single ﬂap. If two circles overlapped, the paper shared between \n                                         the circles would be included in each of the two different ﬂaps, \n                                         which is obviously impossible. Thus, we can generalize: \n\n                                             In any valid circle pattern corresponding to an origami \n                                             base, the circles corresponding to two distinct ﬂaps \n                                             may not overlap.\n\n                                             This condition must hold for any origami base—not just \n                                         for the Classic Bases and not just for tiled bases. No matter \n                                         how many ﬂaps the base may have, the circles in the circle pat-\n                                         tern for the base cannot overlap. Although this property seems \n                                         pretty innocuous, it is in fact both restrictive and useful. Put \n                                         one way, it is an interesting property of existing bases: Unfold \n                                         any origami base and draw a circle for each ﬂap of the base, \n                                         each circle centered on the point that maps to the tip of the \n                                         ﬂap. No two circles will overlap. This relationship can become \n                                         a useful tool for origami design, for the converse is also true: If \n                                         you draw N nonoverlapping circles on a square, it is guaranteed \n                                         that the square can be folded into a base with N ﬂaps whose \n                                         tips come from the centers of the circles.\n                                             If you have a pattern of N circles on a square, it’s quite \n                                         evident that it’s necessary that they not overlap to fold into a \n                                         base with N ﬂaps. It’s not at all obvious that this condition is \n                                         sufﬁcient; but it is, and we will see why in later chapters. This \n                                         is an incredibly powerful result. No matter how many ﬂaps you \n                                         want to achieve in your base, all you need to do is draw a set of \n                                         nonoverlapping circles, and the centers of the circles map out \n                                         the tips of each and every ﬂap in the base.\n                                             Using this fact, we can replace a somewhat abstract prob-\n                                         lem (design an origami base with N ﬂaps of a given length) by \n                                         a simpler, geometric, more easily visualized and more easily \n                                         solved problem (draw N nonoverlapping circles whose centers \n                                         lie inside a square). By representing each ﬂap in the model by \n                                         a circle and placing all of the circles on the square, we ensure \n                                         that we have allocated sufﬁcient paper to construct each ﬂap. \n                                         The problem of placing circles so that they don’t overlap re-\n                                         sembles the packing of cylindrical cans into a box; we call such \n                                         a pattern a circle packing.\n                                             The circles need not be the same size. If we use different-\n                                         sized circles, we’ll get different-length ﬂaps (recall that the length \n                                         of the resulting ﬂap is the radius of the corresponding circle). So \n                                         merely by shufﬂing circles around on a square, you can construct \n                                         an arrangement of points that can be folded into a base with the \n                                         same number of ﬂaps, no matter how complex. For that matter, \n                                         by choosing different arrangements of circles, you can devise \n\n     296\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e78"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 730,
  "content": "./origami_dataset_dev/Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li/page730_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e79"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 309,
  "content": "            many different folding sequences giving many different bases, \n            even though they have the same number of ﬂaps.\n                While such a circle pattern is guaranteed to be foldable into \n            a base, a guarantee is not the same as a blueprint. But here is \n            where we can apply the tiles from the previous chapter. If the \n            circle pattern can be cut into tiles so that the circles within \n            each tile match up with known tiles, then we can assemble the \n            complete crease pattern from these same tiles.\n\n            9.3. Connections to Tiles\n            Consider, for the moment, those tiles we have seen that con-\n            tain only circles (no rivers). They are of two types: triangles \n            and square (the Waterbomb Base tile). In both types of tile, \n            the inscribed circles touched each other along the tile edges, \n            which, you’ll recall, were axial creases. In fact, the only places \n            that circles touched each other were along axial creases. This is \n            more than coincidence; it can be shown (and we will do so later) \n            that there exist axial creases in any circle packing wherever \n            any two circles touch. The newly created axial creases divide \n            the square into axial polygons; if we are fortunate enough that \n            the axial polygons are recognizable as known tiles, we can ﬁll \n            them in with the creases associated with each tile and use the \n            resulting creases to fold the shape ﬂat.\n                Thus, the six simple bases we used to illustrate tiling could \n            have been derived directly from circle packings based on their \n            desired number of ﬂaps. We represent each desired ﬂap by a \n            circle; pack the circles into the square, and then construct axial \n            creases that outline the tiles.\n                The circle diagrams also allow us to address the problem \n            of folding efﬁciency. By representing each ﬂap of a model by the \n            appropriately sized circle and drawing the circles on a square, \n            you can easily ﬁnd the arrangement of points on the square \n            that gives the most efﬁcient base containing those ﬂaps and, \n            as often as not, it will be an elegant base as well.\n                And since the length of a ﬂap is equal to the radius of \n            the corresponding circle, if we design the base by laying out \n            points on a square and represent each ﬂap by a circle, the most \n            efﬁcient base will come from that layout in which the circles \n            representing the ﬂaps are as large as possible. In accordance \n            with what we’ve shown above, the circles are to be placed ac-\n            cording to the following rules: \n\n                • Each ﬂap in the model is represented by a circle.\n\n                • The radius of each circle is equal to the length of \n                the corresponding ﬂap.\n\n                                                                                                     297\n                                                                  Chapter 9: Circle Packing\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e7a"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 447,
  "content": "                A signiﬁcant drawback of computed crease patterns is that \n            it can be quite difﬁcult to construct a linear folding sequence. \n            In fact, not only is it hard to break the base down into a series \n            of steps; it can be difﬁcult simply to locate all of the major \n            creases! This is especially the case for highly branched patterns \n            whose ﬂaps are chosen to be somewhat arbitrary lengths (e.g., \n            to match the dimensions of a particular subject).\n                An example of the latter situation is shown in Figure 11.38. \n            This juvenile Roosevelt Elk has a fairly complex branching pat-\n            tern in its antlers, and its creases fall on no particular grid. As \n            you will see in its folding instructions at the end of the chapter, \n            your best bet to ﬁnd reference points for the folds of the base \n            is to simply measure and mark.\n\n            11.10. Comments\n            Tree theory is in some ways the culmination of all of the differ-\n            ent techniques for constructing uniaxial bases. Uniaxial bases \n            are wonderful things, but they are by no means all of origami. \n            While insects, arthropods, and other many-legged creatures \n            can often be successfully addressed with a uniaxial base, there \n            are many origami subjects for which the many narrow ﬂaps of \n            a uniaxial base are not particularly suitable. Furthermore, the \n            great majority of origami ﬁgures designed over the years were \n            not constructed from uniaxial bases, and many designers—most \n            notably John Montroll—have developed other approaches to \n            design that are clearly not uniaxial.\n                However, uniaxial bases are amazingly versatile, and be-\n            cause they can be constructed systematically, they can be used \n            for quite a few origami problems. Furthermore, the underlying \n            techniques are more broadly applicable, and concepts from tree \n            theory, circle/river packings, point-splitting, and more, can be \n            mixed and combined with other techniques to yield efﬁcient, \n            novel, and sometimes beautiful structures. The last few chap-\n            ters demonstrate two of the many possibilities that lie within \n            these hybrid approaches.\n\n\n                                                                                                     435\n                                                                   Chapter 11: Tree Theory\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e7b"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 321,
  "content": "            base by exploiting both the variation in length and importance \n            of the different ﬂaps in the base.\n                The ﬂaps fall into several logical groupings. The longest \n            ﬂaps are the eight legs. Although the legs of an actual taran-\n            tula vary in length, they are close to the same length, and the \n            symmetry and foldability of the base will likely be higher if \n            we choose them all to be the same length. Thus, the eight legs \n            form the ﬁrst group.\n                The next group would consist of the pedipalps, which \n            are generally about half as long as the legs. We could start by \n            choosing their length to be exactly half of the leg length, but \n            in practice, anything from about 40% to 60% would probably \n            give a workable model.\n                Next, the abdomen is also about half the length of a leg. \n            Since there’s only one abdomen ﬂap, but two pedipalp ﬂaps \n            that must come as a matched pair, we’ll give the paired ﬂaps \n            a higher priority; ﬁt them in ﬁrst, then try to ﬁnd a space for \n            the abdomen.\n                Last comes the head ﬂap. Since the cephalothorax of a \n            tarantula is quite short, we almost don’t need this ﬂap at all, \n            so we can just count on tucking it in somewhere in the ﬁnished \n            packing.\n                Let’s now work through the circle packing step by step. \n            The ﬁrst step is to pick the symmetry line of the base: Will it \n            be oriented parallel to a side (book symmetry) or along the \n            diagonal (diagonal symmetry)? Let’s choose book symmetry \n            for starters. The ﬁrst step will be to pack the eight leg circles \n            into the square.\n\n\n            Figure 9.17. \n            Left: starting conﬁguration. \n            Right: crystallized circle packing.\n\n                                                                                                     309\n                                                                  Chapter 9: Circle Packing\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e7c"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 335,
  "content": "            or something in the model derived from this pattern. I used the \n            largest unused corner to extend the tail in the emu.\n                The N = 4 case is quite obviously the crease pattern for \n            the Waterbomb Base, which has been widely used for origami \n            models. Similarly, the N = 5 case has a single ﬂap in the middle \n            of the square; it is the Bird Base. But that’s unexpected; the \n            Bird Base is normally considered to have four equal ﬂaps, not \n            ﬁve. How can this be?\n\n\n                                                                        Figure 9.32. \n                                                                        The Bird Base as a five-flap \n                                                                        base.\n\n                As shown in Figure 9.32, if we treat each ﬂap as starting \n            from a point exactly halfway between the top and bottom of \n            the model, the four long ﬂaps of the Bird Base become shorter \n            and the blunt top ﬂap becomes longer. We can get all ﬁve ﬂaps \n            to have the same aspect ratio by narrowing the top ﬂap, as \n            shown in Figure 9.33.\n\n\n                                                                        Figure 9.33. \n                                                                        Narrowing the ﬂaps of a Bird \n                                                                        Base by spread-sinking turns it \n                                                                        into a ﬁve-equal-ﬂap base.\n\n                And if we add four more smaller circles to the ﬁve-circle \n            pattern corresponding to four more smaller ﬂaps, we get the \n            crease pattern for yet another Classic Base, the Frog Base.\n                The N = 1, 2, 4, and 5 cases correspond to Classic Bases \n            that have been known for hundreds of years. However, the N = 6 \n            solution, like the N = 3 pattern, has not been explored, or to \n            my knowledge, even recognized. I suspect that it is because the \n            N = 6 pattern does not incorporate either the standard 22.5° \n            symmetry or the less-common 30°–60°–90° symmetry and so \n            was unlikely to have been found by trial-and-error folding \n\n                                                                                                     323\n                                                                  Chapter 9: Circle Packing\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e7d"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 453,
  "content": "              34. Unfold to step 32.  35. Open-sink in and           36. Fold the next        37. Fold the tip of the\n                                      out on the creases you         flap tightly over the    flap back to the right\n                                      just made.                     edges of the sink.       along a crease aligned\n                                                                                              with the center line.\n\n\n              38. Unfold to step 36.  39. Open-sink in and          40. Open the top of the      41. Close up the\n                                      out on the existing           edge and spread-sink         model.\n                                      folds.                        the corner.\n\n\n                                32–42\n\n\n              42. Swing one        43. Repeat steps    44. Fold the remaining  45. Fold the tip    46. Unfold to\n              flap to the right.   32–42 on the left.  flap to the right along a back to the left. step 44.\n                                                       crease that lines up with\n                                                       the folded edges.\n\n     442\n                         Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e7e"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 484,
  "content": "                                         variations of itself to yield remarkably complex objects. Let’s \n                                         run through a few of the simplest possible variations.\n                                             The ﬁrst variation stems from the fact that there are two \n                                         ways to fold the same box. If you fold steps 1–6 the same, but \n                                         at step 7, wrap the vertical edges around to the other side, \n                                         you get a similar, but slightly different, structure as shown in \n                                         Figure 12.11.\n\n\n                     7. Wrap the raw edges to the 8. Fold the side flaps down. 9. Finished Box.\n                     inside, turning valley folds into\n                     mountain folds and vice versa.\n\n                                         Figure 12.11. \n                                         A different ﬁnish for the box from a 3 × 2 rectangle.\n\n                                             The two versions of the box differ slightly in the handles. \n                                         In the ﬁrst, the handles are white; in the second, they are col-\n                                         ored. But there is a more important difference: In the second \n                                         form of the box, the raw edges of the paper are exposed on the \n                                         top side of the box. We’ll make use of this a bit later.\n                                             Next, we can change its proportions. We can make it lon-\n                                         ger, wider, or taller, or any combination of the three. We can \n                                         approach all three by way of a little thought experiment. Sup-\n                                         pose we wished to make it longer (i.e., shift the handles farther \n                                         from each other). If the paper were made of rubber, we could \n                                         simply stretch it, as shown in Figure 12.12.\n                                             But since paper can’t stretch, we need another approach. \n                                         Suppose we wanted to make the box 50% longer, that is, half \n                                         again as long as it is now. An approach that doesn’t require \n                                         stretching is to cut the model in two and add more paper where \n                                         we need it, as shown in Figure 12.13.\n                                             At this point, origami purists are howling in protest: Origami \n                                         is the art of folding, not cutting and taping paper! How can this \n                                         be called origami? For it to be pure origami, we would have to fold \n                                         this box from an uncut sheet of paper. But this is nothing more \n                                         than grafting, which we did in Chapters 6 and 7. If you construct \n                                         a box according to the prescription in Figure 12.13 and then un-\n                                         fold it, you will wind up with a ﬂat sheet of paper composed of \n\n     472\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e7f"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 490,
  "content": "             1. The crease pattern for the small 2. Cut out the shaded region ... 3. And we’re back to the original\n             box.                                                            3 × 2 box pattern, but with longer\n                                                                             handles.\n\n\n                                   4. The crease pattern      5. The crease pattern\n                                   from step 1 folds this.    from step 3 folds this.\n\n                                         Figure 12.18. \n                                         The crease pattern for the smaller box.\n\n                                         as shown in step 2 of Figure 12.18, we can make the box deeper \n                                         as well. Thus, it is possible, using basically the same structure, \n                                         to make any length, width, or depth, box.\n                                             But this is still only a single box. We quickly exceed the \n                                         interest level of a single box. However, another nice property \n                                         of box-pleated designs is that if you are careful to keep track \n                                         of the raw edges of the paper, you can easily join structures in \n                                         a way very similar to the way we expanded them.\n                                             Figure 12.19 shows how two boxes can be joined at their \n                                         edges to make a double-box, which can, in turn, be folded from \n                                         a single 4 × 12 rectangle.\n                                             It was possible to join the two boxes because the raw edge \n                                         along one side of the paper lay along a single line in the folded \n                                         form of the model. That raw edge could therefore be mated to \n                                         a similarly aligned edge.\n                                             It isn’t necessary, however, that the raw edges lie on a \n                                         single line for two shapes to be joined. The raw edge can actu-\n                                         ally take on any three-dimensional path whatsoever, as long \n                                         as the mating part takes on the same path. This next structure \n                                         (Figure 12.20) mates boxes and partial boxes to realize a fully \n                                         enclosed box.\n\n     478\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e80"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 679,
  "content": "             Figure 14.45. \n             Left: axial+1 contours added. \n             Right: an axial+2 contour added via level shifters. The level-shifted \n             contour is highlighted.\n\n\n             Figure 14.46. \n             Contour map and folded model of the Scarab Beetle HP.\n\n                                                                                                                 667\n                                                                       Chapter 14: Polygon Packing \n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e81"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 123,
  "content": "            instead, the unit that is replicated is two half-ﬂaps with a gap \n            between them. As with the Yoshizawa split, the gap contains \n            the secret to the structure.\n                So two, three, or four points may be constructed by us-\n            ing one, two, or three wedges. It should also be clear that the \n            diagonal creases inside the wedge don’t have any particular \n            signiﬁcance. They’re there to make the points narrow, and \n            they divide the angle into equal divisions so that in the folded \n            result, the edges line up. But we could easily have used fewer \n            or more diagonal creases and gotten fatter or skinnier points, \n            as shown in Figure 5.22.\n\n\n            Figure 5.22. \n            The wedge unit with the two points divided into successively greater \n            numbers of divisions.\n\n                We can build the number of points we need by assem-\n            bling the number of wedges we need: For N points, we use \n            N–1 wedges.\n\n\n                                                                       Figure 5.23. \n                                                                       One, two, and three wedges \n                                                                       deﬁne gaps between two, three, \n                                                                       and four points.\n\n                But now, we need to overlay this structure on the origi-\n            nal ﬂap and somehow connect the creases so that the whole \n            thing folds ﬂat. Note that the wedge assembly itself folds ﬂat \n            no matter how many we use, so the only thing we need to do \n            is ﬁnd the creases that enable the multipoint wedge group to \n            connect to the rest of the ﬂap.\n                Let’s use the three-wedge (four-point) module as an ex-\n            ample. If I simply overlay this pattern onto the original Kite \n            Base, it is clear that with no other changes, the pattern will \n            not fold ﬂat (if it is not clear from the crease pattern, draw \n            the pattern and try folding it.)\n\n                                                                                                     111\n                                                                 Chapter 5: Splitting Points\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e82"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 645,
  "content": "            layered 1-unit-wide ﬂaps, given by the perimeter of the ﬂap \n            polygon, expressed in those same units.\n                So, for example, one can “fatten up” a corner ﬂap by add-\n            ing a few more grid squares to the bite it takes out of the corner \n            of the crease pattern, as illustrated in Figure 14.10.\n\n\n            Figure 14.10. \n            Left: a minimum-size corner ﬂap. \n            Right: the ﬂap fattened by adding two more units of width.\n\n                A similar technique can be used to fatten up an edge or \n            middle ﬂap (although the circumstances where you would \n            want to fatten a middle ﬂap are rare indeed).\n                A side beneﬁt to ﬂap thickening comes when folding \n            insects. The addition of one or two units to the width of \n            the ﬂap has the effect of squaring off the end, as shown in \n            Figure 14.10. This squared-off end can then be easily point-\n            split—creating, for example, the pair of claws at the end of \n            many insects’ feet.\n\n            14.3. Whole vs. Half-Integer Widths\n            In theory, the exact grid that one uses to make a uniaxial box-\n            pleated base is not that important: if there are three sets of \n            legs, they’ll have the same relative proportions whether they \n            are 1, 2, and 3 units long; 2, 4, and 6; or 3, 6, and 9. What will \n\n                                                                                                     633\n                                                               Chapter 14: Polygon Packing \n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e83"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 651,
  "content": "            boundaryboundary of of\n            gussetgusset\n            quadrilateralquadrilateral\n                                                                       Figure 14.15. \n                                                                       Ridge crease for the two over-\n                                                                       lapping squares, which come \n                                                                       from the gusset quadrilateral \n                                                                       molecule.\n\n\n                        r2\n\n\n                 A                                            A′             B′\n                                                                        t\n                                                                 h\n                      A′                                  A                      B\n\n                    h\n            s2\n                                         r1\n                     t\n                              B′\n\n\n                         s1       B\n            Figure 14.16. \n            Left: key distances in the gusset quadrilateral molecule for overlap-\n            ping squares. \n            Right: the arrangement of vertices in the folded form. The axis is \n            horizontal.\n\n            Then there is an inner rectangle, which is the bounding box \n            of the gusset. The gusset fold itself is the diagonal crease of \n            this inner rectangle, and the two ridges on either side of the \n            gusset are rabbit ear folds (angle bisectors) of the two triangles \n            formed by dividing this inner rectangle. The inner rectangle \n            is inset from the other rectangle by some distance; if we had \n\n                                                                                                     639\n                                                               Chapter 14: Polygon Packing \n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e84"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 137,
  "content": "              16. Squash-fold one     17. Open out the raw      18. Mountain-fold the     19. Fold the flap in half,\n              flap.                   edges and fold the flap   corner underneath.        forming a small reverse\n                                      down and to the right.                              fold as you close it.\n\n\n              20. Reverse-fold the    21. Fold the two points up  22. Fold and unfold     23. Reverse-fold the\n              corner.                 and out to the sides, one to the split point.       pair of points to the left,\n                                      the left, one to the right.                         so that the folded edge\n                                      Repeat behind.                                      lines up with the crease\n                                                                                          you made in step 21.\n\n\n              24. Crimp the bottom     25. Fold and unfold.     26. Unfold to step 24.   27. Fold and unfold along\n              right point upward so                                                      a crease perpendicular to\n              that its bottom edge is                                                    the right edge.\n              horizontal.\n\n\n              28. Crimp the point      29. Pull out the loose   30. Fold and unfold.      31. Outside-reverse-\n              using the existing       paper completely.                                  fold the flap, then put it\n              creases.                                                                    behind the left flap.\n\n                                                                                                                 125\n                                                                       FoldingChapter Instructions: 5: Splitting Goatfish Points\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e85"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 686,
  "content": "                                             There is a trick, however, to using this approach: the num-\n                                         ber of quadrilaterals with integer sides is relatively few. With \n                                         respect to Figure 14.53, we notice that the triangle in the left \n                                         subﬁgure whose right side is the x-ray line is a right triangle \n                                         that must have all three sides as integers; in other words, it \n                                         must be a Pythagorean right triangle. (In Figure 14.53, it is a \n                                         6–8–10 right triangle.)\n                                             We saw Pythagorean triples not too long ago: they cropped \n                                         up as a special case when we were considering overlapping \n                                         polygons in box pleating as a special case of a general technique \n                                         based on the gusset molecule. Might there be a similar general \n                                         technique here as well?\n                                             In fact, there is, and it, too, relies on the gusset molecule. \n                                         Let’s go back to the problematic hinge polygon of Figure 14.52. \n                                         It is clear which contours around the edges we’d like to have \n                                         line up; they’re very close to what the original straight skeleton \n                                         gives. We can indicate which pairs of contours should be con-\n                                         nected to one another by drawing circles between the contours \n                                         on adjacent edges, and curves of constant width joining contours \n                                         we’d like to match that cross the quadrilateral, as shown in \n                                         Figure 14.54.\n\n\n            Figure 14.54. \n            The black curves connect con-\n            tours that we would like to \n            match up when we ﬂatten this \n            hinge polygon.\n\n                                             Hmmm…circles…constant-width curves—like rivers—\n                                         and forcing edges to lie on a line so that selected points on the \n                                         edges line up. Sounds like molecules. In fact, this is precisely \n                                         the problem created by the set of constraints that were placed \n                                         on a quadrilateral molecule. These new circles that connect cor-\n                                         responding axial contours are exactly like the packing circles \n                                         of a quadrilateral molecule, whose edge crossing points must \n                                         also be aligned with one another when the polygon is ﬂattened. \n                                         And we already know how to solve that problem: we can achieve \n                                         the desired alignment by constructing the gusset molecule that \n                                         corresponds to this circle/river packing. The gusset molecule \n\n     674\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e86"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 692,
  "content": "                                             Fully assigned crease patterns for both ﬁgures are given \n                                         at the end of the chapter.\n                                             These designs combine multiple techniques and ideas. \n                                         The best design for the subject may not be—usually is not—an \n                                         example of a “pure” technique. That’s quite all right, though; \n                                         there is nothing sacred about box pleating or hex pleating, and \n                                         no need for a design to be purely one, purely the other, a mixture \n                                         of both with arbitrary polygons, or a mixture of various ideas \n                                         and techniques. In fact, I ﬁnd that most of my origami designs \n                                         tend to call upon a mixture of concepts, in keeping with my \n                                         philosophy that design ideas are merely tools—the equivalent \n                                         of brushes and pigments for a painter, or differently shaped \n                                         chisels for a woodcarver. The tool itself is unimportant; what \n                                         matters is what you do with the tool.\n\n                                         14.9. Collapsing Crease Patterns\n                                         Throughout this book, there has been an idea implicit in my \n                                         presentation that in some sense the problem is “done” once we \n                                         have the crease pattern. Of course, that’s not remotely the case. \n                                         The crease pattern describes the plan for the base, but turning \n                                         a base into a ﬁnished work can be a long and demanding task. \n                                         It can, in fact, require far more effort, and certainly more art-\n                                         istry, to turn a base into the ﬁnished work than was required \n                                         for the folding of the crease pattern into the base.\n                                             But even turning the crease pattern into a folded base can \n                                         still be very, very difﬁcult. Historically, origami was conveyed \n                                         by step-by-step diagrams that communicated a linear folding \n                                         sequence from paper to base (and on to ﬁnished model). To \n                                         origami artists whose folding experience was built up from \n                                         step-by-step diagrams, there arose a presumption that some \n                                         linear folding sequence exists for every origami model, includ-\n                                         ing those described by crease patterns.\n                                             That is, alas, a false presumption for many origami \n                                         designs. In the grand space of all possible origami designs, \n                                         only the tiniest fraction possess simple step-by-step folding \n                                         sequences. The reason that almost all origami models his-\n                                         torically had linear sequences is that they were discovered \n                                         by artists who were following only linear sequences to create \n                                         their works.\n                                             Even as far back as the 1950s and 1960s, though, there \n                                         were origami artists who used a design approach that led \n                                         directly to the ﬁnished form. We see this in the notebooks of \n                                         Elias, who designed and recorded many of his works as crease \n                                         patterns. Crease patterns tell you where you need to eventually \n                                         be, but they don’t tell you how to get there, or even if there is \n\n     680\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e87"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 719,
  "content": "            bases with folded structures that provide the portions of the \n            subject that don’t ﬁt neatly into the uniaxial mold.\n                In the case of a vertebrate animal, we can create a large ﬂat \n            polygon for the wide body of the animal and pack pieces of uni-\n            axial bases around it to create ﬂaps for the appendages; instead \n            of distributing those ﬂaps along the centerline of the polygon as \n            in a uniaxial base, we can distribute them around the periphery, \n            thus reducing or eliminating the wide-body penalty.\n                The simplest way of accomplishing this would be to cut the \n            base along some axial creases and insert a strip graft, as we \n            did in Chapter 6, but instead of pleating the strip and turning \n            it into more points, we leave it relatively unfolded. Figure 15.8 \n            illustrates the surgical process performed on the Frog Base of \n            Figure 15.7.\n\n\n               1. Here is the crease pattern  2. … and insert a strip,       3. Construct a modified\n               for a Frog Base. We cut it     bounded on both sides by       Frog Base (using circle-\n               down the center …              two axes.                      river packing) in the paper\n                                                                             remaining outside the strip.\n\n\n                                 4. Extend creases across       5. The resulting base is no\n                                 the strip and fold it into a   longer uniaxial.\n                                 base.\n\n            Figure 15.8. \n            Construction of a multiaxial base.\n\n                                                                                                     707\n                                                                  Chapter 15: Hybrid Bases\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e88"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 57,
  "content": "                                                       D                             D\n\n\n                                                                                    AB\n\n                                          AB\n\n\n                                                       C                              C\n              1. Begin with the colored side  2. Fold edges AC and BC in to 3. Fold corners A and B down\n              up. Fold and unfold along the   lie along the center line DC. so that their outer edges are\n              vertical diagonal. Turn the paper                             vertical.\n              over.\n                                       D\n\n\n                               ABB                                            A\n\n\n                                       C                              C\n                             4. Fold down about 1/3 of       5. Finished Elephant’s Head.\n                             point D (the exact amount\n                             isn’t critical) and turn the\n                             model over.\n\n            Figure 3.3. \n            Folding sequence for an Elephant’s Head.\n\n\n            the face is jarring, so we introduced two folds to break up the \n            surface of the face a bit and bring some balance to the lines \n            of the model.\n\n            3.3. Elephant Design 3\n            We can take another step up the ladder of complexity. Now \n            we’ll make the tusks a bit longer.\n                These three models depict the same subject, but with \n            progressively greater anatomical accuracy (although they \n            still leave a lot to be desired—like a body). They are simple, \n\n                                                                                                      45\n                                                                Chapter 3: Elephant Design\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e89"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 731,
  "content": "                                                                    1/8\n\n\n             4. Fold the top right point down  5. Turn the paper over and rotate 6. Fold the top edges down to meet\n             to touch the crease intersection. it 1/8 turn.                   along the centerline of the paper.\n\n\n             7. Wrap the corner of the paper       8. Fold the raw edges in to           9. Fold and unfold\n             from back to front and flatten        lie along the center line and         through a single layer.\n             symmetrically.                        unfold.\n\n\n              10. Fold and unfold through           11. Repeat on the left.               12. Fold and unfold.\n              all layers.\n\n\n              13. Sink the corner on the            14. Open-sink the two               15. Open-sink the two far\n              creases you just made.                edges on existing creases.          edges in the same way.\n\n                                                                                                                 719\n                                                               Folding Instructions:Chapter  15:African Hybrid Elephant Bases\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e8a"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 725,
  "content": "            a forehead and ﬂapping ears; I use circle packing to specify \n            the creases in the forelegs, trunk, and elsewhere; and even \n            hearkening back to the ﬁrst designs in the book, I make use of \n            the various elephant head designs from Chapter 2. The result \n            is, of course, yet another elephant. From the simplest to the \n            complex, the African Elephant spans the spectrum of origami \n            technique, and serves as a ﬁtting ﬁnal example for our foray \n            into origami design.\n\n            15.5. Wrapping It Up\n            During the great westward migration of mid-19th century \n            America, a saying arose among the pioneers who were setting \n            out on the Oregon Trail: “I am going to see the elephant.” The \n            elephant was a metaphor for all of their goals, their hopes, their \n            dreams, their aspirations. They did not set out unequipped; \n            they brought with them the tools with which to make a new \n            life, break new ground, and with luck, make their fortune.\n                Despite its antiquity, the art of origami is still in its pio-\n            neering days. The practice of new creation began within the last \n            century, via the works of Yoshizawa, Uchiyama, and Unamuno, \n            then spread around the world in its own westward expansion. \n            It was led by names that have become legendary in origami: \n            Oppenheimer, Harbin, Randlett, Solorzano Sagredo, Montoya, \n            Rohm, Elias, Crawford, Cerceda, and others too numerous to \n            mention. The early pioneers of origami creation had little more \n            than a handful of traditional designs and their own intuition \n            to guide them. But as the art and the knowledge spread, a col-\n            lection of lore and technique has arisen, akin to the blazing of \n            the westward trails.\n                What I have attempted to provide in this book is a collec-\n            tion of tools to help you on your way down the path of origami \n            design. These tools, like any others, are only useful with the \n            knowledge of how to wield them. And they become more useful \n            with practice. You can apply the concepts I’ve shown by decon-\n            structing the things you see. If you fold a clever or appealing \n            model, pull it apart, examine the crease pattern, look for signs \n            of structure. What paper goes into the ﬂaps? Is there an axis? \n            Are there multiple axes? Are some creases more important \n            than others?\n                Just as tools become more useful with practice, as they \n            become more widely used, they get improved, extended, and \n            even replaced. I have no doubts that the mathematical methods \n            of origami design that once seemed strangely foreign—splitting, \n            grafting, tiles, circles, rivers, square packing and trees—will \n            eventually be augmented, if not superseded, by more powerful \n\n                                                                                                     713\n                                                                  Chapter 15: Hybrid Bases\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e8b"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 43,
  "content": "                                                                       Figure 2.35. \n                                                                       A bisected petal fold reveals \n                                                                       that it is composed of two \n                                                                       rabbit-ear folds.\n\n\n                Reverse folds are commonly used to change the direction \n            of a ﬂap, for example, to do the ﬁnal shaping. Another com-\n            bination fold that is used to shape ﬂaps is the pleat, which \n            consists of side-by-side mountain and valley folds.\n\n                                                                       Figure 2.36.\n                                                                       Left: a pleat diagram. \n                                                                       Right: the ﬁnished pleat.\n\n\n                A pleat formed through a single layer of paper is unam-\n            biguous. However, when there are multiple layers present, \n            there is a closely related fold, illustrated in Figure 2.37, which \n            is called a crimp.\n\n\n                                                                       Figure 2.37. \n                                                                       Left: a crimp diagram. \n                                                                       Right: the ﬁnished crimp.\n\n                The crimp is a combination of a pleat with its mirror im-\n            age on the far layer of paper. Thus, a crimp bears the same \n            relationship to a pleat that an inside reverse fold bears to a \n            mountain fold (or an outside reverse fold to a valley fold). Just \n            as reverse folds do not come undone as easily as mountain or \n            valley folds, crimps are more permanent than pleats. Both \n            crimps and pleats are diagrammed by showing the fold lines \n            on the near layers of paper; they can be distinguished by ex-\n            amining the edges of the ﬂap. Sometimes it is not practical \n\n                                                                                                      31\n                                                                 Chapter 2: Building Blocks \n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e8c"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 1,
  "content": "./origami_dataset_dev/Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li/page001_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e8d"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 94,
  "content": "             Ruby-Throated  \n             Hummingbird\n\n\n             1. Begin with a square, white side up.    2. Fold and unfold          3. Fold the bottom left corner to\n             Fold the paper in half in both directions along the diagonals.        the center and unfold, making a\n             and unfold. Turn the paper over.                                      small pinch along the diagonal.\n\n\n                   4. Fold the bottom left          5. Fold the corner up along         6. Fold the corner up\n                   corner to the point you          the diagonal; the crease hits       again on the crease\n                   just made and unfold.            the mark you just made.             you made in step 4.\n\n      82\n                         Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e8e"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 80,
  "content": "                                         Figure 4.15. \n                                         Crease pattern, base, and finished model of Hummingbird, from a \n                                         Frog Base.\n\n                                         4.5. Simple Variations on Bases\n                                         To move out of the conﬁnes of the standard bases, in what I \n                                         will call the early exploratory period of origami, the 1950s and \n                                         1960s, many folders experimented with alterations and com-\n                                         binations of the bases. A not-uncommon tactic was to fold half \n                                         of the square as one base and the other half as another: thus, \n                                         a half-Bird, half-Frog Base, for example. However, with only \n                                         a handful of bases around to start with, one quickly exhausts \n                                         the possibilities of this technique.\n                                             The 1960s and 1970s saw another variation that can also \n                                         lead to new structures: Use the crease pattern of the original \n                                         base, but distort it in some controllable way. The most common \n                                         application of this second approach is to offset the base, that \n                                         is, shift the nexus of creases that typically arises at the center \n                                         of the paper away from the true center, either toward an edge \n                                         or toward a corner. Since the amount of shift was something \n                                         that could be continuously varied, this technique provides \n                                         a greater range of possibility than discrete combinations of \n                                         fractional bases.\n                                             As an example, the crease pattern of a Bird Base can be \n                                         shifted in two distinctly different ways that preserve some \n                                         symmetry, as shown in Figure 4.16. The crease pattern can be \n                                         shifted toward a corner or an edge.\n\n      68\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e8f"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 269,
  "content": "                It is clear from examination of the crease pattern and the \n            folded form that the paper in the gap in the crease pattern \n            gives rise to the paper separating the two pairs of points in \n            the folded form. This paper is, in its own way, a kind of ﬂap as \n            well; but it’s not a loose, isolated ﬂap; it’s a ﬂap that connects \n            other ﬂaps. We can allow for such a feature in a crease pattern \n            (and model) by inserting a stripe into the crease pattern that \n            cuts across the rectangle, as shown in Figure 8.20.\n\n\n                                                river\n                                                                        Figure 8.20. \n                                                                        The completed rectangular tile \n                                                                        contains a river running across \n                                                                        its middle.\n\n                We will give this stripe that separates groups of circles \n            a special name: we will call it a river, for a reason that will \n            shortly become apparent.\n                What about triangular tiles? Are there analogous struc-\n            tures?\n                The rectangular tiles give rise to two pairs of ﬂaps sepa-\n            rated by segments—like the body between the front and hind \n            legs of an animal. We can similarly think of a triangular tile \n            as giving rise to a pair of ﬂaps separated from a third ﬂap by \n            a body, as shown in Figure 8.21.\n\n\n                                                                        Figure 8.21. \n                                      body                              Both a rectangle and a triangle \n                                                                        can be folded into a shape with \n                                                                        a body separating one or more \n                                                                        ﬂaps.\n\n                We can decorate the triangular tile with its own river cor-\n            responding to the body, so that the river is distinct from the \n            circle representing the ﬂap. It’s not hard to see that while the \n            river in the rectangular tile is a rectangle, for the triangular \n            ﬂap, the appropriate decoration is a segment of an annulus, \n            i.e., a rectangle bent along a circle, as in Figure 8.22.\n                This division is not unique to the isosceles triangle tile; for \n            any corner of any tile, the circle at that ﬂap can be subdivided \n            into a circle plus an annular river, thereby allowing it to be mated \n            to a rectangular tile or to any other tile similarly divided.\n\n                                                                                                     257\n                                                                         Chapter 8: Tiling\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e90"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 533,
  "content": "             31. Reverse-fold the white flap in two places. The   32. Reverse-fold the 3rd and 6th edges. Each reverse\n             horizontal mountain folds lie on existing creases while fold consists of two layers; the creases in the layer\n             the diagonal valley folds hit the raw edges at the same underneath run all the way back to the 90° bend.\n             location as an existing crease.\n\n\n              33. Stretch one corner out to the side.             34. Mountain-fold the edge underneath, stopping at\n                                                                  the diagonal pleat. (This is half of an Elias stretch.)\n\n\n                                                                                                                 521\n                                                                      FoldingChapter Instructions: 12: Box  OrganistPleating\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e91"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 255,
  "content": "             Figure 8.1. \n             Six bases. Top: crease patterns. \n             Middle: bases. \n             Bottom: representative models.\n\n                                                                                                                 243\n                                                                                  Chapter 8: Tiling\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e92"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 53,
  "content": "./origami_dataset_dev/Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li/page053_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e93"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 241,
  "content": "             25. Fold the bottom edge of the left and right   26. Fold the top edge down to the indicated\n             sides upward so that it runs straight across.    points; crease all the way across and unfold. Turn\n                                                              the paper over.\n\n\n             27. Fold and unfold through all layers. Turn the 28. Fold and unfold.\n             paper back over.\n\n\n     230\n                         Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e94"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 527,
  "content": "           14. Fold eight vertical valley 15. Add some horizontal     16. Fold sixteen vertical valley\n           folds.                     valley folds. Turn the model    folds.\n                                      over.\n\n\n                                                                                           515\n                                                         FoldingChapter Instructions: 12: Box  OrganistPleating\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e95"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 296,
  "content": "                17. Fold and unfold            18. Fold the bottom edge upward.      19. Fold the edge down so\n                along angle                    Note that the crease connects two     that the new crease lines up\n                bisectors.                     crease intersections.                 with an existing crease.\n\n\n              20. Unfold to step               21. Sink the bottom edge in and        22. Spread-sink the corners.\n              18.                              out on the existing creases.\n\n\n               23. Pull some paper out of             24. Fold the flap                     22–24\n               the pockets (unclosed sink).           back down.\n                                                                                       25. Repeat steps\n                                                                                       22–24 behind.\n\n\n                  26. Squash-fold the              27. Fold one flap up in              28. Squash-fold the\n                  edge. Repeat behind.             front and one up behind.             corner. Repeat behind.\n\n     284\n                         Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e96"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 282,
  "content": "            Figure 8.41. \n            Two rectangular tiles plus two \n            square tiles ﬁt together to make \n            a square.\n\n                                         short sides of the rectangles, but the ones in the larger square \n                                         don’t mate properly with the circles and river in the rectangle. \n                                         We can ﬁx that. Recall that any circle can be subdivided into a \n                                         smaller circle and an annular river; similarly, the river in each \n                                         rectangle can be bisected into two rivers to mate with the newly \n                                         created rivers. The result is a pattern of circles and rivers in \n                                         which all matching conditions are satisﬁed along the edges of \n                                         the tiles, as shown in Figure 8.42.\n                                             And now, without adding any more creases, we can identify \n                                         the number of ﬂaps in the base folded from this structure. In \n\n\n            Figure 8.42. \n            Tiles with circles and rivers \n            that satisfy matching conditions \n            across tile boundaries.\n\n     270\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e97"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 294,
  "content": "             Pegasus\n\n\n             1. Begin with the white side up. 2. Fold the edges in to lie    3. Turn the      4. Fold the bottom\n             Fold the paper in half along the along the diagonal, but don’t  model over.      point up to the top;\n             diagonal and unfold.             make the creases sharp.                         make a pinch in\n                                                                                              the middle and\n                                                                                              unfold.\n\n\n     282\n                         Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e98"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 280,
  "content": "                                             Figure 8.40. \n                                             Crease patterns for six bases with inscribed circles and rivers, bases, \n                                             and corresponding stick ﬁgures.\n\n\n     268\n                         Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e99"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 257,
  "content": "                                                                        Figure 8.3. \n                                                                        Two bases that are not uniaxial. \n                                                                        Left: the Windmill Base has two \n                                                                        crossed axes. \n                                                                        Right: Montroll’s Dog Base has \n                                                                        two parallel axes.\n\n            remarkably versatile, they are not the magic solution for all \n            origami problems.\n                Montroll’s Dog Base, in particular, highlights a limitation \n            of uniaxial bases; for a given model, they may not provide the \n            most efﬁcient structure. However, uniaxial bases are read-\n            ily constructed and quite versatile, and we will explore them \n            thoroughly.\n                It should also be noted that whether or not a base is uniaxi-\n            al may depend on the orientation of the base. In the six example \n            bases I’ve shown, the axis lies along a line of mirror symmetry. \n            This is usually, but not always, the case. For example, in the \n            Waterbomb Base, if we attempt to draw the axis along the line \n\n\n                                                                        Figure 8.4. \n                                                                        Top: crease pattern for the \n                                                                        Waterbomb Base. \n                                                                        Lower left: the Waterbomb \n                                                                        Base is not uniaxial with respect \n                                                                        to an axis along the symmetry \n                                                                        line. \n                                                                        Lower right: it is, however, \n                                                                        uniaxial if we draw the axis \n                                                                        along the raw edges of the base.\n\n                                                                                                     245\n                                                                         Chapter 8: Tiling\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e9a"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 531,
  "content": "                                                        1/4\n\n\n               25. Pleat the top in 16ths, the bottom in 32nds, and       26. Elias-stretch the top of the\n               the middle in 4ths; nearly all the folds come from         white pleated layers.\n               existing creases. The top and bottom swing over to\n               the right. Rotate the model 1/4 turn counterclockwise.\n\n\n                                                                                                                 519\n                                                                      FoldingChapter Instructions: 12: Box  OrganistPleating\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e9b"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 525,
  "content": "           8. Fold and unfold.       9. Add some horizontal           10. Make eight vertical\n                                     creases. Turn the paper over     creases.\n                                     from side to side.\n\n\n                                                                                           513\n                                                         FoldingChapter Instructions: 12: Box  OrganistPleating\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e9c"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 243,
  "content": "             36. Fold one corner in to the            37. Sink the corner.          38. Fold the layer back to the left.\n             center line and unfold.\n\n\n                                 35–38\n\n\n             39. Repeat steps 35–38 on the right.    40. Fold two flaps up.      41. Squash-fold two edges, swinging\n                                                                                 the two flaps upward like a petal fold.\n\n\n              42. Fold two corners  43. Fold two flaps   44. Mountain-fold the top pair 45. Turn the model over\n              in to the center.     back down.           of flaps out to the sides.   from side to side.\n                                                         Valley-fold the bottom pair.\n                                                         You shouldn’t make either\n                                                         fold sharp because you will\n                                                         adjust these folds later.\n\n     232\n                         Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e9d"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 519,
  "content": "                                                                        Figure 12.49. \n                                                                        Black Forest Cuckoo Clock, a \n                                                                        box-pleated design from a 1 × 10 \n                                                                        rectangle.\n\n            Train. Box pleating also combines nicely with the use of pleats \n            to deﬁne textures, a combination that has been exploited bril-\n            liantly by modern masters such as the late Eric Joisel and \n            Satoshi Kamiya.\n                In recent years, the ethic of one square for complex models \n            has grown strong, but during the 1960s, 1970s, and 1980s, the \n            use of rectangles was still common. Mooser’s Train was folded \n            from a rectangle, of course, as were many of the designs of \n            Neal Elias. In keeping with this tradition, in the early 1980s, \n            I developed a Cuckoo Clock from a rectangle, which I subse-\n            quently enhanced with many of the techniques I’ve described \n            in this section. I will close this section with this model, shown \n            in Figure 12.49, and its instructions. It illustrates all of the \n            techniques of box pleating: the creation of three-dimensional \n            boxes, numerous ﬂaps, and their combination and connection. \n            Its folding sequence—at 216 steps—is not for the faint of heart! \n            But if you succeed in folding it, you may ﬁnd within it inspira-\n            tion for your own box-pleated designs.\n                Box pleating is in some ways an ancient technique; it has \n            roots in the centuries-old art of napkin folding and at least some \n            of the techniques employed today can be found in one form or \n            another in the old manuals. Many of the techniques such as fan \n            folding can be found as well in the work of more modern artists, \n\n                                                                                                     507\n                                                                  Chapter 12: Box Pleating\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e9e"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 96,
  "content": "                19. Reverse-fold the flap out to     20. Swivel-fold the edge          21. Swing the flap over\n                the side so that its top edge is     on the existing creases.          to the right.\n                horizontal. Note where the reverse\n                fold goes under the folded edge.\n\n\n               22. Swivel-fold the flap         23. Valley-fold the edge         24. Turn the model over.\n               to match its other side.         to the center line.\n\n\n                                                                          18–23\n\n\n                      25. Fold a pair of layers           26. Repeat steps         27. Fold one layer to the left in\n                      over to the right.                  18–23 on this side.      front and two layers in back to\n                                                                                   make the model symmetric.\n\n      84\n                         Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0e9f"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 82,
  "content": "                                             Figure 4.17. \n                                             Crease pattern, base, and folded model of Baby, from an offset \n                                             Waterbomb Base.\n\n\n                                             Figure 4.18. \n                                             Left: an ordinary Bird Base. \n                                             Right: a distorted Bird Base with the corners of the base kept at the \n                                             corners of the square.\n\n      70\n                         Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ea0"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 733,
  "content": "             30. Bring three layers in 31. Fold the raw edges up 32. Fold down the side    33. Bring two white\n             front of the triangular   along a crease aligned with corners.                flaps in front of the\n             flap.                     the hidden raw edges.                               colored triangle.\n\n\n              34. Reverse-fold the two            35. Reverse-fold the two              36. Fold the corner down.\n              white flaps up along creases        corners.                              Look at the next step for the\n              aligned with raw and folded                                               precise reference point.\n              edges.\n\n\n             37. The hidden crease (visible               38. Unfold.                  39. Fold the corner down\n             on the back side) hits the edge                                           along a crease that runs\n             halfway between two crease                                                through the indicated crease\n             intersections.                                                            intersection.\n\n\n             40. Swivel-fold, using the             41. Swivel-fold again. The        42. Swivel-fold one final time.\n             existing creases.                      vertical crease already exists.\n\n                                                                                                                 721\n                                                               Folding Instructions:Chapter  15:African Hybrid Elephant Bases\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ea1"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 55,
  "content": "            But a complex model creates a certain level of expectation in \n            the viewer: an expectation that the model will convey a richer \n            vision. The more folds we have in the model, the more we can \n            reasonably expect from it. And thus, we must make every fold \n            in the design count for something in the end result if elegance \n            is to be attained.\n                Georgeot’s exhibition consisted of 88 elephants rang-\n            ing from simple to very complex indeed. But elephants, like \n            rabbits, have a way of multiplying. Once he became known as \n            “the origami elephant guy,” origami elephants continued to \n            come his way. He wrote that he had accumulated 155 different \n            designs by the year 2000. Many folders have sent more than \n            one, up to eight different designs from a single artist.\n                If you were to pick any two of Georgeot’s elephants, you \n            would ﬁnd that they differ in many ways: One could be ﬂat, \n            the other three-dimensional; one in proﬁle, one in front view. \n            They might differ in the orientation of the paper relative to \n            the model, in the number of appendages, or in what part of \n            the paper those appendages come from. They may differ in \n            the level of abstraction versus verisimilitude, in cartoonism \n            versus realism, even in the use of curved versus straight \n            lines (and which lines are chosen). All of these features are \n            decisions that the designer makes along the way, whether \n            consciously or unconsciously.\n                Of all the artistic criteria that may be applied to origami, \n            one of the most important, yet elusive, is elegance. Elegance \n            as it applies to origami is a concept not easily described. It \n            implies a sense of ﬁtness, of economy of effort. In origami, an \n            elegant fold is one whose creases seem to go together, in which \n            there is no wasted paper, whose lines are visually pleasing. \n            Elegance cannot be easily quantiﬁed, but there is a property \n            closely related to elegance that can: efﬁciency.\n                While elegance is a subjective measure of the quality of a \n            design, efﬁciency is an objective measure. An efﬁcient model \n            is one in which all of the paper gets used for something; noth-\n            ing is tucked out of the way. Inefﬁcient models are those with \n            unnecessary layers of paper. Such models are thick and bulky, \n            often difﬁcult to fold, and usually less aesthetically pleasing \n            than a model without unnecessary layers of paper.\n                The most efﬁcient models are the largest possible for a \n            given sheet of paper. If you have folded two ﬁgures from ten-\n            inch squares of paper and one ﬁgure is three inches across \n            and the other is two inches across, then the smaller ﬁgure \n            must by necessity have more layers of paper on average in any \n            given ﬂap. The smaller model will generally be thicker; it will \n            hold together less well; and it will show more edges, which \n\n                                                                                                      43\n                                                                Chapter 3: Elephant Design\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ea2"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 41,
  "content": "            1. The most common petal 2. Fold the sides in so that 3. Fold the top point down 4. Unfold all three flaps.\n            fold starts with this shape, the raw edges lie along the over the other two flaps.\n            called the Preliminary Fold. center line.\n\n\n            5. To make the petal fold, lift 6. Continue lifting up the 7. Continue lifting the 8. Finished petal fold.\n            up the first layer of the bottom point; reverse the direction of point all the way; then\n            corner while holding down the the two creases running to its flatten.\n            top of the model just above the tip, changing valley folds to\n            horizontal crease. Allow the mountain folds.\n            sides to swing in.\n\n            Figure 2.32. \n            The sequence to make a petal fold.\n\n\n            quite challenging for an origami novice to perform, and so is \n            commonly broken down into several steps with some precreas-\n            ing, as shown in Figure 2.32.\n                When you are a beginning folder, it is helpful to make \n            the precreases as in steps 2 and 3 in Figure 2.32. However, \n            as you become comfortable with folding, it’s better to not pre-\n            crease the sides as in step 2, because it is difﬁcult to make \n            the creases through both layers run precisely through the \n            corners. It is neater to simply form the bisectors in each layer \n            individually.\n                Petal-folding is usually performed on a ﬂap to make it \n            simultaneously narrow and longer. It is also possible to petal-\n            fold an edge, creating a ﬂap where there was none before, as \n            shown in Figure 2.33.\n\n                                                                                                      29\n                                                                 Chapter 2: Building Blocks \n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ea3"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 727,
  "content": "                                                                                                                                                       715\n                                                                                                  Chapter 15: Hybrid Bases\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ea4"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 69,
  "content": "            by turning it inside-out), the Cupboard Base (consisting of \n            only two folds), and the Windmill Base (also known as the \n            Double-Boat Base in Japan).\n                The Preliminary Fold was named Fold rather than Base \n            by Harbin since it was a precursor to other bases, a somewhat \n            artiﬁcial distinction that has stubbornly persisted in the \n            English-speaking origami world.\n                Up through the 1970s, origami designers combined these \n            bases with other procedures, known variously as blintzing, \n            stretching, offsetting, and so forth—and we will learn some of \n            these as well—resulting in a proliferation of named bases. It \n            was not unheard-of to ﬁnd, for example, a “double stretched \n            Bird Base (type II)” as the starting form for a model. (Rhoads’s \n            Bat, Secrets of Origami). Of all the possible variants, two are \n            sufﬁciently noteworthy as to deserve attention: the stretched \n            Bird Base and the blintzed Bird Base are fairly versatile treat-\n            ments of the classic Bird Base that have seen heavy use in \n            modern times. Both are shown in Figure 4.3.\n\n\n                                                                       Figure 4.3. \n                                                                       Top: stretched Bird Base.\n                                                                       Bottom: blintzed Bird Base.\n\n                The stretched Bird Base is derived from the traditional \n            Bird Base. It is obtained by pulling two opposite corners of the \n            Bird Base as far apart as possible and ﬂattening the result. \n            Harbin recognized several variants of the stretched Bird Base, \n            but the version shown in Figure 4.3 is the most common.\n                The blintzed Bird Base is also derived from the tradi-\n            tional Bird Base. It is obtained by folding the four corners to \n            the center of a square, folding a Bird Base from the reduced \n            square, and then unwrapping the extra paper to form new \n            ﬂaps. There are several ways of unwrapping the corners \n\n                                                                                                      57\n                                                                Chapter 4: Traditional Bases\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ea5"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 684,
  "content": "                                                                new\n                                                                              new\n\n                                                    OUT\n            Figure 14.50. \n            If we continue the periodic pat-                                         OUT\n            tern along the left side, it forces \n            the contours on the right, which \n            creates a discontinuity in the \n            contour pattern and introduces \n            a new fractional-elevation con-\n            tour.                                                    IN\n\n                                         longer aligned with integer-elevation contours; (2) the even \n                                         spacing of contours is disrupted along the right side.\n                                             This may not be a problem. If the right side of the triangle \n                                         doesn’t have to mate with anything else (for example, it lies on \n                                         the edge of the paper), all this might be perfectly OK. But the \n                                         important lesson is that we can, in fact, build polygon-packed \n                                         patterns from a wide variety of triangles and have the contours \n                                         behave themselves, so long as we choose triangles whose sides \n                                         are integer numbers of units in length.\n                                             What about other polygons, though? Building ﬂaps from \n                                         triangles alone would be quite inefﬁcient: triangles don’t pack \n                                         circles very efﬁciently.\n                                             The next level up in the hierarchy of polygons is quadri-\n                                         laterals. The same question applies: what quadrilateral will \n                                         give well-behaved, evenly spaced axis-parallel contours all the \n                                         way around the quadrilateral?\n                                             Certainly, if we want contours to run with constant spac-\n                                         ing, evenly from vertex to vertex, all four sides must be integer \n                                         numbers of units in length.\n                                             But there’s more to it than that. Figure 14.51 shows a \n                                         quadrilateral whose sides are all integer lengths with axis-\n                                         parallel contours along the sides. The straight skeleton (in this \n                                         case, the sawhorse molecule) is drawn inside. The question is: \n                                         will the contours line up?\n                                             In general, even with integer-length sides, for an arbi-\n                                         trary quadrilateral, the contours won’t line up, as shown in \n                                         Figure 14.52. In this case, we can get evenly spaced contours \n                                         on three sides of the quadrilateral, but they’re misaligned on \n                                         the fourth side.\n                                             And again, like the triangle, such a misalignment may \n                                         be acceptable, if that fourth side is on the edge of the paper; \n                                         the misaligned contours won’t cause any further problems. \n                                         In general, though, we’ll have to be more selective with the \n\n     672\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ea6"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 65,
  "content": "./origami_dataset_dev/Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li/page065_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ea7"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 690,
  "content": "                                                    l                               α\n                                                    g\n\n\n            Figure 14.57. \n            Geometry of a comb aligned to \n            the edge of the paper. The axial \n            contours (and thus the hinge \n            lines) are tilted with respect to \n            the paper edge at an angle . \n            The ﬁlament length is l; the gap \n            length is g. The corresponding \n            stick ﬁgure is shown at the top.\n\n                                         or equivalently,\n                                                                         1\n                                                    α          = sin−1        .            (14–17)\n                                                                       1+ 2 f\n\n                                             Thus, you can create any aspect ratio comb by suitable \n                                         choice of the tilt angle: choose your comb ratio f, then use \n                                         Equation (14–17) to solve for the tilt angle . By small adjust-\n                                         ments of the tilt angle and ﬁlament length, you can get the \n                                         axial contour spacing to match up with an integral multiple of \n                                         the unit width for the rest of the crease pattern, and you can \n                                         use the triangular or quadrilateral polygons from this section \n                                         to match up this tilted structure with a more conventionally \n                                         designed portion of the crease pattern.\n                                             Two examples that incorporate this comb idiom are shown \n                                         in Figures 14.58 and 14.59. The Euthysanius Beetle has long, \n                                         feathery antennae, in addition to the usual complement of legs \n                                         and body parts. We can set up a comb for each of the anten-\n                                         nae across the top of the paper, then use a triangle to join the \n                                         angled contours to a regular box-pleated structure for the rest \n                                         of the ﬁgure.\n                                             The Spur-Legged Dung Beetle incorporates six such combs, \n                                         one on each leg. Again, we can use triangular hinge polygons to \n                                         join the angled axis-parallel contours to a regular box-pleated \n                                         structure for the rest of the form.\n\n     678\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ea8"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 647,
  "content": "            them—an “axial+1/2” contour. And so that part of the fold, \n            and anything that that folded contour connects to, will be half \n            a unit wide, a potentially undesirable outcome.\n                Note that while we chose the elevation assignments of the \n            contour lines along the top and bottom edges of the polygon, the \n            contour lines along the sides were forced by their bouncing off \n            of the ridge creases inside the polygon. So one might consider \n            that, perhaps with a different shaped polygon—one with a dif-\n            ferent pattern of ridge creases inside it—the bouncing might \n            work out the way we want. And things might well work for a \n            different hinge polygon, but wouldn’t it be nice to know how to \n            pick one? Or, at least, how not to pick the wrong one?\n                Figure 14.11 is a good example of a wrong polygon. With-\n            out even working out the ridge creases and bouncing creases \n            inside the polygon, we could have determined we were in \n            trouble from a simple parity argument. There must be some \n            contour line at every grid point on the boundary of the hinge \n            polygon that is perpendicular to the polygon boundary (be-\n            cause the contours are axis-parallel, the polygon boundaries \n            are hinges, and axis-parallel creases are perpendicular to \n            hinges). So we could just move around the outside, alternating \n            in parity. We are forced to have two consecutive contours of the \n            same parity somewhere along the way because the semiper-\n            imeter of the polygon is an odd number of units in length.\n                And so, the ﬁrst rule of packing is clear: if we want to \n            avoid folded contours that create half-unit-width ﬂaps, we \n            should make sure that the distance between any two points \n            on the polygon boundary that are required to be axial is an \n            even number of units, measuring around the boundary of the \n            polygon.\n                This even/odd condition on the boundary is necessary; \n            alas, it is not sufﬁcient. It is possible to satisfy the even-\n            semiperimeter condition for a speciﬁc polygon but to still \n            have bouncing in the interior cause problems with the desired \n            alternation of contours. Figure 14.12 shows a slightly more \n            complex polygon whose straight skeleton induces a collision \n            of contours.\n                Now, you might notice a feature in each of these poly-\n            gons that is a bit out of the ordinary: in both of them, the \n            straight skeleton contains vertices that don’t lie on the grid. \n            And those non-grid vertices are, in fact, the nasty beasties of \n            both of these patterns. At vertices where ridge creases come \n            together, some additional axis-parallel creases must arise. If \n            we force those points to lie on grid points, then we can insure \n            that those additional creases are well behaved on-grid axis-\n            parallel creases.\n\n                                                                                                     635\n                                                               Chapter 14: Polygon Packing \n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ea9"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 121,
  "content": "            variety of ﬁsh with dorsal, ventral, anal, caudal, and pectoral \n            ﬁns, as the example shown in Figure 5.17 illustrates.\n                By using this structure and varying the depth of the \n            splits and the shaping and orientation of the resulting ﬂaps, \n            you can create quite a wide variety of ﬁsh. The Goatﬁsh also \n            illustrates another type of split—splitting one ﬂap into three \n            (which are used for the lower jaw and barbels). You will ﬁnd \n            a folding sequence for this new split in the instructions for \n            the Goatﬁsh at the end of this chapter.\n                In fact, there are many ways to split a point, and a point \n            can be split into two, three, four, ﬁve, or more points. We’ve \n            already seen two ways to split a point into two; here is another \n            way in Figure 5.18, which also readily generalizes to three or \n            four smaller points.\n\n\n                    A                     A                      A                     A\n\n\n            Figure 5.18. \n            Crease patterns for a kite ﬂap and the ﬂap split into two, three, and \n            four points. To compare scales, the downward diagonal crease A is \n            in the same place in all four patterns.\n\n                The shaded regions in these patterns go unused and \n            would typically be folded underneath. Rather than drawing \n            in the creases they would incur, I’ve simply left them blank \n            to emphasize the common structure of the three splits.\n                These three patterns are part of a family that can easily \n            be extended to larger numbers of points. You can, of course, use \n            these three patterns as recipes to be called upon whenever two, \n            three, or four points are needed, but it is much more useful to \n            examine their structure, to break them down into components \n            and understand the contribution of each component.\n                The ﬁrst part of this examination is to identify the re-\n            gions of the crease patterns that become the tips of the vari-\n            ous points. Since the folded ﬂaps come to sharp points, their \n            tips correspond to single points on the crease pattern. These \n            points are identiﬁed in Figure 5.19 by dots.\n                Now, as we saw with the Yoshizawa split, what deﬁnes \n            two or more points is not so much the points themselves, \n\n                                                                                                     109\n                                                                 Chapter 5: Splitting Points\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0eaa"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 135,
  "content": "            Goatfish\n\n\n             1. Begin with a square, colored   2. Fold the paper in half from 3. Bring all four corners\n             side up. Fold and unfold along the edge to edge and unfold.   together at the bottom,\n             diagonals. Turn the paper over.   Repeat the other direction. forming a Preliminary Fold.\n\n\n                                                                                                     123\n                                                               FoldingChapter Instructions: 5: Splitting Goatfish Points\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0eab"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 653,
  "content": "            Figure 14.17. \n            Contour map and folded model for the Longhorn Beetle. \n\n            an update from the Cerambycid Beetle shown earlier. In this \n            beetle, I have added rivers (to space the legs apart) and level \n            shifters (to widen the abdomen). In a pure box-pleated design, \n            the leg spacer rivers are squeezed between the front and hind \n            legs, but the introduction of a Pythagorean stretch adds just \n            enough extra space to make everything ﬁt neatly.\n                A fully assigned crease pattern and photograph of the \n            ﬁnished model are given at the end of the chapter.\n                The most common location for a Pythagorean stretch is \n            at the corners of the square, as in Figure 14.17, since that \n            is the most common place where square packing leads to an \n            inefﬁcient collision, but they can in fact be used anywhere. \n            The Camel Spider shown in Figure 14.18 uses a total of eight \n            Pythagorean stretches: one at each of the four corners and four \n            more in the interior of the pattern, to obtain the greatest ef-\n            ﬁciency in the usage of paper for this long-legged creature.\n                This, too, has a fully assigned crease pattern and photo-\n            graph at the end of the chapter.\n                There is a special case of Pythagorean stretch that is par-\n            ticularly elegant, which is the limiting case of equality in the \n            preceding equation. In this case the inset distance h vanishes \n            and the corners of the gusset are located at the circle centers. \n            This happens when the bounding rectangle and the minimum \n            distance form a Pythagorean triple, that is,\n\n                                     2   2   2\n                       s1             + s2 = d  .              (14–4)\n\n                                                                                                     641\n                                                              Chapter 14: Polygon Packing \n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0eac"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 109,
  "content": "            1. Fold and unfold to define the 2. Fold and unfold along angle 3. Fold and unfold along a\n            desired location of the base of the bisectors.                horizontal crease that passes\n            two flaps.                                                    through the intersection of the two\n                                                                          bisectors.\n\n\n            4. Sink the point on the crease you 5. Mountain-fold the far edge 6. Finished pair of flaps.\n            just made.                     behind while spread-sinking the\n                                           corners. Turn the model over.\n            Figure 5.5. \n            Alternate folding sequence for the optimum-length pair of points.\n\n            certainly good enough to generate a short pair of ears, but it \n            would be nice to do better—for example, to take a three-legged \n            Bird Base animal and give it that elusive fourth leg.\n\n            5.2. The Ideal Split\n            The key to making two longer ﬂaps is to ignore the foreground \n            and examine the background; that is, turn our attention away \n            from the ﬂaps themselves and instead, look at the space \n            around the ﬂaps. The thing that makes two ﬂaps two instead \n            of one is not the paper making up the ﬂaps; it’s the space \n            we’ve created between the ﬂaps that deﬁnes the pair. What \n            limits the length of the ﬂap is the length of the gap. And that \n            is signiﬁcant because the gaps as well as the ﬂaps consume \n            paper—and so we must allocate paper for both.\n                A small thought experiment will bring this out. Suppose \n            you wished to travel from the tip of one ﬂap to the tip of the \n\n                                                                                                      97\n                                                                 Chapter 5: Splitting Points\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ead"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 486,
  "content": "                                         several segments, taped together at the edges to form a somewhat \n                                         larger rectangle. Having already resigned ourselves to using a \n                                         rectangle, we can simply convert the taped rectangle into a new, \n                                         slightly longer rectangle that is once again a single uncut sheet, \n                                         as shown in Figure 12.14.\n\n\n                  1. The unfolded cut-and-taped model is a       2. So the model could be folded by starting\n                  flat sheet of paper.                           with an uncut sheet of the same size.\n                                         Figure 12.14. \n                                         The unfolded model, and an uncut sheet that can be used to fold the \n                                         longer box.\n\n                                             So the box can be made longer by adding more paper to the \n                                         starting rectangle. We have changed its proportions, of course—\n                                         we started with a 3 × 2 (or equivalently, 6 × 4) rectangle; we \n                                                         1\n                                         now are using a 3 /2 × 2 (or equivalently, 7 × 4) rectangle. But \n                                         if you’re folding from a rectangle, one rectangle is nearly as \n                                         good as another.\n                                             One might begin to suspect that this technique could be \n                                         applied universally; everywhere you want to lengthen a point, \n                                         you simply add a segment of paper to the folded model, then \n                                         unfold it to get the new crease pattern. But this is not always \n                                         possible; in fact, it is rarely possible with most traditional \n                                         origami bases. As we saw with grafting, we were often forced \n                                         to add paper that showed up in several different places. It’s \n                                         difﬁcult to add a local graft in a radial-crease base, such as the \n                                         kind we constructed with circle/river packing. To see why, let’s \n                                         take the traditional Bird Base and try to lengthen just one of \n                                         its points by the same grafting strategy.\n                                             As Figure 12.15 shows, it doesn’t work. You can certainly \n                                         lengthen the point by cutting and inserting a section of paper, \n                                         but the resulting shape, when unfolded, cannot be ﬂattened. \n                                         Often in origami, we start with a ﬂat sheet of paper and try to \n                                         make a model that folds ﬂat; here, we have the opposite prob-\n                                         lem: The model is ﬂat, but the sheet from which it springs is \n                                         not! So one cannot willy-nilly use grafting as a means to change \n                                         the proportions of a small portion of the model.\n\n     474\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0eae"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 492,
  "content": "               1. Split a box down        2. Like this. Combine      3. Now swing the side pieces up\n               the middle.                the parts with another     and join the raw edges.\n                                          box.\n\n\n                                  4. A three-dimensional box and its crease pattern.\n\n                                         Figure 12.20. \n                                         A fully three-dimensional box.\n\n                                             This shape doesn’t look very much like a boxcar yet. But \n                                         by using the techniques shown in this section, one can lengthen \n                                         the car, add extra paper along the bottom, turn the excess \n                                         underneath—and suddenly, the model begins to look very \n                                         boxcar-like. Connecting the boxcars—by turning the single-car-\n                                         square into a chain of squares, i.e., a long rectangle—yields an \n                                         entire train. The use of primarily orthogonal creases allows rela-\n                                         tively straightforward grafting of different box-like structures \n                                         together. But the ﬁnal element, which bloomed in the hands \n                                         of Elias, Hulme, and others, was that box-pleated structures \n\n     480\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0eaf"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 323,
  "content": "            Figure 9.19. \n            Left: Add a circle for the abdomen. \n            Right: crystallized circle packing.\n\n            the pedipalps; we could put the head circle in either one. Both \n            options are shown in Figure 9.20.\n                Since the head ﬂap was the last ﬂap that needed to be \n            placed, you could just as well place circles in both gaps and then \n            choose which ﬂap becomes the head once the base is folded. In \n\n\n            Figure 9.20. \n            Left: one possible choice for the head circle. \n            Right: the other choice.\n\n                                                                                                     311\n                                                                  Chapter 9: Circle Packing\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0eb0"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 445,
  "content": "            Figure 11.36. \n            Crease pattern, base, and folded model of the Flying Grasshopper.\n\n            you identify where a pair of stubs was added in the middle of \n            the pattern?\n                Computation also allows one to introduce symmetries into \n            the crease pattern, either to make the folding sequence simpler \n            or for aesthetic reasons. A host of symmetric requirements \n            can be imposed as additional equations to solve: forcing ﬂaps \n            to be mirror-image, or requiring active paths to fall along the \n            symmetry line. This last condition is required to fold a plan \n            view model—one that can be oriented with half the layers to \n            the left of the axis and half to the right—or equivalently, to \n            fold a model with a closed back. You can also force creases \n            to run at particular angles. In the Alamo Stallion shown in \n            Figure 11.37, several such symmetries are imposed: \n\n                • An active path runs from the head to the tail so \n                that the back is seamless.\n\n                • The base is symmetric about a line of bilateral  \n                symmetry.\n\n                • By forcing particular fold angles, its folding   \n                sequence becomes relatively tractable and requires \n                few arbitrary reference points.\n\n                This last symmetry is a bit subtler. Observe that the \n            equilateral triangle in the lower left is aligned with the ridge \n\n                                                                                                     433\n                                                                   Chapter 11: Tree Theory\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0eb1"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 451,
  "content": "             13. Fold the corner to the crease    14. Refold on the creases you      15. Turn the paper over.\n             you just made.                       made in step 12.\n\n\n             16. Fold and unfold. All six         17. Mountain-fold the paper        18. Squash-fold the flap\n             creases hit the diagonal at the      in half along the diagonal.        symmetrically. The valley fold\n             mark you made in step 9.                                                lies on an existing crease.\n\n\n                                         1/4\n\n\n             19. Turn the paper over and       20. Crimp the model symmetrically  21. Crimp the model symmetrically\n             rotate 1/4 turn so that the white so that two corners end up on the  so that the next two corners end up\n             triangle is at the bottom.        vertical crease.                   on the vertical crease.\n\n     440\n                         Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0eb2"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 337,
  "content": "            ways, depending on which features are emphasized, which \n            are merely suggested, and how the detail folds and shaping \n            are rendered.\n                You should also compare this crease pattern and base to \n            that of the Turtle (Chapter 7, Figure 7.1), which was also made \n            from a six-ﬂap base. The turtle base had all its creases running \n            at multiples of 30° and thus had a more symmetric crease pat-\n            tern and more neatly aligned edges. The songbird base here is \n            less symmetric, but is slightly larger relative to the size of the \n            square. Can you make a turtle from this base?\n                The N = 7 solution combines both squares and equilateral \n            triangles into the underlying symmetry. An unusual feature \n            of this solution is the fact that one of the circles (the one in \n            the lower left corner) doesn’t touch any other circle. The pa-\n            per between the lower left circle and the rest of the model is \n            wasted. One could put this extra paper to use, however, by en-\n            larging the lower left circle (corresponding to lengthening the \n            associated ﬂap) and using this base to fold a model with one \n            particularly long appendage, for example, an extra-long tail. \n            We can carry out this enlargement by expanding the lower left \n            circle until it touches one of the others (the middle circle, as \n            it turns out). This expansion gives the circle pattern shown in \n            Figure 9.36, corresponding to a shape with six equal-sized ﬂaps \n            and a seventh slightly larger one. I have also superimposed a \n            crease pattern that gives a seven-ﬂap base. I encourage you to \n            enlarge the ﬁgure, draw it on a square, and fold the base; it is \n            remarkable how all of the circles line up with each other once \n            you have collapsed the square into the base.\n\n\n                                                                        Figure 9.36. \n                                                                        Crease pattern and base for the \n                                                                        N = 7 circle packing with one \n                                                                        ﬂap enlarged.\n\n                There is a mathematical term for the condition in which a \n            circle is free to move without changing the overall scale of the \n            model: If any circle can move without altering the scale, the \n            pattern is said to be unstable; any pattern in which no circle can \n            move is said to be stable. It is easy to see that a pattern is stable \n\n                                                                                                     325\n                                                                  Chapter 9: Circle Packing\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0eb3"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 479,
  "content": "            lowed. Those two elements are a technique for building and \n            linking boxes (used for the bodies of the engine and the two \n            cars), and techniques for creating ﬂaps (used in the wheels and, \n            especially, the smokestack). Both boxes and ﬂaps grow out of \n            the same rectilinear grid of creases, which allows arbitrary \n            combinations of boxes and ﬂaps to be created and combined \n            at will.\n\n            12.2 Box Folding\n            The techniques to create box-like structures have their anteced-\n            ents in well-known traditional models that include (perhaps not \n            surprisingly) a simple box, known for decades, if not hundreds \n            of years. The box displays the underlying mechanism that \n            enables box pleating as a style and that makes up the overall \n            structure of Mooser’s Train. Box pleating as a style was sitting \n            there all along, waiting to be discovered, but the most common \n            folding sequence for the traditional box (given in Figure 12.6) \n            and the diagonal orientation of the model obscure the underly-\n            ing structure and its relationship to the train.\n                This is a fairly common occurrence in origami: the pub-\n            lished folding sequence is usually constructed for ease of fold-\n            ability, or in some cases, for elegance of presentation (with a \n            surprise move at the end). In either situation, the choice of \n            folding sequence may well conceal, rather than illuminate, the \n            underlying structure of the model.\n                Superﬁcially, what we have here is simply a box with two \n            handles. But let’s look at it as a collection of forms. We have a \n            linear series of forms: \n\n                • a ﬂat form (the handle),\n\n                • a transition from a ﬂat form to a three-dimensional \n                form,\n\n                • the three-dimensional form (the box itself),\n\n                • another transition from the three-dimensional form \n                to a ﬂat form,\n\n                • and ﬁnally another ﬂat form (the opposite han-\n                dle).\n\n                How does this combination of two- and three-dimensional \n            forms arise from the ﬂat sheet? The best way to ﬁnd out is to \n            take the model back to the ﬂat sheet, keeping track of which \n            parts came from where. If we label the features of the box—base, \n            side, front, rear, handle—and note where each region comes \n\n                                                                                                     467\n                                                                  Chapter 12: Box Pleating\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0eb4"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 478,
  "content": "                                         Figure 12.5. \n                                         Left: the crease pattern for a Frog Base. Suppose we move the center \n                                         vertex upward. \n                                         Right: the new ﬂat-foldable crease pattern. Note that every other \n                                         interior vertex has also moved.\n\n                                         In fact, they only extend in one of four different orientations: \n                                         up/down, left/right, diagonally upward, diagonally downward. \n                                         And the creases don’t fall just anywhere: There is an underly-\n                                         ing grid, so that up/down and left/right creases run solely along \n                                         grid lines, while diagonal creases always connect diagonal grid \n                                         points. So the crease pattern is quite tightly constrained.\n                                             The constraint of the grid brings order to the crease pattern: \n                                         It winnows the unimaginably vast space of possible patterns \n                                         down to a manageable set. And most importantly, it limits the \n                                         ways that different parts of the pattern can interact with each \n                                         other. The problem with an old-style base like the Frog Base is \n                                         not just that the central point interacts with the surrounding \n                                         points: It’s that it interacts with each surrounding point in a \n                                         different way. So one type of change creates several types of \n                                         changes in its surroundings, which then create more changes \n                                         in theirs, and so forth. This means that the complexity induced \n                                         by a change quickly cascades as the change propagates away \n                                         from the original perturbation. But in a box-pleated pattern, by \n                                         contrast, where different parts of the crease pattern correspond \n                                         to different parts of the model, all interact in the same basic \n                                         way. And so, a fairly small tool kit of basic techniques can be \n                                         combined and built up into quite complex structures.\n                                             The basic elements of this tool kit are visible in Mooser’s \n                                         Train, the archetype for all the box-pleated models that fol-\n\n     466\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0eb5"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 450,
  "content": "              4. Make another pinch along          5. Fold the two indicated          6. Fold the corner up along the\n              the left edge.                       points together, make a pinch      diagonal so that the crease hits\n                                                   along the edge, and unfold.        the pinch you just made.\n\n\n              7. Fold the top right corner to      8. Fold the bottom corner up     9. Make a pinch through the point\n              the two indicated points, make       to lie on the diagonal so that   where the corner touches the\n              pinches along the top and right      the crease hits the left corner. diagonal.\n              edges, and unfold.\n\n\n             10. Unfold the paper.                 11. Fold the left corner to the      12. Fold and unfold.\n                                                   pinch and unfold.\n\n                                                                                                                 439\n                                                                 Folding Instructions:Chapter 11: Alamo Tree  StallionTheory\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0eb6"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 336,
  "content": "            Figure 9.34. \n            Circle and crease pattern for the \n            Frog Base.\n\n                                         along symmetric lines. Because it has a line of bilateral sym-\n                                         metry with two ﬂaps lying on one side and two on the other, \n                                         it seems ideally suited for mammals and birds. I have used it \n                                         for a general-purpose bird base that gives both legs and wings \n                                         quite efﬁciently. The two unused corner ﬂaps may also be pulled \n                                         out and used to great effect in color changes to make multiple-\n                                         colored birds. An example of this base and a two-colored bird \n                                         folded from it are shown in Figure 9.35; the folding instructions \n                                         are given at the end of the chapter.\n\n\n                                         Figure 9.35. \n                                         Crease pattern, base, and folded model for the Songbird, based on \n                                         the N = 6 circle packing.\n\n                                             This model is the second Songbird in this book (the ﬁrst \n                                         was in Chapter 6). The two models illustrate the fact that a \n                                         single subject can be realized as an origami model in different \n\n\n     324\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0eb7"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 322,
  "content": "                                             We then inﬂate the circles, moving them around to keep \n                                         them from overlapping, until they are locked into position. \n                                         Figure 9.17 shows the result of the tarantula circle crystalliza-\n                                         tion, which is the largest possible book-symmetric packing of \n                                         eight circles into a square. (An equivalent solution is the same \n                                         pattern ﬂipped vertically.) The radius of a circle relative to the \n                                         length of the side of the square is 0.2182, so the length of the leg \n                                         ﬂaps will be about 22% of the length of the side of the square.\n                                             Now, we add the pedipalps, which would be represented \n                                         by two paired circles about half the size of the leg circles. The \n                                         obvious place to put them is in the center of the large hexagon \n                                         in the lower half of the square. Continuing the process of inﬂa-\n                                         tion in Figure 9.18, we drop two small circles into an opening \n                                         of the pattern, then expand them until they, too, are ﬁrmly \n                                         wedged against their neighbors.\n\n\n                                         Figure 9.18. \n                                         Left: add two circles for pedipalps. \n                                         Right: crystallized circle packing.\n\n                                             With this conﬁguration, the pedipalp ﬂaps turn out to be \n                                         0.583 times as long as the leg ﬂaps—just about right.\n                                             Next comes the abdomen, whose circle should also be about \n                                         half the size of the leg circle, and so we can ﬁt it into the top \n                                         middle of the square, as shown in Figure 9.19.\n                                             When this circle is inﬂated, it turns out to be 0.826 times \n                                         as long as a leg ﬂap—longer than we might like, but perfectly \n                                         acceptable since it is very easy to shorten a ﬂap.\n                                             Last comes the head. There are two same-size holes re-\n                                         maining in the circle pattern either just above or just below \n\n     310\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0eb8"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 444,
  "content": "                                         Figure 11.35. \n                                         Crease pattern, base, and folded model of the Scorpion.\n\n                                         to the full crease pattern takes less than ﬁve minutes, although \n                                         folding the crease pattern into a base may take many hours \n                                         after that!\n                                             Computerized solution offers an additional beneﬁt: preci-\n                                         sion. It is possible to specify a different value for the length \n                                         of every ﬂap individually. This is particularly desirable when \n                                         there are many ﬂaps of unequal length in which the lengths \n                                         must fall in some type of regular progression. An example \n                                         requiring this is a scorpion. There are many scorpions in the \n                                         origami literature; without exception, they all have legs the \n                                         same length. But in the actual creature, the legs get longer \n                                         from front to back; they are also spaced out along the body. By \n                                         plugging in a tree with the appropriate leg lengths, it is pos-\n                                         sible to compute a base with the graduated distribution of legs, \n                                         permitting a more realistic representation of the subject.\n                                             Computational techniques are also helpful in creating \n                                         bases for extremely complicated subjects, such as those with \n                                         many ﬂaps in varying sizes. A ﬂying grasshopper, for example, \n                                         has six legs—two are much longer than the other four—along \n                                         with antennae (of intermediate length), head and thorax (short) \n                                         and abdomen (long). The legs, wings, and antennae account \n                                         for six pairs of ﬂaps. There are many possible arrangements \n                                         of circles representing those ﬂaps. One of the more symmetric \n                                         and pleasing arrangements is the crease pattern shown in \n                                         Figure 11.36, along with its base and the folded model. Can \n\n     432\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0eb9"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 493,
  "content": "                   1. Fold the crease pattern into a tube.           2. Squeeze the top and             3. A three-dimensional\n                                                                     bottom of the tube.                box.\n                Figure 12.21. \n                The box can also be thought of as a pinched tube.\n\n\n                          1. The basic crease pattern for Mooser’s                 2. The basic box for Mooser’s Train.\n                          Train.\n\n                Figure 12.22. \n                The building-block crease pattern and box for Mooser’s Train.\n\n                                                                                                                                  481\n                                                                                      Chapter 12: Box Pleating\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0eba"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 487,
  "content": "            1. Crease pattern for the Bird Base. 2. Cut the point that we 3. Insert a section of 4. Unfold.\n                                           want to lengthen.   paper to lengthen the\n                                                               point.\n\n\n                                           5. The unfolded paper cannot be flattened.\n            Figure 12.15. \n            A failed attempt to lengthen a single Bird Base point by an inserted \n            graft.\n\n                But with the 3 × 2 box—with box-pleated models, in \n            general—you can often change the proportions of parts of the \n            folded model by changing the proportions of the rectangle from \n            which you started as if you had cut the original rectangle and \n            inserted a strip. What makes it all possible is the angular \n            relationship between the cuts and creases that cross the cut \n            (and here I refer only to creases that are folded, not to crease \n            marks left over from some prior fold-and-unfold step). If all \n            creases that cross a cut do so at 90° to the cut, then one can, in \n            general, add a strip of paper between the cut edges to alter the \n            proportions of the model. We saw this when we added grafted \n            strips to uniaxial bases; we cut along axial creases so that the \n            only creases that crossed the cut were the hinge creases, which \n            by deﬁnition cross at 90°.\n\n                                                                                                     475\n                                                                  Chapter 12: Box Pleating\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ebb"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 108,
  "content": "                                                      A\n\n\n                                          7. Grasp flap A, and pull it lower 8. The maximum length pair of\n            Figure 5.3.                   while expanding the spread-sunk points.\n                                          corners. Flatten when the two\n            Construction of the maximum-\n                                          spread-sunk triangles meet in the\n            length pair.                  middle of the paper.\n\n\n            Figure 5.4. \n            First fold for the optimum-\n            length pair.\n\n                                         points possible extending from that baseline. Examination of \n                                         the geometry of the point pair shows that, with a few precreases, \n                                         we can go straight to the optimum-length fold, as shown in \n                                         Figure 5.5.\n                                             Even in the optimum-length case, the two ﬂaps you end \n                                         up with are much shorter than the original ﬂap you started \n                                         with. The ratio of their lengths can be worked out using a bit \n                                         of trigonometry.\n\n                                                        short flap tan 33.75°\n                                                                 =           ≈ 0.277.         (5–1)\n                                                         longflap   tan67.5°\n                                             Each of the short ﬂaps is 28% of the length of the long \n                                         ﬂap; in other words, we’ve given up almost a factor of four in \n                                         length. This seems unnecessarily wasteful. One might think \n                                         that the length of a long ﬂap could somehow be divided up when \n                                         we split the ﬂap; one might think we should be able to divide \n                                         a long ﬂap of length 1 into two ﬂaps of length 1/2, or three of \n                                         length 1/3, and so forth.\n                                             And in fact, we can do better than the Yoshizawa split. \n                                         This procedure is quick and (relatively) simple, and it’s \n\n      96\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ebc"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 134,
  "content": "              36. Mountain-fold the   37. Fold the top edge     38. Bring the near       39. Fold the wing\n              rear flap to the front  down.                     wing in front of the     down and unfold.\n              as far as possible.                               head.                    Repeat behind.\n\n\n              40. Fold the wing tip   41. Fold the wing tip     42. Unfold to step 40.   43. Crimp the wing\n              down. Repeat behind.    back up so that the left                           on the existing\n                                      edge is aligned with                               creases. Repeat\n                                      the layer beneath.                                 behind.\n                                      Repeat behind.\n\n\n              44. Pull out some       45. Tuck the small        46. Shape the head      47. Finished Pteranodon.\n              loose paper from the    corner under a raw        and legs.               Hold the neck and feet\n              leading edge of the     edge. Repeat behind.                              and pull to make him flap\n              wing. Repeat behind.                                                      his wings.\n\n     122\n                         Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ebd"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 652,
  "content": "                                         this inset distance, we could easily construct all of the other \n                                         creases by simple geometry or folding.\n                                             Deﬁne the following parameters of the conﬁguration:\n\n\n                                             • Let s1 and s2 be the sides of the outer rectangle (the \n                                             bounding box of the two circle centers).\n\n                                             • Let h be the inset distance of the inner rectangle \n                                             from the outer one.\n\n                                             • Let t be the inset distance of the peak of the rabbit \n                                             ear molecule from the outer rectangle.\n\n\n                                             • Let d = r1 + r2 be the minimum allowed distance \n\n                                             between the two circles (of radii r1 and r2, respec-\n                                             tively).\n\n                                             Then a little bit of geometry and algebra gives the follow-\n                                         ing formulas for both h and t:\n                                                            ()s + s − d\n                                                   t      =  1   2       ,                   (14–1)\n                                                                2\n\n                                                            ()s + s − d   ()d − s ()d − s\n                                                     h    =  1   2     −       1         2    .      (14–2)\n                                                                2               2\n                                             With these two formulas, one can easily solve for the inset \n                                         distances h and t, and can then construct the rest of the ridge \n                                         creases.\n                                             In general, there will be a solution if and only if\n\n                                                                1\n                                                             f = ()cscα − 1\n                                                                2         ,                  (14–3)\n\n                                         that is, if and only if the diagonal of the outer bounding box \n                                         is greater than or equal to the minimum spacing between the \n                                         circle centers. This is just the circle-packing condition. Thus, \n                                         there is a solution whenever the sides of the bounding box and \n                                         their minimum spacing satisfy an inequality form of Pythago-\n                                         ras’ formula for right triangles. Because of this correspondence, \n                                         I call these overlapping-square structures Pythagorean stretch-\n                                         es—Pythagorean because of the connection to right triangles, \n                                         and stretches, because, like the gusset molecule, they arise \n                                         by “stretching” diagonally opposite corners of a sawhorse (or \n                                         Waterbomb) molecule. \n                                             Even a little overlap between squares can kill a pure circle-\n                                         packed design that is otherwise highly efﬁcient, but introduc-\n                                         ing a Pythagorean stretch can make everything ﬁt just so. An \n                                         example is shown in Figure 14.17, which is a Longhorn Beetle, \n\n     640\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ebe"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 646,
  "content": "                                         vary is their width relative to their length. For many designs, \n                                         even this is not too important: a fat ﬂap can be narrowed, par-\n                                         ticularly easily if it has been turned at a right angle relative \n                                         to the axis during the shaping folds.\n                                             So the primary motivation for picking the basic unit is \n                                         to establish a sort of minimum feature size. This becomes \n                                         particularly important when the desired subject has a fairly \n                                         wide region—the main body, for example. One can use level \n                                         shifters fairly easily to double the width of a portion of a model, \n                                         but higher multiples are trickier: one must use multiple level \n                                         shifters, or more complex level shifters, and the shifting itself \n                                         consumes paper that might have been desired for other pur-\n                                         poses.\n                                             Once we have established a grid, we very often would like \n                                         to keep all of the creases on the grid—ideally, without using \n                                         level shifters at all. That means that in every region of the \n                                         paper, we would like our contours to alternate axial, axial+1, \n                                         axial, axial+1, and so forth.\n                                             This goal may not be possible, though. In fact, it is possible \n                                         to choose hinge polygons that make this choice impossible. A \n                                         situation that arises not infrequently is to have a middle ﬂap \n                                         positioned along the center line of the base, which is usually \n                                         an axial fold (so that the base can be opened out in plan view). \n                                         When this situation occurs, the contour down the center is axial; \n                                         the contour one unit away is axial+1; and then they alternate \n                                         from there, as shown in Figure 14.11, as one moves around the \n                                         outside of the polygon.\n\n\n            Figure 14.11. \n            A hinge polygon centered on an \n            axial contour.\n\n                                             Now, if we start with an axial contour in the middle and, \n                                         as shown on the left in Figure 14.11, start working our way \n                                         around the polygon, we ﬁnd that when we get to the middle \n                                         of the left side, there are two axial+1 contours one unit apart. \n                                         That means there must be a folded contour halfway between \n\n     634\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ebf"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 120,
  "content": "                                         a length 0.414 times the length of the ﬂap that you started \n                                         with, which means that the total ﬂap length—the sum of the \n                                         lengths of the four created ﬂaps—is four times that ratio, or \n                                         1.657 times the length of the starting ﬂap. In other words, the \n                                         total length of the created ﬂaps is actually longer than that of \n                                         the ﬂap you started with.\n                                             Since the result of a split middle ﬂap is four more middle \n                                         ﬂaps, these may be thinned and split again by the same process, \n                                         and the process repeated ad inﬁnitum. At each repetition, the \n                                         total ﬂap length increases by a factor of 1.657. The somewhat \n                                         surprising implication is that the total ﬂap length increases \n                                         without limit. Of course, the number of layers increases ex-\n                                         tremely rapidly as well, setting a practical upper limit to ﬂap \n                                         multiplication.\n\n                                         5.4. More Complex Splits\n                                         One can split multiple ﬂaps to different depths to achieve dif-\n                                         ferent effects and further variation. We saw in the ﬂapping \n                                         Pteranodon that splitting two of its ﬂaps could be used to extend \n                                         the life of the Bird Base. A Bird Base, of course, has a total of \n                                         four ﬂaps. All four can be split, yielding structures that let us \n                                         move away from birds and into other kingdoms. Splitting all \n                                         four points of a Bird Base gives enough small ﬂaps to make a \n\n\n                                         Figure 5.17. \n                                         Crease pattern, base, and folded model of the Goatﬁsh.\n\n     108\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ec0"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 691,
  "content": "             Figure 14.58. \n             Contour map and folded model of the Euthysanius Beetle. \n\n\n             Figure 14.59. \n             Contour map, base, and folded model of the Spur-Legged Dung \n             Beetle. \n\n                                                                                                                 679\n                                                                       Chapter 14: Polygon Packing \n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ec1"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 685,
  "content": "                                                                               Figure 14.51. \n                                                                               A quadrilateral molecule with \n                                                                               axis-parallel contours around \n                                                                               its edges and its interior circle. \n                                                                               Can we make the contours line \n                                                                               up when they reﬂect across the \n                                                                               ridge creases?\n\n\n                                                                               Figure 14.52. \n                                                                               Three contours extended inward \n                                                                               from the bottom and propagated \n                                                                               across the polygon. The highlight-\n                                                                               ed intersection shows an out-of-\n                                                                               place axial contour that will force \n                                                                               a fractional-width ﬂap.\n\n             quadrilateral that we use if it is to be packed on all four sides. \n             One strategy is to narrow the range to quadrilaterals with \n             two right angles or, equivalently, symmetric trapezoids. An \n             example of each is shown in Figure 14.53, and in these quads, \n             the contours do indeed all line up the way we want.\n\n\n             Figure 14.53. \n             Left: a quadrilateral with two adjacent right angles and all integer \n             sides allows its contours to connect up neatly across the polygon. \n             Right: a symmetric trapezoid works similarly.\n\n                                                                                                                 673\n                                                                       Chapter 14: Polygon Packing \n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ec2"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 68,
  "content": "                                         Frog Base that is in a position to form a head is thick and dif-\n                                         ﬁcult to work with. One of the four ﬂaps of a Bird Base would \n                                         be easier. But to use a Bird Base to fold a four-legged animal, \n                                         you would have to represent two of the legs (usually the rear \n                                         legs) with a single ﬂap. In the 1950s and 1960s, there were a \n                                         lot of three-legged origami animals hobbling around.\n\n                                         4.2. Other Standard Bases\n                                         The Classic Bases are not the only bases in regular use. There \n                                         are a few other candidates for standard bases: the so-called \n                                         Preliminary Fold (a precursor to the Bird and Frog Bases), \n                                         the Waterbomb Base (obtainable from the Preliminary Fold \n\n\n            Figure 4.2. \n            Top to bottom: the Cupboard \n            Base, Windmill Base, Water-\n            bomb Base, and Preliminary \n            Fold.\n\n      56\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ec3"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 40,
  "content": "                                         is visible on the near side of the ﬂap). All four creases come \n                                         together at a point. Most of the time, the two valley folds are \n                                         side-by-side and the squash fold is symmetric about the valley \n                                         fold. However, a squash fold can be made asymmetrically and \n                                         it sometimes happens that the two valley folds are not side-by-\n                                         side. When that happens, a portion of the visible ﬂap can be \n                                         seen to rotate (about the intersection of all the creases). This \n                                         asymmetric version of a squash fold occurs often enough that \n                                         it is given its own name: a swivel fold.\n\n\n            Figure 2.30. \n            A swivel fold.\n\n\n                                             We have seen that mountain, valley, and rabbit-ear folds \n                                         have doubled forms where they are combined with their mirror \n                                         images. Are there similarly doubled squash or swivel folds? The \n                                         answer, surprisingly, is yes, and the combination is as difﬁcult \n                                         as the squash fold is easy. The combination of two swivel folds \n                                         is called a petal fold (it is commonly used in origami ﬂowers). \n                                         However, instead of being formed on near and far layers (as in \n                                         the reverse folds and double rabbit-ear fold), the two mirror-\n                                         image swivel or squash folds are formed side by side. The petal \n                                         fold is a very famous fold; it is the key step in the traditional \n                                         Japanese ﬂapping bird. It is diagrammed as two side-by-side \n                                         squash folds that share a common valley fold.\n\n\n            Figure 2.31. \n            The petal fold.\n\n\n                                             On the scale of origami difﬁculty (which runs simple, in-\n                                         termediate, complex, and now, super complex!), the petal fold \n                                         is only considered an intermediate maneuver, but it is usually \n\n      28\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ec4"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 726,
  "content": "                                         and more general techniques. We now look upon the origami \n                                         designers of the 1950s and 1960s as the pioneers, but we may \n                                         ﬁnd in the future that the entire 20th century is seen as the \n                                         era of origami pioneers as new and wondrous creations arise \n                                         through the use of these new techniques.\n                                             While the early American pioneers blazed the trails \n                                         through their new land, the next wave turned the rough trails \n                                         into roads using better equipment and the knowledge of what \n                                         was possible. Each wave of origami designers takes the art to \n                                         new heights, creating not just more complex structures, but \n                                         utilizing the inherent capabilities of the folded paper in new \n                                         and unexpected ways. In this work, I have focused on a fairly \n                                         narrow set of concepts, tied together by the common theme \n                                         of obtaining a base with a speciﬁed conﬁguration of ﬂaps in \n                                         a controlled way. But new designs go far beyond this narrow \n                                         concept; some—such as the intricate geometric patterns of \n                                         Chris Palmer, the curved and swirling masks of Eric Joisel, \n                                         and the organic crumpled forms of Vincent Floderer—redeﬁne \n                                         the boundaries of origami itself.\n                                             Each journey into origami design is personal and original. \n                                         It is my hope that the mathematical ideas in this book—the \n                                         tools, geometry, structures, and equations—will help you on \n                                         your own journey into design. At the very least, they perhaps \n                                         offer a new way to look at origami, a way of looking beyond \n                                         the ﬁnal appearance, beyond the linear folding sequence, to \n                                         understand the structure, its constituent elements, the build-\n                                         ing blocks of folding.\n                                             To the California Forty-Niners, “seeing the elephant” \n                                         was their grand, glorious goal. Those who were ill-equipped or \n                                         unlucky were turned back, saying that they had seen no more \n                                         than the elephant’s tracks or tail. On your origami journey, \n                                         the tools of systematic design can equip you to overcome the \n                                         challenges posed by any origami subject and bring you success \n                                         in your own quest to see the elephant.\n\n\n     714\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ec5"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 732,
  "content": "               16. Reverse-fold the               17. Reverse-fold the next set          18. Fold and unfold\n               edges underneath.                  of edges in the same way.              through the near layers.\n\n\n            19. Open-sink the corners.            20. Open-sink the next pair         21. Turn the model over.\n                                                  of edges in the same way.\n\n                                                                                                         22–24\n\n\n            22. Squash-fold the double- 23. Tuck the small       24. Fold one flap   25. Repeat steps\n            edge, pushing up from inside white corner up         back to the left.   22–24 on the right.\n            and flattening symmetrically. inside.\n\n\n            26. Fold and unfold      27. Fold and unfold           28. Turn the paper       29. Fold the bottom\n            along angle bisectors.   along four more angle         over.                    point up over all the\n                                     bisectors.                                             layers.\n\n     720\n                         Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ec6"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 54,
  "content": "                                         of origami models: They simplify the subject. Nearly all ori-\n                                         gami design is representational, but unlike, say, painting, the \n                                         constraints of folding with no cuts make it nearly impossible \n                                         to produce a truly accurate image of the subject. Origami is, as \n                                         origami artist and architect Peter Engel has noted, an art of \n                                         suggestion. Or put another way, it is an art of abstraction. The \n                                         challenge to the origami designer is to select an abstraction of \n                                         the subject that can be realized in folded paper.\n                                             You can also select a subject that lends itself to abstrac-\n                                         tion. Elephants are also popular subjects for origami design \n                                         because they offer a range of challenges. What features do you \n                                         include in the design? Is it a spare representation relying on a \n                                         few lines to suggest a form, or is it necessary to capture all of \n                                         the features of the subject? Getting the head and trunk may be \n                                         sufﬁcient for some folders, while others will be satisﬁed with \n                                         nothing less than tusks, tail, and toenails. A somewhat more \n                                         detailed elephant is shown in Figure 3.2.\n\n\n                                         Figure 3.2. \n                                         Base crease pattern and finished folded model of my African \n                                         Elephant.\n\n                                             These two designs illustrate the range of origami design: \n                                         Every origami design falls somewhere along a continuum of \n                                         complexity. Arguably, the one-crease elephant is the simplest \n                                         possible origami elephant. But the complex elephant is almost \n                                         assuredly not the most complex elephant possible. Complexity \n                                         in origami is an open-ended scale; the title of “most complex” \n                                         origami design (for any subject) is always transitory.\n                                             Furthermore, complexity carries with it a special burden. \n                                         We do not denigrate the one-crease model for its abstraction; \n                                         indeed, its abstract nature is part of its elegance and charm. \n\n      42\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ec7"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 706,
  "content": "./origami_dataset_dev/Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li/page706_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ec8"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 83,
  "content": "                There are many more distortions that can be performed \n            on the Classic Bases and their combinations, but they don’t \n            change the basic structure. A Bird Base has four long ﬂaps; \n            a distorted Bird Base still has four longish ﬂaps, even if one \n            or two are now a bit longer than the others. Offsetting and \n            other distortions can vary the distribution of edges around a \n            ﬂap, but they don’t create entirely new ﬂaps. Even if they did \n            not constitute such well-trodden turf, the Classic Bases don’t \n            have enough variety among them to serve as a starting point \n            for all origami subjects. Quite often, however, the origami \n            designer will ﬁnd that a Classic Base sufﬁces—almost. The \n            situation will arise when you need just a bit more—an extra \n            ﬂap, a single longer ﬂap, a cluster of points where one exists. \n            In such cases, we’ll need to deviate from the standard bases, \n            which we can do in several ways. We can convert single points \n            to multiples, we can add extra paper to an existing base, and \n            ﬁnally, we can design an entirely new custom-purpose base \n            starting from the structural form of the model. Each of these \n            three approaches is a stage of origami design, each moving \n            farther into new design territory.\n\n\n                                                                                                      71\n                                                                Chapter 4: Traditional Bases\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ec9"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 88,
  "content": "./origami_dataset_dev/Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li/page088_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0eca"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 97,
  "content": "                     28. Fold one layer out to the sides.                29. Pull the layers out\n                     The edge view at the top shows                      farther to the sides.\n                     which layers come out.\n\n\n                        30. Turn the model over                 31. Mountain-fold the edges underneath, but\n                        from side to side.                      only make the creases sharp on the upper part\n                                                                of the flap; the lower part should be rounded\n                                                                and three-dimensional.\n\n\n               32. Form a pleat in the flap so that the upper        33. Mountain-fold the flap\n               part bulges upward; make a smooth valley crease       underneath to lock the pleat.\n               at the base of the tail, rounding it slightly.\n\n                                                                                                                  85\n                                                   Folding Instructions: Ruby-ThroatedChapter 4: Traditional Hummingbird Bases\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ecb"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 518,
  "content": "                                             This maneuver occurs often in the box-pleated designs \n                                         of Neal Elias and Max Hulme. Elias popularized the style of \n                                         box pleating in the 1960s and early 1970s; for this reason, the \n                                         maneuver in Figure 12.48 has come to be known as the Elias \n                                         stretch. You will ﬁnd many examples and variations of the Elias \n                                         stretch in the models whose folding sequences appear at the \n                                         end of the chapter.\n\n                                         12.7. Comments\n                                         Box pleating offers an alternative design approach for generat-\n                                         ing bases with speciﬁed structure in which both the design and \n                                         the folding method can be simpler than those generated by the \n                                         tree method; in fact, the design can often be worked out in its \n                                         entirety with no more than a pencil and paper.\n                                             The payoff of using box pleating is twofold. First, the \n                                         resulting crease pattern can, due to its regularity, often be \n                                         constructed by a linear folding sequence with well-deﬁned refer-\n                                         ence points. The crease pattern is simpliﬁed and the foldability \n                                         is further enhanced if all ﬂaps have lengths that are integer \n                                         multiples of a common small quantity; in this case, the crease \n                                         pattern lies within a regular square grid. In such models, one \n                                         can start the folding sequence by creasing the paper into equal \n                                         divisions one way and/or the other, at which point many of the \n                                         creases of the model will exist.\n                                             If you crease the paper into a complete grid with one crease \n                                         for every fold, you will have created many of the creases in \n                                         the model. But you will have also created many creases that \n                                         are not part of the base, and in fact, every ﬂap or surface will \n                                         be covered with the grid of creases. These extraneous creases \n                                         can be distracting to the eye in the folded model. Although it \n                                         is harder to devise such a folding sequence, it’s preferable to \n                                         minimize the number of unnecessary creases when precreasing \n                                         the model. In such cases, a cleaner model will be the result if \n                                         you measure and mark the positions of the minor creases.\n                                             The second payoff for using box pleating is that box-pleated \n                                         structures for obtaining ﬂaps are compatible with box-pleated \n                                         structures for constructing boxes. Thus, one can make complex \n                                         three-dimensional structures containing both two-dimensional \n                                         ﬂaps and three-dimensional solids. Some of the most fantastic \n                                         and downright unbelievable origami structures are designed \n                                         using box pleating: hundreds of designs by Neal Elias, includ-\n                                         ing human ﬁgures and compositions of several ﬁgures (a bull, \n                                         bullﬁghter, and cape from a single sheet); various vehicles by \n                                         Max Hulme (a Stephenson Rocket train engine, a double-decker \n                                         bus); and of course, the model that started it all, Mooser’s \n\n     506\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ecc"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 524,
  "content": "                                                                          3–5\n\n\n               5. Unfold the left edge.          6. Repeat steps 3–5 on the           7. Fold and unfold along the\n                                                 right.                               angle bisectors at the sides\n                                                                                      partway down.\n\n\n     512\n                         Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ecd"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 242,
  "content": "             29. Fold and unfold.                                      30. Fold the corners to the existing creases. Note\n                                                                       that the creases go underneath the pleats at their\n                                                                       upper ends.\n\n\n             31. Mountain-fold the corners behind on the               32. Bring all corners together at the bottom of\n             existing creases.                                         the model.\n\n\n                  33. Reverse-fold two edges   34. Fold two corners inward so that 35. Fold one layer to the right.\n                  in to the center line.       their edges align with existing folded\n                                               edges.\n\n                                                                                                                 231\n                                                           Folding Instructions:Chapter Western 7: Pattern Pond Grafting Turtle\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ece"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 623,
  "content": "./origami_dataset_dev/Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li/page623_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ecf"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 256,
  "content": "                                             All six of these bases share two properties: First, all \n                                         ﬂaps either lie along or straddle a single vertical line; second: \n                                         the hinge at the base of any ﬂap (i.e., the line between two \n                                         adjacent ﬂaps) is perpendicular to this line. When several ﬂaps \n                                         lie along a line, that line is called an axis of the base. Any base \n                                         that possesses a single axis along which all ﬂaps lie is called \n                                         a uniaxial base. The six bases of Figure 8.1 are all uniaxial; \n                                         their axes are shown by dashed lines in Figure 8.2. Every ﬂap \n                                         in each base lies along the base’s unique axis.\n\n\n            Figure 8.2. \n            The axes of six uniaxial bases.\n\n                                             Uniaxial bases are very common in origami, and they have \n                                         several properties that make them relatively easy to construct, \n                                         dissect, graft, and manipulate. We will study them intently for \n                                         the next several chapters.\n                                             Not all origami bases are uniaxial, however, and before \n                                         casting aside all other origami bases, it’s worth taking a few \n                                         moments to look at some exceptions.\n                                             Among the traditional bases, the Windmill Base is not \n                                         uniaxial because its four ﬂaps do not lie along a single line; \n                                         instead, it has two crossed axes, and the hinge creases are not \n                                         perpendicular to the axis.\n                                             A base of a more recent vintage—John Montroll’s Dog \n                                         Base, variations of which he has used for a score of diverse \n                                         ﬁgures—is also not a uniaxial base, having two distinct par-\n                                         allel axes. Montroll’s base is remarkable for its efﬁciency in \n                                         use of paper (and for my money, stands as the most elegant \n                                         base in all of origami). So while uniaxial bases will prove to be \n\n     244\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ed0"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 530,
  "content": "            23. Fold the flap back down.             24. Pleat on the existing creases.\n\n\n     518\n                       Origami Design Secrets, Second Edition\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ed1"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 701,
  "content": "./origami_dataset_dev/Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li/page701_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ed2"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 281,
  "content": "                The stick ﬁgure schematic is a useful tool because it doesn’t \n            depend on the speciﬁcs of the creases within a tile, only upon \n            the circles and rivers within the tile. But its utility extends \n            beyond individual tiles; we can also use the stick ﬁgure to \n            represent the structure of an entire base.\n                We can use the stick ﬁgure to sketch the structure of \n            entire crease patterns by treating the entire pattern as one large \n            collection of circles and rivers, using a few simple rules: \n\n                • Each circle is represented by a line segment whose \n                length is the radius of the circle. One endpoint of the \n                segment corresponds to the center of the circle; the \n                other corresponds to the boundary of the circle.\n\n                • Each river is represented by a line segment whose \n                length is the width of the river. One endpoint of the \n                segment corresponds to one bank of the river; the \n                other corresponds to the other bank of the river.\n\n                • If two features (circles or rivers) touch anywhere, \n                their corresponding lines are connected at correspond-\n                ing endpoints.\n\n                To see how this works, let’s construct the stick ﬁgures for \n            the six bases we’ve been working with in this section.\n                The circle/river patterns within the crease patterns of the \n            four Classic Bases consist only of circles, and so their stick ﬁgures \n            consist only of lines emanating from a common point. Thus, in \n            the folded bases, all of the ﬂaps emanate from a common location. \n            The Lizard base (ﬁfth in the row) is a bit different, however; its \n            circle pattern contains a river. The river gives rise to a segment \n            that separates the two groups of points in the base.\n                Thus, the stick ﬁgure serves as a quick, shorthand de-\n            scription of both the lengths of the ﬂaps and the way they are \n            connected to each other. You can design a crease pattern using \n            just tiles with circles and rivers, and by drawing the stick ﬁgure, \n            quickly ascertain whether the pattern gives rise to the neces-\n            sary combination of ﬂaps. Only after you’ve found a tile pattern \n            that gives the right number of ﬂaps with suitable lengths do \n            you need to ﬁll in the tiles with crease patterns.\n                Let’s look at an example. A square can be dissected into \n            two rectangles plus two dissimilar squares, as shown in Fig-\n            ure 8.41. What would be the properties of a base constructed \n            from these four tiles?\n                If we plug in four tiles—two squares containing four circles, \n            plus two rectangles containing four circles and two rivers, we \n            see that the circles in the upper square mate properly with the \n\n                                                                                                     269\n                                                                         Chapter 8: Tiling\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ed3"
  },
  "pdf_name": "Robert J. Lang - Origami Design Secrets_ Mathematical Methods for an Ancient Art, Second Edition (2011, CRC Press) - libgen.li",
  "page_number": 295,
  "content": "                  5. Turn the paper       6. Unfold to step 2.   7. Fold the paper in half.\n                  back over.                                                                   8. Fold and\n                                                                                               unfold.\n\n\n                                         10. Fold and unfold.       11. Fold and unfold       12. Fold and unfold\n                                                                    through a single          through the intersection\n                                                                    layer; repeat behind.     of two creases.\n                  9. Reverse-fold the\n                  point on the crease you\n                  just made.\n\n\n                                                                                                            1/4\n\n              13. Reverse-fold the      14. Fold and unfold.    15. Fold and unfold.   16. Turn the paper over\n              top point on the crease   Repeat behind.          Repeat behind.         and rotate it 1/4 turn\n              you just made.                                                           clockwise.\n\n                                                                                                                 283\n                                                                       Folding Instructions:Chapter 8: Pegasus Tiling\n© 2012 by Taylor & Francis Group, LLC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ed4"
  },
  "pdf_name": "jason_ku_hydralisk",
  "page_number": 4,
  "content": "./origami_dataset_dev/jason_ku_hydralisk/page004_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ed5"
  },
  "pdf_name": "jason_ku_hydralisk",
  "page_number": 3,
  "content": "./origami_dataset_dev/jason_ku_hydralisk/page003_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ed6"
  },
  "pdf_name": "jason_ku_hydralisk",
  "page_number": 4,
  "content": "./origami_dataset_dev/jason_ku_hydralisk/page004_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ed7"
  },
  "pdf_name": "jason_ku_hydralisk",
  "page_number": 4,
  "content": "./origami_dataset_dev/jason_ku_hydralisk/page004_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ed8"
  },
  "pdf_name": "jason_ku_hydralisk",
  "page_number": 3,
  "content": "./origami_dataset_dev/jason_ku_hydralisk/page003_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ed9"
  },
  "pdf_name": "jason_ku_hydralisk",
  "page_number": 2,
  "content": "./origami_dataset_dev/jason_ku_hydralisk/page002_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0eda"
  },
  "pdf_name": "jason_ku_hydralisk",
  "page_number": 5,
  "content": "./origami_dataset_dev/jason_ku_hydralisk/page005_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0edb"
  },
  "pdf_name": "jason_ku_hydralisk",
  "page_number": 5,
  "content": "./origami_dataset_dev/jason_ku_hydralisk/page005_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0edc"
  },
  "pdf_name": "jason_ku_hydralisk",
  "page_number": 5,
  "content": "./origami_dataset_dev/jason_ku_hydralisk/page005_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0edd"
  },
  "pdf_name": "jason_ku_hydralisk",
  "page_number": 9,
  "content": "./origami_dataset_dev/jason_ku_hydralisk/page009_image004.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ede"
  },
  "pdf_name": "jason_ku_hydralisk",
  "page_number": 6,
  "content": "We’re going to work with the lower right corner of the CP which corresponds to the area circled in\nred from the previous page. To make things a bit clearer I’m going to assume that you are using a\nseparate piece of paper for just this part of the CP (based on an 8x8 grid) and it would be a good idea\nfor you to do just that for a first attempt, before forming the belly plates on the real model.\nAs with all the drawings so far, the colour of the final model is on top.\n\n\n                              2. Collapse.\n 1. Fold an 8x8 grid and\nadd the shown diagonals.\n                                                      3. This is similar to the area\n                                                     circled in red from the previous\n                                                     page. Open up the layers where\n                                                       the precreased square is.\n\n\n         4. Form the shown creases pushing up the mountain\n        fold from underneath, and then flatten the model. Also\n         note the corresponding creases in the CP on the left.\n\n\n                                            6. Push in the central flap, forming the valley\n                                            fold shown in the CP on the existing crease.\n\n    5. Fold and unfold the flap in half both ways,\n     introducing the creases shown in the CP.",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0edf"
  },
  "pdf_name": "jason_ku_hydralisk",
  "page_number": 8,
  "content": "./origami_dataset_dev/jason_ku_hydralisk/page008_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ee0"
  },
  "pdf_name": "jason_ku_hydralisk",
  "page_number": 7,
  "content": "       7. Push in the sides forming the shown creases.\n\n\n                                                               8. In progress.\n                                                              Flatten completely.\n\n                                                 9. One belly plate is done. The next\n         3 - 4                                   one works exactly the same, but you\n                                                  have to do it from the other side.\n                                                      So turn the model over.\n\n10. Repeat steps 3-4 for the next pleat.\n\n\n      5 - 8\n    11. Repeat steps 5-8 for this flap.\n                                    12. The second belly\n                                       plate is done.        13. Belly plates seen\n                                                                from the front.",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ee1"
  },
  "pdf_name": "jason_ku_hydralisk",
  "page_number": 5,
  "content": "                              Sink the sides, following the\n                              existing creases.\nOpen out the layers and form\nthe shown folds on the existing\ncreases.\nThe horizontal and vertical\nmountain folds won’t connect\nto the rest of the model, just\nmake them as far as possible to\nmake the next step easier.                            Spread squash the central flap\n                                                      and close the arm flap.\n\n\n                                The resulting CP.\n                                Repeat for the other arm.\n\n       This is what you should have so far, with the position of the main body parts.\n\n   Head                                                      Arms\n\n\n                                                          Front\n     Back\n\n\n         Tail\n\n                                                         Next we will work\n                                                         on this area to start\n                                                         forming the “belly\n                                                         plates”.",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ee2"
  },
  "pdf_name": "jason_ku_hydralisk",
  "page_number": 8,
  "content": "./origami_dataset_dev/jason_ku_hydralisk/page008_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ee3"
  },
  "pdf_name": "jason_ku_hydralisk",
  "page_number": 4,
  "content": "                             Form the blue creases as mountain\n                             folds to get three distinct points.\n                             Collapse this part flat by bringing\n                             the outer points towards the middle\nCarefully pull out the layers from point.                  The result. Repeat those steps\nthe inside in front and on the back.                       for the flap behind as well.\n\n\n                 The CP so far. Next we’re going to work on the arm.",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ee4"
  },
  "pdf_name": "jason_ku_hydralisk",
  "page_number": 9,
  "content": "./origami_dataset_dev/jason_ku_hydralisk/page009_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ee5"
  },
  "pdf_name": "jason_ku_hydralisk",
  "page_number": 1,
  "content": "             Hydralisk 2.5 by Jason Ku\n                         Original CP: Jason Ku - http://scripts.mit.edu/~jasonku\n                      Instructions: Gerwin Sturm - http://www.origamiaustria.at\n\n The original CP by Jason Ku can be found here:\n http://scripts.mit.edu/~jasonku/index.php?id=2004&model=hydralisk1\n\n The underlying structure to this model is the following box pleated CP based on 32x32 grid. So you\n will start with precreasing the 32x32 grid.\n With the colour side up, the outermost creases would be mountain folds and then alternating valley-\n mountain-valley-etc.\n With the grid done add the necessary diagonals (black) as shown in the CP below. The red creases,\n while not necessary for collapsing the base CP, will help you a lot later on, so add them as well.\n\n\nNote: Disregard the colour differences in the different photos. Some of them turned out better with\nflash and some turned out better without.",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ee6"
  },
  "pdf_name": "jason_ku_hydralisk",
  "page_number": 9,
  "content": "./origami_dataset_dev/jason_ku_hydralisk/page009_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ee7"
  },
  "pdf_name": "jason_ku_hydralisk",
  "page_number": 9,
  "content": "./origami_dataset_dev/jason_ku_hydralisk/page009_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ee8"
  },
  "pdf_name": "jason_ku_hydralisk",
  "page_number": 3,
  "content": "Next we’re gonna form the bottom. These are basically two (irregular) Elias stretches, separating the\ntail and creating some more belly pleats.\n\n\nMake two more (irregular) Elias stretches on the top part and two small reverse folds at the very end.\n\n\n                                           The next steps will focus on the circled area.",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ee9"
  },
  "pdf_name": "jason_ku_hydralisk",
  "page_number": 2,
  "content": "With the colour side up, pleat the whole square as shown below on the existing creases.\n\n\nNow comes probably the most tedious part of this model. You have to introduce the structure in the\nmiddle as shown below. It’s best to start at the top and work down to the bottom. You have to do both\nsides in parallel. Also you should note that the horizontal creases in this part (valley = red,mountain\n= blue, again with colour side up) are opposite from how you precreased them.\nIn the photo on the right you see the result of this step.",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0eea"
  },
  "pdf_name": "jason_ku_hydralisk",
  "page_number": 9,
  "content": "",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0eeb"
  },
  "pdf_name": "jason_ku_hydralisk",
  "page_number": 8,
  "content": "Now that you know how they are folded, make belly plates from the circled areas, starting from the\nbottom. For the red ones you open the layers from above (steps 3-8) for the orange ones you open the\nlayers from underneath (steps 9-11). The according precreased squares which you will need are marked\nin the same colours in the CP.\n\n\n                         On the left side of this picture the belly plates are already completed.\n                         Now do the same for the other side.\n                         With this the base for the Hydralisk is completed and “all” that is\n                         left to do is to shape the model to your liking.\n\n                         If you compare the pictures of how my Hydralisk looks on the next\n                         page and how the original Hydralisk by Jason Ku looks on his\n                         homepage, you will see that they are not very similiar, while both\n                         of them look like a Hydralisk. So you have a lot of freedom in\n                         finishing the model and there’s not really many hints I can give you\n                         for that except to play around a bit and shape until you like the\n                         model. Some pages earlier I’ve also showed what parts of the base\n                         will become what parts in the finished model so that should give\n                         you a pretty good idea what to do.\n                         Have fun!",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0eec"
  },
  "pdf_name": "jason_ku_hydralisk",
  "page_number": 7,
  "content": "./origami_dataset_dev/jason_ku_hydralisk/page007_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0eed"
  },
  "pdf_name": "jason_ku_hydralisk",
  "page_number": 7,
  "content": "./origami_dataset_dev/jason_ku_hydralisk/page007_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0eee"
  },
  "pdf_name": "jason_ku_hydralisk",
  "page_number": 7,
  "content": "./origami_dataset_dev/jason_ku_hydralisk/page007_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0eef"
  },
  "pdf_name": "jason_ku_hydralisk",
  "page_number": 7,
  "content": "./origami_dataset_dev/jason_ku_hydralisk/page007_image007.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ef0"
  },
  "pdf_name": "jason_ku_hydralisk",
  "page_number": 7,
  "content": "./origami_dataset_dev/jason_ku_hydralisk/page007_image006.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ef1"
  },
  "pdf_name": "jason_ku_hydralisk",
  "page_number": 6,
  "content": "./origami_dataset_dev/jason_ku_hydralisk/page006_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ef2"
  },
  "pdf_name": "jason_ku_hydralisk",
  "page_number": 6,
  "content": "./origami_dataset_dev/jason_ku_hydralisk/page006_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ef3"
  },
  "pdf_name": "jason_ku_hydralisk",
  "page_number": 7,
  "content": "./origami_dataset_dev/jason_ku_hydralisk/page007_image004.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ef4"
  },
  "pdf_name": "jason_ku_hydralisk",
  "page_number": 7,
  "content": "./origami_dataset_dev/jason_ku_hydralisk/page007_image005.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ef5"
  },
  "pdf_name": "jason_ku_hydralisk",
  "page_number": 6,
  "content": "./origami_dataset_dev/jason_ku_hydralisk/page006_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ef6"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 2,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page002_image007.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ef7"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 12,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page012_image009.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ef8"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 5,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page005_image007.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ef9"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 11,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page011_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0efa"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 7,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page007_image008.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0efb"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 10,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page010_image006.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0efc"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 10,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page010_image012.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0efd"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 10,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page010_image007.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0efe"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 4,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page004_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0eff"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 7,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page007_image009.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f00"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 3,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page003_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f01"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 5,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page005_image006.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f02"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 5,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page005_image012.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f03"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 12,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page012_image008.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f04"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 2,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page002_image006.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f05"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 2,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page002_image012.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f06"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 2,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page002_image004.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f07"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 2,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page002_image010.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f08"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 11,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page011_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f09"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 5,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page005_image004.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f0a"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 5,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page005_image010.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f0b"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 3,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page003_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f0c"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 10,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page010_image011.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f0d"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 4,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page004_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f0e"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 10,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page010_image005.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f0f"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 4,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page004_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f10"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 10,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page010_image004.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f11"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 10,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page010_image010.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f12"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 3,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page003_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f13"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 5,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page005_image011.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f14"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 11,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page011_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f15"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 5,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page005_image005.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f16"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 2,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page002_image011.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f17"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 2,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page002_image005.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f18"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 2,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page002_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f19"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 6,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page006_image009.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f1a"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 5,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page005_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f1b"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 11,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page011_image007.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f1c"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 1,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page001_image009.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f1d"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 3,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page003_image012.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f1e"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 3,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page003_image006.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f1f"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 4,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page004_image012.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f20"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 4,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page004_image006.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f21"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 10,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page010_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f22"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 4,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page004_image007.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f23"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 3,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page003_image007.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f24"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 1,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page001_image008.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f25"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 11,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page011_image012.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f26"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 11,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page011_image006.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f27"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 6,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page006_image008.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f28"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 2,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page002_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f29"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 11,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page011_image010.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f2a"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 11,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page011_image004.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f2b"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 5,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page005_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f2c"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 3,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page003_image005.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f2d"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 3,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page003_image011.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f2e"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 4,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page004_image005.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f2f"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 10,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page010_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f30"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 4,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page004_image011.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f31"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 4,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page004_image010.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f32"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 4,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page004_image004.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f33"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 10,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page010_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f34"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 3,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page003_image010.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f35"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 3,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page003_image004.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f36"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 11,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page011_image005.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f37"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 5,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page005_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f38"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 11,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page011_image011.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f39"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 2,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page002_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f3a"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 9,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page009_image004.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f3b"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 9,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page009_image010.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f3c"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 12,
  "content": "",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f3d"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 6,
  "content": "",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f3e"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 8,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page008_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f3f"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 8,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page008_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f40"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 7,
  "content": "",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f41"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 9,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page009_image011.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f42"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 9,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page009_image005.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f43"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 9,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page009_image007.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f44"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 5,
  "content": "",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f45"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 11,
  "content": "",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f46"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 8,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page008_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f47"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 10,
  "content": "",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f48"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 4,
  "content": "",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f49"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 9,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page009_image006.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f4a"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 9,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page009_image012.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f4b"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 9,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page009_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f4c"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 8,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page008_image005.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f4d"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 8,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page008_image011.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f4e"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 8,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page008_image010.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f4f"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 8,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page008_image004.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f50"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 1,
  "content": "",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f51"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 9,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page009_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f52"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 9,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page009_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f53"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 3,
  "content": "",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f54"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 8,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page008_image012.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f55"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 8,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page008_image006.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f56"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 8,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page008_image007.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f57"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 2,
  "content": "",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f58"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 8,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page008_image009.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f59"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 8,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page008_image008.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f5a"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 9,
  "content": "",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f5b"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 8,
  "content": "",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f5c"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 9,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page009_image008.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f5d"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 9,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page009_image009.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f5e"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 6,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page006_image012.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f5f"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 6,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page006_image006.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f60"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 11,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page011_image008.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f61"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 1,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page001_image012.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f62"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 1,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page001_image006.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f63"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 3,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page003_image009.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f64"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 7,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page007_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f65"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 4,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page004_image009.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f66"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 4,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page004_image008.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f67"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 3,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page003_image008.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f68"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 1,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page001_image007.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f69"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 11,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page011_image009.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f6a"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 6,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page006_image007.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f6b"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 12,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page012_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f6c"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 12,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page012_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f6d"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 6,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page006_image005.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f6e"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 6,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page006_image011.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f6f"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 1,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page001_image005.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f70"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 1,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page001_image011.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f71"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 7,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page007_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f72"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 7,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page007_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f73"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 1,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page001_image010.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f74"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 1,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page001_image004.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f75"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 6,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page006_image010.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f76"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 12,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page012_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f77"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 6,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page006_image004.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f78"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 2,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page002_image008.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f79"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 12,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page012_image006.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f7a"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 12,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page012_image012.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f7b"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 5,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page005_image008.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f7c"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 7,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page007_image007.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f7d"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 10,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page010_image009.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f7e"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 10,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page010_image008.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f7f"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 7,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page007_image006.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f80"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 7,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page007_image012.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f81"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 1,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page001_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f82"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 5,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page005_image009.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f83"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 6,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page006_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f84"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 12,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page012_image007.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f85"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 2,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page002_image009.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f86"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 12,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page012_image011.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f87"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 12,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page012_image005.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f88"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 6,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page006_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f89"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 1,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page001_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f8a"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 7,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page007_image004.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f8b"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 7,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page007_image010.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f8c"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 7,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page007_image011.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f8d"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 7,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page007_image005.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f8e"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 1,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page001_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f8f"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 12,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page012_image004.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f90"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 6,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page006_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f91"
  },
  "pdf_name": "origami-is-so-much-more-than-paper-cranes",
  "page_number": 12,
  "content": "./origami_dataset_dev/origami-is-so-much-more-than-paper-cranes/page012_image010.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f92"
  },
  "pdf_name": "boxpleating_guide_4",
  "page_number": 4,
  "content": "Now, after this extended Elias stretch, let’s lean back for a bit and take a look at the CP to check our\nprogress. We’re only interested in the shaded part for now.\n\n\n            Current CP                               Intended CP\n\n\nThe two shaded areas still need some fixing. In the square packing those two areas are divided by a\ncontinuous horizontal line. As I explained in the last part a division like this means that those two areas\ncan be folded independently from each other. The Elias stretch we just made separated those two areas\nfrom each other.\nIn general when folding a box pleated CP you should attempt a Divide-and-Conquer approach like this\nworking from the symmetrie line outwards instead of trying to collapse everything at once.\nIn the next part we’ll see how to finish the two shaded areas.",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f93"
  },
  "pdf_name": "boxpleating_guide_4",
  "page_number": 1,
  "content": "         How to fold Box Pleated CPs\n                         Part 1II - Collapsing 2\n\nStarting where we left the CP in the last part we are now going perform a sort of Elias stretch that goes\nall the way across the square, i.e. we are going to make the stretch up until where we reach the shown\ndiagonals. Those diagonals will be our reference lines for the Elias stretch and will be displayed thicker\nin all the drawings.\n\n\nI will show this Elias stretch in several steps.\nAs was explained in the last part, to start with the Elias stretch, we first pull the layers apart a bit.\nNote that in the following drawings I will only show the front half of the model to make things less\nconfusing (and easier for me to draw).\n\n\n                                                     Guide by Gerwin Sturm (2007/02)\n                                     Porcupine 1.2 designed by Gerwin Sturm (2007/01/23)",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f94"
  },
  "pdf_name": "boxpleating_guide_4",
  "page_number": 3,
  "content": "Before finishing this step we need to repeat what we have done so far on the back side.\n\n\nThe whole model is shown again from here on.\nMake a sort of double rabbit ear.\n\n\nOpen sink the sides so that everyhing has the same width.\n\n\nWith this we are done for now.",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f95"
  },
  "pdf_name": "boxpleating_guide_4",
  "page_number": 2,
  "content": "Starting from the bottom, pleat horizontally over the whole length of the square, until you reach\nthe marked intersection of the reference diagonals.\nThe uppermost valley fold is not folded completely. The pleated layers should be left standing\nup from the rest of the model so that is looks like in the drawing on the right when viewed from\nthe side.\n\n\nClose up the left side of the model using the shown creases to complete this part of the Elias stretch.\n\n\nContinue to pleat upwards along the diagonal until you reach the marked intersection of the reference\ndiagonals. Close the model from the left while doing so.\n\n\nPush in where shown and close the model up further.",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f96"
  },
  "pdf_name": "boxpleating_guide_3",
  "page_number": 6,
  "content": "We can now practice the Elias stretch a bit more by making two smaller ones at the top.\n\n\n           When both of them are done the CP would look\n           like this. Note that with those two Elias stretches\n           we will get three distinct flaps at the top. They\n           will be shorter than the flaps at the bottom though.\n\n\n        Open out the layers       Form the shown\n         on the left a bit.        mountain fold.\n\n\n                                                    Close the model using\n                                                     the shown creases.\n\n\n               Done.         Make another Elias\n                             stretch on the right.\n\n\n                                                        Head\n\n           Taking a look at this base and the associated stick Arm Arm\n           figure, it might be suitable for a human-like figure\n           (with a bit short arms).\n           So just give it a try and see what you can turn\n           this base into.\n\n                                                      Leg  Leg\n\nIn the next part we will perform an Elias stretch that is a lot more complex (and doesn’t really look\nlike an Elias stretch) on the Porcupine model.",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f97"
  },
  "pdf_name": "boxpleating_guide_3",
  "page_number": 5,
  "content": "Before we continue we will make a small excursus about Elias stretches, with some simpler examples\nbefore we perform a rather extensive Elias stretch on the model at hand.\nThe Elias stretch is a very important technique in box pleating, which generally is used for separating\ntwo flaps from each other.\n\n\n       Let’s start with an ...and add some     Now pleat    ...to get something\n          8 x 8 grid...    diagonals to it.    vertically...    like this.\n\n           We now want to perform an Elias stretch to\n           separate the bottom two corners. In the CP the\n           finished Elias stretch would look like this.\n           Note that all folds we are going to make are on\n           already existing creases (as is the case for most\n           steps in collapsing a box pleated base).\n\n\n   First we have to        Then we start by       Next we form the\n   stretch the layers     forming the shown     shown valley folds and\n  apart, which is easy     mountain folds.        pinch the corners.\n   in this example.\n\n\n      Elias stretch done.   Finish the Elias stretch by Pinch the corners further\n    We now have created        closing the model.       while forming the shown\n     two separate flaps.   The shown creases will form     mountain folds.\n                              mostly by themselves.",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f98"
  },
  "pdf_name": "boxpleating_guide_3",
  "page_number": 4,
  "content": "Perform some open sinks to thin the flaps. If at that point you have flaps that are longer than 2 units,\nyou will have to open sink in and out accordingly.",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f99"
  },
  "pdf_name": "boxpleating_guide_3",
  "page_number": 1,
  "content": "         How to fold Box Pleated CPs\n                         Part 1II - Collapsing 1\n\nBefore we start the collapsing, we’re going to take another look at the structure of the CP which still\nholds some information that can help us a lot in the collapsing process.\n\n\nThe first thing to note is the symmetrie line of the\nCP.\nSince most box pleated CPs are symmetric this will\nbe the centre line of the square in most cases.\nIf the CP is not symmetric you will have to find a\nline that separates the CP logically in two halves.\nYou will want to choose a line that goes through the\ncentre of a lot of flaps because that makes the folding\nprocess easier.\n\n\nThe other thing to note are lines in the square packing\nperpendicular to the symmetry line that go all the\nway from one side to the other side of the square.\nThose lines separate the CP into parts that can be\ncollapsed more or less independent from the other\nparts of the CP.\n\n\nFor each of the steps that will come now I will display a partial CP that shows all the creases necessary\nfor getting a collapsed stage at this point, as well as the full CP greyed out as comparison to see the\nprogress. The new or changed creases for each step will be displayed thicker.\nFor now we will focus on the top part of the CP that will become head and fore legs.\n\n\n                                                      Guide by Gerwin Sturm (2007/01)\n                                      Porcupine 1.2 designed by Gerwin Sturm (2007/01/23)",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f9a"
  },
  "pdf_name": "boxpleating_guide_3",
  "page_number": 3,
  "content": "Next we form a series of structures that are similar to small waterbomb bases.\n\n\n                                                   Those will be the tips of the first\n                                                   flaps we are forming.",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f9b"
  },
  "pdf_name": "boxpleating_guide_3",
  "page_number": 2,
  "content": "We start by folding the model in half along the symmetrie line, so that the coloured side is outside.",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f9c"
  },
  "pdf_name": "boxpleating_guide_2",
  "page_number": 5,
  "content": "If you need a division like 9 (=3*3) or 15 = (3*5) or similar, you can either use one of the methods at\nhttp://www.origami.gr.jp/People/CAGE_/divide/index-e.html to give you this division directly or (f.e.\nif you don’t have the tables for the methods at hand) use a recursive approach with the methods you\nalready know. I’ll give you an example of this with a 9 x 9 grid.\n\n\nFirst divide the paper into thirds with the method from before.\nThen focus on the top right square.\n\n\nYou can use the exactly same method as before to divide\nthis small square into thirds as well.\n\n\nWith the reference lines you now have, you can easily\nfold the rest of the 9 x 9 grid.\n\n\nNow that you have the finished grid you have all the reference points you need to fold the diagonals\nshown in the CP. I usually make the diagonals as valley folds on the white side (mountain folds on the\ncoloured side). But since you will need them both ways you can fold them any way you like.\n\nWith all the creases made we can now start the long and tedious collapsing process.",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f9d"
  },
  "pdf_name": "boxpleating_guide_2",
  "page_number": 4,
  "content": "Here’s one way to fold a 7 x 7 grid.\n\n\n                       2. Fold the edge to the centre\n                           and unfold. Pinch or fold all 3. Precrease the diagonal\n                           as necessary.            but only where shown.\n      1. Fold in half\n          both ways.\n\n\n                                                         4. Fold between the shown\n                                                             points but only mark the\n                                     5. Fold the edge to the     intersection with the\n                6. Fold edge to crease     marked intersection     diagonal.\n                    and unfold.          and unfold.\n\n\n 7. Fold over on\n     exisiting crease.\n                   8. Fold edge to crease 9. Fold edge to crease\n                       and unfold everything.     and unfold.\n\n\n                                                           10. Fold and unfold\n                                                                 as shown\n\n                                                            5-10\n\n                                      11. Repeat steps 5-10\n                12. 7 x 7 grid done.        horizontally.",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f9e"
  },
  "pdf_name": "boxpleating_guide_2",
  "page_number": 1,
  "content": "         How to fold Box Pleated CPs\n                          Part 1I - Precreasing\nThe first step in precreasing for a box pleated CP is do precrease the whole grid. This might not be\nnecessary for all models but in general it is easier to prefold all creases instead of determining which\ncreases are necessary.\nWhat we need to know first is the size of the grid, so (if this information is not given along with the\nCP) we’ll just have to count the number units across one side of the CP.\nFor my Porcupine model the grid is 32 x 32 units.\nThe creases will be alternating valley and mountain folds. When you are using duo-colour paper, with\nthe colour-side down the outermost creases have to be valley folds for a coloured model. The next\npicture shows this for an 8 x 8 units grid.\n\n\nNow if the grid size is of the form 2n, like 32 for my Porcupine, the precreasing is quite trivial.\nLet’s look at how to fold an 8 x 8 grid as example.\n\n\n       Fold in half      Fold edges to         Add valley folds  Grid complete.\n        both ways.         the centre.           between the\n                                              mountain creases.\nSo for divisions of 2, 4, 6, 16, 32, 64 etc. the precreasing is easy to do. But what are we supposed to\ndo with divisions like 24, 40, 56, etc.\nTo solve this problem we first have to go back to elementary maths and make a prime factorization\nof the number we need.\n                                 24 = 2*2*2*3\n                                  40 = 2*2*5\n                                 56 = 2*2*2*7\nThat means that for a 24 x 24 grid, we first need to divide the paper in thirds and then subdivide the\nthirds into eigths (2*2*2=8), which is easy once we have the thirds.\n\n                                                      Guide by Gerwin Sturm (2007/01)\n                                      Porcupine 1.2 designed by Gerwin Sturm (2007/01/23)",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0f9f"
  },
  "pdf_name": "boxpleating_guide_2",
  "page_number": 3,
  "content": "Here’s one way to fold a 5 x 5 grid.\n\n\n                            2. Fold the edge to the centre.\n                                Fold the whole crease or only\n                                pinch on the right depending\n          1. Fold in half       on whether you need the crease\n              both ways.        in the CP or not.     3. Precrease the diagonal\n                                                          but only where shown.\n\n\n                          5. Fold the edge to the\n                              marked intersection 4. Fold between the shown\n                              and unfold.          points but only mark the\n  6. Fold the edge to the                          intersection with the\n      crease you just made                         diagonal.\n      and unfold.\n\n\n                                                                         5-8\n                               8. Fold the edge to the\n                                   crease you just made\n                                   and unfold.\n          7. Fold the edge to the\n              crease you just made\n              and unfold.\n                                                     9. Repeat steps 5-8\n                                                         horizontally.\n\n\n                                 10. 5 x 5 grid done.",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0fa0"
  },
  "pdf_name": "boxpleating_guide_2",
  "page_number": 2,
  "content": "To divide the paper into thirds we can use several different methods.\nMore information about these methods including the famous Haga theorems can be found at\nhttp://www.origami.gr.jp/People/CAGE_/divide/index-e.html\nHere’s the method I always use.\n\n\n                              2. Precrease the diagonal\n            1. Fold in half       but only where shown.\n                both ways.                       3. Fold between the shown\n                                                     points but only mark the\n                                                     intersection with the\n                                                     diagonal.\n\n\n      6. Division into thirds done.\n                              5. Fold the two other sides 4. Fold the sides to the\n                                  to the creases made      marked intersection\n                                  in step 4 and unfold.     and unfold.\n\nNow that we have thirds, all we have to do is the following:\n    1. Add creases in the middle of the thirds to get sixths\n    2. Add creases between the sixths to get 12ths.\n    3. Turn the paper over.\n    4. Add creases between the 12ths to get the intended 24ths.\nSo in general (beware, some mathematics ahead) to get a grid of 2(n+1)*m units, with m being an odd\nnumber, first you have to make a grid of m x m units.\nThat’s where the methods at http://www.origami.gr.jp/People/CAGE_/divide/index-e.html can help.\nI’ll show you how to get some more divisions (the most common ones) on the next pages.\nFor the reference points in these methods you will mostly need halves, 4ths, 8ths and the like. In most\ncases you will need those creases for the CP anyway. If you don’t need them just create them as pinches\non the paper edge where they are needed.\nOnce you have the m x m grid, you only need to subdivide the division in half and in half again and\nso on until you have reached  a 2n*m division. All of the creases so far have been valley folds on the\ncoloured side. Now you turn the paper over and subdivide in half a last time to get the final 2(n+1)*m\ngrid.",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0fa1"
  },
  "pdf_name": "C03_images",
  "page_number": 16,
  "content": "./origami_dataset_dev/C03_images/page016_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0fa2"
  },
  "pdf_name": "C03_images",
  "page_number": 2,
  "content": "./origami_dataset_dev/C03_images/page002_image007.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0fa3"
  },
  "pdf_name": "C03_images",
  "page_number": 11,
  "content": "./origami_dataset_dev/C03_images/page011_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0fa4"
  },
  "pdf_name": "C03_images",
  "page_number": 4,
  "content": "./origami_dataset_dev/C03_images/page004_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0fa5"
  },
  "pdf_name": "C03_images",
  "page_number": 3,
  "content": "./origami_dataset_dev/C03_images/page003_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0fa6"
  },
  "pdf_name": "C03_images",
  "page_number": 15,
  "content": "./origami_dataset_dev/C03_images/page015_image008.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0fa7"
  },
  "pdf_name": "C03_images",
  "page_number": 5,
  "content": "./origami_dataset_dev/C03_images/page005_image006.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0fa8"
  },
  "pdf_name": "C03_images",
  "page_number": 12,
  "content": "./origami_dataset_dev/C03_images/page012_image008.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0fa9"
  },
  "pdf_name": "C03_images",
  "page_number": 2,
  "content": "./origami_dataset_dev/C03_images/page002_image006.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0faa"
  },
  "pdf_name": "C03_images",
  "page_number": 2,
  "content": "./origami_dataset_dev/C03_images/page002_image004.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0fab"
  },
  "pdf_name": "C03_images",
  "page_number": 16,
  "content": "./origami_dataset_dev/C03_images/page016_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0fac"
  },
  "pdf_name": "C03_images",
  "page_number": 11,
  "content": "./origami_dataset_dev/C03_images/page011_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0fad"
  },
  "pdf_name": "C03_images",
  "page_number": 5,
  "content": "./origami_dataset_dev/C03_images/page005_image004.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0fae"
  },
  "pdf_name": "C03_images",
  "page_number": 3,
  "content": "./origami_dataset_dev/C03_images/page003_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0faf"
  },
  "pdf_name": "C03_images",
  "page_number": 4,
  "content": "./origami_dataset_dev/C03_images/page004_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0fb0"
  },
  "pdf_name": "C03_images",
  "page_number": 4,
  "content": "./origami_dataset_dev/C03_images/page004_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0fb1"
  },
  "pdf_name": "C03_images",
  "page_number": 20,
  "content": "./origami_dataset_dev/C03_images/page020_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0fb2"
  },
  "pdf_name": "C03_images",
  "page_number": 3,
  "content": "./origami_dataset_dev/C03_images/page003_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0fb3"
  },
  "pdf_name": "C03_images",
  "page_number": 11,
  "content": "./origami_dataset_dev/C03_images/page011_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0fb4"
  },
  "pdf_name": "C03_images",
  "page_number": 5,
  "content": "./origami_dataset_dev/C03_images/page005_image005.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0fb5"
  },
  "pdf_name": "C03_images",
  "page_number": 2,
  "content": "./origami_dataset_dev/C03_images/page002_image005.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0fb6"
  },
  "pdf_name": "C03_images",
  "page_number": 16,
  "content": "./origami_dataset_dev/C03_images/page016_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0fb7"
  },
  "pdf_name": "C03_images",
  "page_number": 2,
  "content": "./origami_dataset_dev/C03_images/page002_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0fb8"
  },
  "pdf_name": "C03_images",
  "page_number": 5,
  "content": "./origami_dataset_dev/C03_images/page005_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0fb9"
  },
  "pdf_name": "C03_images",
  "page_number": 11,
  "content": "./origami_dataset_dev/C03_images/page011_image007.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0fba"
  },
  "pdf_name": "C03_images",
  "page_number": 3,
  "content": "./origami_dataset_dev/C03_images/page003_image006.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0fbb"
  },
  "pdf_name": "C03_images",
  "page_number": 4,
  "content": "./origami_dataset_dev/C03_images/page004_image006.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0fbc"
  },
  "pdf_name": "C03_images",
  "page_number": 10,
  "content": "./origami_dataset_dev/C03_images/page010_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0fbd"
  },
  "pdf_name": "C03_images",
  "page_number": 17,
  "content": "./origami_dataset_dev/C03_images/page017_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0fbe"
  },
  "pdf_name": "C03_images",
  "page_number": 11,
  "content": "./origami_dataset_dev/C03_images/page011_image006.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0fbf"
  },
  "pdf_name": "C03_images",
  "page_number": 2,
  "content": "./origami_dataset_dev/C03_images/page002_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0fc0"
  },
  "pdf_name": "C03_images",
  "page_number": 11,
  "content": "./origami_dataset_dev/C03_images/page011_image004.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0fc1"
  },
  "pdf_name": "C03_images",
  "page_number": 5,
  "content": "./origami_dataset_dev/C03_images/page005_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0fc2"
  },
  "pdf_name": "C03_images",
  "page_number": 17,
  "content": "./origami_dataset_dev/C03_images/page017_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0fc3"
  },
  "pdf_name": "C03_images",
  "page_number": 3,
  "content": "./origami_dataset_dev/C03_images/page003_image005.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0fc4"
  },
  "pdf_name": "C03_images",
  "page_number": 4,
  "content": "./origami_dataset_dev/C03_images/page004_image005.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0fc5"
  },
  "pdf_name": "C03_images",
  "page_number": 4,
  "content": "./origami_dataset_dev/C03_images/page004_image004.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0fc6"
  },
  "pdf_name": "C03_images",
  "page_number": 17,
  "content": "./origami_dataset_dev/C03_images/page017_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0fc7"
  },
  "pdf_name": "C03_images",
  "page_number": 3,
  "content": "./origami_dataset_dev/C03_images/page003_image004.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0fc8"
  },
  "pdf_name": "C03_images",
  "page_number": 11,
  "content": "./origami_dataset_dev/C03_images/page011_image005.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0fc9"
  },
  "pdf_name": "C03_images",
  "page_number": 5,
  "content": "./origami_dataset_dev/C03_images/page005_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0fca"
  },
  "pdf_name": "C03_images",
  "page_number": 2,
  "content": "./origami_dataset_dev/C03_images/page002_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0fcb"
  },
  "pdf_name": "C03_images",
  "page_number": 12,
  "content": "Flat Folding of Box-Pleated Crease \nPattern is NP-complete\n\n\n                                                                [Akitaya, \n                                                                Cheung, \n                                                               Demaine, \n                                                          Horiyama, Hull, \n                                                               Ku, Tachi, \n                                                            Uehara 2015]",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0fcc"
  },
  "pdf_name": "C03_images",
  "page_number": 6,
  "content": "Not-All-Equal 3SAT\n\n • Given variables\n  & triples of \n  variables\n • Assign binary \n  values to \n  variables so \n  that every triple \n  has both values\n • NP-hard",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0fcd"
  },
  "pdf_name": "C03_images",
  "page_number": 8,
  "content": "./origami_dataset_dev/C03_images/page008_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0fce"
  },
  "pdf_name": "C03_images",
  "page_number": 8,
  "content": "./origami_dataset_dev/C03_images/page008_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0fcf"
  },
  "pdf_name": "C03_images",
  "page_number": 7,
  "content": "Not-All-Equal 3SAT\n\n • Given variables\n  & triples of \n  variables\n • Assign binary \n  values to \n  variables so \n  that every triple \n  has both values\n • NP-hard",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0fd0"
  },
  "pdf_name": "C03_images",
  "page_number": 13,
  "content": "[Akitaya, Cheung, Demaine, Horiyama, Hull, Ku, Tachi, Uehara 2015]",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0fd1"
  },
  "pdf_name": "C03_images",
  "page_number": 5,
  "content": "Not-All-Equal 3SAT\n\n • Given variables\n  & triples of \n  variables\n • Assign binary \n  values to \n  variables so \n  that every triple \n  has both values\n • NP-hard",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0fd2"
  },
  "pdf_name": "C03_images",
  "page_number": 11,
  "content": "Flat Folding of Box-Pleated Crease \nPattern is NP-complete\n\n\n                                                                [Akitaya, \n                                                                Cheung, \n                                                               Demaine, \n                                                          Horiyama, Hull, \n                                                               Ku, Tachi, \n                                                            Uehara 2015]",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0fd3"
  },
  "pdf_name": "C03_images",
  "page_number": 8,
  "content": "./origami_dataset_dev/C03_images/page008_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0fd4"
  },
  "pdf_name": "C03_images",
  "page_number": 10,
  "content": "[Akitaya, Cheung, Demaine, Horiyama, Hull, Ku, Tachi, Uehara 2015]",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0fd5"
  },
  "pdf_name": "C03_images",
  "page_number": 4,
  "content": "Not-All-Equal 3SAT\n\n • Given variables\n  & triples of \n  variables\n • Assign binary \n  values to \n  variables so \n  that every triple \n  has both values\n • NP-hard",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0fd6"
  },
  "pdf_name": "C03_images",
  "page_number": 9,
  "content": "./origami_dataset_dev/C03_images/page009_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0fd7"
  },
  "pdf_name": "C03_images",
  "page_number": 14,
  "content": "Flat Folding of Box-Pleated Assigned \nCrease Pattern is NP-complete\n\n\n                                                                [Akitaya, \n                                                                Cheung, \n                                                               Demaine, \n                                                          Horiyama, Hull, \n                                                               Ku, Tachi, \n                                                            Uehara 2015]",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0fd8"
  },
  "pdf_name": "C03_images",
  "page_number": 8,
  "content": "./origami_dataset_dev/C03_images/page008_image004.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0fd9"
  },
  "pdf_name": "C03_images",
  "page_number": 15,
  "content": "Flat Folding of Box-Pleated Assigned \nCrease Pattern is NP-complete\n\n\n                                                                [Akitaya, \n                                                                Cheung, \n                                                               Demaine, \n                                                          Horiyama, Hull, \n                                                               Ku, Tachi, \n                                                            Uehara 2015]",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0fda"
  },
  "pdf_name": "C03_images",
  "page_number": 1,
  "content": "                             SODA 1996\n\n\n                Not All Equal\n                (NAE) clause\n\ncrossover\n\n                split &\n  wire           turn",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0fdb"
  },
  "pdf_name": "C03_images",
  "page_number": 9,
  "content": "./origami_dataset_dev/C03_images/page009_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0fdc"
  },
  "pdf_name": "C03_images",
  "page_number": 9,
  "content": "./origami_dataset_dev/C03_images/page009_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0fdd"
  },
  "pdf_name": "C03_images",
  "page_number": 17,
  "content": "3-Partition\n\n • Given integers 1, 2, … , , can you partition \n\n  into /3 triples with the same𝑛𝑛  sum? =\n       𝑛𝑛    𝑎𝑎 𝑎𝑎 𝑎𝑎    ∑𝑖𝑖 𝑎𝑎𝑖𝑖\n • This problem is              :\n     𝑛𝑛     strongly NP-complete𝑡𝑡 𝑛𝑛⁄3\n  NP-complete even if numbers are ( )\n                               𝑂𝑂 1\n                  𝑎𝑎𝑖𝑖   𝑛𝑛\n                  ?\n                               …\n                       𝑡𝑡\n\n                                /3 triples\n\n                               𝑛𝑛",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0fde"
  },
  "pdf_name": "C03_images",
  "page_number": 3,
  "content": "Not-All-Equal 3SAT\n\n • Given variables\n  & triples of \n  variables\n • Assign binary \n  values to \n  variables so \n  that every triple \n  has both values\n • NP-hard",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0fdf"
  },
  "pdf_name": "C03_images",
  "page_number": 2,
  "content": "Flat Folding of Box-Pleated Crease \nPattern is NP-complete\n\n\n                                                                [Akitaya, \n                                                                Cheung, \n                                                               Demaine, \n                                                          Horiyama, Hull, \n                                                               Ku, Tachi, \n                                                            Uehara 2015]",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0fe0"
  },
  "pdf_name": "C03_images",
  "page_number": 16,
  "content": "Disk Packing for Origami Design\n\n\n         Packing given disks into a \n         given square is NP-hard\n         [Demaine, Fekete, Lang 2010]",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0fe1"
  },
  "pdf_name": "C03_images",
  "page_number": 18,
  "content": "./origami_dataset_dev/C03_images/page018_image004.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0fe2"
  },
  "pdf_name": "C03_images",
  "page_number": 18,
  "content": "./origami_dataset_dev/C03_images/page018_image005.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0fe3"
  },
  "pdf_name": "C03_images",
  "page_number": 18,
  "content": "                                                                  +\nDisk Packing is                                               +     =\n                                                                𝑎𝑎𝑖𝑖 𝑎𝑎𝑗𝑗\n                    [Demaine,                      +\nNP-hard           Fekete, Lang                                  𝑎𝑎𝑘𝑘 𝑡𝑡\n                        2010]                                     +\n                                                     𝑎𝑎𝑖𝑖\n                                                                      𝑗𝑗\n                                                         +−𝑡𝑡     𝑎𝑎\n                                                            𝑎𝑎𝑘𝑘",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0fe4"
  },
  "pdf_name": "C03_images",
  "page_number": 18,
  "content": "./origami_dataset_dev/C03_images/page018_image007.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0fe5"
  },
  "pdf_name": "C03_images",
  "page_number": 18,
  "content": "./origami_dataset_dev/C03_images/page018_image006.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0fe6"
  },
  "pdf_name": "C03_images",
  "page_number": 19,
  "content": "side length of wrappable cube\n\n\n                                                                 ×   paper\n                                                                   1\n                                                                𝑥𝑥 𝑥𝑥\n\n\n                                              [Cole, Demaine, Fox-Epstein 2013]",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0fe7"
  },
  "pdf_name": "C03_images",
  "page_number": 19,
  "content": "./origami_dataset_dev/C03_images/page019_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0fe8"
  },
  "pdf_name": "C03_images",
  "page_number": 9,
  "content": "Graph Orientation\n\n\n                 [Akitaya, Cheung, Demaine, Horiyama, Hull, Ku, Tachi, Uehara 2015]",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0fe9"
  },
  "pdf_name": "C03_images",
  "page_number": 18,
  "content": "./origami_dataset_dev/C03_images/page018_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0fea"
  },
  "pdf_name": "C03_images",
  "page_number": 18,
  "content": "./origami_dataset_dev/C03_images/page018_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0feb"
  },
  "pdf_name": "C03_images",
  "page_number": 8,
  "content": "Graph Orientation\n\n\n                 [Akitaya, Cheung, Demaine, Horiyama, Hull, Ku, Tachi, Uehara 2015]",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0fec"
  },
  "pdf_name": "C03_images",
  "page_number": 20,
  "content": "radius of wrappable sphere\n\n\n                                                                 ×   paper\n                                                                   1\n                                                                𝑥𝑥 𝑥𝑥\n\n\n                                              [Cole, Demaine, Fox-Epstein 2013]",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0fed"
  },
  "pdf_name": "C03_images",
  "page_number": 18,
  "content": "./origami_dataset_dev/C03_images/page018_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0fee"
  },
  "pdf_name": "C03_images",
  "page_number": 6,
  "content": "./origami_dataset_dev/C03_images/page006_image006.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0fef"
  },
  "pdf_name": "C03_images",
  "page_number": 7,
  "content": "./origami_dataset_dev/C03_images/page007_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ff0"
  },
  "pdf_name": "C03_images",
  "page_number": 14,
  "content": "./origami_dataset_dev/C03_images/page014_image007.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ff1"
  },
  "pdf_name": "C03_images",
  "page_number": 14,
  "content": "./origami_dataset_dev/C03_images/page014_image006.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ff2"
  },
  "pdf_name": "C03_images",
  "page_number": 15,
  "content": "./origami_dataset_dev/C03_images/page015_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ff3"
  },
  "pdf_name": "C03_images",
  "page_number": 12,
  "content": "./origami_dataset_dev/C03_images/page012_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ff4"
  },
  "pdf_name": "C03_images",
  "page_number": 12,
  "content": "./origami_dataset_dev/C03_images/page012_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ff5"
  },
  "pdf_name": "C03_images",
  "page_number": 6,
  "content": "./origami_dataset_dev/C03_images/page006_image005.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ff6"
  },
  "pdf_name": "C03_images",
  "page_number": 15,
  "content": "./origami_dataset_dev/C03_images/page015_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ff7"
  },
  "pdf_name": "C03_images",
  "page_number": 7,
  "content": "./origami_dataset_dev/C03_images/page007_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ff8"
  },
  "pdf_name": "C03_images",
  "page_number": 14,
  "content": "./origami_dataset_dev/C03_images/page014_image004.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ff9"
  },
  "pdf_name": "C03_images",
  "page_number": 14,
  "content": "./origami_dataset_dev/C03_images/page014_image005.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ffa"
  },
  "pdf_name": "C03_images",
  "page_number": 7,
  "content": "./origami_dataset_dev/C03_images/page007_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ffb"
  },
  "pdf_name": "C03_images",
  "page_number": 15,
  "content": "./origami_dataset_dev/C03_images/page015_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ffc"
  },
  "pdf_name": "C03_images",
  "page_number": 12,
  "content": "./origami_dataset_dev/C03_images/page012_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ffd"
  },
  "pdf_name": "C03_images",
  "page_number": 6,
  "content": "./origami_dataset_dev/C03_images/page006_image004.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0ffe"
  },
  "pdf_name": "C03_images",
  "page_number": 12,
  "content": "./origami_dataset_dev/C03_images/page012_image006.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d0fff"
  },
  "pdf_name": "C03_images",
  "page_number": 15,
  "content": "./origami_dataset_dev/C03_images/page015_image006.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1000"
  },
  "pdf_name": "C03_images",
  "page_number": 13,
  "content": "./origami_dataset_dev/C03_images/page013_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1001"
  },
  "pdf_name": "C03_images",
  "page_number": 14,
  "content": "./origami_dataset_dev/C03_images/page014_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1002"
  },
  "pdf_name": "C03_images",
  "page_number": 7,
  "content": "./origami_dataset_dev/C03_images/page007_image006.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1003"
  },
  "pdf_name": "C03_images",
  "page_number": 15,
  "content": "./origami_dataset_dev/C03_images/page015_image007.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1004"
  },
  "pdf_name": "C03_images",
  "page_number": 1,
  "content": "./origami_dataset_dev/C03_images/page001_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1005"
  },
  "pdf_name": "C03_images",
  "page_number": 6,
  "content": "./origami_dataset_dev/C03_images/page006_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1006"
  },
  "pdf_name": "C03_images",
  "page_number": 12,
  "content": "./origami_dataset_dev/C03_images/page012_image007.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1007"
  },
  "pdf_name": "C03_images",
  "page_number": 12,
  "content": "./origami_dataset_dev/C03_images/page012_image005.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1008"
  },
  "pdf_name": "C03_images",
  "page_number": 6,
  "content": "./origami_dataset_dev/C03_images/page006_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1009"
  },
  "pdf_name": "C03_images",
  "page_number": 15,
  "content": "./origami_dataset_dev/C03_images/page015_image005.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d100a"
  },
  "pdf_name": "C03_images",
  "page_number": 7,
  "content": "./origami_dataset_dev/C03_images/page007_image004.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d100b"
  },
  "pdf_name": "C03_images",
  "page_number": 14,
  "content": "./origami_dataset_dev/C03_images/page014_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d100c"
  },
  "pdf_name": "C03_images",
  "page_number": 14,
  "content": "./origami_dataset_dev/C03_images/page014_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d100d"
  },
  "pdf_name": "C03_images",
  "page_number": 7,
  "content": "./origami_dataset_dev/C03_images/page007_image005.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d100e"
  },
  "pdf_name": "C03_images",
  "page_number": 1,
  "content": "./origami_dataset_dev/C03_images/page001_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d100f"
  },
  "pdf_name": "C03_images",
  "page_number": 15,
  "content": "./origami_dataset_dev/C03_images/page015_image004.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1010"
  },
  "pdf_name": "C03_images",
  "page_number": 12,
  "content": "./origami_dataset_dev/C03_images/page012_image004.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1011"
  },
  "pdf_name": "C03_images",
  "page_number": 6,
  "content": "./origami_dataset_dev/C03_images/page006_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1012"
  },
  "pdf_name": "L04_images",
  "page_number": 16,
  "content": "./origami_dataset_dev/L04_images/page016_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1013"
  },
  "pdf_name": "L04_images",
  "page_number": 43,
  "content": "./origami_dataset_dev/L04_images/page043_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1014"
  },
  "pdf_name": "L04_images",
  "page_number": 35,
  "content": "./origami_dataset_dev/L04_images/page035_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1015"
  },
  "pdf_name": "L04_images",
  "page_number": 60,
  "content": "./origami_dataset_dev/L04_images/page060_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1016"
  },
  "pdf_name": "L04_images",
  "page_number": 74,
  "content": "./origami_dataset_dev/L04_images/page074_image004.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1017"
  },
  "pdf_name": "L04_images",
  "page_number": 5,
  "content": "./origami_dataset_dev/L04_images/page005_image013.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1018"
  },
  "pdf_name": "L04_images",
  "page_number": 5,
  "content": "./origami_dataset_dev/L04_images/page005_image007.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1019"
  },
  "pdf_name": "L04_images",
  "page_number": 11,
  "content": "./origami_dataset_dev/L04_images/page011_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d101a"
  },
  "pdf_name": "L04_images",
  "page_number": 44,
  "content": "./origami_dataset_dev/L04_images/page044_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d101b"
  },
  "pdf_name": "L04_images",
  "page_number": 104,
  "content": "./origami_dataset_dev/L04_images/page104_image004.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d101c"
  },
  "pdf_name": "L04_images",
  "page_number": 26,
  "content": "./origami_dataset_dev/L04_images/page026_image004.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d101d"
  },
  "pdf_name": "L04_images",
  "page_number": 59,
  "content": "Hexagonal Tripod Shell\n\nHexagonal boundary:\n\nEout = 6\n DOF = 6 - 3 =3\n+ rigid DOF = 6\n∴\n\n3 pin joints (x,y,z):\n 3x3 = 9 constraints\n\n∴",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d101e"
  },
  "pdf_name": "L04_images",
  "page_number": 67,
  "content": "./origami_dataset_dev/L04_images/page067_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d101f"
  },
  "pdf_name": "L04_images",
  "page_number": 71,
  "content": "Discrete Voss Surface\nEggbox-Vertex\n• one-DOF structure\n  – Bidirectionally Flat-Foldable\n\n\n• Eggbox-Pattern\n• Variation of Eggbox\n  Pattern",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1020"
  },
  "pdf_name": "L04_images",
  "page_number": 65,
  "content": "Flat-Foldable Quadrivalent Origami\nMiuraOri Vertex\n\n\n   ρ1()t       ρ1()t 0 \n tan         tan   \n     2             2      ρ= − ρ\n   ρ ()t       ρ ()t   1     3\n    2           2 0 \n tan     = λ()t tan\n    2           2     ρ0= ρ 2\n                 \n   ρ N ()t    ρ N ()t0   ρ     1+cos()θ − θ     ρ\n tan           tan             0 =         0  1      1\n   2         2    tan                   tan\n                              2    1+cos()θ0 + θ 1  2",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1021"
  },
  "pdf_name": "L04_images",
  "page_number": 105,
  "content": "Example",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1022"
  },
  "pdf_name": "L04_images",
  "page_number": 111,
  "content": "",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1023"
  },
  "pdf_name": "L04_images",
  "page_number": 66,
  "content": "./origami_dataset_dev/L04_images/page066_image005.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1024"
  },
  "pdf_name": "L04_images",
  "page_number": 27,
  "content": "./origami_dataset_dev/L04_images/page027_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1025"
  },
  "pdf_name": "L04_images",
  "page_number": 126,
  "content": "./origami_dataset_dev/L04_images/page126_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1026"
  },
  "pdf_name": "L04_images",
  "page_number": 66,
  "content": "./origami_dataset_dev/L04_images/page066_image004.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1027"
  },
  "pdf_name": "L04_images",
  "page_number": 27,
  "content": "./origami_dataset_dev/L04_images/page027_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1028"
  },
  "pdf_name": "L04_images",
  "page_number": 4,
  "content": "./origami_dataset_dev/L04_images/page004_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1029"
  },
  "pdf_name": "L04_images",
  "page_number": 51,
  "content": "./origami_dataset_dev/L04_images/page051_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d102a"
  },
  "pdf_name": "L04_images",
  "page_number": 110,
  "content": "",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d102b"
  },
  "pdf_name": "L04_images",
  "page_number": 104,
  "content": "Variations\n\n\n• Use constant thickness \n  panels\n   – if both layers overlap \n    sufficiently\n• use angle limitation\n   – useful for defining the \n    “deployed 3D state”",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d102c"
  },
  "pdf_name": "L04_images",
  "page_number": 121,
  "content": "./origami_dataset_dev/L04_images/page121_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d102d"
  },
  "pdf_name": "L04_images",
  "page_number": 3,
  "content": "./origami_dataset_dev/L04_images/page003_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d102e"
  },
  "pdf_name": "L04_images",
  "page_number": 56,
  "content": "./origami_dataset_dev/L04_images/page056_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d102f"
  },
  "pdf_name": "L04_images",
  "page_number": 64,
  "content": "Flat-Foldable Quadrivalent Origami\nMiuraOri Vertex\n• Intrinsic Measure:\n\n     θ0 = π − θ2\n\n     θ1 = π − θ3\n• Folding Motion\n  – Opposite fold angles are \n    equal\n                     ρ= − ρ\n  – Two pairs of folding motions 1 3\n\n    are linearly related. ρ0= ρ 2\n                        ρ    1+cos()θ − θ ρ\n                     tan 0 =       0  1 tan 1\n                        2    1+cos()θ0 + θ 1 2",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1030"
  },
  "pdf_name": "L04_images",
  "page_number": 70,
  "content": "",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1031"
  },
  "pdf_name": "L04_images",
  "page_number": 26,
  "content": "./origami_dataset_dev/L04_images/page026_image005.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1032"
  },
  "pdf_name": "L04_images",
  "page_number": 58,
  "content": "DOF in Generic Triangular Mesh\n\nEuler’s:(Vin+Eout)-(Eout+Ein)+F=1\n\nTriangle : 3F=2Eout + Ein\n\nMechanism: DOF = Ein -3Vin\n\n\nDisk with Eout outer edges\n\n  DOF = Eout     -3\n\nwith H generic holes\n\n DOF = Eout -3 -3H\n\n\n(Vin+Eout)-(Eout+Ein)+F=1-H\n\nDOF = Ein -3Vin-6H",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1033"
  },
  "pdf_name": "L04_images",
  "page_number": 5,
  "content": "./origami_dataset_dev/L04_images/page005_image006.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1034"
  },
  "pdf_name": "L04_images",
  "page_number": 5,
  "content": "./origami_dataset_dev/L04_images/page005_image012.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1035"
  },
  "pdf_name": "L04_images",
  "page_number": 35,
  "content": "./origami_dataset_dev/L04_images/page035_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1036"
  },
  "pdf_name": "L04_images",
  "page_number": 74,
  "content": "./origami_dataset_dev/L04_images/page074_image005.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1037"
  },
  "pdf_name": "L04_images",
  "page_number": 12,
  "content": "./origami_dataset_dev/L04_images/page012_image008.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1038"
  },
  "pdf_name": "L04_images",
  "page_number": 16,
  "content": "./origami_dataset_dev/L04_images/page016_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1039"
  },
  "pdf_name": "L04_images",
  "page_number": 43,
  "content": "./origami_dataset_dev/L04_images/page043_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d103a"
  },
  "pdf_name": "L04_images",
  "page_number": 117,
  "content": "./origami_dataset_dev/L04_images/page117_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d103b"
  },
  "pdf_name": "L04_images",
  "page_number": 35,
  "content": "./origami_dataset_dev/L04_images/page035_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d103c"
  },
  "pdf_name": "L04_images",
  "page_number": 60,
  "content": "./origami_dataset_dev/L04_images/page060_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d103d"
  },
  "pdf_name": "L04_images",
  "page_number": 11,
  "content": "./origami_dataset_dev/L04_images/page011_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d103e"
  },
  "pdf_name": "L04_images",
  "page_number": 99,
  "content": "",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d103f"
  },
  "pdf_name": "L04_images",
  "page_number": 44,
  "content": "./origami_dataset_dev/L04_images/page044_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1040"
  },
  "pdf_name": "L04_images",
  "page_number": 50,
  "content": "./origami_dataset_dev/L04_images/page050_image004.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1041"
  },
  "pdf_name": "L04_images",
  "page_number": 5,
  "content": "./origami_dataset_dev/L04_images/page005_image004.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1042"
  },
  "pdf_name": "L04_images",
  "page_number": 5,
  "content": "./origami_dataset_dev/L04_images/page005_image010.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1043"
  },
  "pdf_name": "L04_images",
  "page_number": 110,
  "content": "./origami_dataset_dev/L04_images/page110_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1044"
  },
  "pdf_name": "L04_images",
  "page_number": 32,
  "content": "./origami_dataset_dev/L04_images/page032_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1045"
  },
  "pdf_name": "L04_images",
  "page_number": 67,
  "content": "./origami_dataset_dev/L04_images/page067_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1046"
  },
  "pdf_name": "L04_images",
  "page_number": 98,
  "content": "./origami_dataset_dev/L04_images/page098_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1047"
  },
  "pdf_name": "L04_images",
  "page_number": 66,
  "content": "Get One State and Get Continuous \nTransformation\nFinite Foldability: Existence of \n  Folding Motion  \nThere is one static state with\n              ⇔\n• Developability\n• Flat-foldability\n• Planarity of Panels\n\n   ρ1()t       ρ ()t01 \n tan         tan   \n    2           2  \n    ρ2 ()t        ρ ()t02\n tan    = λ  tan   \n    2     ()t   2  \n                 \n   ρ N ()t    ρ N ()t0 \n tan           tan\n   2         2  ",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1048"
  },
  "pdf_name": "L04_images",
  "page_number": 72,
  "content": "Discrete Voss Surface\nEggbox-Vertex\n• Intrinsic Measure:\n\n        θ0=   θ 2\n\n        θ1=  θ 3\n                               Complementary Folding Angle\n• Folding Motion\n                            ρ= ρ     =π − ρ′ = π − ρ′\n   – Opposite fold angles are 1  3         1      3\n    equal                   ρ0= ρ 2\n   – Two pairs of folding motions ρ 1+cos()θ − θ   ρ\n                            tan 0 =        0  1 cot 1\n    are linearly related.      2    1+cos()θ + θ   2\n    [SCHIEF et.al. 2007]                   0  1\n                                    1+cos()θ − θ   ρ′\n                                 =         0  1 tan 1\n                                    1+cos()θ0 + θ 1 2",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1049"
  },
  "pdf_name": "L04_images",
  "page_number": 17,
  "content": "./origami_dataset_dev/L04_images/page017_image005.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d104a"
  },
  "pdf_name": "L04_images",
  "page_number": 56,
  "content": "./origami_dataset_dev/L04_images/page056_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d104b"
  },
  "pdf_name": "L04_images",
  "page_number": 3,
  "content": "./origami_dataset_dev/L04_images/page003_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d104c"
  },
  "pdf_name": "L04_images",
  "page_number": 112,
  "content": "",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d104d"
  },
  "pdf_name": "L04_images",
  "page_number": 106,
  "content": "Example \n\n\n   • Constant Thickness Model\n      – the shape is locally defined\n      – cf: Slidable Hinge →",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d104e"
  },
  "pdf_name": "L04_images",
  "page_number": 4,
  "content": "./origami_dataset_dev/L04_images/page004_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d104f"
  },
  "pdf_name": "L04_images",
  "page_number": 27,
  "content": "./origami_dataset_dev/L04_images/page027_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1050"
  },
  "pdf_name": "L04_images",
  "page_number": 72,
  "content": "./origami_dataset_dev/L04_images/page072_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1051"
  },
  "pdf_name": "L04_images",
  "page_number": 105,
  "content": "./origami_dataset_dev/L04_images/page105_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1052"
  },
  "pdf_name": "L04_images",
  "page_number": 4,
  "content": "./origami_dataset_dev/L04_images/page004_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1053"
  },
  "pdf_name": "L04_images",
  "page_number": 107,
  "content": "厚板のカッティングパターン生成\n\n• 実装\n   – Grasshopper + C# \n    components (Rhinoceros \n    Plugin)\n\n• →二次元パターン\n   – 2軸CNCマシンで構築可能\n      • カッティングプロッタ\n      • レーザーカッター\n      • ウッドルータ\n   – 組み立ての合理化の可能性",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1054"
  },
  "pdf_name": "L04_images",
  "page_number": 113,
  "content": "",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1055"
  },
  "pdf_name": "L04_images",
  "page_number": 20,
  "content": "./origami_dataset_dev/L04_images/page020_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1056"
  },
  "pdf_name": "L04_images",
  "page_number": 75,
  "content": "./origami_dataset_dev/L04_images/page075_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1057"
  },
  "pdf_name": "L04_images",
  "page_number": 102,
  "content": "./origami_dataset_dev/L04_images/page102_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1058"
  },
  "pdf_name": "L04_images",
  "page_number": 17,
  "content": "./origami_dataset_dev/L04_images/page017_image004.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1059"
  },
  "pdf_name": "L04_images",
  "page_number": 3,
  "content": "./origami_dataset_dev/L04_images/page003_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d105a"
  },
  "pdf_name": "L04_images",
  "page_number": 56,
  "content": "./origami_dataset_dev/L04_images/page056_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d105b"
  },
  "pdf_name": "L04_images",
  "page_number": 73,
  "content": "Eggbox: Discrete Voss Surface\n\n\n• Use Complementary Folding \n  Angle for “Complementary \n  Foldline”\n                               Complementary Folding Angle\n                                           ′      ′\n                            ρ1= ρ 3  =π − ρ1 = π − ρ3\n   ρ ()t       ρ ()t \n tan 0         tan 0 0      ρ=  ρ\n    2           2        0   2\n   ρ ()t       ρ ()t \n    1           1 0       ρ0    1+cos()θ0 − θ 1 ρ1\n tan     = λ()t tan         tan  =              cot\n    2           2          2    1+cos()θ + θ   2\n                                     0  1\n   ρ N ()t    ρ N ()t0                          ′\n tan           tan                  1+cos()θ0 − θ 1 ρ1\n   2         2           =              tan\n                                    1+cos()θ0 + θ 1 2",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d105c"
  },
  "pdf_name": "L04_images",
  "page_number": 67,
  "content": "Built Design\n\n• Material\n   – 10mm Structural Cardboard \n    (double wall)\n   – Cloth\n• Size\n   – 2.5m x 2.5m\n\n• exhibited at NTT ICC",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d105d"
  },
  "pdf_name": "L04_images",
  "page_number": 5,
  "content": "./origami_dataset_dev/L04_images/page005_image011.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d105e"
  },
  "pdf_name": "L04_images",
  "page_number": 44,
  "content": "./origami_dataset_dev/L04_images/page044_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d105f"
  },
  "pdf_name": "L04_images",
  "page_number": 98,
  "content": "",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1060"
  },
  "pdf_name": "L04_images",
  "page_number": 11,
  "content": "./origami_dataset_dev/L04_images/page011_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1061"
  },
  "pdf_name": "L04_images",
  "page_number": 5,
  "content": "./origami_dataset_dev/L04_images/page005_image005.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1062"
  },
  "pdf_name": "L04_images",
  "page_number": 50,
  "content": "./origami_dataset_dev/L04_images/page050_image005.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1063"
  },
  "pdf_name": "L04_images",
  "page_number": 74,
  "content": "./origami_dataset_dev/L04_images/page074_image006.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1064"
  },
  "pdf_name": "L04_images",
  "page_number": 43,
  "content": "./origami_dataset_dev/L04_images/page043_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1065"
  },
  "pdf_name": "L04_images",
  "page_number": 103,
  "content": "./origami_dataset_dev/L04_images/page103_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1066"
  },
  "pdf_name": "L04_images",
  "page_number": 43,
  "content": "./origami_dataset_dev/L04_images/page043_image007.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1067"
  },
  "pdf_name": "L04_images",
  "page_number": 57,
  "content": "./origami_dataset_dev/L04_images/page057_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1068"
  },
  "pdf_name": "L04_images",
  "page_number": 2,
  "content": "./origami_dataset_dev/L04_images/page002_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1069"
  },
  "pdf_name": "L04_images",
  "page_number": 120,
  "content": "./origami_dataset_dev/L04_images/page120_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d106a"
  },
  "pdf_name": "L04_images",
  "page_number": 74,
  "content": "./origami_dataset_dev/L04_images/page074_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d106b"
  },
  "pdf_name": "L04_images",
  "page_number": 104,
  "content": "./origami_dataset_dev/L04_images/page104_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d106c"
  },
  "pdf_name": "L04_images",
  "page_number": 50,
  "content": "./origami_dataset_dev/L04_images/page050_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d106d"
  },
  "pdf_name": "L04_images",
  "page_number": 5,
  "content": "./origami_dataset_dev/L04_images/page005_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d106e"
  },
  "pdf_name": "L04_images",
  "page_number": 88,
  "content": "Generalized Rigid Folding Constraints\n\n• If the loop surrounds no \n  hole:\n   – constraints around each \n    vertex\n• If there is a hole,\n   – constraints around each \n    vertex\n   + 1 Loop Condition",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d106f"
  },
  "pdf_name": "L04_images",
  "page_number": 127,
  "content": "./origami_dataset_dev/L04_images/page127_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1070"
  },
  "pdf_name": "L04_images",
  "page_number": 63,
  "content": "Flat-Foldable Quadrivalent Origami\nMiuraOri Vertex\n• one-DOF structure\n  – x,y in the same direction\n\n\n• Miura-ori\n• Variation of Miura-ori",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1071"
  },
  "pdf_name": "L04_images",
  "page_number": 77,
  "content": "",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1072"
  },
  "pdf_name": "L04_images",
  "page_number": 73,
  "content": "./origami_dataset_dev/L04_images/page073_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1073"
  },
  "pdf_name": "L04_images",
  "page_number": 26,
  "content": "./origami_dataset_dev/L04_images/page026_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1074"
  },
  "pdf_name": "L04_images",
  "page_number": 54,
  "content": "./origami_dataset_dev/L04_images/page054_image009.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1075"
  },
  "pdf_name": "L04_images",
  "page_number": 3,
  "content": "./origami_dataset_dev/L04_images/page003_image006.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1076"
  },
  "pdf_name": "L04_images",
  "page_number": 117,
  "content": "",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1077"
  },
  "pdf_name": "L04_images",
  "page_number": 103,
  "content": "Trimming Volume\n\n\n• folds up to\n         −δπ\n• offsetting edges by\n            δ \n      t cot  \n→Different speed 2 for  \n  each edge: Weighed \n  Straight Skeleton",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1078"
  },
  "pdf_name": "L04_images",
  "page_number": 46,
  "content": "./origami_dataset_dev/L04_images/page046_image008.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1079"
  },
  "pdf_name": "L04_images",
  "page_number": 61,
  "content": "./origami_dataset_dev/L04_images/page061_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d107a"
  },
  "pdf_name": "L04_images",
  "page_number": 4,
  "content": "./origami_dataset_dev/L04_images/page004_image006.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d107b"
  },
  "pdf_name": "L04_images",
  "page_number": 33,
  "content": "./origami_dataset_dev/L04_images/page033_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d107c"
  },
  "pdf_name": "L04_images",
  "page_number": 66,
  "content": "./origami_dataset_dev/L04_images/page066_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d107d"
  },
  "pdf_name": "L04_images",
  "page_number": 27,
  "content": "./origami_dataset_dev/L04_images/page027_image005.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d107e"
  },
  "pdf_name": "L04_images",
  "page_number": 66,
  "content": "./origami_dataset_dev/L04_images/page066_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d107f"
  },
  "pdf_name": "L04_images",
  "page_number": 33,
  "content": "./origami_dataset_dev/L04_images/page033_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1080"
  },
  "pdf_name": "L04_images",
  "page_number": 27,
  "content": "./origami_dataset_dev/L04_images/page027_image004.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1081"
  },
  "pdf_name": "L04_images",
  "page_number": 45,
  "content": "./origami_dataset_dev/L04_images/page045_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1082"
  },
  "pdf_name": "L04_images",
  "page_number": 10,
  "content": "./origami_dataset_dev/L04_images/page010_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1083"
  },
  "pdf_name": "L04_images",
  "page_number": 4,
  "content": "./origami_dataset_dev/L04_images/page004_image007.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1084"
  },
  "pdf_name": "L04_images",
  "page_number": 61,
  "content": "./origami_dataset_dev/L04_images/page061_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1085"
  },
  "pdf_name": "L04_images",
  "page_number": 46,
  "content": "./origami_dataset_dev/L04_images/page046_image009.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1086"
  },
  "pdf_name": "L04_images",
  "page_number": 102,
  "content": "Our Approach\n\n\nHinge Shift                 Volume Trim\n\n\n  Non-concurrent edges       Concurrent edges",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1087"
  },
  "pdf_name": "L04_images",
  "page_number": 116,
  "content": "",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1088"
  },
  "pdf_name": "L04_images",
  "page_number": 3,
  "content": "./origami_dataset_dev/L04_images/page003_image007.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1089"
  },
  "pdf_name": "L04_images",
  "page_number": 42,
  "content": "./origami_dataset_dev/L04_images/page042_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d108a"
  },
  "pdf_name": "L04_images",
  "page_number": 17,
  "content": "./origami_dataset_dev/L04_images/page017_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d108b"
  },
  "pdf_name": "L04_images",
  "page_number": 54,
  "content": "./origami_dataset_dev/L04_images/page054_image008.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d108c"
  },
  "pdf_name": "L04_images",
  "page_number": 26,
  "content": "./origami_dataset_dev/L04_images/page026_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d108d"
  },
  "pdf_name": "L04_images",
  "page_number": 76,
  "content": "Hybrid Surface:\nBiDirectionally Flat-Foldable PQ Mesh",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d108e"
  },
  "pdf_name": "L04_images",
  "page_number": 62,
  "content": "Idea: Generalize Regular pattern\n\n• Original\n  – Miura-ori\n  – Eggbox pattern\n\n• Generalization\n  To:                   Generalize\n   Non Symmetric forms\n\n (Do not break rigid \n foldability)",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d108f"
  },
  "pdf_name": "L04_images",
  "page_number": 89,
  "content": "Loop Condition\n: Sufficient Condition\nloop condition for finite rigid \n  foldability\n\n  → Sufficient Condition\n  : start from symmetric \n  cylinder and fix 1 loop",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1090"
  },
  "pdf_name": "L04_images",
  "page_number": 5,
  "content": "./origami_dataset_dev/L04_images/page005_image014.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1091"
  },
  "pdf_name": "L04_images",
  "page_number": 104,
  "content": "./origami_dataset_dev/L04_images/page104_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1092"
  },
  "pdf_name": "L04_images",
  "page_number": 74,
  "content": "./origami_dataset_dev/L04_images/page074_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1093"
  },
  "pdf_name": "L04_images",
  "page_number": 43,
  "content": "./origami_dataset_dev/L04_images/page043_image006.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1094"
  },
  "pdf_name": "L04_images",
  "page_number": 103,
  "content": "./origami_dataset_dev/L04_images/page103_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1095"
  },
  "pdf_name": "L04_images",
  "page_number": 43,
  "content": "./origami_dataset_dev/L04_images/page043_image004.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1096"
  },
  "pdf_name": "L04_images",
  "page_number": 74,
  "content": "./origami_dataset_dev/L04_images/page074_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1097"
  },
  "pdf_name": "L04_images",
  "page_number": 21,
  "content": "./origami_dataset_dev/L04_images/page021_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1098"
  },
  "pdf_name": "L04_images",
  "page_number": 104,
  "content": "./origami_dataset_dev/L04_images/page104_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1099"
  },
  "pdf_name": "L04_images",
  "page_number": 44,
  "content": "./origami_dataset_dev/L04_images/page044_image004.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d109a"
  },
  "pdf_name": "L04_images",
  "page_number": 50,
  "content": "./origami_dataset_dev/L04_images/page050_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d109b"
  },
  "pdf_name": "L04_images",
  "page_number": 5,
  "content": "./origami_dataset_dev/L04_images/page005_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d109c"
  },
  "pdf_name": "L04_images",
  "page_number": 74,
  "content": "Hybrid Surface:\nBiDirectionally Flat-Foldable PQ Mesh\n•  use 4 types of foldlines\n    – mountain fold\n       •   0° ->   -180°\n    – valley fold\n       •   0° ->   180°\n\n    – complementary                 3D\n      mountain fold\n       • -180°->      0°\n    – complementary                                Developed\n      valley fold\n       • 180° ->      0°\n     “developed” flat-folded\n       state      state                             Flat-folded",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d109d"
  },
  "pdf_name": "L04_images",
  "page_number": 60,
  "content": "",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d109e"
  },
  "pdf_name": "L04_images",
  "page_number": 48,
  "content": "",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d109f"
  },
  "pdf_name": "L04_images",
  "page_number": 73,
  "content": "./origami_dataset_dev/L04_images/page073_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d10a0"
  },
  "pdf_name": "L04_images",
  "page_number": 26,
  "content": "./origami_dataset_dev/L04_images/page026_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d10a1"
  },
  "pdf_name": "L04_images",
  "page_number": 17,
  "content": "./origami_dataset_dev/L04_images/page017_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d10a2"
  },
  "pdf_name": "L04_images",
  "page_number": 42,
  "content": "./origami_dataset_dev/L04_images/page042_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d10a3"
  },
  "pdf_name": "L04_images",
  "page_number": 3,
  "content": "./origami_dataset_dev/L04_images/page003_image005.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d10a4"
  },
  "pdf_name": "L04_images",
  "page_number": 100,
  "content": "Thickening\n\n    • Rigid origami is ideal \n      surface (no thickness)\n    • Reality:\n       – There is thickness\n       – To make “rigid” \n         panels, thickness must \n         be solved \n         geometrically\n    • Modified Model:\n       – Thick plates\n       – Rotating hinges at the \n         edges",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d10a5"
  },
  "pdf_name": "L04_images",
  "page_number": 114,
  "content": "",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d10a6"
  },
  "pdf_name": "L04_images",
  "page_number": 128,
  "content": "",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d10a7"
  },
  "pdf_name": "L04_images",
  "page_number": 4,
  "content": "./origami_dataset_dev/L04_images/page004_image005.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d10a8"
  },
  "pdf_name": "L04_images",
  "page_number": 10,
  "content": "./origami_dataset_dev/L04_images/page010_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d10a9"
  },
  "pdf_name": "L04_images",
  "page_number": 27,
  "content": "./origami_dataset_dev/L04_images/page027_image006.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d10aa"
  },
  "pdf_name": "L04_images",
  "page_number": 99,
  "content": "./origami_dataset_dev/L04_images/page099_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d10ab"
  },
  "pdf_name": "L04_images",
  "page_number": 66,
  "content": "./origami_dataset_dev/L04_images/page066_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d10ac"
  },
  "pdf_name": "L04_images",
  "page_number": 33,
  "content": "./origami_dataset_dev/L04_images/page033_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d10ad"
  },
  "pdf_name": "L04_images",
  "page_number": 4,
  "content": "./origami_dataset_dev/L04_images/page004_image004.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d10ae"
  },
  "pdf_name": "L04_images",
  "page_number": 45,
  "content": "./origami_dataset_dev/L04_images/page045_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d10af"
  },
  "pdf_name": "L04_images",
  "page_number": 10,
  "content": "./origami_dataset_dev/L04_images/page010_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d10b0"
  },
  "pdf_name": "L04_images",
  "page_number": 111,
  "content": "./origami_dataset_dev/L04_images/page111_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d10b1"
  },
  "pdf_name": "L04_images",
  "page_number": 129,
  "content": "",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d10b2"
  },
  "pdf_name": "L04_images",
  "page_number": 61,
  "content": "./origami_dataset_dev/L04_images/page061_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d10b3"
  },
  "pdf_name": "L04_images",
  "page_number": 34,
  "content": "./origami_dataset_dev/L04_images/page034_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d10b4"
  },
  "pdf_name": "L04_images",
  "page_number": 115,
  "content": "",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d10b5"
  },
  "pdf_name": "L04_images",
  "page_number": 101,
  "content": "Hinge Shift Approach\n\n•  Main Problem\n    – non-concurrent edges →6 \n      constraints (overconstrained)\n•  Symmetric Vertex:\n    – [Hoberman 88]\n    – use two levels of thickness\n    – works only if the vertex is \n      symmetric (a = b, c=d=π-a)\n•  Slidable Hinges\n    – [Trautz and Kunstler 09]\n    – Add extra freedom by allowing \n      „slide“\n    – Problem: global accumulation of \n      slide (not locally designable)",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d10b6"
  },
  "pdf_name": "L04_images",
  "page_number": 42,
  "content": "./origami_dataset_dev/L04_images/page042_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d10b7"
  },
  "pdf_name": "L04_images",
  "page_number": 17,
  "content": "./origami_dataset_dev/L04_images/page017_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d10b8"
  },
  "pdf_name": "L04_images",
  "page_number": 3,
  "content": "./origami_dataset_dev/L04_images/page003_image004.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d10b9"
  },
  "pdf_name": "L04_images",
  "page_number": 56,
  "content": "./origami_dataset_dev/L04_images/page056_image004.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d10ba"
  },
  "pdf_name": "L04_images",
  "page_number": 116,
  "content": "./origami_dataset_dev/L04_images/page116_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d10bb"
  },
  "pdf_name": "L04_images",
  "page_number": 49,
  "content": "Waterbomb Pattern\n\n• “Namako” (by Shuzo \n  Fujimoto)\n• Characteristics                      S. Mabona “Fugu”\n   – Flat-foldable\n   – Flexible(multi DOF)\n   – Complicated motion\n\n• Application\n   – packaging\n   – textured material\n   – cloth folding...\n\n                                 Kuribayashi & You 2006",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d10bc"
  },
  "pdf_name": "L04_images",
  "page_number": 61,
  "content": "Generalize Rigid-Foldable Planar Quad-Mesh \n\n•  One-DOF\n    – Every vertex transforms in the same way\n    – Controllable with single actuator\n•  Redundant\n    – Rigid Origami in General\n       • DOF = N – 3M \n       • N: num of foldlines\n                                               N=4, M=1\n       • M: num of inner verts                 DOF = 1\n    – nxn array N=2n(n-1), M=(n-1)2\n      -> DOF=-(n-2)2+1\n      -> n>2, then overconstrained if not singular\n    – Rank of Constraint Matrix is N-1\n       • Singular Constraints\n    – Robust structure\n    – Improved Designability",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d10bd"
  },
  "pdf_name": "L04_images",
  "page_number": 75,
  "content": "Developability and Flat-Foldability\n\n• Developed State:\n   – Every edge has fold angle \n    complementary fold angle to \n    be 0°\n                          3\n                            dev\n                        ∑σ()i  θi = 0 4CF or2 F+ 2 CF\n                         i=0\n                             3\n                        \n                          2π−∑ θi = 0              4F\n• Flat-folded State:       i=0\n   – Every edge has fold angle \n    complementary fold angle to \n                          3\n    be ±180°                ff\n                        ∑σ()i θi = 0 4F  or  2 F+ 2 CF\n                         i=0\n                             3\n                        \n                         2π−∑  θi = 0            4CF\n                           i=0",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d10be"
  },
  "pdf_name": "L04_images",
  "page_number": 44,
  "content": "./origami_dataset_dev/L04_images/page044_image005.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d10bf"
  },
  "pdf_name": "L04_images",
  "page_number": 5,
  "content": "./origami_dataset_dev/L04_images/page005_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d10c0"
  },
  "pdf_name": "L04_images",
  "page_number": 50,
  "content": "./origami_dataset_dev/L04_images/page050_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d10c1"
  },
  "pdf_name": "L04_images",
  "page_number": 43,
  "content": "./origami_dataset_dev/L04_images/page043_image005.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d10c2"
  },
  "pdf_name": "L04_images",
  "page_number": 9,
  "content": "./origami_dataset_dev/L04_images/page009_image004.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d10c3"
  },
  "pdf_name": "L04_images",
  "page_number": 94,
  "content": "./origami_dataset_dev/L04_images/page094_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d10c4"
  },
  "pdf_name": "L04_images",
  "page_number": 39,
  "content": "./origami_dataset_dev/L04_images/page039_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d10c5"
  },
  "pdf_name": "L04_images",
  "page_number": 93,
  "content": "./origami_dataset_dev/L04_images/page093_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d10c6"
  },
  "pdf_name": "L04_images",
  "page_number": 12,
  "content": "3D Origami                   Roofs 2003\n\n\nEverything seems to be possible!",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d10c7"
  },
  "pdf_name": "L04_images",
  "page_number": 6,
  "content": "Outline\n\n1. Origamizer\n  –  tucking molecules\n  –  layout algorithm\n2. Freeform Origami\n  –  constraints of origami\n  –  perturbation based calculation\n  –  mesh modification\n3. Rigid Origami\n  –  simulation\n  –  design by triangular mesh\n  –  design by quad mesh\n  –  non-disk?",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d10c8"
  },
  "pdf_name": "L04_images",
  "page_number": 49,
  "content": "./origami_dataset_dev/L04_images/page049_image005.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d10c9"
  },
  "pdf_name": "L04_images",
  "page_number": 8,
  "content": "./origami_dataset_dev/L04_images/page008_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d10ca"
  },
  "pdf_name": "L04_images",
  "page_number": 79,
  "content": "./origami_dataset_dev/L04_images/page079_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d10cb"
  },
  "pdf_name": "L04_images",
  "page_number": 86,
  "content": "./origami_dataset_dev/L04_images/page086_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d10cc"
  },
  "pdf_name": "L04_images",
  "page_number": 81,
  "content": "./origami_dataset_dev/L04_images/page081_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d10cd"
  },
  "pdf_name": "L04_images",
  "page_number": 49,
  "content": "./origami_dataset_dev/L04_images/page049_image004.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d10ce"
  },
  "pdf_name": "L04_images",
  "page_number": 8,
  "content": "./origami_dataset_dev/L04_images/page008_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d10cf"
  },
  "pdf_name": "L04_images",
  "page_number": 109,
  "content": "./origami_dataset_dev/L04_images/page109_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d10d0"
  },
  "pdf_name": "L04_images",
  "page_number": 7,
  "content": "                          1\n                  Origamizer\nRelated Papers:\n•Demaine, E. and Tachi, T. “Origamizer: A Practical Algorithm for Folding \nAny Polyhedron,” work in progress.\n\n•Tachi, T.,“Origamizing polyhedral surfaces,” IEEE Transactions on \nVisualization and Computer Graphics, vol. 16, no. 2, 2010.\n\n•Tachi, T., “Origamizing 3d surface by symmetry constraints,” August 2007. \nACM SIGGRAPH 2007 Posters.\n\n•Tachi, T., “3D Origami Design based on Tucking Molecule,” in Origami4: A \nK Peters Ltd., pp. 259-272, 2009.",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d10d1"
  },
  "pdf_name": "L04_images",
  "page_number": 13,
  "content": "Problem: realize arbitrary polyhedral surface \nwith a developable surface\n\n• Geometric Constraints                     Input:\n   – Developable Surf                       Arbitrary\n                                            Polyhedron\n   – Piecewise Linear\n   – Forget about Continuous \n    Folding Motion                         Output:\n                                           Crease \n                                           Pattern\n• Potential Application\n   – Fabrication by folding and \n    bending\n\n                                          Folded\n                                          Polyhedron",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d10d2"
  },
  "pdf_name": "L04_images",
  "page_number": 48,
  "content": "./origami_dataset_dev/L04_images/page048_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d10d3"
  },
  "pdf_name": "L04_images",
  "page_number": 39,
  "content": "Mesh Modification",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d10d4"
  },
  "pdf_name": "L04_images",
  "page_number": 5,
  "content": "Architectural Origami                      Pattern\n                                           - 2D Pattern\n\n•  Origami Architecture\n    Direct application of Origami for Design - Static Shape\n    – Design is highly restricted by the symmetry \n      of the original pattern\n    – Freeform design results in losing important \n      property (origami-inspired design)     Design    Apply\n•  Architectural Origami\n   Origami theory for Design               Conditions\n   –  Extract characteristics of origami   - 3D shape in motion\n   –  Obtain solution space of forms from  - Behavior\n      the required condition and design \n      context",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d10d5"
  },
  "pdf_name": "L04_images",
  "page_number": 11,
  "content": "3D Origami\n\n\nHuman 2004\n\n                                                            Tetrapod 2009\n                                                            Tomohiro Tachi",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d10d6"
  },
  "pdf_name": "L04_images",
  "page_number": 39,
  "content": "./origami_dataset_dev/L04_images/page039_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d10d7"
  },
  "pdf_name": "L04_images",
  "page_number": 81,
  "content": "./origami_dataset_dev/L04_images/page081_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d10d8"
  },
  "pdf_name": "L04_images",
  "page_number": 86,
  "content": "./origami_dataset_dev/L04_images/page086_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d10d9"
  },
  "pdf_name": "L04_images",
  "page_number": 79,
  "content": "./origami_dataset_dev/L04_images/page079_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d10da"
  },
  "pdf_name": "L04_images",
  "page_number": 86,
  "content": "./origami_dataset_dev/L04_images/page086_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d10db"
  },
  "pdf_name": "L04_images",
  "page_number": 79,
  "content": "./origami_dataset_dev/L04_images/page079_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d10dc"
  },
  "pdf_name": "L04_images",
  "page_number": 81,
  "content": "./origami_dataset_dev/L04_images/page081_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d10dd"
  },
  "pdf_name": "L04_images",
  "page_number": 8,
  "content": "./origami_dataset_dev/L04_images/page008_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d10de"
  },
  "pdf_name": "L04_images",
  "page_number": 10,
  "content": "3D Origami\n\n\n                                                                          Laptop PC 2003\n                                                                          by Tomohiro Tachi\n                                                                          not completed",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d10df"
  },
  "pdf_name": "L04_images",
  "page_number": 4,
  "content": "Background 2: Applied Origami\n•  Static:\n    –  Manufacturing\n        • Forming a sheet\n        • No Cut / No Stretch                                 Dome (Ron Resch)\n        • No assembly\n    –  Structural Stiffness    Table\n                               (T. Tachi and D. Koschitz)\n•  Dynamic:\n    –  Deployable structure\n        • Mechanism\n\n        • Packaging                  Deployable Solar panels\n    –  Elastic Plastic Property      (K. Miura)\n        • Textured Material\n        • Energy Absorption\n•  Continuous surface\n\nPotentially useful for\n    –  Adaptive Environment\n    –  Context Customized Design\n    –  Personal Design\n    –  Fabrication Oriented Design",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d10e0"
  },
  "pdf_name": "L04_images",
  "page_number": 38,
  "content": "Mesh Modification\nEdge Collapse\n• Edge Collapse [Hoppe etal \n  1993]\n\n• Maekawa’s Theorem \n  [1983] for flat foldable \n  pattern\n  M - V = ±2",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d10e1"
  },
  "pdf_name": "L04_images",
  "page_number": 9,
  "content": "./origami_dataset_dev/L04_images/page009_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d10e2"
  },
  "pdf_name": "L04_images",
  "page_number": 108,
  "content": "./origami_dataset_dev/L04_images/page108_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d10e3"
  },
  "pdf_name": "L04_images",
  "page_number": 80,
  "content": "./origami_dataset_dev/L04_images/page080_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d10e4"
  },
  "pdf_name": "L04_images",
  "page_number": 87,
  "content": "./origami_dataset_dev/L04_images/page087_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d10e5"
  },
  "pdf_name": "L04_images",
  "page_number": 14,
  "content": "Approach: Make “Tuck”\n\n\n   • Tuck develops into\n      – a plane\n   • Tuck folds into\n      – a flat state hidden behind \n       polyhedral surface\n   →Important Advantage:\n   We can make Negative \n     Curvature Vertex",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d10e6"
  },
  "pdf_name": "L04_images",
  "page_number": 78,
  "content": "./origami_dataset_dev/L04_images/page078_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d10e7"
  },
  "pdf_name": "L04_images",
  "page_number": 28,
  "content": "Model\n\n• Triangular Mesh (triangulate \n  quads)\n                              x1 \n• Vertex coordinates           \n  represent the configuration  y1 \n   – 3N variables, where N is the # of  z1 \n      v           v            \n    vertices              X =   \n                             x \n                              Nv \n                              yNv \n                               \n• The configuration is        zNv \n  constrained by developability, \n  flat-foldability, …",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d10e8"
  },
  "pdf_name": "L04_images",
  "page_number": 49,
  "content": "./origami_dataset_dev/L04_images/page049_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d10e9"
  },
  "pdf_name": "L04_images",
  "page_number": 92,
  "content": "./origami_dataset_dev/L04_images/page092_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d10ea"
  },
  "pdf_name": "L04_images",
  "page_number": 38,
  "content": "./origami_dataset_dev/L04_images/page038_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d10eb"
  },
  "pdf_name": "L04_images",
  "page_number": 95,
  "content": "./origami_dataset_dev/L04_images/page095_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d10ec"
  },
  "pdf_name": "L04_images",
  "page_number": 49,
  "content": "./origami_dataset_dev/L04_images/page049_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d10ed"
  },
  "pdf_name": "L04_images",
  "page_number": 8,
  "content": "./origami_dataset_dev/L04_images/page008_image004.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d10ee"
  },
  "pdf_name": "L04_images",
  "page_number": 29,
  "content": "Developability\n\n Engineering Interpretation\n  →  Manufacturing from a sheet material\n     based on Folding, Bending\n\n• Global condition\n  – There exists an isometric map to a plane.\n  (if topological disk)\n• Local condition\n⇔–  Every point satisfies\n    • Gauss curvature = 0",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d10ef"
  },
  "pdf_name": "L04_images",
  "page_number": 15,
  "content": "Basic Idea\n\n      Origamize Problem\n               ↓\n      Lay-outing Surface \n      Polygons Properly\n               ↓             Polygons\n      Tessellating Surface   Edge-Tucking\n      Polygons and “Tucking  Molecule\n                             Vertex-Tucking\n      Molecules”             Molecule\n               ↓\n      Parameter everything by \n      Tucking Molecule:\n       – Angle θ (i, j)\n       – Distance w (i, j)\n       θ (j, i) = −θ (i, j)\n       w(j, i) = w(i, j) + 2λ(i, j) sin(0.5θ (i, j))",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d10f0"
  },
  "pdf_name": "L04_images",
  "page_number": 1,
  "content": "          Architectural Origami\n\nArchitectural Form Design Systems \n  based on Computational Origami\n\n\n                  Tomohiro Tachi\n  Graduate School of Arts and Sciences, The University of Tokyo\n                     JST PRESTO\n                tachi@idea.c.u-tokyo.ac.jp",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d10f1"
  },
  "pdf_name": "L04_images",
  "page_number": 9,
  "content": "./origami_dataset_dev/L04_images/page009_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d10f2"
  },
  "pdf_name": "L04_images",
  "page_number": 9,
  "content": "./origami_dataset_dev/L04_images/page009_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d10f3"
  },
  "pdf_name": "L04_images",
  "page_number": 80,
  "content": "./origami_dataset_dev/L04_images/page080_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d10f4"
  },
  "pdf_name": "L04_images",
  "page_number": 17,
  "content": "Geometric Constraints\n (Inequalities) \n\n•  2D Cond.\n                      θ()i, o ≥ π\n    –  Convex Paper\n                      w() i, o ≥ 0   Convexity of paper     Non intersection\n                                                            (convexity of molecule)\n    –  Non-intersection −π < θ()i, j < π\n                     min(w()() i, j , w j , i ) ≥ 0\n\n                     0 ≤ Θm < π\n    –  Crease pattern non-intersection\n                             1\n                     2()i , j cos θ () i, j\n          φ()i, j ≤ arctan   2     + 5.0 π\n                      w()() i,, j+ w j i\n•  3D Cond.                              展開図の妥当条件： 頂点襞分子iと稜線襞分子ijが共有す\n    for tuck proxy angle τ ′()iand, j  depth d′() i る辺を含むDelaunay三角形の頂点角φ(i, j)を用いる。\n    –  Tuck angle condition\n                    1\n               φ()i, j− θ()() i, j ≤ π − τ ′ i, j\n                    2\n    –  Tuck depth condition\n                          1    \n            w()() i, j ≤ 2sinτ′ i, j− α()() i, j d′ i\n                          2    ",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d10f5"
  },
  "pdf_name": "L04_images",
  "page_number": 3,
  "content": "Background 1: Origami\n\n\n                               Running Hare 2008           Tetrapod 2009\n    Origami Teapot 2007\n                               Tomohiro Tachi              Tomohiro Tachi\n    Tomohiro Tachi",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d10f6"
  },
  "pdf_name": "L04_images",
  "page_number": 18,
  "content": "./origami_dataset_dev/L04_images/page018_image008.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d10f7"
  },
  "pdf_name": "L04_images",
  "page_number": 81,
  "content": "./origami_dataset_dev/L04_images/page081_image005.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d10f8"
  },
  "pdf_name": "L04_images",
  "page_number": 86,
  "content": "./origami_dataset_dev/L04_images/page086_image005.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d10f9"
  },
  "pdf_name": "L04_images",
  "page_number": 38,
  "content": "./origami_dataset_dev/L04_images/page038_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d10fa"
  },
  "pdf_name": "L04_images",
  "page_number": 86,
  "content": "./origami_dataset_dev/L04_images/page086_image004.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d10fb"
  },
  "pdf_name": "L04_images",
  "page_number": 81,
  "content": "./origami_dataset_dev/L04_images/page081_image004.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d10fc"
  },
  "pdf_name": "L04_images",
  "page_number": 18,
  "content": "./origami_dataset_dev/L04_images/page018_image009.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d10fd"
  },
  "pdf_name": "L04_images",
  "page_number": 49,
  "content": "./origami_dataset_dev/L04_images/page049_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d10fe"
  },
  "pdf_name": "L04_images",
  "page_number": 2,
  "content": "     0\n\nIntroduction",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d10ff"
  },
  "pdf_name": "L04_images",
  "page_number": 16,
  "content": "Geometric Constraints (Equations)\n\n\n   N −1       N −1\n   ∑θ()()i, jn = 2 π − ∑ α i , jn (1)\n   n=0        n=0\n              n\n   N −1          \n          cos()Θm   0\n           ∑m=1       \n   ∑ w() i, jn n   =    (2)\n   n=0   sin   Θ  0\n           ()∑m=1 m \n              1              1\n   where  Θ =  θ ()()i,, j− +α i j + θ () i, j\n           m  2   m 1     m  2    m\n   Two-Step Linear Mapping \n   1. Mapping based on (1) (linear)\n\n        Cw w=  b\n   2. Mapping based on (2) (linear)\n            +            +              +\n         =     +      −           where Cw is the generalized inverse of Cw \n       w  Cw b(  I Nedge Cw C w ) w0\n                                                      +   T    T −1\n                                  If the matrix is full- rank, CCCCw= w() w w\n\n   gives (Nedge-2Nvert)dimensional solution space\n   (within the space, we solve the inequalities)",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1100"
  },
  "pdf_name": "L04_images",
  "page_number": 80,
  "content": "./origami_dataset_dev/L04_images/page080_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1101"
  },
  "pdf_name": "L04_images",
  "page_number": 33,
  "content": "Flat-foldability condition to be used\n\n    – Isometry\n          Alternating sum of angles is 0 [Kawasaki \n          1989]\n        ⇔\n                       kv\n                Fv  = ∑       ()i θi = 0sgn\n                      i=0\n    – Layering\n           [kawasaki 1989]\n\n            – If θi is between foldlines assigned with MM \n        ⇒    or VV,\n             θi    min(θi−1,θi+1)\n        + empirical condition [tachi 2007]\n                ≧\n            – If θi and θi+1 are composed byfoldlines\n             assigned with MMV or VVM then, θi\n             θi+1\n                                         ≧",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1102"
  },
  "pdf_name": "L04_images",
  "page_number": 27,
  "content": "Proposing Approach\n\n• Initial State: existing \n  origami models (e.g. Miura-\n  ori, Ron Resch Pattern, …)\n  + Perturbation consistent \n  with the origami conditions.\n• Straightforward user \n  interface.",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1103"
  },
  "pdf_name": "L04_images",
  "page_number": 85,
  "content": "./origami_dataset_dev/L04_images/page085_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1104"
  },
  "pdf_name": "L04_images",
  "page_number": 59,
  "content": "./origami_dataset_dev/L04_images/page059_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1105"
  },
  "pdf_name": "L04_images",
  "page_number": 18,
  "content": "./origami_dataset_dev/L04_images/page018_image004.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1106"
  },
  "pdf_name": "L04_images",
  "page_number": 82,
  "content": "./origami_dataset_dev/L04_images/page082_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1107"
  },
  "pdf_name": "L04_images",
  "page_number": 28,
  "content": "./origami_dataset_dev/L04_images/page028_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1108"
  },
  "pdf_name": "L04_images",
  "page_number": 59,
  "content": "./origami_dataset_dev/L04_images/page059_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1109"
  },
  "pdf_name": "L04_images",
  "page_number": 18,
  "content": "./origami_dataset_dev/L04_images/page018_image005.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d110a"
  },
  "pdf_name": "L04_images",
  "page_number": 26,
  "content": "Objective of the Study\n\n1.     freeform\n       –   Controlled 3D form\n       –   Fit function, design context, \n           preference, ...\n\n2.     origami\n       utilize the properties\n       –   Developability\n             →  Manufacturing from a sheet material\n                 based on Folding, Bending\n       –   Flat-foldability\n             →   Folding into a compact configuration\n                 or Deployment from 2D to 3D\n       –   Rigid-foldability\n             →   Transformable\n                 Structure\n       –   Elastic Properties\n       ...",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d110b"
  },
  "pdf_name": "L04_images",
  "page_number": 32,
  "content": "Flat-foldability\n\n Engineering Interpretation\n → Folding into a compact configuration\n   or Deployment from 2D to 3D\n\n• Isometry condition\n  • isometric mapping with mirror reflection\n• Layering condition\n  • valid overlapping ordering\n    • globally : NP Complete [Bern and Hayes 1996]",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d110c"
  },
  "pdf_name": "L04_images",
  "page_number": 97,
  "content": "./origami_dataset_dev/L04_images/page097_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d110d"
  },
  "pdf_name": "L04_images",
  "page_number": 68,
  "content": "./origami_dataset_dev/L04_images/page068_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d110e"
  },
  "pdf_name": "L04_images",
  "page_number": 118,
  "content": "./origami_dataset_dev/L04_images/page118_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d110f"
  },
  "pdf_name": "L04_images",
  "page_number": 90,
  "content": "./origami_dataset_dev/L04_images/page090_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1110"
  },
  "pdf_name": "L04_images",
  "page_number": 18,
  "content": "Design System: Origamizer\n\n     3D           CP          • Auto Generation of Crease \n                                Pattern\n                              • Interactive Editing (Search \n                                within the solution space)\n                                 – Dragging Developed Facets\n\n\n                                 – Edge Split\n\n                                 – Boundary Editing\n\n\n     Developed in the project \n     “3D Origami Design Tool”\n     of IPA ESPer Project",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1111"
  },
  "pdf_name": "L04_images",
  "page_number": 24,
  "content": "Proof?\nOngoing joint work with Erik Demaine",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1112"
  },
  "pdf_name": "L04_images",
  "page_number": 30,
  "content": "Developable Surface\n\n•  Smooth Developable Surface\n    –  G2 surface (curvature continuous) \n        • \"Developable Surface\" (in a narrow \n          sense)\n        • Plane, Cylinder, Cone, Tangent \n          surface\n    –  G1 Surface (smooth, tangent \n       continuous)                         pl ane    cyl i nder  cone     t angent\n        • \"Uncreased flat surface\"\n        • piecewise Plane, Cylinder, Cone, \n          Tangent surface\n\n•  Origami\n    –  G0 Surface\n    –  piecewise G1 Developable G0\n       Surface",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1113"
  },
  "pdf_name": "L04_images",
  "page_number": 91,
  "content": "./origami_dataset_dev/L04_images/page091_image004.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1114"
  },
  "pdf_name": "L04_images",
  "page_number": 18,
  "content": "./origami_dataset_dev/L04_images/page018_image007.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1115"
  },
  "pdf_name": "L04_images",
  "page_number": 59,
  "content": "./origami_dataset_dev/L04_images/page059_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1116"
  },
  "pdf_name": "L04_images",
  "page_number": 28,
  "content": "./origami_dataset_dev/L04_images/page028_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1117"
  },
  "pdf_name": "L04_images",
  "page_number": 82,
  "content": "./origami_dataset_dev/L04_images/page082_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1118"
  },
  "pdf_name": "L04_images",
  "page_number": 129,
  "content": "./origami_dataset_dev/L04_images/page129_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1119"
  },
  "pdf_name": "L04_images",
  "page_number": 82,
  "content": "./origami_dataset_dev/L04_images/page082_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d111a"
  },
  "pdf_name": "L04_images",
  "page_number": 18,
  "content": "./origami_dataset_dev/L04_images/page018_image006.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d111b"
  },
  "pdf_name": "L04_images",
  "page_number": 31,
  "content": "Developability condition\nto be used\n• Constraints\n   – For every interior vertex v \n    (kv-degree), gauss area\n    equals 0.               GC<0     GC=0     GC>0\n\n               kv\n   Gv  =2π   −∑   θi = 0\n               i=0",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d111c"
  },
  "pdf_name": "L04_images",
  "page_number": 25,
  "content": "                           2\n\n         Freeform Origami\n\n\nRelated Papers:\n•Tomohiro Tachi, \"Freeform Variations of Origami\", \nin Proceedings of The 14th International Conference \non Geometry and Graphics (ICGG 2010), Kyoto, Japan, \npp. 273-274, August 5-9, 2010.\n(to appear in Journal for Geometry and Graphics \nVol. 14, No. 2)\n\n•Tomohiro Tachi: \"Smooth Origami Animation by Crease \nLine Adjustment ,\" ACM SIGGRAPH 2006 Posters, 2006. ",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d111d"
  },
  "pdf_name": "L04_images",
  "page_number": 19,
  "content": "",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d111e"
  },
  "pdf_name": "L04_images",
  "page_number": 68,
  "content": "./origami_dataset_dev/L04_images/page068_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d111f"
  },
  "pdf_name": "L04_images",
  "page_number": 19,
  "content": "./origami_dataset_dev/L04_images/page019_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1120"
  },
  "pdf_name": "L04_images",
  "page_number": 58,
  "content": "./origami_dataset_dev/L04_images/page058_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1121"
  },
  "pdf_name": "L04_images",
  "page_number": 21,
  "content": "1. Fold Along the Crease Pattern",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1122"
  },
  "pdf_name": "L04_images",
  "page_number": 35,
  "content": "Settings\n\n\n                                        x1 \n•  Initial Figure:                         \n                                         y\n    – Symmetric Pattern                  1 \n                                        z1 \n•  Freeform Deformation                    \n                                   X =    \n    – Variables (3Nv)\n        • Coordinates                  x   \n                    X                   Nv \n    – Constraints (2Nv_in+Nc)           yNv \n        • Developability                   \n                                        zNv \n        • Flat-foldability\n        • Other Constraints Under-determined System\n\n                         →Multi-dimensional \n                         Solution Space",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1123"
  },
  "pdf_name": "L04_images",
  "page_number": 9,
  "content": "1D vs. 3D\n\n• Circle River Method / Tree Method\n  – Works fine for tree-like objects\n  – Does not fit to 3D objects\n\n• Origamizer / Freeform Origami\n  – 3D Polyhedron, surface approximation\n  – What You See Is What You Fold",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1124"
  },
  "pdf_name": "L04_images",
  "page_number": 91,
  "content": "./origami_dataset_dev/L04_images/page091_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1125"
  },
  "pdf_name": "L04_images",
  "page_number": 119,
  "content": "./origami_dataset_dev/L04_images/page119_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1126"
  },
  "pdf_name": "L04_images",
  "page_number": 59,
  "content": "./origami_dataset_dev/L04_images/page059_image004.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1127"
  },
  "pdf_name": "L04_images",
  "page_number": 18,
  "content": "./origami_dataset_dev/L04_images/page018_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1128"
  },
  "pdf_name": "L04_images",
  "page_number": 69,
  "content": "./origami_dataset_dev/L04_images/page069_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1129"
  },
  "pdf_name": "L04_images",
  "page_number": 96,
  "content": "./origami_dataset_dev/L04_images/page096_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d112a"
  },
  "pdf_name": "L04_images",
  "page_number": 59,
  "content": "./origami_dataset_dev/L04_images/page059_image005.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d112b"
  },
  "pdf_name": "L04_images",
  "page_number": 18,
  "content": "./origami_dataset_dev/L04_images/page018_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d112c"
  },
  "pdf_name": "L04_images",
  "page_number": 8,
  "content": "Existing Origami Design Method\nby Circle Packing\n\n                                                  Circle River Method [Meguro 1992]\n                                                  Tree Method [Lang 1994]\n\n                                                       CP: Parent and Children Crabs by Toshiyuki Meguro\n\n\n                                                          Scutigera by Brian Chan",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d112d"
  },
  "pdf_name": "L04_images",
  "page_number": 34,
  "content": "Other Conditions\n\n\n • Conditions for fold angles\n    – Fold angles ρ\n    – V fold: 0<ρ<π\n    – M fold: −π<ρ<0\n    – crease: −απ<ρ<απ (α=0:planar polygon)\n • Optional Conditions\n    – Fixed Boundary\n       • Folded from a specific shape of paper\n    – Rigid bars\n    – Pinning",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d112e"
  },
  "pdf_name": "L04_images",
  "page_number": 20,
  "content": "          How to Fold Origami Bunny\n\n\n0. Get a crease pattern using Origamizer",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d112f"
  },
  "pdf_name": "L04_images",
  "page_number": 29,
  "content": "./origami_dataset_dev/L04_images/page029_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1130"
  },
  "pdf_name": "L04_images",
  "page_number": 83,
  "content": "./origami_dataset_dev/L04_images/page083_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1131"
  },
  "pdf_name": "L04_images",
  "page_number": 58,
  "content": "./origami_dataset_dev/L04_images/page058_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1132"
  },
  "pdf_name": "L04_images",
  "page_number": 84,
  "content": "./origami_dataset_dev/L04_images/page084_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1133"
  },
  "pdf_name": "L04_images",
  "page_number": 36,
  "content": "Solve Non-linear Equation\n\nThe infinitesimal motion satisfies:\n   ∂G  ∂G ∂G \n           \n    ∂  ∂ ∂ρ  ∂θ \n    X   θ              kv    ∂θijk 1\n    ∂  ∂ ∂                   = − bT\n F    F F  ∂X  G =2π −∑ θ = 0  ij\nCX =  X =   X= 0 v     i   ∂xi ij\n            ∂          i=0\n    ∂X  ∂θ ∂ρ ρ      kv\n                             ∂θijk 1 1\n   ∂H  ∂H ∂                  =bT + bT\n           H ∂X   Fv = ∑sgn()i θi = 0 ij  jk\n                           ∂x j ij jk\n    ∂X   ∂θ ∂ρ  i=0\n                               ∂θijk 1 T\nFor an arbitrarily given (through GUI) = − b jk\n                               ∂xk jk\n Infinitesimal Deformation ∆X0\n\n                               Euler Integration\n\n                              +\n                             −CCX ∆ 0\n\n                               +\n                          ∆    − C r\n       +        +          X0\n∆X = − C r +() I3N − C C ∆ X0 ∆X\n             v           r= r Calculated Trajectory\n\n                           r= 0\n                           Ideal Trajectory",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1134"
  },
  "pdf_name": "L04_images",
  "page_number": 22,
  "content": "",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1135"
  },
  "pdf_name": "L04_images",
  "page_number": 91,
  "content": "./origami_dataset_dev/L04_images/page091_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1136"
  },
  "pdf_name": "L04_images",
  "page_number": 18,
  "content": "./origami_dataset_dev/L04_images/page018_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1137"
  },
  "pdf_name": "L04_images",
  "page_number": 82,
  "content": "./origami_dataset_dev/L04_images/page082_image004.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1138"
  },
  "pdf_name": "L04_images",
  "page_number": 69,
  "content": "./origami_dataset_dev/L04_images/page069_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1139"
  },
  "pdf_name": "L04_images",
  "page_number": 69,
  "content": "./origami_dataset_dev/L04_images/page069_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d113a"
  },
  "pdf_name": "L04_images",
  "page_number": 91,
  "content": "./origami_dataset_dev/L04_images/page091_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d113b"
  },
  "pdf_name": "L04_images",
  "page_number": 23,
  "content": "2. Done!",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d113c"
  },
  "pdf_name": "L04_images",
  "page_number": 37,
  "content": "Freeform Origami\n\n                               3D\nGet A Valid Value\n•  Iterative method to calculate \n   the conditions\n                                                      Developed\n•  Form finding through User \n   Interface\nImplementation\n•  Lang                                              Flat-folded\n    – C++, STL\n•  Library\n    – BLAS (intel MKL)\n•  Interface\n    – wxWidgets, OpenGL\nTo be available on web",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d113d"
  },
  "pdf_name": "L04_images",
  "page_number": 83,
  "content": "./origami_dataset_dev/L04_images/page083_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d113e"
  },
  "pdf_name": "L04_images",
  "page_number": 128,
  "content": "./origami_dataset_dev/L04_images/page128_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d113f"
  },
  "pdf_name": "L04_images",
  "page_number": 58,
  "content": "./origami_dataset_dev/L04_images/page058_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1140"
  },
  "pdf_name": "L04_images",
  "page_number": 43,
  "content": "./origami_dataset_dev/L04_images/page043_image008.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1141"
  },
  "pdf_name": "L04_images",
  "page_number": 6,
  "content": "./origami_dataset_dev/L04_images/page006_image006.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1142"
  },
  "pdf_name": "L04_images",
  "page_number": 93,
  "content": "",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1143"
  },
  "pdf_name": "L04_images",
  "page_number": 63,
  "content": "./origami_dataset_dev/L04_images/page063_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1144"
  },
  "pdf_name": "L04_images",
  "page_number": 87,
  "content": "Generalized Rigid Folding Constraints\n\n• For any closed loop in \n  Mesh \n\n  TTT0,1 k− 2, k − 1 k − 1,0 = I\n\n  where Ti,j is a 4x4 \n  transformation matrix to \n  translate facets coordinate \n  i to j\n• When it is around a \n  vertex: T is a rotation \n  matrix.",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1145"
  },
  "pdf_name": "L04_images",
  "page_number": 78,
  "content": "        3b\n\n   Rigid-foldable\nCylindrical Structure",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1146"
  },
  "pdf_name": "L04_images",
  "page_number": 54,
  "content": "./origami_dataset_dev/L04_images/page054_image012.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1147"
  },
  "pdf_name": "L04_images",
  "page_number": 50,
  "content": "Waterbomb Pattern Generalized",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1148"
  },
  "pdf_name": "L04_images",
  "page_number": 44,
  "content": "Ron Resch Pattern\nGeneralized",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1149"
  },
  "pdf_name": "L04_images",
  "page_number": 54,
  "content": "./origami_dataset_dev/L04_images/page054_image006.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d114a"
  },
  "pdf_name": "L04_images",
  "page_number": 125,
  "content": "./origami_dataset_dev/L04_images/page125_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d114b"
  },
  "pdf_name": "L04_images",
  "page_number": 30,
  "content": "./origami_dataset_dev/L04_images/page030_image004.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d114c"
  },
  "pdf_name": "L04_images",
  "page_number": 24,
  "content": "./origami_dataset_dev/L04_images/page024_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d114d"
  },
  "pdf_name": "L04_images",
  "page_number": 71,
  "content": "./origami_dataset_dev/L04_images/page071_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d114e"
  },
  "pdf_name": "L04_images",
  "page_number": 106,
  "content": "./origami_dataset_dev/L04_images/page106_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d114f"
  },
  "pdf_name": "L04_images",
  "page_number": 118,
  "content": "",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1150"
  },
  "pdf_name": "L04_images",
  "page_number": 46,
  "content": "./origami_dataset_dev/L04_images/page046_image007.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1151"
  },
  "pdf_name": "L04_images",
  "page_number": 124,
  "content": "",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1152"
  },
  "pdf_name": "L04_images",
  "page_number": 7,
  "content": "./origami_dataset_dev/L04_images/page007_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1153"
  },
  "pdf_name": "L04_images",
  "page_number": 52,
  "content": "./origami_dataset_dev/L04_images/page052_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1154"
  },
  "pdf_name": "L04_images",
  "page_number": 122,
  "content": "./origami_dataset_dev/L04_images/page122_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1155"
  },
  "pdf_name": "L04_images",
  "page_number": 76,
  "content": "./origami_dataset_dev/L04_images/page076_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1156"
  },
  "pdf_name": "L04_images",
  "page_number": 89,
  "content": "./origami_dataset_dev/L04_images/page089_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1157"
  },
  "pdf_name": "L04_images",
  "page_number": 62,
  "content": "./origami_dataset_dev/L04_images/page062_image004.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1158"
  },
  "pdf_name": "L04_images",
  "page_number": 101,
  "content": "./origami_dataset_dev/L04_images/page101_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1159"
  },
  "pdf_name": "L04_images",
  "page_number": 55,
  "content": "./origami_dataset_dev/L04_images/page055_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d115a"
  },
  "pdf_name": "L04_images",
  "page_number": 4,
  "content": "./origami_dataset_dev/L04_images/page004_image008.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d115b"
  },
  "pdf_name": "L04_images",
  "page_number": 76,
  "content": "./origami_dataset_dev/L04_images/page076_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d115c"
  },
  "pdf_name": "L04_images",
  "page_number": 62,
  "content": "./origami_dataset_dev/L04_images/page062_image005.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d115d"
  },
  "pdf_name": "L04_images",
  "page_number": 125,
  "content": "",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d115e"
  },
  "pdf_name": "L04_images",
  "page_number": 46,
  "content": "./origami_dataset_dev/L04_images/page046_image006.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d115f"
  },
  "pdf_name": "L04_images",
  "page_number": 119,
  "content": "",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1160"
  },
  "pdf_name": "L04_images",
  "page_number": 30,
  "content": "./origami_dataset_dev/L04_images/page030_image005.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1161"
  },
  "pdf_name": "L04_images",
  "page_number": 71,
  "content": "./origami_dataset_dev/L04_images/page071_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1162"
  },
  "pdf_name": "L04_images",
  "page_number": 24,
  "content": "./origami_dataset_dev/L04_images/page024_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1163"
  },
  "pdf_name": "L04_images",
  "page_number": 15,
  "content": "./origami_dataset_dev/L04_images/page015_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1164"
  },
  "pdf_name": "L04_images",
  "page_number": 40,
  "content": "./origami_dataset_dev/L04_images/page040_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1165"
  },
  "pdf_name": "L04_images",
  "page_number": 54,
  "content": "./origami_dataset_dev/L04_images/page054_image007.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1166"
  },
  "pdf_name": "L04_images",
  "page_number": 45,
  "content": "Generalized\nRon Resch Pattern",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1167"
  },
  "pdf_name": "L04_images",
  "page_number": 51,
  "content": "",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1168"
  },
  "pdf_name": "L04_images",
  "page_number": 79,
  "content": "Topologically Extend Rigid Origami\n\n• Generalize to the cylindrical, or higher genus rigid-\n foldable polyhedron.\n\n• But it is not trivial!",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1169"
  },
  "pdf_name": "L04_images",
  "page_number": 63,
  "content": "./origami_dataset_dev/L04_images/page063_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d116a"
  },
  "pdf_name": "L04_images",
  "page_number": 86,
  "content": "Isotropic Rigid Foldable\nTube Generalization\n• Rigid Foldable Tube based \n  on symmetry\n\n• Based on\n  – “Fold”\n  – “Elbow”\n\n= special case of\n  BDFFPQ Mesh",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d116b"
  },
  "pdf_name": "L04_images",
  "page_number": 92,
  "content": "",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d116c"
  },
  "pdf_name": "L04_images",
  "page_number": 6,
  "content": "./origami_dataset_dev/L04_images/page006_image007.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d116d"
  },
  "pdf_name": "L04_images",
  "page_number": 12,
  "content": "./origami_dataset_dev/L04_images/page012_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d116e"
  },
  "pdf_name": "L04_images",
  "page_number": 47,
  "content": "./origami_dataset_dev/L04_images/page047_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d116f"
  },
  "pdf_name": "L04_images",
  "page_number": 31,
  "content": "./origami_dataset_dev/L04_images/page031_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1170"
  },
  "pdf_name": "L04_images",
  "page_number": 12,
  "content": "./origami_dataset_dev/L04_images/page012_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1171"
  },
  "pdf_name": "L04_images",
  "page_number": 6,
  "content": "./origami_dataset_dev/L04_images/page006_image005.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1172"
  },
  "pdf_name": "L04_images",
  "page_number": 84,
  "content": "",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1173"
  },
  "pdf_name": "L04_images",
  "page_number": 90,
  "content": "",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1174"
  },
  "pdf_name": "L04_images",
  "page_number": 47,
  "content": "crumpled paper example",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1175"
  },
  "pdf_name": "L04_images",
  "page_number": 54,
  "content": "./origami_dataset_dev/L04_images/page054_image005.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1176"
  },
  "pdf_name": "L04_images",
  "page_number": 40,
  "content": "./origami_dataset_dev/L04_images/page040_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1177"
  },
  "pdf_name": "L04_images",
  "page_number": 54,
  "content": "./origami_dataset_dev/L04_images/page054_image011.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1178"
  },
  "pdf_name": "L04_images",
  "page_number": 53,
  "content": "                                    3\n\n                   Rigid Origami\n\n•Tachi T.: \"Rigid-Foldable Thick Origami\", in Origami5, to appear. \n•Tachi T.: \"Freeform Rigid-Foldable Structure using Bidirectionally Flat-Foldable Planar \nQuadrilateral Mesh\", Advances in Architectural Geometry 2010, pp. 87--102, 2010. \n•Miura K. and Tachi T.: \"Synthesis of Rigid-Foldable Cylindrical Polyhedra,\" Journal of ISIS-\nSymmetry, Special Issues for the Festival-Congress Gmuend, Austria, August 23-28, pp. 204-213, \n2010.\n•Tachi T.: \"One-DOF Cylindrical Deployable Structures with Rigid Quadrilateral Panels,\" in \nProceedings of the IASS Symposium 2009, pp. 2295-2306, Valencia, Spain, September 28- October \n2, 2009. \n•Tachi T.: \"Generalization of Rigid-Foldable Quadrilateral-Mesh Origami,\" Journal of the \nInternational Association for Shell and Spatial Structures (IASS), 50(3), pp. 173–179, December \n2009. \n•Tachi T.: \"Simulation of Rigid Origami ,\" in Origami4, pp. 175-187, 2009.  ",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1179"
  },
  "pdf_name": "L04_images",
  "page_number": 24,
  "content": "./origami_dataset_dev/L04_images/page024_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d117a"
  },
  "pdf_name": "L04_images",
  "page_number": 71,
  "content": "./origami_dataset_dev/L04_images/page071_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d117b"
  },
  "pdf_name": "L04_images",
  "page_number": 106,
  "content": "./origami_dataset_dev/L04_images/page106_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d117c"
  },
  "pdf_name": "L04_images",
  "page_number": 46,
  "content": "./origami_dataset_dev/L04_images/page046_image010.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d117d"
  },
  "pdf_name": "L04_images",
  "page_number": 46,
  "content": "./origami_dataset_dev/L04_images/page046_image004.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d117e"
  },
  "pdf_name": "L04_images",
  "page_number": 13,
  "content": "./origami_dataset_dev/L04_images/page013_image004.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d117f"
  },
  "pdf_name": "L04_images",
  "page_number": 127,
  "content": "",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1180"
  },
  "pdf_name": "L04_images",
  "page_number": 122,
  "content": "./origami_dataset_dev/L04_images/page122_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1181"
  },
  "pdf_name": "L04_images",
  "page_number": 89,
  "content": "./origami_dataset_dev/L04_images/page089_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1182"
  },
  "pdf_name": "L04_images",
  "page_number": 23,
  "content": "./origami_dataset_dev/L04_images/page023_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1183"
  },
  "pdf_name": "L04_images",
  "page_number": 76,
  "content": "./origami_dataset_dev/L04_images/page076_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1184"
  },
  "pdf_name": "L04_images",
  "page_number": 101,
  "content": "./origami_dataset_dev/L04_images/page101_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1185"
  },
  "pdf_name": "L04_images",
  "page_number": 41,
  "content": "./origami_dataset_dev/L04_images/page041_image004.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1186"
  },
  "pdf_name": "L04_images",
  "page_number": 41,
  "content": "./origami_dataset_dev/L04_images/page041_image005.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1187"
  },
  "pdf_name": "L04_images",
  "page_number": 122,
  "content": "./origami_dataset_dev/L04_images/page122_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1188"
  },
  "pdf_name": "L04_images",
  "page_number": 126,
  "content": "",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1189"
  },
  "pdf_name": "L04_images",
  "page_number": 46,
  "content": "./origami_dataset_dev/L04_images/page046_image005.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d118a"
  },
  "pdf_name": "L04_images",
  "page_number": 46,
  "content": "./origami_dataset_dev/L04_images/page046_image011.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d118b"
  },
  "pdf_name": "L04_images",
  "page_number": 52,
  "content": "",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d118c"
  },
  "pdf_name": "L04_images",
  "page_number": 54,
  "content": "./origami_dataset_dev/L04_images/page054_image010.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d118d"
  },
  "pdf_name": "L04_images",
  "page_number": 54,
  "content": "./origami_dataset_dev/L04_images/page054_image004.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d118e"
  },
  "pdf_name": "L04_images",
  "page_number": 46,
  "content": "Crumpled Paper\n\n• Origami\n  = crumpled paper\n  = buckled sheet\n\n• Conditions\n  – Developable\n  – Fixed Perimeter",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d118f"
  },
  "pdf_name": "L04_images",
  "page_number": 40,
  "content": "./origami_dataset_dev/L04_images/page040_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1190"
  },
  "pdf_name": "L04_images",
  "page_number": 114,
  "content": "./origami_dataset_dev/L04_images/page114_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1191"
  },
  "pdf_name": "L04_images",
  "page_number": 91,
  "content": "Manufactured From Two Sheets of Paper",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1192"
  },
  "pdf_name": "L04_images",
  "page_number": 85,
  "content": "",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1193"
  },
  "pdf_name": "L04_images",
  "page_number": 36,
  "content": "./origami_dataset_dev/L04_images/page036_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1194"
  },
  "pdf_name": "L04_images",
  "page_number": 63,
  "content": "./origami_dataset_dev/L04_images/page063_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1195"
  },
  "pdf_name": "L04_images",
  "page_number": 123,
  "content": "./origami_dataset_dev/L04_images/page123_image004.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1196"
  },
  "pdf_name": "L04_images",
  "page_number": 12,
  "content": "./origami_dataset_dev/L04_images/page012_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1197"
  },
  "pdf_name": "L04_images",
  "page_number": 47,
  "content": "./origami_dataset_dev/L04_images/page047_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1198"
  },
  "pdf_name": "L04_images",
  "page_number": 6,
  "content": "./origami_dataset_dev/L04_images/page006_image004.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d1199"
  },
  "pdf_name": "L04_images",
  "page_number": 113,
  "content": "./origami_dataset_dev/L04_images/page113_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d119a"
  },
  "pdf_name": "L04_images",
  "page_number": 31,
  "content": "./origami_dataset_dev/L04_images/page031_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d119b"
  },
  "pdf_name": "L04_images",
  "page_number": 64,
  "content": "./origami_dataset_dev/L04_images/page064_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d119c"
  },
  "pdf_name": "L04_images",
  "page_number": 12,
  "content": "./origami_dataset_dev/L04_images/page012_image006.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d119d"
  },
  "pdf_name": "L04_images",
  "page_number": 81,
  "content": "Symmetric Structure Variations",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d119e"
  },
  "pdf_name": "L04_images",
  "page_number": 95,
  "content": "",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d119f"
  },
  "pdf_name": "L04_images",
  "page_number": 5,
  "content": "./origami_dataset_dev/L04_images/page005_image008.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d11a0"
  },
  "pdf_name": "L04_images",
  "page_number": 42,
  "content": "Miura-ori Generalized\n\n\n                                                                 Origami Metamorphose Tomohiro Tachi         2010",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d11a1"
  },
  "pdf_name": "L04_images",
  "page_number": 56,
  "content": "Examples of\nRigid Origami",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d11a2"
  },
  "pdf_name": "L04_images",
  "page_number": 65,
  "content": "./origami_dataset_dev/L04_images/page065_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d11a3"
  },
  "pdf_name": "L04_images",
  "page_number": 30,
  "content": "./origami_dataset_dev/L04_images/page030_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d11a4"
  },
  "pdf_name": "L04_images",
  "page_number": 24,
  "content": "./origami_dataset_dev/L04_images/page024_image004.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d11a5"
  },
  "pdf_name": "L04_images",
  "page_number": 46,
  "content": "./origami_dataset_dev/L04_images/page046_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d11a6"
  },
  "pdf_name": "L04_images",
  "page_number": 13,
  "content": "./origami_dataset_dev/L04_images/page013_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d11a7"
  },
  "pdf_name": "L04_images",
  "page_number": 122,
  "content": "Example: Construct a foldable structure that \ntemporarily connects existing buildings\n•  Space: Flexible\n    – Connects when opened\n       • Openings: different position \n         and orientation\n       • Connected gallery space\n    – Compactly folded\n       • to fit the facade\n•  Structure: Rigid\n    – Rigid panels and hinges",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d11a8"
  },
  "pdf_name": "L04_images",
  "page_number": 76,
  "content": "./origami_dataset_dev/L04_images/page076_image004.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d11a9"
  },
  "pdf_name": "L04_images",
  "page_number": 62,
  "content": "./origami_dataset_dev/L04_images/page062_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d11aa"
  },
  "pdf_name": "L04_images",
  "page_number": 37,
  "content": "./origami_dataset_dev/L04_images/page037_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d11ab"
  },
  "pdf_name": "L04_images",
  "page_number": 41,
  "content": "./origami_dataset_dev/L04_images/page041_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d11ac"
  },
  "pdf_name": "L04_images",
  "page_number": 14,
  "content": "./origami_dataset_dev/L04_images/page014_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d11ad"
  },
  "pdf_name": "L04_images",
  "page_number": 76,
  "content": "./origami_dataset_dev/L04_images/page076_image005.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d11ae"
  },
  "pdf_name": "L04_images",
  "page_number": 37,
  "content": "./origami_dataset_dev/L04_images/page037_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d11af"
  },
  "pdf_name": "L04_images",
  "page_number": 62,
  "content": "./origami_dataset_dev/L04_images/page062_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d11b0"
  },
  "pdf_name": "L04_images",
  "page_number": 123,
  "content": "Panel Layout",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d11b1"
  },
  "pdf_name": "L04_images",
  "page_number": 30,
  "content": "./origami_dataset_dev/L04_images/page030_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d11b2"
  },
  "pdf_name": "L04_images",
  "page_number": 24,
  "content": "./origami_dataset_dev/L04_images/page024_image005.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d11b3"
  },
  "pdf_name": "L04_images",
  "page_number": 57,
  "content": "Basics of Rigid Origami\nAngular Representation                C2(ρ2)\n                            C3(ρ3)\n                                             χ1= CB 1 12\n• Constraints                      B23 λ2\n                                λ3    B12    χ = CB\n                                          C1(ρ1) 2 2 23\n   – [Kawasaki 87]               B34  λ1\n                                     B41     χ3= CB 3 34\n    [belcastro and Hull 02]       λ4\n                                             χ4= CB 4 41\n\n        χ1  χn−1 χ n = I          C4(ρ4)\n\n   – 3 equations per interior Generic case:\n    vertex\n                               DOF = Ein     -3Vin\n• Vin interior vert + \n                                       +\n  Ein foldline model:\n                           ρ =[]ICCN −    ρ 0\n   – constraints:\n                  =                 +            \n          []C   ρ   0      where C    is the     \n         ×                                        \n      3VEinin matrix       pseudo -inverse of C",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d11b4"
  },
  "pdf_name": "L04_images",
  "page_number": 54,
  "content": "./origami_dataset_dev/L04_images/page054_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d11b5"
  },
  "pdf_name": "L04_images",
  "page_number": 43,
  "content": "Ron Resch Pattern\n\n• Original\n   – Resch [1970]\n• Characteristics\n   – Flexible (multiDOF)\n   – Forms a smooth flat surface \n    + scaffold\n\n• Conditions\n   – Developable\n   – 3-vertex coincidence",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d11b6"
  },
  "pdf_name": "L04_images",
  "page_number": 1,
  "content": "./origami_dataset_dev/L04_images/page001_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d11b7"
  },
  "pdf_name": "L04_images",
  "page_number": 123,
  "content": "./origami_dataset_dev/L04_images/page123_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d11b8"
  },
  "pdf_name": "L04_images",
  "page_number": 94,
  "content": "",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d11b9"
  },
  "pdf_name": "L04_images",
  "page_number": 5,
  "content": "./origami_dataset_dev/L04_images/page005_image009.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d11ba"
  },
  "pdf_name": "L04_images",
  "page_number": 77,
  "content": "./origami_dataset_dev/L04_images/page077_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d11bb"
  },
  "pdf_name": "L04_images",
  "page_number": 80,
  "content": "Rigid-Foldable Tube\nBasics\nMiura-Ori Reflection\n\n (Partial Structure of\n  Thoki Yenn’s “Flip Flop”)",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d11bc"
  },
  "pdf_name": "L04_images",
  "page_number": 107,
  "content": "./origami_dataset_dev/L04_images/page107_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d11bd"
  },
  "pdf_name": "L04_images",
  "page_number": 53,
  "content": "./origami_dataset_dev/L04_images/page053_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d11be"
  },
  "pdf_name": "L04_images",
  "page_number": 6,
  "content": "./origami_dataset_dev/L04_images/page006_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d11bf"
  },
  "pdf_name": "L04_images",
  "page_number": 12,
  "content": "./origami_dataset_dev/L04_images/page012_image007.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d11c0"
  },
  "pdf_name": "L04_images",
  "page_number": 124,
  "content": "./origami_dataset_dev/L04_images/page124_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d11c1"
  },
  "pdf_name": "L04_images",
  "page_number": 12,
  "content": "./origami_dataset_dev/L04_images/page012_image005.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d11c2"
  },
  "pdf_name": "L04_images",
  "page_number": 6,
  "content": "./origami_dataset_dev/L04_images/page006_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d11c3"
  },
  "pdf_name": "L04_images",
  "page_number": 96,
  "content": "",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d11c4"
  },
  "pdf_name": "L04_images",
  "page_number": 82,
  "content": "Parametric design of cylinders and \ncomposite structures",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d11c5"
  },
  "pdf_name": "L04_images",
  "page_number": 123,
  "content": "./origami_dataset_dev/L04_images/page123_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d11c6"
  },
  "pdf_name": "L04_images",
  "page_number": 55,
  "content": "Study Objectives\n\n1. Generalize rigid foldable structures to freeform\n  1. Generic triangular-mesh based design\n   •  multi-DOF\n   •  statically determinate\n  2. Singular quadrilateral-mesh based design\n   •  one-DOF\n   •  redundant contraints\n2. Generalize rigid foldable structures to cylinders \n  and more",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d11c7"
  },
  "pdf_name": "L04_images",
  "page_number": 41,
  "content": "Miura-ori Generalized \n\n• Freeform \n Miura-ori",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d11c8"
  },
  "pdf_name": "L04_images",
  "page_number": 54,
  "content": "./origami_dataset_dev/L04_images/page054_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d11c9"
  },
  "pdf_name": "L04_images",
  "page_number": 69,
  "content": "Rigid Foldable Curved Folding\n\n• Curved folding is \n  rationalized by Planar \n  Quad Mesh\n• Rigid Foldable Curved \n  Folding\n   = \n  Curved folding without \n  ruling sliding",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d11ca"
  },
  "pdf_name": "L04_images",
  "page_number": 65,
  "content": "./origami_dataset_dev/L04_images/page065_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d11cb"
  },
  "pdf_name": "L04_images",
  "page_number": 30,
  "content": "./origami_dataset_dev/L04_images/page030_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d11cc"
  },
  "pdf_name": "L04_images",
  "page_number": 46,
  "content": "./origami_dataset_dev/L04_images/page046_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d11cd"
  },
  "pdf_name": "L04_images",
  "page_number": 121,
  "content": "",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d11ce"
  },
  "pdf_name": "L04_images",
  "page_number": 13,
  "content": "./origami_dataset_dev/L04_images/page013_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d11cf"
  },
  "pdf_name": "L04_images",
  "page_number": 112,
  "content": "./origami_dataset_dev/L04_images/page112_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d11d0"
  },
  "pdf_name": "L04_images",
  "page_number": 109,
  "content": "",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d11d1"
  },
  "pdf_name": "L04_images",
  "page_number": 62,
  "content": "./origami_dataset_dev/L04_images/page062_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d11d2"
  },
  "pdf_name": "L04_images",
  "page_number": 37,
  "content": "./origami_dataset_dev/L04_images/page037_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d11d3"
  },
  "pdf_name": "L04_images",
  "page_number": 122,
  "content": "./origami_dataset_dev/L04_images/page122_image004.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d11d4"
  },
  "pdf_name": "L04_images",
  "page_number": 41,
  "content": "./origami_dataset_dev/L04_images/page041_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d11d5"
  },
  "pdf_name": "L04_images",
  "page_number": 14,
  "content": "./origami_dataset_dev/L04_images/page014_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d11d6"
  },
  "pdf_name": "L04_images",
  "page_number": 115,
  "content": "./origami_dataset_dev/L04_images/page115_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d11d7"
  },
  "pdf_name": "L04_images",
  "page_number": 14,
  "content": "./origami_dataset_dev/L04_images/page014_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d11d8"
  },
  "pdf_name": "L04_images",
  "page_number": 41,
  "content": "./origami_dataset_dev/L04_images/page041_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d11d9"
  },
  "pdf_name": "L04_images",
  "page_number": 108,
  "content": "",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d11da"
  },
  "pdf_name": "L04_images",
  "page_number": 13,
  "content": "./origami_dataset_dev/L04_images/page013_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d11db"
  },
  "pdf_name": "L04_images",
  "page_number": 120,
  "content": "",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d11dc"
  },
  "pdf_name": "L04_images",
  "page_number": 46,
  "content": "./origami_dataset_dev/L04_images/page046_image003.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d11dd"
  },
  "pdf_name": "L04_images",
  "page_number": 24,
  "content": "./origami_dataset_dev/L04_images/page024_image006.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d11de"
  },
  "pdf_name": "L04_images",
  "page_number": 100,
  "content": "./origami_dataset_dev/L04_images/page100_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d11df"
  },
  "pdf_name": "L04_images",
  "page_number": 68,
  "content": "",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d11e0"
  },
  "pdf_name": "L04_images",
  "page_number": 54,
  "content": "./origami_dataset_dev/L04_images/page054_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d11e1"
  },
  "pdf_name": "L04_images",
  "page_number": 40,
  "content": "Miura-Ori\n\n• Original\n   – [Miura 1970]\n• Application\n   – bidirectionally expansible (one-\n    DOF)\n   – compact packaging\n   – sandwich panel\n                                     ISAS Space Flyer Unit\n• Conditions\n                                        zeta core\n   – Developable                        [Koryo Miura 1972]\n   – Flat-foldable\n   – op: (Planar quads)(→Rigid \n    Foldable)",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d11e2"
  },
  "pdf_name": "L04_images",
  "page_number": 54,
  "content": "Rigid Origami?\n\n•  Rigid Origami is\n    – Plates and Hinges model for origami\n•  Characteristics\n    – Panels do not deform\n       • Do not use Elasticity\n    – synchronized motion\n       • Especially nice if One-DOF\n    – watertight cover for a space\n•  Applicable for\n    – self deployable micro mechanism\n    – large scale objects under gravity using \n      thick panels",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d11e3"
  },
  "pdf_name": "L04_images",
  "page_number": 123,
  "content": "./origami_dataset_dev/L04_images/page123_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d11e4"
  },
  "pdf_name": "L04_images",
  "page_number": 77,
  "content": "./origami_dataset_dev/L04_images/page077_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d11e5"
  },
  "pdf_name": "L04_images",
  "page_number": 83,
  "content": "Cylinder -> Cellular Structure\n[Miura & Tachi 2010]",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d11e6"
  },
  "pdf_name": "L04_images",
  "page_number": 22,
  "content": "./origami_dataset_dev/L04_images/page022_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d11e7"
  },
  "pdf_name": "L04_images",
  "page_number": 88,
  "content": "./origami_dataset_dev/L04_images/page088_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d11e8"
  },
  "pdf_name": "L04_images",
  "page_number": 97,
  "content": "",
  "type": "text"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d11e9"
  },
  "pdf_name": "L04_images",
  "page_number": 107,
  "content": "./origami_dataset_dev/L04_images/page107_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d11ea"
  },
  "pdf_name": "L04_images",
  "page_number": 12,
  "content": "./origami_dataset_dev/L04_images/page012_image004.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d11eb"
  },
  "pdf_name": "L04_images",
  "page_number": 6,
  "content": "./origami_dataset_dev/L04_images/page006_image002.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d11ec"
  },
  "pdf_name": "L04_images",
  "page_number": 70,
  "content": "./origami_dataset_dev/L04_images/page070_image001.jpg",
  "type": "image"
},
{
  "_id": {
    "$oid": "66c2b7f803dc17926c1d11ed"
  },
  "pdf_name": "L04_images",
  "page_number": 25,
  "content": "./origami_dataset_dev/L04_images/page025_image001.jpg",
  "type": "image"
}]